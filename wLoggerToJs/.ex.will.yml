
about :

  name : 'wLoggerToJs'
  description : 'Class to redirect logging to JavaScript structure. Logger supports colorful formatting, verbosity control, chaining, combining several loggers/consoles into logging network. Logger provides 10 levels of verbosity [ 0,9 ] any value beyond clamped and multiple approaches to control verbosity. Logger may use console/stream/process/file as input or output. Unlike alternatives, colorful formatting is cross-platform and works similarly in the browser and on the server side. Use the module to make your diagnostic code working on any platform you work with and to been able to redirect your output to/from any destination/source.'
  version : '0.5.0'
  enabled : 0
  interpreters :
  - njs >= 10.0.0
  - chrome >= 60.0.0
  - firefox >= 60.0.0
  keywords :
  - record console output
  - store console output into array
  - wTools
  - logger
  - logging
  - log
  - colorful log
  - multilevel log
  - colors
  - color
  license : MIT
  author : 'Kostiantyn Wandalen <wanalen@01.school>'
  contributors :
  - 'Kostiantyn Wandalen <wanalen@01.school>'
  - 'Volodymyr M. <volodymyr.migdal@gmail.com>'
  npm.name : 'wtools.experiment'
  npm.scripts :
    test : 'wtest .run proto/**'
    docgen : 'wdocgen .build proto'

path :

  repository : git+https:///github.com/Wandalen/wLoggerToJs.git
  bugtracker : https:///github.com/Wandalen/wLoggerToJs/issues
  origins :
   - git+https:///github.com/Wandalen/wLoggerToJs.git
   - npm:///wloggertojs

step :

  proto.export :
    inherit : module.export
    export : path::export
    tar : 0
    criterion :
      content : 'proto'

  doc.export :
    inherit : module.export
    export : path::doc
    tar : 0
    criterion :
      content : 'doc'

  npm.export :
    inherit : module.export
    export : out.npm
    tar : 0
    criterion :
      content : 'npm'

  npm.publish :
    shell : npm publish

build :

  proto.export :
    criterion :
      content : 'proto'
      export : 1
    steps :
      # - build::debug.raw
      - step::proto.export

  doc.export :
    criterion :
      content : 'doc'
      export : 1
    steps :
      # - build::debug.raw
      - step::doc.export

  npm.export :
    criterion :
      content : 'npm'
      export : 1
    steps :
      # - build::debug.raw
      # - step::npm.export
      - step::npm.publish

  export :

    criterion :
      default : 1
      export : 1
    steps :
      # - build::npm
      - build::proto.export
      # - build::doc.export
