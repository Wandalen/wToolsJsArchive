about:
  name: wTools
  description: >-
    Collection of general purpose tools for solving problems. Fundamentally
    extend the language without spoiling, so may be used solely or in
    conjunction with another module of such kind.
  version: 0.9.3
  enabled: 1
  license: MIT
  npm.name: wTools
  author: Kostiantyn Wandalen <wandalen@obox.systems>
  keywords:
    - base
    - basic
    - core
    - platform
    - tools
    - wTools
    - wBase
    - generic
  contributors:
    - Kostiantyn Wandalen <wandalen@obox.systems>
    - Volodymyr M. <volodymyr.migdal@gmail.com>
    - Ihor O. <iostashvxi@gmail.com>
    - Pablo Garcimartin <pablogarcimartinruiz@gmail.com>
    - Dmytro Kryvoruchko <dm.vict.kr@gmail.com>
  interpreters:
    - njs >= 10.0.0
    - chrome >= 60.0.0
    - firefox >= 60.0.0
  npm.scripts:
    test: 'wtest .run "proto/**" rapidity:-1'
    docgen: wdocgen proto
build:
  publish.npm:
    criterion:
      default: 1
      publish: 1
      bump: patch
    steps:
      - publish.npm
      - reflect.package
  publish.rust:
    criterion:
      publish: 1
    steps:
      - publish.rust
  build:
    criterion:
      debug:
        - debug
        - release
      tests: no.tests
    steps:
      - 'step::clean.out.build.*=1'
      - 'step::transpile.build.proto.*=1'
      - 'step::reflect.module.files.*=1'
      - 'step::npm.build.*=1'
  build.release.min:
    steps:
      - 'step::clean.release.min'
      - 'step::transpile.build.release.min'
      - 'step::reflect.release.min.files'
      - 'step::npm.release.min'
  build.tests:
    criterion:
      debug:
        - debug
        - release
      tests: only.tests
    steps:
      - 'step::clean.out.build.*=1'
      - 'step::transpile.build.proto.*=1'
      - 'step::reflect.compiled.*=1'
      - 'step::transpile.build.tests.*=1'
      - 'step::reflect.module.files.*=1'
  proto.export:
    criterion:
      content: proto
      export: 1
    steps:
      - 'step::proto.export'
  export:
    criterion:
      default: 1
      export: 1
    steps:
      - 'build::proto.export'
  reflect.rust.modules:
    steps:
      - 'step::clean.out.rust'
      - 'step::reflect.rust.modules'

path:
  repository: 'git+https:///github.com/Wandalen/wToolsJs.git'
  origins:
    - 'git+https:///github.com/Wandalen/wToolsJs.git'
    - 'npm:///wTools'
  bugtracker: 'https:///github.com/Wandalen/wToolsJs/issues'
  in: .
  out: out
  temp:
    - 'path::out'
    - package-lock.json
    - package.json
    - node_modules
    - target
  proto: ./proto
  export: '{path::proto}/**'
  doc: ./doc
  step: ./step
  out.build.debug.no.test:
    path: '{path::out}/debug'
    criterion:
      debug: debug
      tests: no.tests
  out.build.release.no.test:
    path: '{path::out}/release'
    criterion:
      debug: release
      tests: no.tests
  out.build.debug.only.test:
    path: '{path::out}/debug.test'
    criterion:
      debug: debug
      tests: only.tests
  out.build.release.only.test:
    path: '{path::out}/release.test'
    criterion:
      debug: release
      tests: only.tests
  out.release.min:
    path: '{path::out}/release.min'
  npm.publish: 'module/{about::name}'
  npm.proto.entry:
    - proto/wtools/abase/l1/Include.s
    - proto/node_modules/wTools
  entry: proto/node_modules/wTools
  npm.files:
    - proto/wtools/abase/l0/l0
    - proto/wtools/abase/l0/l1
    - proto/wtools/abase/l0/l2
    - proto/wtools/abase/l0/l3
    - proto/wtools/abase/l0/l4
    - proto/wtools/abase/l0/l5
    - proto/wtools/abase/l0/l6
    - proto/wtools/abase/l0/l7
    - proto/wtools/abase/l0/l8
    - proto/wtools/abase/l0/l9
    - proto/wtools/abase/l0/Include.s
    - proto/wtools/abase/l0/Include1.s
    - proto/wtools/abase/l0/Include3.s
    - proto/wtools/abase/l0/Include5.s
    - proto/wtools/abase/l0/Include7.s
    - proto/wtools/abase/l1
    - proto/node_modules
    - out/wTools.out.will.yml
    - proto/node_modules/Tools
    - proto/node_modules/wTools
    - proto/node_modules/wTools.l1
    - proto/node_modules/wTools.l3
    - proto/node_modules/wTools.l5
    - proto/node_modules/wTools.l7
  out.rust: '{path::out}/rust'
reflector:
  transpile.reflect.proto:
    inherit: predefined.*
    criterion:
      debug:
        - debug
        - release
      tests:
        - no.tests
        - only.tests
    filePath:
      '**.test*': 0
      '**.test/**': 0
      '{path::proto}/**': '{path::out.build.*=1}/Main.s'
  transpile.reflect.release.min:
    inherit: predefined.*
    filePath:
      '**.test*': 0
      '**.test/**': 0
      '{path::proto}/**': '{path::out.release.min}/Main.s'
  transpile.reflect.tests:
    inherit: predefined.*
    criterion:
      debug:
        - debug
        - release
      tests: only.tests
    filePath:
      '**.test*': 1
      '{path::proto}/**': '{path::out.build*=1}/Tests.test.s'
  reflect.module.files:
    inherit: predefined.*
    criterion:
      debug:
        - debug
        - release
      tests:
        - no.tests
        - only.tests
    filePath:
      '{path::in}/License': '{path::out.build.*=1}/License'
      '{path::in}/Readme.md': '{path::out.build.*=1}/Readme.md'
  reflect.release.min.files:
    filePath:
      '{path::in}/License': '{path::out.release.min}/License'
      '{path::in}/Readme.md': '{path::out.release.min}/Readme.md'
  reflect.compiled.debug:
    inherit: predefined.*
    criterion:
      debug: debug
    filePath:
      '{path::out.build.debug.no.test}/Main.s': '{path::out.build.debug.only.test}/Main.s'
  reflect.compiled.release:
    inherit: predefined.*
    criterion:
      debug: release
    filePath:
      '{path::out.build.release.no.test}/Main.s': '{path::out.build.release.only.test}/Main.s'

  reflect.rust.modules:
    inherit: predefined.*
    filePath:
      'module/rust/former_runtime': '{path::out.rust}/former_runtime'
      'rust/former/runtime': '{path::out.rust}/former_runtime/rust/former/runtime'
      'module/rust/former_meta': '{path::out.rust}/former_meta'
      'rust/former/derive': '{path::out.rust}/former_meta/rust/former/derive'
      'module/rust/former': '{path::out.rust}/former'
  reflect.package:
    filePath:
      '{path::npm.publish}/package.json': '{path::in}/package.json'
      '{path::npm.publish}/was.package.json': '{path::in}/was.package.json'
      'rust/former/mod.rs' : '{path::out.rust}/former/rust/former/mod.rs'
    # dstRewritingOnlyPreserving: 0

step:
  transpile.build.proto.debug:
    inherit: files.transpile
    filePath: 'reflector::transpile.reflect.proto.*=1'
    entry: '{path::in}/proto/wtools/abase/l1/Include.s'
    transpilingStrategy:
      - Nop
    optimization: 0
    minification: 0
    diagnosing: 0
    beautifing: 0
    criterion:
      debug: debug
      tests:
        - no.tests
        - only.tests
  transpile.build.proto.release:
    inherit: files.transpile
    filePath: 'reflector::transpile.reflect.proto.*=1'
    entry: '{path::in}/proto/wtools/abase/l1/Include.s'
    transpilingStrategy:
      - Uglify
    optimization: 9
    minification: 0
    diagnosing: 0
    beautifing: 0
    criterion:
      debug: release
      tests:
        - no.tests
        - only.tests
  transpile.build.release.min:
    inherit: files.transpile
    filePath: 'reflector::transpile.reflect.release.min'
    entry: '{path::in}/proto/wtools/abase/l1/Include.s'
    transpilingStrategy:
      - Uglify
    optimization: 9
    minification: 9
    diagnosing: 0
    beautifing: 0
  transpile.build.tests.debug:
    inherit: files.transpile
    filePath: 'reflector::transpile.reflect.tests.*=1'
    transpilingStrategy:
      - UglifyJs
    optimization: 9
    minification: 9
    diagnosing: 0
    beautifing: 0
    criterion:
      debug: debug
      tests:
        - no.tests
        - only.tests
  transpile.build.tests.release:
    inherit: files.transpile
    filePath: 'reflector::transpile.reflect.tests.*=1'
    transpilingStrategy:
      - UglifyJs
    optimization: 9
    minification: 9
    diagnosing: 1
    beautifing: 1
    criterion:
      debug: release
      tests:
        - no.tests
        - only.tests
  clean.out.build:
    inherit: files.delete
    filePath: '{path::out.build.*=1}'
    criterion:
      debug:
        - debug
        - release
      tests:
        - no.tests
        - only.tests
  clean.release.min:
    inherit: files.delete
    filePath: '{path::out.release.min}'
  npm.build:
    inherit: npm.generate
    entryPath: '{path::out.build.*=1}/Main.s'
    packagePath: '{path::out.build.*=1}/package.json'
    criterion:
      debug:
        - debug
        - release
      tests:
        - no.tests
        - only.tests
  npm.release.min:
    inherit: npm.generate
    entryPath: '{path::out.release.min}/Main.s'
    packagePath: '{path::out.release.min}/package.json'
  proto.export:
    inherit: module.export
    export: 'path::export'
    tar: 0
    criterion:
      content: proto
  publish.npm:
    inherit: npm.publish
  publish.rust :
    currentPath : 'path::in'
    shell : 'node {path::step}/RustPublish.s logger:3'
  clean.out.rust:
    inherit: files.delete
    filePath: '{path::out.rust}'

submodule:
  wTesting:
    path: 'npm:///wTesting'
    enabled: 0
    criterion:
      development: 1
  eslint:
    path: 'npm:///eslint!7.32.0'
    enabled: 0
    criterion:
      development: 1
