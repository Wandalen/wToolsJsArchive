!function _library_(){!function _predefined_(){"use strict";let _global=function get(){let _global=void 0;return"undefined"!=typeof _global_&&_global_._global_===_global_?_global=_global_:"undefined"!=typeof globalThis&&globalThis.globalThis===globalThis?_global=globalThis:"undefined"!=typeof Global&&Global.Global===Global?_global=Global:"undefined"!=typeof global&&global.global===global?_global=global:"undefined"!=typeof window&&window.window===window?_global=window:"undefined"!=typeof self&&self.self===self&&(_global=self),_global}();if(_global._globals_||(_global._globals_=Object.create(null),_global._globals_.real=_global._realGlobal_||_global,_global._realGlobal_=_global,_global._global_=_global),_global_.Config||(_global_.Config=Object.create(null)),void 0===_global_.Config.interpreter&&(_global_.Config.interpreter="undefined"!=typeof module&&"undefined"!=typeof process?"njs":"browser"),void 0===_global_.Config.isWorker&&(_global_.Config.isWorker=!!("undefined"!=typeof self&&self.self===self&&"undefined"!=typeof importScripts)),_global._starter_&&_global._starter_._inited)return;const Self=_global._starter_=_global._starter_||Object.create(null);_realGlobal_.HashMap=Map,_realGlobal_.HashMapWeak=WeakMap,Self.def=Symbol.for("def"),Self.null=Symbol.for("null"),Self.undefined=Symbol.for("undefined"),Self.nothing=Symbol.for("nothing"),Self.anything=Symbol.for("anything"),Self.maybe=Symbol.for("maybe"),Self.unknown=Symbol.for("unknown"),Self.dont=Symbol.for("dont"),Self.self=Symbol.for("self"),Self.optional=Symbol.for("optional"),_realGlobal_.unrollSymbol=Symbol.for("unroll"),_global_._starter_.debug=1,_global_._starter_.interpreter="njs",_global_._starter_.proceduring=0,_global_._starter_.globing=1,_global_._starter_.catchingUncaughtErrors=1,_global_._starter_.loggingApplication=0,_global_._starter_.loggingSourceFiles=0,_global_._starter_.withServer=0,_global_._starter_.redirectingConsole=1,_global_._starter_.loggingPath="ws://127.0.0.1:15000/.log/",_global_.Config.debug=1}(),function _early_(){"use strict";const _global=_global_;let _starter_=_global._starter_=_global._starter_||Object.create(null);_starter_.str=_starter_.str||Object.create(null),_starter_.date=_starter_.date||Object.create(null),_starter_.entity=_starter_.entity||Object.create(null),_starter_.class=_starter_.class||Object.create(null);let path=_starter_.path=_starter_.path||Object.create(null);_starter_.uri=_starter_.uri||Object.create(null),_starter_.props=_starter_.props||Object.create(null),_starter_.uri.path=_starter_.path,_starter_.introspector=_starter_.introspector||Object.create(null),_starter_.error=_starter_.error||Object.create(null),_starter_.setup=_starter_.setup||Object.create(null),_starter_.event=_starter_.event||Object.create(null),_starter_.sourcesMap=_starter_.sourcesMap||Object.create(null),_starter_.requireCache=_starter_.requireCache||Object.create(null),_starter_.moduleMainFilesMap=_starter_.moduleMainFilesMap||Object.create(null),_starter_.color=_starter_.color||Object.create(null),_starter_.color.rgba=_starter_.color.rgba||Object.create(null),_starter_.Logger=_starter_.Logger||Object.create(null),_starter_.long=_starter_.long||Object.create(null),_starter_.argumentsArray=_starter_.argumentsArray||Object.create(null),_starter_.array=_starter_.array||Object.create(null),_starter_.unroll=_starter_.unroll||Object.create(null),_starter_.buffer=_starter_.buffer||Object.create(null),_starter_.bufferRaw=_starter_.bufferRaw||Object.create(null),_starter_.bufferTyped=_starter_.bufferTyped||Object.create(null),_starter_.bufferNode=_starter_.bufferNode||Object.create(null),_starter_.vector=_starter_.vector||Object.create(null),_starter_.primitive=_starter_.primitive||Object.create(null),_starter_.number=_starter_.number||Object.create(null),_starter_.symbol=_starter_.symbol||Object.create(null),_starter_.bool=_starter_.bool||Object.create(null),_starter_.countable=_starter_.countable||Object.create(null),_starter_.constructible=_starter_.constructible||Object.create(null),_starter_.aux=_starter_.aux||Object.create(null),_starter_.object=_starter_.object||Object.create(null),_starter_.map=_starter_.map||Object.create(null),_starter_.hashMap=_starter_.hashMap||Object.create(null),_starter_.props=_starter_.props||Object.create(null),_starter_.set=_starter_.set||Object.create(null),_starter_.routine=_starter_.routine||Object.create(null),_starter_.routine.s=_starter_.routine.s||Object.create(null),_starter_.regexp=_starter_.regexp||Object.create(null),_starter_.container=_starter_.container||Object.create(null);let StarterExtension={assert:function assert(good){if(!good)throw new Error("Something wrong!");return true},assertRoutineOptions:function assertRoutineOptions(){return arguments[0]},assertMapHasOnly:function assertMapHasOnly(){},assertMapHasNoUndefine:function assertMapHasNoUndefine(){},toStr:function toStr(src){try{return String(src)}catch(err){return"{- UNKNOWN DATA TYPE -}"}},mapFields:function mapFields(src){let result=Object.create(null);if(!src)return result;for(let s in src)result[s]=src[s];return result},path:path};Object.assign(_starter_,StarterExtension);let PathExtension={dir:function dir(filePath){let splits=this.canonize(filePath).split("/");return splits[splits.length-1]&&splits.pop(),splits.join("/")},nativize:function nativize(){return _global.process&&"win32"===_global.process.platform?this.nativize=this._nativizeWindows:this.nativize=this._nativizePosix,this.nativize.apply(this,arguments)}};Object.assign(_starter_.path,PathExtension)}(),function _extract_(){"use strict";const _global=_global_;let _starter_=_global_._starter_;let _=_starter_;let stackSymbol=Symbol.for("stack");let _diagnosticCodeExecuting=0;let iteratorSymbol=Symbol.iterator;let _ArrayIndexOf=Array.prototype.indexOf;let _ArrayIncludes=Array.prototype.includes;_ArrayIncludes||(_ArrayIncludes=function(e){_ArrayIndexOf.call(this,e)}),_.strQuote=function quote(o){if(_.mapIs(o)||(o={src:arguments[0],quote:arguments.length>1?arguments[1]:null}),void 0!==o.quote&&null!==o.quote||(o.quote=quote.defaults.quote),_.map.assertHasOnly(o,quote.defaults),_.assert(1===arguments.length||2===arguments.length),_.arrayIs(o.src)){let result=[];for(let s=0;s<o.src.length;s++)result.push(_.strQuote({src:o.src[s],quote:o.quote}));return result}let src=o.src;return _.primitive.is(src)||(src=_.entity.exportString(src)),_.assert(_.primitive.is(src)),o.quote+String(src)+o.quote},_.strQuote.defaults={src:null,quote:'"'},_.err=function err(){return _._err({args:arguments,level:2})},_._err=function _err(o){const exportString=_.entity.exportString?_.entity.exportString.bind(_.entity):String;let error;if(1!==arguments.length)throw Error("_err : Expects single argument : options map");if(!_.mapIs(o))throw Error("_err : Expects single argument : options map");if(!_.longIs(o.args))throw Error("_err : Expects Long option::args");for(let e in o)if(void 0===_err.defaults[e]){debugger;throw Error(`Unknown option::${e}`)}for(let e in _err.defaults)void 0===o[e]&&(o[e]=_err.defaults[e]);if(_.error._errorMaking)throw Error("Recursive dead lock because of error inside of routine _err()!");_.error._errorMaking=true,void 0!==o.level&&null!==o.level||(o.level=null),o.message||(o.message="");let fallBackMessage="";let errors=[];let combinedStack="";try{!function argumentsPreprocessArguments(){for(let a=0;a<o.args.length;a++){let arg=o.args[a];if(!_.error.is(arg)&&_.routine.is(arg)){if(0===arg.length)try{arg=o.args[a]=arg()}catch(err){let original=arg;arg=o.args[a]="Error throwen by callback for formatting of error string",console.error(String(err)),_.strLinesSelect?console.error(_.strLinesSelect({src:original.toString(),line:0,nearestLines:5,numbering:1})):console.error(original.toString())}if(_.unrollIs(arg)){debugger;o.args=[...Array.prototype.slice.call(o.args,0,a),...arg,...Array.prototype.slice.call(o.args,a+1,o.args.length)],a-=1;continue}}}}(),function argumentsPreprocessErrors(){for(let a=0;a<o.args.length;a++){let arg=o.args[a];if(_.error.is(arg))errProcess(arg),o.args[a]=_.error.originalMessage(arg);else if(_.strIs(arg)&&_.error._inStr(arg)){let err=_.error.fromStr(arg);errProcess(err),o.args[a]=_.error.originalMessage(err)}}}(),function locationForm(){if(!error)for(let a=0;a<o.args.length;a++){let arg=o.args[a];if(!_.primitive.is(arg)&&_.object.like(arg))try{o.throwLocation=_.introspector.location({error:arg,location:o.throwLocation})}catch(err2){console.error(err2)}}o.throwLocation=o.throwLocation||Object.create(null),o.catchLocation=o.catchLocation||Object.create(null)}(),function stackAndErrorForm(){error?(o.throwCallsStack||o.throwLocation&&(o.throwCallsStack=_.introspector.locationToStack(o.throwLocation)),o.throwCallsStack||(o.throwCallsStack=_.error.originalStack(error)),o.throwCallsStack||(o.throwCallsStack=_.introspector.stack([(o.level||0)+1,Infinity])),!o.catchCallsStack&&o.catchLocation&&(o.catchCallsStack=_.introspector.locationToStack(o.catchLocation)),o.catchCallsStack||(o.catchCallsStack=_.introspector.stack(o.catchCallsStack,[(o.level||0)+1,Infinity])),!o.throwCallsStack&&o.catchCallsStack&&(o.throwCallsStack=o.catchCallsStack),o.throwCallsStack||(o.throwCallsStack=_.introspector.stack(error,[(o.level||0)+1,Infinity])),o.level=0):(error=new Error(o.message+"\n"),o.throwCallsStack?(error.stack=o.throwCallsStack,o.catchCallsStack=_.introspector.stack(o.catchCallsStack,[o.level+1,Infinity]),o.level=0):(o.catchCallsStack?o.throwCallsStack=error.stack=o.catchCallsStack:(void 0!==o.level&&null!==o.level||(o.level=1),o.level+=1,o.throwCallsStack=error.stack=_.introspector.stack(error.stack,[o.level,Infinity])),o.level=0,o.catchCallsStack||(o.catchCallsStack=o.throwCallsStack))),_.assert(0===o.level),(o.stackRemovingBeginIncluding||o.stackRemovingBeginExcluding)&&o.throwCallsStack&&(o.throwCallsStack=_.introspector.stackRemoveLeft(o.throwCallsStack,o.stackRemovingBeginIncluding||null,o.stackRemovingBeginExcluding||null)),o.throwCallsStack||(o.throwCallsStack=error.stack=o.fallBackStack),combinedStack=o.throwCallsStack,_.assert(void 0===error.asyncCallsStack||null===error.asyncCallsStack||""===error.asyncCallsStack||_.arrayIs(error.asyncCallsStack)),error.asyncCallsStack&&error.asyncCallsStack.length&&(o.asyncCallsStack=o.asyncCallsStack||[],o.asyncCallsStack.push(...error.asyncCallsStack)),null!==o.asyncCallsStack&&void 0!==o.asyncCallsStack||_.Procedure&&_.Procedure.ActiveProcedure&&(o.asyncCallsStack=[_.Procedure.ActiveProcedure.stack()]),_.assert(null===o.asyncCallsStack||_.arrayIs(o.asyncCallsStack)),o.asyncCallsStack&&o.asyncCallsStack.length&&(combinedStack+="\n\n"+o.asyncCallsStack.join("\n\n")),_.assert(_.strIs(combinedStack)),o.stackCondensing&&(combinedStack=_.introspector.stackCondense(combinedStack))}(),function attributesForm(){try{o.catchLocation=_.introspector.location({stack:o.catchCallsStack,location:o.catchLocation})}catch(err2){console.error(err2)}try{o.throwLocation=_.introspector.location({error:error,stack:o.throwCallsStack,location:o.throwLocation})}catch(err2){console.error(err2)}}(),function catchesForm(){o.throws&&(_.assert(_.arrayIs(o.throws)),o.throws.forEach(c=>{c=_.introspector.locationFromStackFrame(c).routineFilePathLineCol,o.throwsStack?o.throwsStack+=`\nthrown at ${c}`:o.throwsStack=`thrown at ${c}`})),_.assert(_.number.is(o.catchLocation.abstraction)),o.catchLocation.abstraction&&1!==o.catchLocation.abstraction||(o.throwsStack?o.throwsStack+=`\nthrown at ${o.catchLocation.routineFilePathLineCol}`:o.throwsStack=`thrown at ${o.catchLocation.routineFilePathLineCol}`)}(),function sourceCodeForm(){if(o.usingSourceCode&&!o.sourceCode&&void 0===error.sourceCode){let c=_.introspector.code({location:o.throwLocation,sourceCode:o.sourceCode,asMap:1});c&&c.code&&c.code.length<400&&(o.sourceCode=c)}}(),function originalMessageForm(){let result=[];if(o.message)return;for(let a=0;a<o.args.length;a++){let arg=o.args[a];let str;str=arg&&!_.primitive.is(arg)?_.routine.is(arg.toStr)?arg.toStr():_.error.is(arg)&&_.strIs(arg.originalMessage)?arg.originalMessage:_.error.is(arg)?_.strIs(arg.message)?arg.message:exportString(arg):exportString(arg,{levels:2}):void 0===arg?"\n"+String(arg)+"\n":String(arg),result[a]=str}let o2={onToStr:eachMessageFormat,onPairWithDelimeter:strConcatenateCounting};o.message=_.strConcat(result,o2),o.message=o.message||fallBackMessage||"UnknownError",o.message=o.message.replace(/^\s*/,""),o.message=o.message.replace(/\x20*$/gm,""),o.message=o.message.replace(/\s*$/,"")}(),error=_.error._make({error:error,throwLocation:o.throwLocation,sections:o.sections,concealed:o.concealed,exposed:o.exposed,attended:o.attended,logged:o.logged,brief:o.brief,stackCondensing:o.stackCondensing,originalMessage:o.message,combinedStack:combinedStack,throwCallsStack:o.throwCallsStack,throwsStack:o.throwsStack,asyncCallsStack:o.asyncCallsStack,sourceCode:o.sourceCode,reason:o.reason})}catch(err2){_.error._errorMaking=false,console.log(err2.message),console.log(err2.stack)}return _.error._errorMaking=false,error;function errProcess(arg){error||(error=arg,o.sourceCode||(o.sourceCode=arg.sourceCode||null),null===o.attended&&(o.attended=arg.attended||false),null===o.logged&&(o.logged=arg.logged||false)),arg.throwCallsStack&&(o.throwCallsStack||(o.throwCallsStack=arg.throwCallsStack)),arg.throwsStack&&(o.throwsStack?o.throwsStack+="\n"+arg.throwsStack:o.throwsStack=arg.throwsStack),arg.constructor&&(fallBackMessage=fallBackMessage||arg.constructor.name),errors.push(arg)}function eachMessageFormat(str){let strBeginsWithRegular=_.strBegins(str,/\S/);let strEndsWithRegular=_.strEnds(str,/\S/);if(!strBeginsWithRegular){let notSpaceLikeSymbol=/\S/.exec(str);if(null===notSpaceLikeSymbol)str=str.replace(/\x20+/g,""),strEndsWithRegular=true;else{let before=str.substring(0,notSpaceLikeSymbol.index);let spaces=/(?<=\n)\x20+$/.exec(before);before=before.replace(/\x20+/g,""),str=(before+=spaces?spaces[0]:"")+str.substring(notSpaceLikeSymbol.index)}}if(str&&!strEndsWithRegular){let notSpaceLikeSymbol=/\S\s*$/.exec(str);let after=str.substring(notSpaceLikeSymbol.index+1);let spaces=/^\x20+(?=\n)/.exec(after);after=after.replace(/\x20+/g,""),after+=spaces?spaces[0]:"",str=str.substring(0,notSpaceLikeSymbol.index+1)+after}return str}function strConcatenateCounting(src1,src2){let result;if(_.strEnds(src1,"\n")&&_.strBegins(src2,"\n")){let right=/\n+$/.exec(src1);let left=/^\n+/.exec(src2);result=src1.substring(0,right.index),result+=right[0].length>left[0].length?right[0]:left[0],result+=src2.substring(left[0].length)}else result=src1+src2;return result}},_._err.defaults={args:null,sections:null,concealed:null,exposed:null,level:1,message:null,reason:null,sourceCode:null,stackRemovingBeginIncluding:0,stackRemovingBeginExcluding:0,usingSourceCode:1,stackCondensing:1,attended:null,logged:null,brief:null,throwLocation:null,catchLocation:null,asyncCallsStack:null,throwCallsStack:null,catchCallsStack:null,fallBackStack:null,throwsStack:"",throws:null},_._errMake=function _make(o){const logger=_global_.logger||_global_.console;if(1!==arguments.length)throw Error("Expects single argument : options map");if(!_.mapIs(o))throw Error("Expects single argument : options map");for(let k in o)if(void 0===_make.defaults[k])throw Error(`Unknown option::${k}`);for(let k in _.error._make.defaults)void 0===o[k]&&(o[k]=_.error._make.defaults[k]);if(!_.error.is(o.error))throw Error("Expects option.error:Error");if(!_.strIs(o.originalMessage))throw Error("Expects option.originalMessage:String");if(!_.strIs(o.combinedStack))throw Error("Expects option.combinedStack:String");if(!_.strIs(o.throwCallsStack))throw Error("Expects option.throwCallsStack:String");if(!_.strIs(o.throwsStack))throw Error("Expects option.throwsStack:String");if(!o.throwLocation)throw Error("Expects option.throwLocation:Location");return function attributesForm(){null!==o.attended&&void 0!==o.attended||(o.attended=o.error.attended),o.attended=!!o.attended,(null===o.logged||void 0===o.logged)&&(o.logged=o.error.logged),o.logged=!!o.logged,(null===o.brief||void 0===o.brief)&&(o.brief=o.error.brief),o.brief=!!o.brief,(null===o.reason||void 0===o.reason)&&(o.reason=o.error.reason),o.sections=o.sections||Object.create(null),o.error.section&&_.props.supplement(o.sections,o.error.section),o.id=o.error.id,o.id||(_.error._errorCounter+=1,o.id=_.error._errorCounter)}(),function exposedForm(){var has=false;for(let k in o.error){has=true;break}if(has)if(o.exposed)for(let k in o.error)Reflect.has(o.exposed,k)||(o.exposed[k]=o.error[k]);else{o.exposed=Object.create(null);for(let k in o.error)o.exposed[k]=o.error[k]}}(),function sectionsForm(){sectionAdd("message",`Message of ${o.error.name||"error"}#${o.id}`,o.originalMessage),sectionAdd("combinedStack",o.stackCondensing?"Beautified calls stack":"Calls stack",o.combinedStack),sectionAdd("throwsStack","Throws stack",o.throwsStack),o.sourceCode&&(_.strIs(o.sourceCode)?sectionAdd("sourceCode","Source code",o.sourceCode):_.routine.is(o.sourceCode.read)?sectionAdd("sourceCode",`Source code from ${o.sourceCode.path}`,o.sourceCode.read):_.strIs(o.sourceCode.code)?sectionAdd("sourceCode",`Source code from ${o.sourceCode.path}`,o.sourceCode.code):console.error("Unknown format of {- o.sourceCode -}")),o.exposed&&Object.keys(o.exposed).length>0&&_.error._sectionExposedAdd(o);for(let s in o.sections){let section=o.sections[s];_.strIs(section.head)||(logger.error(`Each section of an error should have head, but head of section::${s} is ${_.entity.strType(section.head)}`),delete o.sections[s]),_.strIs(section.body)||(logger.error(`Each section of an error should have body, but body of section::${s} is ${_.entity.strType(section.body)}`),delete o.sections[s])}}(),_.error._messageForm(o),function form(){if(nonenumerable("originalMessage",o.originalMessage),function logging(propName){try{let o2={enumerable:false,configurable:true,get:function get(){return 3!==(new Error).stack.split("\n").length&&(_.error.logged(this),_.error.attend(this)),this.message},set:function set(src){return this.message=src,src}};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("stack"),nonenumerable("reason",o.reason),nonenumerable("combinedStack",o.combinedStack),nonenumerable("throwCallsStack",o.throwCallsStack),nonenumerable("asyncCallsStack",o.asyncCallsStack),nonenumerable("throwsStack",o.throwsStack),nonenumerable("catchCounter",o.error.catchCounter?o.error.catchCounter+1:1),nonenumerable("attended",o.attended),nonenumerable("logged",o.logged),nonenumerable("brief",o.brief),void 0!==o.throwLocation.line&&nonenumerable("lineNumber",o.throwLocation.line),void 0===o.error.throwLocation&&nonenumerable("location",o.throwLocation),nonenumerable("sourceCode",o.sourceCode||null),nonenumerable("id",o.id),nonenumerable("toString",function(){return this.stack}),nonenumerable("sections",o.sections),function getter(propName,get){try{let o2={enumerable:false,configurable:true,get:get};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("name",function(){return this.constructor.name}),o.error[Symbol.for("nodejs.util.inspect.custom")]=o.error.toString,o.concealed)for(let k in o.concealed)nonenumerable(k,o.concealed[k])}(),o.error;function sectionAdd(name,head,body){_.error._sectionAdd({name:name,head:head,body:body,sections:o.sections})}function nonenumerable(propName,value){try{let o2={enumerable:false,configurable:true,writable:true,value:value};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}},_._errMake.defaults={error:null,id:null,throwLocation:null,sections:null,concealed:null,exposed:null,attended:null,logged:null,brief:null,stackCondensing:null,originalMessage:null,combinedStack:"",throwCallsStack:"",throwsStack:"",asyncCallsStack:"",sourceCode:null,reason:null},_.errLogged=function logged(err,value){return _.assert(1===arguments.length||2===arguments.length),void 0===value&&(value=true),_.error.concealedSet(err,{logged:value})},_.errAttend=function attend(err,value){return _.assert(1===arguments.length||2===arguments.length),void 0===value&&(value=true),_.error.concealedSet(err,{attended:value})},_.errProcess=function process(err){return 1===arguments.length&&_.error.isFormed(err)||(err=_.err(...arguments)),_.process&&_.process.entryPointInfo&&_.error.sectionAdd(err,{name:"process",body:_.process.entryPointInfo()}),err},_.assert=function assert(condition,...args){return true},_.error.isFormed=function isFormed(src){return!!_.error.is(src)&&void 0!==src.originalMessage},_.error.isAttended=function isAttended(src){return!!_.error.is(src)&&!!src.attended},_.error.originalMessage=function originalMessage(err){if(1!==arguments.length)throw Error("error.originalMessage : Expects single argument");if(_.strIs(err))return err;if(!err)return;if(err.originalMessage)return err.originalMessage;let message=err.message;return message||""===message||(message=err.msg),message||""===message||(message=err.name),message},_.error.originalStack=function originalStack(err){if(1!==arguments.length)throw Error("error.originalStack : Expects single argument");if(!_.error.is(err))throw Error("error.originalStack : Expects error");return err.throwCallsStack?err.throwCallsStack:err.combinedStack?err.combinedStack:err[stackSymbol]?err[stackSymbol]:err.stack?_.introspector.stack(err.stack):null},_.error.is=function is(src){return src instanceof Error||"[object Error]"===Object.prototype.toString.call(src)},_.error._make=function _make(o){const logger=_global_.logger||_global_.console;if(1!==arguments.length)throw Error("Expects single argument : options map");if(!_.mapIs(o))throw Error("Expects single argument : options map");for(let k in o)if(void 0===_make.defaults[k])throw Error(`Unknown option::${k}`);for(let k in _.error._make.defaults)void 0===o[k]&&(o[k]=_.error._make.defaults[k]);if(!_.error.is(o.error))throw Error("Expects option.error:Error");if(!_.strIs(o.originalMessage))throw Error("Expects option.originalMessage:String");if(!_.strIs(o.combinedStack))throw Error("Expects option.combinedStack:String");if(!_.strIs(o.throwCallsStack))throw Error("Expects option.throwCallsStack:String");if(!_.strIs(o.throwsStack))throw Error("Expects option.throwsStack:String");if(!o.throwLocation)throw Error("Expects option.throwLocation:Location");return function attributesForm(){null!==o.attended&&void 0!==o.attended||(o.attended=o.error.attended),o.attended=!!o.attended,(null===o.logged||void 0===o.logged)&&(o.logged=o.error.logged),o.logged=!!o.logged,(null===o.brief||void 0===o.brief)&&(o.brief=o.error.brief),o.brief=!!o.brief,(null===o.reason||void 0===o.reason)&&(o.reason=o.error.reason),o.sections=o.sections||Object.create(null),o.error.section&&_.props.supplement(o.sections,o.error.section),o.id=o.error.id,o.id||(_.error._errorCounter+=1,o.id=_.error._errorCounter)}(),function exposedForm(){var has=false;for(let k in o.error){has=true;break}if(has)if(o.exposed)for(let k in o.error)Reflect.has(o.exposed,k)||(o.exposed[k]=o.error[k]);else{o.exposed=Object.create(null);for(let k in o.error)o.exposed[k]=o.error[k]}}(),function sectionsForm(){sectionAdd("message",`Message of ${o.error.name||"error"}#${o.id}`,o.originalMessage),sectionAdd("combinedStack",o.stackCondensing?"Beautified calls stack":"Calls stack",o.combinedStack),sectionAdd("throwsStack","Throws stack",o.throwsStack),o.sourceCode&&(_.strIs(o.sourceCode)?sectionAdd("sourceCode","Source code",o.sourceCode):_.routine.is(o.sourceCode.read)?sectionAdd("sourceCode",`Source code from ${o.sourceCode.path}`,o.sourceCode.read):_.strIs(o.sourceCode.code)?sectionAdd("sourceCode",`Source code from ${o.sourceCode.path}`,o.sourceCode.code):console.error("Unknown format of {- o.sourceCode -}")),o.exposed&&Object.keys(o.exposed).length>0&&_.error._sectionExposedAdd(o);for(let s in o.sections){let section=o.sections[s];_.strIs(section.head)||(logger.error(`Each section of an error should have head, but head of section::${s} is ${_.entity.strType(section.head)}`),delete o.sections[s]),_.strIs(section.body)||(logger.error(`Each section of an error should have body, but body of section::${s} is ${_.entity.strType(section.body)}`),delete o.sections[s])}}(),_.error._messageForm(o),function form(){if(nonenumerable("originalMessage",o.originalMessage),function logging(propName){try{let o2={enumerable:false,configurable:true,get:function get(){return 3!==(new Error).stack.split("\n").length&&(_.error.logged(this),_.error.attend(this)),this.message},set:function set(src){return this.message=src,src}};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("stack"),nonenumerable("reason",o.reason),nonenumerable("combinedStack",o.combinedStack),nonenumerable("throwCallsStack",o.throwCallsStack),nonenumerable("asyncCallsStack",o.asyncCallsStack),nonenumerable("throwsStack",o.throwsStack),nonenumerable("catchCounter",o.error.catchCounter?o.error.catchCounter+1:1),nonenumerable("attended",o.attended),nonenumerable("logged",o.logged),nonenumerable("brief",o.brief),void 0!==o.throwLocation.line&&nonenumerable("lineNumber",o.throwLocation.line),void 0===o.error.throwLocation&&nonenumerable("location",o.throwLocation),nonenumerable("sourceCode",o.sourceCode||null),nonenumerable("id",o.id),nonenumerable("toString",function(){return this.stack}),nonenumerable("sections",o.sections),function getter(propName,get){try{let o2={enumerable:false,configurable:true,get:get};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("name",function(){return this.constructor.name}),o.error[Symbol.for("nodejs.util.inspect.custom")]=o.error.toString,o.concealed)for(let k in o.concealed)nonenumerable(k,o.concealed[k])}(),o.error;function sectionAdd(name,head,body){_.error._sectionAdd({name:name,head:head,body:body,sections:o.sections})}function nonenumerable(propName,value){try{let o2={enumerable:false,configurable:true,writable:true,value:value};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}},_.error._make.defaults={error:null,id:null,throwLocation:null,sections:null,concealed:null,exposed:null,attended:null,logged:null,brief:null,stackCondensing:null,originalMessage:null,combinedStack:"",throwCallsStack:"",throwsStack:"",asyncCallsStack:"",sourceCode:null,reason:null},_.error._sectionAdd=function _sectionAdd(o){let section=Object.create(null);return section.name=o.name,section.head=o.head,section.body=o.body,o.sections[o.name]=section,section},_.error._sectionAdd.defaults={sections:null,name:null,head:null,body:null},_.error._sectionExposedAdd=function _sectionExposedAdd(o){const exportString=_.entity.exportString?_.entity.exportString.bind(_.entity):String;let i=0;let body="";for(let k in o.exposed)i>0&&(body+="\n"),body+=`${k} : ${exportString(o.exposed[k])}`,i+=1;_.error._sectionAdd({sections:o.sections,name:"exposed",head:"Exposed",body:body})},_.error._sectionExposedAdd.defaults={sections:null,exposed:null},_.error._messageForm=function _messageForm(o){if(o.message=o.message||"",!_.strIs(o.originalMessage))throw"Expects string {- o.originalMessage -}";return o.brief?o.message+=o.originalMessage:o.message=_.error._sectionsJoin(o),o.error&&function nonenumerable(propName,value){try{let o2={enumerable:false,configurable:true,writable:true,value:value};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("message",o.message),o.message},_.error._messageForm.defaults={error:null,sections:null,brief:false,message:""},_.error._sectionsJoin=function _sectionsJoin(o){o.message=o.message||"";for(let s in o.sections){let section=o.sections[s];let head=section.head||"";let body=(str=section.body,indentation="    ",_.strLinesIndentation?indentation+_.strLinesIndentation(str,indentation):str);body.trim().length&&(o.message+=` = ${head}\n${body}\n\n`)}var str,indentation;return o.message},_.error._sectionsJoin.defaults={sections:null,message:""},_.error._inStr=function _inStr(errStr){return _.assert(_.strIs(errStr)),!!_.strHas(errStr,/\=\s+Message of/m)&&!!_.strHas(errStr,/(^|\n)\s*=\s+Beautified calls stack/m)},_.error.fromStr=function fromStr(errStr){try{errStr=_.str.lines.strip(errStr);let sectionBeginRegexp=/[=]\s+(.*?)\s*\n/gm;let splits=_.strSplitFast({src:errStr,delimeter:sectionBeginRegexp});let sectionName;let throwCallsStack="";let throwsStack="";let stackCondensing=true;let messages=[];for(let s=0;s<splits.length;s++){let split=splits[s];let sectionNameParsed=sectionBeginRegexp.exec(split+"\n");sectionNameParsed?sectionName=sectionNameParsed[1]:sectionName?!sectionName||_.strBegins(sectionName,"Message of")?messages.push(split):_.strBegins(sectionName,"Beautified calls stack")?throwCallsStack=split:_.strBegins(sectionName,"Throws stack")&&(throwsStack=split):messages.push(split)}let error=new Error;let throwLocation=_.introspector.locationFromStackFrame(throwCallsStack||error.stack);let originalMessage=messages.join("\n");return _.error._make({error:error,throwLocation:throwLocation,stackCondensing:stackCondensing,originalMessage:originalMessage,combinedStack:throwCallsStack,throwCallsStack:throwCallsStack,throwsStack:throwsStack})}catch(err2){return console.error(err2),Error(errStr)}},_.error.logged=function logged(err,value){return _.assert(1===arguments.length||2===arguments.length),void 0===value&&(value=true),_.error.concealedSet(err,{logged:value})},_.error.attend=function attend(err,value){return _.assert(1===arguments.length||2===arguments.length),void 0===value&&(value=true),_.error.concealedSet(err,{attended:value})},_.error.exposedSet=function exposedSet(args,props){_.assert(2===arguments.length),_.assert(_.mapIs(props)),_.longIs(args)||(args=[args]);let err=args[0];if(_.symbol.is(err))return _.assert(1===args.length),err;1===args.length&&_.error.isFormed(err)||(err=_._err({args:args,level:2}));try{for(let f in props)err[f]=props[f]}catch(err){}return err},_.error.concealedSet=function concealedSet(args,props){_.assert(2===arguments.length),_.assert(_.mapIs(props)),_.longIs(args)||(args=[args]);let err=args[0];if(_.symbol.is(err))return _.assert(1===args.length),err;1===args.length&&_.error.isFormed(err)||(err=_._err({args:args,level:2}));try{for(let f in props){let o={enumerable:false,configurable:true,writable:true,value:props[f]};Object.defineProperty(err,f,o)}}catch(err){}return err},_.error.process=function process(err){return 1===arguments.length&&_.error.isFormed(err)||(err=_.err(...arguments)),_.process&&_.process.entryPointInfo&&_.error.sectionAdd(err,{name:"process",body:_.process.entryPointInfo()}),err},_.date.is=function is(src){return"[object Date]"===Object.prototype.toString.call(src)},_.introspector.code=function code(o){if(_.routine.options(code,o),_.assert(0===arguments.length||1===arguments.length),!_diagnosticCodeExecuting){_diagnosticCodeExecuting+=1;try{if(o.location||(o.error?o.location=_.introspector.location({error:o.error,level:o.level}):o.location=_.introspector.location({stack:o.stack,level:o.stack?o.level:o.level+1})),!_.number.is(o.location.line))return end();if(!o.sourceCode){if(!o.location.filePath)return end();let codeProvider=_.codeProvider||_.fileProvider;if(!codeProvider&&_globals_.testing&&_globals_.testing.wTools&&(codeProvider=_globals_.testing.wTools.codeProvider||_globals_.testing.wTools.fileProvider),!codeProvider)return end();try{let filePath=codeProvider.path.normalizeTolerant(o.location.filePath);codeProvider.path.isAbsolute(filePath)&&(o.sourceCode=function read(codeProvider,filePath){return codeProvider.fileRead({filePath:filePath,sync:1,throwing:0})}(codeProvider,filePath))}catch(err){o.sourceCode=` ! Cant load source code of "${o.location.filePath}"`}if(!o.sourceCode)return end()}let code=_.strLinesSelect({src:o.sourceCode,line:o.location.line,nearestLines:o.nearestLines,selectMode:o.selectMode,zeroLine:1,numbering:1});code&&_.strLinesIndentation&&o.identation&&(code=o.identation+_.strLinesIndentation(code,o.identation));let result=code;return o.withPath&&(result=o.asMap?{path:o.location.filePathLineCol,code:code}:o.location.filePathLineCol+"\n"+code),end(result)}catch(err){return void console.log(err.toString())}}function end(result){return _diagnosticCodeExecuting-=1,result}},_.introspector.code.defaults={level:0,nearestLines:5,withPath:1,asMap:0,selectMode:"center",identation:null,stack:null,error:null,location:null,sourceCode:null},_.introspector.stack=function stack(stack,range){if(1===arguments.length&&(_.error.is(stack)||_.strIs(stack)||(range=arguments[0],stack=void 0)),void 0!==stack&&null!==stack||(stack=new Error,void 0===range?range=[1,Infinity]:(_.number.is(range[0])&&(range[0]+=1),_.number.is(range[1])&&range[1]>=0&&(range[1]+=1))),void 0===range&&(range=[0,Infinity]),0!==arguments.length&&1!==arguments.length&&2!==arguments.length){debugger;throw Error("stack : expects one or two or none arguments")}if(!_.intervalIs(range)){debugger;throw Error("stack : expects range but, got "+_.entity.strType(range))}let first=range[0];let last=range[1];let errIs=0;if(_.error.is(stack)&&(stack=_.error.originalStack(stack),1),!stack)return"";if(_.arrayIs(stack)||_.strIs(stack)){for(_.arrayIs(stack)||(stack=stack.split("\n"));stack.length;){let splice=0;if(splice|=false===_.strHas(stack[0],/(^| )at /)&&-1===stack[0].indexOf("@"),splice|=-1!==stack[0].indexOf("(vm.js:"),splice|=-1!==stack[0].indexOf("(module.js:"),!(splice|=-1!==stack[0].indexOf("(internal/module.js:")))break;stack.splice(0,1)}if(stack[0]&&-1===stack[0].indexOf("at ")&&-1===stack[0].indexOf("@")){console.error("stack : failed to parse stack");debugger}return stack=stack.map(line=>line.trim()),stack=stack.filter(line=>line),first=void 0===first?0:first,last=void 0===last?stack.length:last,first<0&&(first=stack.length+first),last<0&&(last=stack.length+last+1),0===first&&last===stack.length||(stack=stack.slice(first||0,last)),stack=String(stack.join("\n")),stack}},_.introspector.stackCondense=function stackCondense(stack){if(1!==arguments.length)throw Error("Expects single arguments");if(!_.strIs(stack)){debugger;throw Error("Expects string")}for(let s=(stack=stack.split("\n")).length-1;s>=0;s--){let line=stack[s];s>0&&/(\W|^)__\w+/.test(line)?stack.splice(s,1):(_.strHas(line,".test.")&&(line+=" *"),stack[s]=line)}return stack.join("\n")},_.introspector.location=function location(o){if(_.number.is(o)?o={level:o}:_.strIs(o)?o={stack:o,level:0}:_.error.is(o)?o={error:o,level:0}:void 0===o&&(o={stack:_.introspector.stack([1,Infinity])}),location.defaults)for(let e in o)if(void 0===location.defaults[e])throw Error("Unknown option "+e);if(location.defaults)for(let e in location.defaults)void 0===o[e]&&(o[e]=location.defaults[e]);if(!(0===arguments.length||1===arguments.length))throw Error("Expects single argument or none");if(!_.mapIs(o))throw Error("Expects options map");if(o.level||(o.level=0),o.location||(o.location=Object.create(null)),o.error){let location2=o.error.location||Object.create(null);var args0=[location2.filePath,o.location.filePath,o.error.filename,o.error.fileName];o.location.filePath=_.longLeftDefined(args0).element;var args1=[location2.line,o.location.line,o.error.line,o.error.linenumber,o.error.lineNumber,o.error.lineNo,o.error.lineno];o.location.line=_.longLeftDefined(args1).element;var args2=[location2.col,o.location.col,o.error.col,o.error.colnumber,o.error.colNumber,o.error.colNo,o.error.colno];o.location.col=_.longLeftDefined(args2).element}if(o.stack||(o.error?o.stack=_.introspector.stack(o.error,void 0):(o.stack=_.introspector.stack(),o.level+=1)),null===o.stack||void 0===o.stack)return o.location;_.assert(_.strIs(o.stack)||_.arrayIs(o.stack));let stack=o.stack;_.strIs(stack)&&(stack=stack.split("\n"));let stackFrame=stack[o.level];return _.introspector.locationFromStackFrame({stackFrame:stackFrame,location:o.location})},_.introspector.location.defaults={level:0,stack:null,error:null,location:null},_.introspector.locationFromStackFrame=function locationFromStackFrame(o){if(_.strIs(o)&&(o={stackFrame:o}),!(1===arguments.length))throw Error("Expects single argument");if(!_.mapIs(o))throw Error("Expects options map");if(locationFromStackFrame.defaults)for(let e in o)if(void 0===locationFromStackFrame.defaults[e])throw Error("Unknown option : "+e);if(locationFromStackFrame.defaults)for(let e in locationFromStackFrame.defaults)void 0===o[e]&&(o[e]=locationFromStackFrame.defaults[e]);if(!_.strIs(o.stackFrame))throw Error(`Expects string {- stackFrame -}, but fot ${_.entity.strType(o.stackFrame)}`);if(o.location&&!_.mapIs(o.location))throw Error("Expects map option::location");return o.location||(o.location=Object.create(null)),o.location.original=o.stackFrame,_.introspector.locationNormalize(o.location),o.location},_.introspector.locationFromStackFrame.defaults={stackFrame:null,location:null},_.introspector.locationToStack=function locationToStack(o){if(!(1===arguments.length))throw Error("Expects single argument");if(!_.mapIs(o))throw Error("Expects options map");return _.introspector.locationNormalize(o),o.filePathLineCol?o.routineName?`at ${o.routineName} (${o.filePathLineCol})`:`at (${o.filePathLineCol})`:null},_.introspector.locationToStack.defaults={original:null,filePath:null,routineName:null,routineAlias:null,internal:null,abstraction:null,line:null,col:null,filePathLineCol:null,routineFilePathLineCol:null,fileName:null,fileNameLineCol:null},_.introspector.locationNormalize=function locationNormalize(o){if(!(1===arguments.length))throw Error("Expects single argument");if(!_.mapIs(o))throw Error("Expects options map");if(locationNormalize.defaults)for(let e in o)if(void 0===locationNormalize.defaults[e])throw Error("Unknown option "+e);if(locationNormalize.defaults)for(let e in locationNormalize.defaults)void 0===o[e]&&(o[e]=locationNormalize.defaults[e]);let hadPath=!!o.filePath;if(o.filePath||(o.filePath=pathFromStack()),function pathCanonize(){o.filePath&&_.path&&_.path.canonize&&(o.filePath=_.path.canonize(o.filePath))}(),function routineFromStack(){let routineName;if(o.routineName)return o.routineName;if(!o.original)return o.routineName;if(routineName=o.original,_.strIs(routineName)){routineName=routineName.replace(/at eval \(eval at/,"");let executed=/^\s*(?:at\s+)?([\w.<>]+)\s*.+/.exec(routineName);executed&&(routineName=executed[1]||""),routineName=routineName.replace(/<anonymous>/gm,"{-anonymous-}"),_.strEnds(routineName,".")&&(routineName+="{-anonymous-}")}else routineName="{-anonymous-}";o.routineName=routineName,o.routineName}(),function routineAliasFromStack(){let routineAlias;if(o.routineAlias)return o.routineAlias;if(!o.original)return o.routineAlias;routineAlias=null;let executed=/\[as ([^\]]*)\]/.exec(o.original);executed&&(routineAlias=executed[1]||null),routineAlias&&(routineAlias=routineAlias.replace(/<anonymous>/gm,"{-anonymous-}")),o.routineAlias=routineAlias,o.routineAlias}(),function internalForm(){_.number.defined(o.internal)||(o.internal=0,o.filePath&&(o.internal<2&&_.strBegins(o.filePath,"internal/")&&(o.internal=2),o.internal<2&&_.strBegins(o.filePath,"node:internal/")&&(o.internal=2)))}(),function abstractionForm(){_.number.defined(o.abstraction)||(o.abstraction=0,o.routineName&&(o.abstraction<2&&(_.strBegins(o.routineName,"__")||-1!==o.routineName.indexOf(".__"))&&(o.abstraction=2),o.abstraction<1&&(_.strBegins(o.routineName,"_")||-1!==o.routineName.indexOf("._"))&&(o.abstraction=1)),o.routineAlias&&(o.abstraction<2&&(_.strBegins(o.routineAlias,"__")||-1!==o.routineAlias.indexOf(".__"))&&(o.abstraction=2),o.abstraction<1&&(_.strBegins(o.routineAlias,"_")||-1!==o.routineAlias.indexOf("._"))&&(o.abstraction=1)))}(),_.number.defined(o.line)&&_.number.defined(o.col)||(o.filePath=lineColFromPath(o.filePath)),!_.number.is(o.line)&&hadPath){let path=pathFromStack();path&&lineColFromPath(path)}return function end(){let path=o.filePath;if(o.filePathLineCol=path||"",_.number.defined(o.line)&&(o.filePathLineCol+=":"+o.line,_.number.defined(o.col)&&(o.filePathLineCol+=":"+o.col)),o.routineName&&(o.routineFilePathLineCol=o.routineName+" @ "+o.filePathLineCol),path){let fileName=path;_.assert(_.routine.is(fileName.lastIndexOf));let i1=fileName.lastIndexOf("/");let i2=fileName.lastIndexOf("\\");let i=Math.max(i1,i2);-1!==i&&(fileName=fileName.substr(i+1)),o.fileName=fileName}return o.fileNameLineCol=o.fileName||"",_.number.defined(o.line)&&(o.fileNameLineCol+=":"+o.line,_.number.defined(o.col)&&(o.fileNameLineCol+=":"+o.col)),o}();function pathFromStack(){let path=o.original;if(_.strIs(path)){path=(path=(path=(path=(path=path.replace(/^\s+/,"")).replace(/^\w+@/,"")).replace(/^at/,"")).replace(/^\s+/,"")).replace(/\s+$/,"");var parsed=/^.*\(([^)]*)\).*$/.exec(path);return parsed&&(path=parsed[1]),path}}function lineColFromPath(path){if(path){let lineNumber,colNumber;let parsed=/(.+?):(\d+)(?::(\d+))?[^:/]*$/.exec(path);parsed&&(path=parsed[1],lineNumber=parsed[2],colNumber=parsed[3]),lineNumber=numberFromToInt(lineNumber),colNumber=numberFromToInt(colNumber),_.number.defined(o.line)||_.number.defined(lineNumber)&&(o.line=lineNumber),_.number.defined(o.col)||_.number.defined(colNumber)&&(o.col=colNumber)}else o.line&&(o.line=numberFromToInt(o.line)),o.col&&(o.col=numberFromToInt(o.col));return _.number.defined(o.line)||(o.line=null),_.number.defined(o.col)||(o.col=null),path}function numberFromToInt(src){return _.strIs(src)?parseInt(src):Math.floor(Number(src))}},_.introspector.locationNormalize.defaults={original:null,filePath:null,routineName:null,routineAlias:null,internal:null,abstraction:null,line:null,col:null,filePathLineCol:null,routineFilePathLineCol:null,fileName:null,fileNameLineCol:null},_.long._functor_functor=function _functor_functor(methodName,typer,which){if(_.assert(!!methodName),typer||(typer="namespaceOf"),which||(which=0),0===which)return end(function _functor0(container){_.assert(1===arguments.length),_.assert(_.routine.is(this[typer]),()=>`No routine::${typer} in the namesapce::${this.NamespaceName}`);const namespace=this[typer](container);return _.assert(_.routine.is(namespace[methodName]),`No routine::${methodName} in the namesapce::${namespace.NamespaceName}`),namespace[methodName].bind(namespace,container)});if(1===which)return end(function _functor1(container){_.assert(1===arguments.length),_.assert(_.routine.is(this[typer]),()=>`No routine::${typer} in the namesapce::${this.NamespaceName}`);const namespace=this[typer](container);_.assert(_.routine.is(namespace[methodName]),`No routine::${methodName} in the namesapce::${namespace.NamespaceName}`);const routine0=namespace[methodName];return function routine1(arg1,...args){return routine0.call(this,arg1,container,...args)}.bind(namespace)});function end(result){return result.functor=new Function(`return _.long._functor_functor( '${methodName}', '${typer}', ${which} )`),result}_.assert(0)},_.entity.strType=function strTypeWithTraits(src){if(_.assert(1===arguments.length,"Expects single argument"),_.aux.is(src)){if(_.mapIsPure(src))return end("Map.pure");if(_.mapIsPolluted(src))return end("Map.polluted");if(_.aux.isPure(src)&&_.aux.isPrototyped(src))return end("Aux.pure.prototyped");if(_.aux.isPolluted(src)&&_.aux.isPrototyped(src))return end("Aux.polluted.prototyped");_.assert(0,"undexpected")}if(_.primitive.is(src))return end(_.entity.strTypeSecondary(src));let proto=Object.getPrototypeOf(src);return proto&&proto.constructor&&proto.constructor!==Object&&proto.constructor.name?end(proto.constructor.name):end(_.entity.strTypeSecondary(src));function end(result){let translated=_.entity.TranslatedTypeMap[result];return translated&&(result=translated),_.entity.StandardTypeSet.has(result)||(_.countableIs(src)&&(result+=".countable"),_.constructibleIs(src)&&(result+=".constructible")),result}},_.entity.strTypeSecondary=function strTypeSecondary(src){let name=Object.prototype.toString.call(src);let result=/\[(\w+) (\w+)\]/.exec(name);return _.assert(!!result,"unknown type",name),result[2]},_.entity.namespaceOf=function namespaceForIterating(src){return _.assert(1===arguments.length),void 0===src?_.blank:_.primitive.is(src)?_.itself:_.hashMap.like(src)?_.hashMap:_.set.like(src)?_.set:_.long.is(src)?_.long:_.buffer.like(src)?_.buffer:_.countable.is(src)?_.object:_.aux.is(src)?_.aux:_.object.is(src)?_.object:_.props},_.entity.lengthOf=function(){const lengthOf=function lengthOf(src){return _.assert(1===arguments.length),lengthOf.functor.call(this,src)()};return lengthOf.functor=function anonymous(){return _.long._functor_functor("lengthOf","namespaceOf",0)}(),lengthOf}(),_.lengthOf=_.entity.lengthOf.bind(_.entity),_.strType=_.entity.strType.bind(_.entity),_.entity.makeUndefined=function(){const makeUndefined=function makeUndefined(container,...args){return _.assert(1===arguments.length||2===arguments.length),makeUndefined.functor.call(this,container)(...args)};return makeUndefined.functor=function anonymous(){return _.long._functor_functor("makeUndefined","namespaceOf",0)}(),makeUndefined}(),_.entity.TranslatedTypeMap={BigUint64Array:"U64x",Uint32Array:"U32x",Uint16Array:"U16x",Uint8Array:"U8x",Uint8ClampedArray:"U8xClamped",BigInt64Array:"I64x",Int32Array:"I32x",Int16Array:"I16x",Int8Array:"I8x",Float64Array:"F64x",Float32Array:"F32x",Buffer:"BufferNode",ArrayBuffer:"BufferRaw",SharedArrayBuffer:"BufferRawShared",Map:"HashMap",WeakMap:"HashMapWeak",Function:"Routine",Arguments:"ArgumentsArray"},_.entity.StandardTypeSet=new Set(["U64x","U32x","U16x","U8x","U8xClamped","I64x","I32x","I16x","I8x","F64x","F32x","BufferNode","BufferRaw","BufferRawShared","HashMap","HashMapWeak","ArgumentsArray","Array","Set","Routine","Global"]),_.class.methodIteratorOf=function methodIteratorOf(src){if(src)return _.routine.like(src[iteratorSymbol])?src[iteratorSymbol]:void 0},_.path.refine=function refine(src){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src));let result=src;return":"===result[1]&&("\\"===result[2]||"/"===result[2]?result=result.length>3?"/"+result[0]+"/"+result.substring(3):"/"+result[0]:2===result.length&&(result="/"+result[0])),result.replace(/\\/g,"/")},_.path._normalize=function _normalize(o){if(_.routine.assertOptions(_normalize,arguments),_.assert(_.strIs(o.src),"Expects string"),!o.src.length)return"";let result=o.src;result=this.refine(result),o.tolerant&&(result=result.replace(this._delUpDupRegexp,this.upToken));let endsWithUp=false;let beginsWithHere=false;for(result!==this.upToken&&!_.strEnds(result,this.upToken+this.upToken)&&_.strEnds(result,this.upToken)&&(endsWithUp=true,result=_.strRemoveEnd(result,this.upToken));!_.strBegins(result,this.hereUpToken+this.upToken)&&_.strBegins(result,this.hereUpToken);)beginsWithHere=true,result=_.strRemoveBegin(result,this.hereUpToken);if(-1!==result.indexOf(this.hereToken)){for(;this._delHereRegexp.test(result);)result=result.replace(this._delHereRegexp,function(match,postSlash){return postSlash||""});""===result&&(result=this.upToken)}if(-1!==result.indexOf(this.downToken))for(;this._delDownRegexp.test(result);)result=result.replace(this._delDownRegexp,function(){arguments[0];let notBegin=arguments[1];arguments[2];let preSlash=arguments[3];let postSlash=arguments[4];return""===preSlash?notBegin:notBegin?notBegin+(postSlash||""):notBegin+preSlash});return result.length||(result="."),o.detrailing&&(result===this.upToken||_.strEnds(result,this.upToken+this.upToken)||(result=_.strRemoveEnd(result,this.upToken))),!o.detrailing&&endsWithUp&&result!==this.rootToken&&(result+=this.upToken),!o.undoting&&beginsWithHere&&(result=this._dot(result)),result},_.path._normalize.defaults={src:null,tolerant:false,detrailing:false,undoting:false},_.path.normalize=function normalize(src){let result=this._normalize({src:src,tolerant:false,detrailing:false,undoting:false});return _.assert(_.strIs(src),"Expects string"),_.assert(1===arguments.length,"Expects single argument"),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},_.path.canonize=function canonize(src){let result=this._normalize({src:src,tolerant:false,detrailing:true,undoting:true});return _.assert(_.strIs(src),"Expects string"),_.assert(1===arguments.length,"Expects single argument"),_.assert(result===this.upToken||_.strEnds(result,this.upToken+this.upToken)||!_.strEnds(result,this.upToken)),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},_.path.canonizeTolerant=function canonizeTolerant(src){_.assert(_.strIs(src),"Expects string");let result=this._normalize({src:src,tolerant:true,detrailing:true,undoting:true});return _.assert(1===arguments.length,"Expects single argument"),_.assert(result===this.upToken||_.strEnds(result,this.upToken)||!_.strEnds(result,this.upToken+this.upToken)),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},_.path._unescape=function _unescape(filePath){let splits=filePath.split(this.upToken);let result=Object.create(null);return result.wasEscaped=false,splits=splits.map(split=>{{let i=0;for(;'"'===split[i];)i+=1;if(i>0){let c=i;c%2==1&&(result.wasEscaped=true);let c2=Math.floor((c+1)/2);split=split.substring(c2,split.length)}}{let i=split.length-1;for(;'"'===split[i];)i-=1;if(i<split.length-1){let c=split.length-i-1;c%2==1&&(result.wasEscaped=true);let c2=Math.floor((c+1)/2);split=split.substring(0,split.length-c2)}}return split}),result.unescaped=splits.join(this.upToken),result},_.path.unescape=function unescape(filePath){return this._unescape(filePath).unescaped},_.path._nativizeWindows=function _nativizeWindows(filePath){_.assert(_.strIs(filePath),"Expects string");let result=filePath;return _.assert(_.routine.is(this.unescape)),result=this.unescape(result),this._nativizeMinimalWindows(result)},_.path._nativizeMinimalWindows=function _nativizeMinimalWindows(filePath){let result=filePath;return"\\"===(result=result.replace(/\//g,"\\"))[0]&&(2!==result.length&&":"!==result[2]&&"\\"!==result[2]||(result=result[1]+":"+result.substring(2))),2===result.length&&":"===result[1]&&(result+="\\"),result},_.path._nativizePosix=function _nativizePosix(filePath){let result=filePath;return _.assert(_.strIs(filePath),"Expects string"),_.assert(_.routine.is(this.unescape)),this.unescape(result)},_.path.isGlob=function isGlob(src){let self=this;return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src)),!(self.fileProvider&&!self.fileProvider.globing)&&(self._pathIsGlobRegexp||function _setup(){let _pathIsGlobRegexpStr="";_pathIsGlobRegexpStr+="(?:[?*]+)",_pathIsGlobRegexpStr+="|(?:([!?*@+]*)\\((.*?(?:\\|(.*?))*)\\))",_pathIsGlobRegexpStr+="|(?:\\[(.+?)\\])",_pathIsGlobRegexpStr+="|(?:\\{(.*)\\})",_pathIsGlobRegexpStr+="|(?:\0)",self._pathIsGlobRegexp=new RegExp(_pathIsGlobRegexpStr)}(),self._pathIsGlobRegexp.test(src))},_.path.isRelative=function isRelative(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string {-filePath-}, but got",_.entity.strType(filePath)),!this.isAbsolute(filePath)},_.path.isAbsolute=function isAbsolute(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string {-filePath-}, but got",_.entity.strType(filePath)),filePath=this.refine(filePath),_.strBegins(filePath,this.upToken)},_.path.ext=function ext(path){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(path),"Expects string {-path-}, but got",_.entity.strType(path));let index=path.lastIndexOf("/");return index>=0&&(path=path.substr(index+1,path.length-index-1)),-1===(index=path.lastIndexOf("."))||0===index?"":(index+=1,path.substr(index,path.length-index).toLowerCase())},_.path.isGlobal=function isGlobal(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string"),_.strHas(filePath,"://")},_.path.rootToken="/",_.path.upToken="/",_.path.hereToken=".",_.path.downToken="..",_.path.hereUpToken="./",_.path.downUpToken="../",_.path._delHereRegexp=/\/\.(\/|$)/,_.path._delDownRegexp=/((?:.|^))(?:(?:\/\/)|(((?:^|\/))(?!\.\.(?:\/|$))(?:(?!\/).)+\/))\.\.((?:\/|$))/,_.path._delUpDupRegexp=/\/{2,}/g,_.path._pathIsGlobRegexp=/(?:[?*]+)|(?:([!?*@+]*)\((.*?(?:\|(.*?))*)\))|(?:\[(.+?)\])|(?:\{(.*)\})|(?: )/,_.path.currentAtBegin="/mnt/home-hdd/Документы/Intellectual/wTools",_.long.is=function is_functor(){let result;const TypedArray=Object.getPrototypeOf(Int8Array);return(result=_global_.BufferNode?function isNjs(src){return!!Array.isArray(src)||(src instanceof TypedArray?!(src instanceof BufferNode):(isNjs.functor=is_functor,"[object Arguments]"===Object.prototype.toString.call(src)))}:function isBrowser(src){return!!Array.isArray(src)||src instanceof TypedArray||"[object Arguments]"===Object.prototype.toString.call(src)}).functor=is_functor,result}(),_.long.like=function like(src){return!_.primitive.is(src)&&_.long.is(src)},_.long._make=function _make(src,length){if(2===arguments.length){let data=length;if(_.number.is(length)?data=src:_.number.is(length.length)?length=length.length:(data=[...length],length=data.length),_.argumentsArray.is(src))return fill(_.argumentsArray._make(length),data);if(_.unroll.is(src))return fill(_.unroll._make(length),data);if(null===src)return fill(this.tools.long.default._make(length),data);let result;return _.routine.is(src)?result=fill(new src(length),data):src.constructor&&(result=fill(new src.constructor(length),data)),_.assert(_.long.is(result),"Not clear how to make such long"),result}if(void 0!==src&&null!==src){if(_.number.is(src))return this.tools.long.default._make(src);if(_.unroll.is(src))return _.unroll._make(src);if(_.argumentsArray.is(src))return _.argumentsArray._make(src);if(src.constructor===Array)return[...src];if(_.buffer.typedIs(src))return new src.constructor(src);if(_.countable.is(src))return this.tools.long.default._make(src);if(_.routine.is(src)){let result=new src;return _.assert(this.is(result),"Expects long as returned instance"),result}}return this.tools.long.default.make();function fill(dst,data){if(null===data||void 0===data)return dst;let l=Math.min(length,data.length);for(let i=0;i<l;i++)dst[i]=data[i];return dst}},_.long.make=function make(src,length){return _.assert(arguments.length<=2),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routine.is(src)),_.assert(_.number.is(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.number.is(src)||_.long.is(src)||_.countable.is(src)||_.routine.is(src)),this._make(...arguments)},_.long._makeUndefined=function _makeUndefined(src,length){if(2===arguments.length){if(_.number.is(length)||(length=_.number.is(length.length)?length.length:[...length].length),null===src)return this.tools.long.default._makeUndefined(length);if(_.argumentsArray.is(src))return _.argumentsArray._makeUndefined(src,length);if(_.unroll.is(src))return _.unroll._makeUndefined(src,length);if(_.routine.is(src)){let result=new src(length);return _.assert(_.long.is(result)),result}return new src.constructor(length)}if(1===arguments.length){let constructor;return this.like(src)?_.argumentsArray.is(src)?_.argumentsArray._makeUndefined(src):_.unroll.is(src)?_.unroll._makeUndefined(src):new(constructor=src.constructor)(length=src.length):this.tools.long.default._makeUndefined(src)}return this.tools.long.default._makeUndefined()},_.long.makeUndefined=function makeUndefined(src,length){return _.assert(0<=arguments.length&&arguments.length<=2),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routine.is(src)),_.assert(_.number.is(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.number.is(src)||this.like(src)||_.countable.is(src)||_.routine.is(src)),this._makeUndefined(...arguments)},_.long._lengthOf=function _lengthOf(src){return src.length},_.long.lengthOf=function lengthOf(src){return _.assert(1===arguments.length),_.assert(this.like(src)),this._lengthOf(src)},_.long._exportStringDiagnosticShallow=function _exportStringDiagnosticShallow(src){return _.unroll.is(src)?`{- ${_.entity.strType(src)}.unroll with ${this._lengthOf(src)} elements -}`:`{- ${_.entity.strType(src)} with ${this._lengthOf(src)} elements -}`},_.long.exportStringDiagnosticShallow=function exportStringDiagnosticShallow(src,o){return _.assert(this.like(src)),_.assert(1===arguments.length||2===arguments.length),_.assert(void 0===o||_.object.isBasic(o)),this._exportStringDiagnosticShallow(...arguments)},_.longIs=_.long.is.bind(_.long),_.longLike=_.long.like.bind(_.long),_.argumentsArray.is=function is(src){return"[object Arguments]"===Object.prototype.toString.call(src)},_.argumentsArray.like=function like(src){return!!Array.isArray(src)||"[object Arguments]"===Object.prototype.toString.call(src)},_.argumentsArrayIs=_.argumentsArray.is.bind(_.argumentsArray),_.array.is=function is(src){return Array.isArray(src)},_.array.like=function like(src){return this.is(src)},_.array.isEmpty=function isEmpty(src){return!!_.array.is(src)&&0===src.length},_.array.likeResizable=function likeResizable(src){return _.array.is(src)},_.array._make=function _make(src,length){if(2===arguments.length){let data=length;return _.number.is(length)?data=src:length.length&&(length=length.length),_.countable.is(length)&&(data=[...length],length=data.length),function fill(dst,data){if(null===data||void 0===data)return dst;let l=Math.min(length,data.length);for(let i=0;i<l;i++)dst[i]=data[i];return dst}(new Array(length),data)}if(1===arguments.length){if(_.number.is(src))return new Array(src);if(_.countable.is(src))return[...src]}return[]},_.array.make=function make(src,length){return _.assert(0===arguments.length||null===src||_.countable.is(src)||_.numberIs(src)),_.assert(void 0===length||!_.number.is(src)||!_.number.is(length)),_.assert(arguments.length<2||_.number.is(length)||_.countable.is(length)),_.assert(arguments.length<=2),this._make(...arguments)},_.array.as=function as(src){return _.assert(1===arguments.length),_.assert(void 0!==src),null===src?[]:_.array.is(src)?src:_.countable.like(src)?[...src]:[src]},_.arrayIs=_.array.is.bind(_.array),_.arrayLike=_.array.like.bind(_.array),_.arrayIsEmpty=_.array.isEmpty.bind(_.array),_.arrayLikeResizable=_.array.likeResizable.bind(_.array),_.unroll.is=function is(src){return!!_.arrayIs(src)&&!!src[unrollSymbol]},_.unroll.from=function from(src){return _.assert(1===arguments.length,"Expects single argument"),this.is(src)?src:this.make(src)},_.unroll._make=function _make(src,length){let result=_.array._make(...arguments);return result[unrollSymbol]=true,(null!==src&&void 0!==src&&!_.unroll.is(src)||null!==src&&void 0!==src&&!_.unroll.is(src))&&(result=_.unroll.normalize(result)),result},_.unroll.make=function make(src,length){return _.assert(0===arguments.length||null===src||_.countable.is(src)||_.numberIs(src)),_.assert(void 0===length||!_.number.is(src)||!_.number.is(length)),_.assert(arguments.length<2||_.number.is(length)||_.countable.is(length)),_.assert(arguments.length<=2),this._make(...arguments)},_.unroll.normalize=function normalize(dstArray){_.assert(1===arguments.length),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`);for(let a=0;a<dstArray.length;a++)if(_.unrollIs(dstArray[a])){let args=[a,1];args.push.apply(args,dstArray[a]),dstArray.splice.apply(dstArray,args),a+=args.length-3}else _.arrayIs(dstArray[a])&&_.unroll.normalize(dstArray[a]);return dstArray},_.unroll.append=function append(dstArray){return _.assert(arguments.length>=1),_.assert(_.longIs(dstArray)||null===dstArray,"Expects long or unroll"),function _append(dstArray,srcArray){_.assert(2===arguments.length);for(let a=0,len=srcArray.length;a<len;a++)_.unrollIs(srcArray[a])?_append(dstArray,srcArray[a]):(_.arrayIs(srcArray[a])&&_.unroll.normalize(srcArray[a]),dstArray.push(srcArray[a]));return dstArray}(dstArray=dstArray||[],Array.prototype.slice.call(arguments,1)),dstArray},_.unrollAppend=_.unroll.append.bind(_.unroll),_.unrollIs=_.unroll.is.bind(_.unroll),_.bufferRaw.is=function rawIs(src){let type=Object.prototype.toString.call(src);return"[object ArrayBuffer]"===type||"[object SharedArrayBuffer]"===type},_.bufferRawIs=_.bufferRaw.is.bind(_.bufferRaw),_.bufferTyped.is=function is(src){return src instanceof Object.getPrototypeOf(Int8Array)&&!_.buffer.nodeIs(src)},_.bufferTypedIs=_.bufferTyped.is.bind(_.bufferTyped),_.bufferNode.is=function nodeIs(src){return!!_global_.BufferNode&&src instanceof BufferNode},_.bufferNodeIs=_.bufferNode.is.bind(_.bufferNode),_.bufferNode.nodeIs=function nodeIs(src){return!!_global_.BufferNode&&src instanceof BufferNode},_.buffer.like=function anyIs(src){return src instanceof ArrayBuffer||!!(_global.BufferRawShared&&src instanceof SharedArrayBuffer)||!!ArrayBuffer.isView(src)},_.buffer.nodeIs=_.bufferNode.nodeIs.bind(_.bufferNode),_.vector.is=function is(src){return!!_.arrayIs(src)||!_.primitive.is(src)&&!(!_.class.methodIteratorOf(src)||!_.number.is(src.length)||_.mapIs(src))},_.vector.like=function like(src){return _.vector.is(src)},_.vectorIs=_.vector.is.bind(_.vector),_.vectorLike=_.vector.like.bind(_.vector),_.primitive._is=function _primitiveIs_functor(){const is=new Set;return is.add("[object Symbol]"),is.add("[object Number]"),is.add("[object BigInt]"),is.add("[object Boolean]"),is.add("[object String]"),function _primitiveIs(src,typeStr){return is.has(typeStr)}}(),_.primitive.is=function is(src){if(!src)return true;let t=Object.prototype.toString.call(src);return _.primitive._is(src,t)},_._primitiveIs=_.primitive._is.bind(_.primitive),_.primitiveIs=_.primitive.is.bind(_.primitive),_.number.is=function is(src){return"number"==typeof src},_.number.isFinite=function numberIsFinite(src){return!!_.number.is(src)&&isFinite(src)},_.number.defined=function numberIsFinite(src){return!!_.number.is(src)&&isFinite(src)},_.number.fromStrMaybe=function fromStrMaybe(src){if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src)||_.number.is(src)),_.number.is(src))return src;if(!src)return src;let parsed=src?Number(src):NaN;return isNaN(parsed)?src:parsed},_.number.s={areAll:function areAll(src){if(_.assert(1===arguments.length),_.bufferTypedIs(src))return true;if(_.argumentsArray.like(src)&&!_.arrayIsEmpty(src)){for(let s=0;s<src.length;s++)if(!_.number.is(src[s]))return false;return true}return false},areFinite:function areFinite(src){if(_.assert(1===arguments.length,"Expects exactly one argument"),!_.number.s.areAll(src))return false;if(_.longIs(src))for(let s=0;s<src.length;s++)if(!_.number.isFinite(src[s]))return false;return true},arePositive:function arePositive(src){if(_.assert(1===arguments.length,"Expects exactly one argument"),!_.number.s.areAll(src))return false;if(_.longIs(src))for(let s=0;s<src.length;s++)if(src[s]<0||!_.number.isNotNan(src[s]))return false;return true},areInt:function areInt(src){if(_.assert(1===arguments.length,"Expects exactly one argument"),!_.number.s.areAll(src))return false;if(_.longIs(src))for(let s=0;s<src.length;s++)if(!_.intIs(src[s]))return false;return true},total:function numbersTotal(numbers){let result=0;_.assert(_.longIs(numbers)),_.assert(1===arguments.length,"Expects single argument");for(let n=0;n<numbers.length;n++){let number=numbers[n];_.assert(_.number.is(number)),result+=number}return result},from:function numbersFrom(src){if(_.assert(1===arguments.length,"Expects single argument"),_.strIs(src))return _.number.from(src);if(_.number.is(src))return src;let result;if(_.longIs(src)){result=[];for(let s=0;s<src.length;s++)result[s]=_.number.from(src[s])}else if(_.object.isBasic(src)){result=Object.create(null);for(let s in src)result[s]=_.number.from(src[s])}else result=_.number.from(src);return result},slice:function numbersSlice(src,f,l){return _.argumentsArray.like(src)&&_.assert(_.number.s.areAll(src)),_.number.is(src)?src:_.longSlice(src,f,l)},make:function numbersMake(src,length){let result;if(_.vector.adapterIs(src)&&(src=_.vectorAdapter.slice(src)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.number.is(src)||_.argumentsArray.like(src)),_.argumentsArray.like(src)){_.assert(src.length===length),result=_.long.makeUndefined(length);for(let i=0;i<length;i++)result[i]=src[i]}else{result=_.long.makeUndefined(length);for(let i=0;i<length;i++)result[i]=src}return result},fromNumber:function numbersFromNumber(src,length){if(_.vector.adapterIs(src)&&(src=_.vectorAdapter.slice(src)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.number.is(src)||_.argumentsArray.like(src)),_.argumentsArray.like(src))return _.assert(src.length===length),src;let result=_.long.makeUndefined(length);for(let i=0;i<length;i++)result[i]=src;return result},fromInt:function numbersFromInt(dst,length){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.intIs(dst)||_.arrayIs(dst),"Expects array of number as argument"),_.assert(length>=0),_.number.is(dst)){debugger;dst=_.longFill([],dst,length)}else{for(let i=0;i<dst.length;i++)_.assert(_.intIs(dst[i]),"Expects integer, but got",dst[i]);_.assert(dst.length===length,"Expects array of length",length,"but got",dst)}return dst},make_functor:function numbersMake_functor(length){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.number.is(length)),function numbersMake(src){return _.number.s.make(src,length)}},from_functor:function numbersFrom_functor(length){
return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.number.is(length)),function numbersFromNumber(src){return _.number.s.fromNumber(src,length)}}},_.aux.is=function is(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null===proto||(proto===Object.prototype?!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src):!_.routineIs(proto[Symbol.iterator])&&!(_.primitive.is(proto)||Reflect.has(proto,"constructor")&&proto.constructor!==Object.prototype.constructor))},_.aux.isPure=function isPure(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null===proto||proto.constructor!==Object&&!_.routineIs(proto[Symbol.iterator])&&!_.primitive.is(proto)&&!Reflect.has(proto,"constructor")},_.aux.isPolluted=function isPolluted(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null!==proto&&(proto===Object.prototype?!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src):!_.routineIs(proto[Symbol.iterator])&&proto.constructor===Object)},_.aux.isPrototyped=function isPrototyped(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null!==proto&&proto!==Object.prototype&&!_.routineIs(proto[Symbol.iterator])&&!(_.primitive.is(proto)||Reflect.has(proto,"constructor")&&proto.constructor!==Object.prototype.constructor)},_.aux.like=function like(src){return _.aux.is(src)},_.aux._make=function _make(src){return src?this.like(src)?this._cloneShallow(src):this.extendUniversal(Object.create(null),src):Object.create(null)},_.aux.make=function make(src,length){return _.assert(0===arguments.length||null===src||!_.primitive.is(src)),_.assert(void 0===length||0===length),_.assert(arguments.length<=2),this._make(...arguments)},_.aux._makeUndefined=function _makeUndefined(src,length){return Object.create(null)},_.aux.makeUndefined=function makeUndefined(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(this.like(src)),_.assert(_.number.is(length))):1===arguments.length&&_.assert(_.number.is(src)||this.like(src)),this._makeUndefined(src)},_.aux._keys=function _keys(o){let result=[];_.routine.options(_keys,o);let srcMap=o.srcMap;let selectFilter=o.selectFilter;if(_.assert(1===arguments.length,"Expects single argument"),_.assert(this.like(srcMap)),_.assert(null===selectFilter||_.routine.is(selectFilter)),o.onlyEnumerable){let result1=[];if(o.onlyOwn)for(let k in srcMap)Object.hasOwnProperty.call(srcMap,k)&&result1.push(k);else for(let k in srcMap)result1.push(k);filter(srcMap,result1)}else if(o.onlyOwn)filter(srcMap,Object.getOwnPropertyNames(srcMap));else{let proto=srcMap;result=[];do{filter(proto,Object.getOwnPropertyNames(proto)),proto=Object.getPrototypeOf(proto)}while(proto)}return result;function filter(srcMap,keys){if(selectFilter)for(let k=0;k<keys.length;k++){let e=selectFilter(srcMap,keys[k]);void 0!==e&&(element=e,-1===(dst=result).indexOf(element)&&dst.push(element))}else!function arrayAppendArrayOnce(dst,src){src.forEach(element=>{-1===dst.indexOf(element)&&dst.push(element)})}(result,keys);var dst,element}},_.aux._keys.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},_.aux.keys=function keys(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(keys,o||null)).srcMap=srcMap,this._keys(o)},_.aux.keys.defaults={onlyOwn:0,onlyEnumerable:1},_.aux.namespaceOf=function namespaceOf(src){return _.map.is(src)?_.map:_.aux.is(src)?_.aux:null},_.aux._lengthOf=function _lengthOf(src){return this.keys(src).length},_.aux.lengthOf=function lengthOf(src){return _.assert(1===arguments.length),_.assert(this.like(src)),this._lengthOf(src)},_.aux.supplement=function supplement(dstMap,srcMap){if(null===dstMap&&2===arguments.length)return Object.assign(Object.create(null),srcMap);null===dstMap&&(dstMap=Object.create(null)),_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++)srcMap=arguments[a],this._supplementWithProps(dstMap,srcMap);return dstMap},_.aux._exportStringDiagnosticShallow=function _exportStringDiagnosticShallow(src,o){return`{- ${_.entity.strType(src)} with ${this._lengthOf(src)} elements -}`},_.aux.exportStringDiagnosticShallow=function exportStringDiagnosticShallow(src,o){return _.assert(this.like(src)),_.assert(1===arguments.length||2===arguments.length),_.assert(void 0===o||_.object.isBasic(o)),this._exportStringDiagnosticShallow(...arguments)},_.constructible.is=function is(src){if(_.primitive.is(src))return false;let proto=Object.getPrototypeOf(src);return!(null===proto||!Reflect.has(proto,"constructor")||proto.constructor===Object||_.aux.is(src)||_.vector.is(src)||_.set.is(src)||_.hashMap.is(src))},_.constructibleIs=function is(src){if(_.primitive.is(src))return false;let proto=Object.getPrototypeOf(src);return!(null===proto||!Reflect.has(proto,"constructor")||proto.constructor===Object||_.aux.is(src)||_.vector.is(src)||_.set.is(src)||_.hashMap.is(src))},_.container._functor_functor=function _functor_functor(methodName,typer,which){if(_.assert(!!methodName),typer||(typer="namespaceOf"),which||(which=0),0===which)return end(function _functor0(container){_.assert(1===arguments.length),_.assert(_.routine.is(this[typer]),()=>`No routine::${typer} in the namesapce::${this.NamespaceName}`);const namespace=this[typer](container);return _.assert(_.routine.is(namespace[methodName]),`No routine::${methodName} in the namesapce::${namespace.NamespaceName}`),namespace[methodName].bind(namespace,container)});if(1===which)return end(function _functor1(container){_.assert(1===arguments.length),_.assert(_.routine.is(this[typer]),()=>`No routine::${typer} in the namesapce::${this.NamespaceName}`);const namespace=this[typer](container);_.assert(_.routine.is(namespace[methodName]),`No routine::${methodName} in the namesapce::${namespace.NamespaceName}`);const routine0=namespace[methodName];return function routine1(arg1,...args){return routine0.call(this,arg1,container,...args)}.bind(namespace)});function end(result){return result.functor=new Function(`return _.long._functor_functor( '${methodName}', '${typer}', ${which} )`),result}_.assert(0)},_.object.is=function is(src){return"[object Object]"===Object.prototype.toString.call(src)||!_.primitive.is(src)&&!_.long.is(src)&&!_.set.is(src)&&!_.hashMap.is(src)&&!_.routine.isTrivial(src)},_.object.like=function like(src){return _.object.is(src)},_.objectLike=_.object.like.bind(_.object),_.set.is=function is(src){return!!src&&(src instanceof Set||src instanceof WeakSet)},_.set.like=function like(src){return _.set.is(src)},_.setIs=_.set.is.bind(_.set),_.setLike=_.set.like.bind(_.set),_.map.is=function is(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null===proto||proto===Object.prototype&&(!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src))},_.map.isPure=function isPure(src){return!!src&&null===Object.getPrototypeOf(src)},_.map.isPolluted=function isPolluted(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null!==proto&&proto===Object.prototype&&(!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src))},_.map.sureHasAll=function sureHasAll(srcMap,all,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapBut_(null,all,srcMap));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},_.map.sureHasOnly=function sureHasOnly(srcMap,screenMaps,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapButOld(srcMap,screenMaps));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have no fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},_.map.sureHasNoUndefine=function sureHasNoUndefine(srcMap,msg){_.assert(1===arguments.length||2===arguments.length||3===arguments.length,"Expects one, two or three arguments");let but=[];for(let s in srcMap)void 0===srcMap[s]&&but.push(s);if(but.length>0){let err;if(1===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have no undefines, but has :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=1;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},_.map.assertHasOnly=function assertHasOnly(srcMap,screenMaps,msg){return true},_.map.assertHasNoUndefine=function assertHasNoUndefine(srcMap,msg){return true},_.map.extend=function extend(dstMap,srcMap){if(null===dstMap&&(dstMap=Object.create(null)),2===arguments.length){let srcProto=Object.getPrototypeOf(srcMap);if(null===srcProto||srcProto===Object.prototype)return Object.assign(dstMap,srcMap)}_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++){let srcMap=arguments[a];_.assert(!_.primitive.is(srcMap),"Expects non-primitive");let srcProto=Object.getPrototypeOf(srcMap);null===srcProto||srcProto===Object.prototype?Object.assign(dstMap,srcMap):this._extendWithProps(dstMap,srcMap)}return dstMap},_.map.supplement=function supplement(dstMap,srcMap){if(null===dstMap&&2===arguments.length)return Object.assign(Object.create(null),srcMap);null===dstMap&&(dstMap=Object.create(null)),_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++)srcMap=arguments[a],this._supplementWithProps(dstMap,srcMap);return dstMap},_.mapIs=_.map.is.bind(_.map),_.mapIsPure=_.map.isPure.bind(_.map),_.mapIsPolluted=_.map.isPolluted.bind(_.map),_.mapExtend=_.map.extend.bind(_.map),_.mapSupplement=_.map.supplement.bind(_.map),_.hashMap.is=function is(src){return!!src&&(src instanceof HashMap||src instanceof HashMapWeak)},_.hashMap.like=function like(src){return _.hashMap.is(src)},_.hashMapIs=_.hashMap.is.bind(_.hashMap),_.hashMapLike=_.hashMap.like.bind(_.hashMap),_.countable.is=function is(src){return!!_.arrayIs(src)||!_.primitive.is(src)&&void 0!==_.class.methodIteratorOf(src)},_.countable.like=function like(src){return _.countable.is(src)},_.countableIs=_.countable.is.bind(_.countable),_.symbol.is=function is(src){return"[object Symbol]"===Object.prototype.toString.call(src)},_.routine._is=function _is(src,typeStr){return"[object Function]"===typeStr||"[object AsyncFunction]"===typeStr},_.routine.is=function is(src){let typeStr=Object.prototype.toString.call(src);return _.routine._is(src,typeStr)},_.routine._like=function _like(src,typeStr){return"[object Function]"===typeStr||"[object AsyncFunction]"===typeStr||"[object GeneratorFunction]"===typeStr||"[object AsyncGeneratorFunction]"===typeStr},_.routine.like=function like(src){let typeStr=Object.prototype.toString.call(src);return _.routine._like(src,typeStr)},_.routine.optionsWithoutUndefined=function optionsWithoutUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=0===options.length?Object.create(null):options[0]),null!==options&&void 0!==options||(options=Object.create(null)),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),function __mapSupplementWithoutUndefined(dstMap,srcMap){for(let k in srcMap)void 0===dstMap[k]&&(dstMap[k]=srcMap[k])}(options,defaults),options},_.routine.isTrivial=function routineIsTrivial_functor(){const syncPrototype=Object.getPrototypeOf(Function);const asyncPrototype=Object.getPrototypeOf(async function _async(){});return function routineIsTrivial(src){if(!src)return false;let prototype=Object.getPrototypeOf(src);return prototype===syncPrototype||prototype===asyncPrototype}}(),_.routine.extend=function extendCloning(dst,...srcs){return _.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.routine._amend({dst:dst,srcs:[...srcs],strategy:"cloning",amending:"extending"})},_.routine.__mapButKeys=void 0,_.routine.__mapUndefinedKeys=void 0,_.routine.__mapSupplementWithoutUndefined=void 0,_.routine.__mapSupplementWithUndefined=void 0,_.routine.__keysQuote=void 0,_.routine.__strType=void 0,_.routine.__primitiveLike=void 0,_._routineIs=_.routine._is.bind(_.routine),_.routineIs=_.routine.is.bind(_.routine),_._routineLike=_.routine._like.bind(_.routine),_.routineLike=_.routine.like.bind(_.routine),_.routineIsTrivial=_.routine.isTrivial.bind(_.routine),_.routineExtend=_.routine.extend.bind(_.routine),_.regexp.is=function is(src){return"[object RegExp]"===Object.prototype.toString.call(src)},_.regexp.like=function like(src){return src instanceof RegExp||"[object String]"===Object.prototype.toString.call(src)},_.props.is=function is(src){return null!==src&&void 0!==src},_.props.like=function like(src){return _.props.is(src)},_.props._ofAct=function _ofAct(o){let result=Object.create(null);_.routine.options(_ofAct,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(this===_.props),_.assert(this.like(o.srcMap));let keys=this._keys(o);for(let k=0;k<keys.length;k++)result[keys[k]]=o.srcMap[keys[k]];return result},_.props._ofAct.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},_.props.fields=function fields(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(fields,o||null)).srcMap=srcMap,o.selectFilter=function selectRoutine(srcMap,k){if(!_.routine.is(srcMap[k]))return k},_.props._ofAct(o)},_.props.fields.defaults={onlyOwn:0,onlyEnumerable:1},_.props._keys=function _keys(o){let result=[];_.routine.options(_keys,o);let srcMap=o.srcMap;let selectFilter=o.selectFilter;if(_.assert(1===arguments.length,"Expects single argument"),_.assert(this.like(srcMap)),_.assert(null===selectFilter||_.routine.is(selectFilter)),o.onlyEnumerable){let result1=[];if(o.onlyOwn)for(let k in srcMap)Object.hasOwnProperty.call(srcMap,k)&&result1.push(k);else for(let k in srcMap)result1.push(k);filter(srcMap,result1)}else if(o.onlyOwn)filter(srcMap,Object.getOwnPropertyNames(srcMap));else{let proto=srcMap;result=[];do{filter(proto,Object.getOwnPropertyNames(proto)),proto=Object.getPrototypeOf(proto)}while(proto)}return result;function filter(srcMap,keys){if(selectFilter)for(let k=0;k<keys.length;k++){let e=selectFilter(srcMap,keys[k]);void 0!==e&&(element=e,-1===(dst=result).indexOf(element)&&dst.push(element))}else!function arrayAppendArrayOnce(dst,src){src.forEach(element=>{-1===dst.indexOf(element)&&dst.push(element)})}(result,keys);var dst,element}},_.props._keys.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},_.props.keys=function keys(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(keys,o||null)).srcMap=srcMap,this._keys(o)},_.props.keys.defaults={onlyOwn:0,onlyEnumerable:1},_.props.own=function own(src,key){return!_.primitive.is(src)&&Object.hasOwnProperty.call(src,key)},_.props.onlyOwnKeys=function onlyOwnKeys(srcMap,o){let result;if(_.assert(1===arguments.length||2===arguments.length),o=_.routine.options(onlyOwnKeys,o||null),_.assert(this.like(srcMap)),o.srcMap=srcMap,o.onlyOwn=1,result=this._keys(o),!o.onlyEnumerable)debugger;return result},_.props.onlyOwnKeys.defaults={onlyEnumerable:1},_.props._extendWithProps=function _extendWithProps(dstMap,src){for(let k in src)dstMap[k]=src[k];return dstMap},_.props.extend=function extend(dstMap,srcMap){if(null===dstMap&&(dstMap=Object.create(null)),2===arguments.length){let srcProto=Object.getPrototypeOf(srcMap);if(null===srcProto||srcProto===Object.prototype)return Object.assign(dstMap,srcMap)}_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++){let srcMap=arguments[a];_.assert(!_.primitive.is(srcMap),"Expects non-primitive");let srcProto=Object.getPrototypeOf(srcMap);null===srcProto||srcProto===Object.prototype?Object.assign(dstMap,srcMap):this._extendWithProps(dstMap,srcMap)}return dstMap},_.props._supplementWithProps=function _supplementWithProps(dstMap,src){for(let k in src)k in dstMap||(dstMap[k]=src[k]);return dstMap},_.props.supplement=function supplement(dstMap,srcMap){if(null===dstMap&&2===arguments.length)return Object.assign(Object.create(null),srcMap);null===dstMap&&(dstMap=Object.create(null)),_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++)srcMap=arguments[a],this._supplementWithProps(dstMap,srcMap);return dstMap},_.strIs=function is(src){return"[object String]"===Object.prototype.toString.call(src)},_.strDefined=function defined(src){return!!src&&"[object String]"===Object.prototype.toString.call(src)},_._strBeginOf=function _beginOf(src,begin){if(_.strIs(begin)){if(0===src.lastIndexOf(begin,0))return begin}else if(_.regexpIs(begin)){let matched=begin.exec(src);if(matched&&0===matched.index)return matched[0]}else _.assert(0,"Expects string-like ( string or regexp )")},_._strEndOf=function _endOf(src,end){if(_.strIs(end)){if(-1!==src.indexOf(end,src.length-end.length))return end}else if(_.regexpIs(end)){let matched=RegExp(end.toString().slice(1,-1)+"$").exec(src);if(matched&&matched.index+matched[0].length===src.length)return matched[0]}else _.assert(0,"Expects string-like ( string or regexp )")},_._strRemovedBegin=function _removedBegin(src,begin){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}");let result=src;let beginOf=_._strBeginOf(result,begin);return void 0!==beginOf&&(result=result.substr(beginOf.length,result.length)),result},_._strRemovedEnd=function _removedEnd(src,end){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}");let result=src;let endOf=_._strEndOf(result,end);return void 0!==endOf&&(result=result.substr(0,result.length-endOf.length)),result},_.strBegins=function begins(src,begin){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(begin)||_.regexpIs(begin)||_.longIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(begin))return!(void 0===_._strBeginOf(src,begin));for(let b=0,blen=begin.length;b<blen;b++)if(void 0!==_._strBeginOf(src,begin[b]))return true;return false},_.strEnds=function ends(src,end){if(_.assert(_.strIs(src),()=>`Expects argument::src of type::string, but got ${_.entity.strType(src)}`),_.assert(_.strIs(end)||_.regexpIs(end)||_.longIs(end),"Expects string/regexp or array of strings/regexps {-end-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(end))return!(void 0===_._strEndOf(src,end));for(let b=0,blen=end.length;b<blen;b++)if(void 0!==_._strEndOf(src,end[b]))return true;return false},_.strRemoveBegin=function removeBegin(src,begin){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(src)||_.strIs(src),"Expects string or array of strings {-src-}"),_.assert(_.longIs(begin)||_.strIs(begin)||_.regexpIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}");let result=[];let srcIsArray=_.longIs(src);if(_.strIs(src)&&!_.longIs(begin))return _._strRemovedBegin(src,begin);src=_.array.as(src),begin=_.array.as(begin);for(let s=0,slen=src.length;s<slen;s++){let beginOf=void 0;let src1=src[s];for(let b=0,blen=begin.length;b<blen&&void 0===(beginOf=_._strBeginOf(src1,begin[b]));b++);void 0!==beginOf&&(src1=src1.substr(beginOf.length,src1.length)),result[s]=src1}return srcIsArray?result:result[0]},_.strRemoveEnd=function removeEnd(src,end){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(src)||_.strIs(src),"Expects string or array of strings {-src-}"),_.assert(_.longIs(end)||_.strIs(end)||_.regexpIs(end),"Expects string/regexp or array of strings/regexps {-end-}");let result=[];let srcIsArray=_.longIs(src);if(_.strIs(src)&&!_.longIs(end))return _._strRemovedEnd(src,end);src=_.array.as(src),end=_.array.as(end);for(let s=0,slen=src.length;s<slen;s++){let endOf=void 0;let src1=src[s];for(let b=0,blen=end.length;b<blen&&void 0===(endOf=_._strEndOf(src1,end[b]));b++);void 0!==endOf&&(src1=src1.substr(0,src1.length-endOf.length)),result[s]=src1}return srcIsArray?result:result[0]},_.regexpIs=function is(src){return"[object RegExp]"===Object.prototype.toString.call(src)},_.symbolIs=function is(src){return"[object Symbol]"===Object.prototype.toString.call(src)},_.strBegins=function begins(src,begin){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(begin)||_.regexpIs(begin)||_.longIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(begin))return!(void 0===_._strBeginOf(src,begin));for(let b=0,blen=begin.length;b<blen;b++)if(void 0!==_._strBeginOf(src,begin[b]))return true;return false},_.object.isBasic=function isBasic(src){return"[object Object]"===Object.prototype.toString.call(src)},_.boolLike=function like(src){return true===src||false===src||0===src||1===src},_.bool.like=function like(src){return true===src||false===src||0===src||1===src},_.boolLikeTrue=function likeTrue(src){return!!_.bool.like(src)&&!!src},_.bool.likeTrue=function likeTrue(src){return!!_.bool.like(src)&&!!src},_.numberIsFinite=function numberIsFinite(src){return!!_.number.is(src)&&isFinite(src)},_.numberIs=function is(src){return"number"==typeof src},_.intIs=function intIs(src){return!(!_.number.is(src)||!_.number.isFinite(src))&&Math.floor(src)===src},_.sure=function sure(condition,...args){if(!condition||!__boolLike(condition)){if(_sureDebugger(condition),!_._err)throw Error(...args);throw 1===arguments.length?_._err({args:["Assertion fails"],level:2}):2===arguments.length?_._err({args:[arguments[1]],level:2}):_._err({args:Array.prototype.slice.call(arguments,1),level:2})}},_.mapBut_=function mapBut_(dstMap,srcMap,butMap){_.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),null===dstMap&&(dstMap=arguments[0]=arguments[0]||Object.create(null)),_.assert(3===arguments.length,"Not clear how to construct {-dstMap-}. Please, specify exactly 3 arguments");let o={dstMap:dstMap,srcMap:srcMap,butMap:butMap};let mapsAreIdentical=(o=_._mapBut_VerifyMapFields(o)).dstMap===o.srcMap?1:0;let butMapsIsCountable=_.countable.is(o.butMap)?2:0;let filterRoutine=[function filterNotIdenticalWithAuxScreenMap(key){key in o.butMap||(o.dstMap[key]=o.srcMap[key])},function filterIdenticalWithAuxScreenMap(key){key in o.butMap&&delete o.dstMap[key]},function filterNotIdenticalWithVectorScreenMap(key){void 0===searchingRoutine(o.butMap,key)&&(o.dstMap[key]=o.srcMap[key])},function filterIdenticalWithVectorScreenMap(key){void 0!==searchingRoutine(o.butMap,key)&&delete o.dstMap[key]}][mapsAreIdentical+butMapsIsCountable];let searchingRoutine;butMapsIsCountable&&(searchingRoutine=_screenMapSearchingRoutineFunctor(o.butMap));for(let key in o.srcMap)filterRoutine(key);return o.dstMap},_.mapButOld=function mapButOld(srcMap,butMap){let result=Object.create(null);if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(srcMap),"Expects map {-srcMap-}"),_.countable.is(butMap)){let filterRoutines=[function filterWithVectorButMap(s){for(let but of butMap)if(_.primitive.is(but)){if(s===but)return s}else if(_.aux.is(but)){if(s in but)return s}else _.assert(0,"Unexpected type of element")},function filterWithArrayLikeButMap(s){for(let m=0;m<butMap.length;m++)if(_.primitive.is(butMap[m])){if(s===butMap[m])return s}else if(_.aux.is(butMap[m])){if(s in butMap[m])return s}else _.assert(0,"Unexpected type of element")}];let arrayLikeIs=_.argumentsArray.like(butMap)?1:0;for(let s in srcMap)void 0===filterRoutines[arrayLikeIs](s)&&(result[s]=srcMap[s])}else if(_.primitive.is(butMap))_.assert(0,"Expects object-like or long-like {-butMap-}");else for(let s in srcMap)s in butMap||(result[s]=srcMap[s]);return result},_.mapOwn=function mapOwnKey(srcMap,key){return!_.primitive.is(srcMap)&&Object.hasOwnProperty.call(srcMap,key)},_.mapOnly_=function mapOnly_(dstMap,srcMaps,screenMaps){if(1===arguments.length)return _.mapsExtend(null,dstMap);_.assert(3===arguments.length,"Not clear how to construct {-dstMap-}. Please, specify exactly 3 arguments");let o=_._mapOnly_VerifyMapFields({srcMaps:srcMaps,screenMaps:screenMaps,dstMap:dstMap||Object.create(null)});let mapsAreIdentical=o.dstMap===o.srcMaps?1:0;let screenMapsIsCountable=_.countable.is(o.screenMaps)?2:0;let filterRoutine=[function filterNotIdenticalWithAuxScreenMap(srcMap){for(let key in o.screenMaps)void 0!==o.screenMaps[key]&&key in srcMap&&(o.dstMap[key]=srcMap[key])},function filterIdenticalWithAuxScreenMap(srcMap){for(let key in srcMap)key in o.screenMaps||delete srcMap[key]},function filterNotIdenticalWithVectorScreenMap(srcMap){for(let key in srcMap){let screenKey=searchingRoutine(o.screenMaps,key);void 0!==screenKey&&(o.dstMap[screenKey]=srcMap[screenKey])}},function filterIdenticalWithVectorScreenMap(srcMap){for(let key in srcMap){void 0===searchingRoutine(o.screenMaps,key)&&delete srcMap[key]}}][mapsAreIdentical+screenMapsIsCountable];let searchingRoutine;if(screenMapsIsCountable&&(searchingRoutine=_screenMapSearchingRoutineFunctor(o.screenMaps)),_.countable.is(o.srcMaps))for(let srcMap of o.srcMaps)_.assert(!_.primitive.is(srcMap),"Expects no primitive in {-o.srcMaps-}"),filterRoutine(srcMap);else filterRoutine(o.srcMaps);return o.dstMap},_._mapBut_VerifyMapFields=function _mapBut_VerifyMapFields(o){return _.assert(1===arguments.length,"Expects single options map {-o-}"),_.assert(!_.primitive.is(o.dstMap),"Expects non primitive {-o.dstMap-}"),_.assert(!_.primitive.is(o.srcMap),"Expects non primitive {-o.srcMap-}"),_.assert(!_.primitive.is(o.butMap),"Expects object like {-o.butMap-}"),_.assert(!_.vector.is(o.dstMap),"Expects aux like {-o.dstMap-}"),o},_._mapOnly_VerifyMapFields=function _mapOnly_VerifyMapFields(o){return _.assert(1===arguments.length,"Expects single options map {-o-}"),_.assert(!_.primitive.is(o.dstMap),"Expects non primitive {-o.dstMap-}"),_.assert(!_.primitive.is(o.screenMaps),"Expects non primitive {-o.screenMaps-}"),_.assert(!_.primitive.is(o.srcMaps),"Expects non primitive {-o.srcMaps-}"),_.map.assertHasOnly(o,_mapOnly_VerifyMapFields.defaults),_.assert(!_.vector.is(o.dstMap),"Expects not a vector {-o.dstMap-}"),o},_._mapOnly_VerifyMapFields.defaults={dstMap:null,srcMaps:null,screenMaps:null,filter:null},_.arrayAs=void 0,_.arrayAppend=function arrayAppend(dstArray,ins){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayAppended.apply(this,arguments),dstArray},_.arrayAppendArray=function arrayAppendArray(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayAppendedArray.apply(this,arguments),dstArray},_.arrayAppendArrays=function arrayAppendArrays(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),void 0===dstArray?(_.assert(2===arguments.length),insArray):(_.arrayAppendedArrays.apply(this,arguments),dstArray)},_.arrayAppendedArray=function arrayAppendedArray(dstArray,insArray){_.assert(2===arguments.length),_.assert(_.array.is(dstArray),"arrayPrependedArray :","Expects array"),_.assert(_.longLike(insArray),"arrayPrependedArray :","Expects longLike");let result=insArray.length;return dstArray.push.apply(dstArray,insArray),result},_.arrayAppendedArrays=function arrayAppendedArrays(dstArray,insArray){_.assert(2===arguments.length,"Expects exactly two arguments"),_.longLike(insArray)||void 0===insArray||(insArray=[insArray]),_.assert(_.array.is(dstArray),"Expects array"),_.assert(_.longLike(insArray),"Expects longLike entity");let result=0;for(let a=0,len=insArray.length;a<len;a++)_.longLike(insArray[a])?(dstArray.push.apply(dstArray,insArray[a]),result+=insArray[a].length):(dstArray.push(insArray[a]),result+=1);return result},_.arrayAppended=function arrayAppended(dstArray,ins){return _.assert(2===arguments.length),_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),dstArray.push(ins),dstArray.length-1},_.arrayAppendOnceStrictly=function arrayAppendOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=_.arrayAppended.apply(this,[dstArray,ins]),dstArray},_.arrayAppendArrayOnce=function arrayAppendArrayOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayAppendedArrayOnce.apply(this,arguments),dstArray},_.arrayAppendedArrayOnce=function arrayAppendedArrayOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];_.assert(_.longLike(insArray)),_.assert(2<=arguments.length&&arguments.length<=4);let result=0;if(dstArray===insArray&&2===arguments.length)return result;for(let i=0,len=insArray.length;i<len;i++)-1===_.longLeftIndex(dstArray,insArray[i],evaluator1,evaluator2)&&(dstArray.push(insArray[i]),result+=1);return result},_.arrayAppendedArraysOnce=function arrayAppendedArraysOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];if(_.assert(2<=arguments.length&&arguments.length<=4),void 0===dstArray)return insArray;_.array.is(insArray)||void 0===insArray||(insArray=[insArray]),_.assert(_.array.is(dstArray),"Expects array"),_.assert(_.longLike(insArray),"Expects longLike entity");let result=0;if(dstArray===insArray&&2===arguments.length)return result;for(let a=0,len=insArray.length;a<len;a++)if(_.longLike(insArray[a])){let array=insArray[a];for(let i=0,alen=array.length;i<alen;i++)_appendOnce(array[i])}else _appendOnce(insArray[a]);return result;function _appendOnce(argument){-1===_.longLeftIndex(dstArray,argument,evaluator1,evaluator2)&&(dstArray.push(argument),result+=1)}},_.arrayAppendArraysOnce=function arrayAppendArraysOnce(){let dstArray=arguments[0];let insArray=arguments[1];if(arguments[2],arguments[3],null===dstArray)dstArray=[],arguments[0]=dstArray;else if(void 0===dstArray){if(!_.array.is(insArray))return _.assert(2<=arguments.length&&arguments.length<=4),insArray;dstArray=[],arguments[0]=dstArray}return _.arrayAppendedArraysOnce.apply(this,arguments),dstArray},_.arrayAppendedOnce=function arrayAppendedOnce(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],-1===_.longLeftIndex.apply(_,arguments)?(dstArray.push(ins),dstArray.length-1):-1},_.arrayRemoveOnceStrictly=function arrayRemoveOnceStrictly(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],_.arrayRemoveElementOnceStrictly.apply(this,arguments),dstArray},_.arrayRemoveElementOnceStrictly=function arrayRemoveElementOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],_.arrayRemovedElement.apply(this,[dstArray,ins]),dstArray},_.arrayRemovedElement=function arrayRemovedElement(){let dstArray=arguments[0];arguments[1],arguments[2],arguments[3];let index=_.longLeftIndex.apply(this,arguments);let removedElements=0;for(let i=0;i<dstArray.length;i++)-1!==index&&(dstArray.splice(index,1),removedElements+=1,i-=1),index=_.longLeftIndex.apply(this,arguments);return removedElements},_.arrayRemovedElementOnce=function arrayRemovedElementOnce(){let dstArray=arguments[0];arguments[1],arguments[2],arguments[3];let index=_.longLeftIndex.apply(_,arguments);return index>=0&&dstArray.splice(index,1),index},_.longLeft=function left(){let arr=arguments[0];let ins=arguments[1];let fromIndex=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];let result=Object.create(null);let i=_.longLeftIndex(arr,ins,fromIndex,evaluator1,evaluator2);return _.assert(2<=arguments.length&&arguments.length<=5),result.index=i,i>=0&&(result.element=arr[i]),result},_.longLeftIndex=function leftIndex(){let arr=arguments[0];let ins=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let fromIndex=0;if(_.number.is(arguments[2])&&(fromIndex=arguments[2],evaluator1=arguments[3],evaluator2=arguments[4]),_.assert(2<=arguments.length&&arguments.length<=5,"Expects 2-5 arguments: source array, element, and optional evaluator / equalizer"),_.assert(_.longLike(arr),"Expect a Long"),_.assert(_.number.is(fromIndex)),_.assert(!evaluator1||1===evaluator1.length||2===evaluator1.length||3===evaluator1.length),_.assert(!evaluator1||_.routine.is(evaluator1)),_.assert(!evaluator2||1===evaluator2.length),_.assert(!evaluator2||_.routine.is(evaluator2)),!evaluator1)return _.assert(!evaluator2),Array.prototype.indexOf.call(arr,ins,fromIndex);if(1===evaluator1.length){if(ins=evaluator2?evaluator2(ins):evaluator1(ins),arr.findIndex&&0===fromIndex)return arr.findIndex(val=>evaluator1(val)===ins);for(let a=fromIndex;a<arr.length;a++)if(evaluator1(arr[a])===ins)return a}else{_.assert(!evaluator2);for(let a=fromIndex;a<arr.length;a++)if(evaluator1(arr[a],ins))return a}return-1},_.longLeftDefined=function leftDefined(arr){return _.assert(1===arguments.length,"Expects single argument"),_.longLeft(arr,true,function(val){return void 0!==val})},_.longHas=function longHas(){let array=arguments[0];let element=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];return _.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.argumentsArray.like(array)),evaluator1||evaluator2?_.longLeftIndex(array,element,evaluator1,evaluator2)>=0:_ArrayIncludes.call(array,element)},_.longGrow_=function longGrow_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]),void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(_.longIs(dst)||null===dst,"Expects {-dst-} of any long type or null"),_.assert(_.longIs(src),"Expects {-src-} of any long type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;first>0&&(first=0),last<src.length-1&&(last=src.length-1),first<0&&(last-=first,first-=first),last+1<first&&(last=first-1);let first2=Math.max(-cinterval[0],0);let last2=Math.min(src.length-1+first2,last+first2);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.long.makeUndefined(src,resultLength);else if(dst===src){if(dst.length===resultLength)return dst;if(_.arrayLikeResizable(dst))return _.assert(Object.isExtensible(dst),"Array is not extensible, cannot change array"),dst.splice(0,0,..._.dup(ins,first2)),dst.splice(last2+1,0,..._.dup(ins,resultLength<=last2?0:resultLength-last2-1)),dst;(dst.length!==resultLength||_.argumentsArray.is(dst))&&(result=_.long.makeUndefined(dst,resultLength))}else dst.length!==resultLength&&(_.arrayLikeResizable(result)?result.splice(resultLength):result=_.bufferMakeUndefined(dst,resultLength));for(let r=first2;r<last2+1;r++)result[r]=src[r-first2];if(void 0!==ins){for(let r=0;r<first2;r++)result[r]=ins;for(let r=last2+1;r<resultLength;r++)result[r]=ins}return result},_.vectorAdapterIs=function adapterIs(src){return"[object VectorAdapter]"===Object.prototype.toString.call(src)},_.dup=function dup(ins,times,result){if(_.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),_.assert(_.number.is(times)||_.longIs(times),"dup expects times as number or array"),_.number.is(times)){result||(result=new Array(times));for(let t=0;t<times;t++)result[t]=ins;return result}if(_.longIs(times)){_.assert(2===times.length);let l=times[1]-times[0];result||(result=new Array(times[1]));for(let t=0;t<l;t++)result[times[0]+t]=ins;return result}_.assert(0,"unexpected")},_.routine.unite=function(){const _uniteReplacing_body=function unite_body(o){if(_.longIs(o.head)){let _head=_.routine.s.compose(o.head,function(){arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(4===arguments.length),_.assert(!_.unrollIs(result)),_.assert(_.object.isBasic(result)),_.unroll.from([unitedRoutine,[result]])});_.assert(_.routine.is(_head)),o.head=function head(){let result=_head.apply(this,arguments);return result[result.length-1]},o.head.composed=_head.composed}else _.number.is(o.head)&&(o.head=function headWithNargs_functor(nargs,body){return _.assert(!!o.body.defaults),function headWithDefaults(routine,args){_.assert(args.length<=nargs+1),_.assert(2===arguments.length);let o=_.routine.options(routine,args[nargs]||Object.create(null));return _.unroll.from([...Array.prototype.slice.call(args,0,nargs),o])}}(o.head,o.body));let body;null===o.head&&(o.body.defaults?o.head=function headWithDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),_.routine.options(routine,o||Object.create(null))}:o.head=function headWithoutDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),o||null}),o.name||(_.assert(_.strDefined(o.body.name),"Body routine should have name"),o.name=o.body.name,o.name.indexOf("_body")===o.name.length-5&&o.name.length>5&&(o.name=o.name.substring(0,o.name.length-5))),body="replacing"===o.strategy?o.body:_.routine._amend({dst:null,srcs:o.body,strategy:o.strategy,amending:"extending"});let unitedRoutine=function _unite_functor(){const name=arguments[0];const head=arguments[1];const body=arguments[2];const tail=arguments[3];let r;return _.assert(null===head||_.routineIs(head)),_.assert(null===body||_.routineIs(body)),_.assert(null===tail||_.routineIs(tail)),(r=null===tail?{[name]:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)}}:null===head?{[name]:function(){let result;let o=arguments[0];return _.assert(1===arguments.length,"Expects single argument {-o-}."),_.unrollIs(o)?result=body.apply(this,o):_.mapIs(o)?result=body.call(this,o):_.assert(0,"Unexpected type of {-o-}, expects options map or unroll."),tail.call(this,result,o)}}:{[name]:function(){let result;let o=head.call(this,unitedRoutine,arguments);_.assert(!_.argumentsArray.is(o),"does not expect arguments array"),result=_.unrollIs(o)?body.apply(this,o):body.call(this,o);debugger;return tail.call(this,result,o)}})[name]}(o.name,o.head,body,o.tail);return _.assert(_.strDefined(unitedRoutine.name),"Looks like your interpreter does not support dynamic naming of functions. Please use ES2015 or later interpreter."),_.routine._amend({dst:unitedRoutine,srcs:body,strategy:"replacing",amending:"extending"}),unitedRoutine.head=o.head,unitedRoutine.body=body,o.tail&&(unitedRoutine.tail=o.tail),_.assert(unitedRoutine.defaults===body.defaults,"Something wrong, united routined should have same instance of defaults its body has"),unitedRoutine};_uniteReplacing_body.defaults={head:null,body:null,tail:null,name:null,strategy:null};const _uniteReplacing_=function uniteReplacing(){let o=uniteReplacing.head.call(this,uniteReplacing,arguments);return uniteReplacing.body.call(this,o)};return _uniteReplacing_.head=function unite_head(routine,args){let o=args[0];return void 0!==args[1]&&(o=3===args.length?{head:args[0],body:args[1],tail:args[2]}:{head:args[0],body:args.length>1?args[1]:null}),_.routine.optionsWithoutUndefined(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length),_.assert(null===o.head||_.numberIs(o.head)||_.routine.is(o.head)||_.routine.s.are(o.head),"Expects either routine, routines or number of arguments {-o.head-}"),_.assert(_.routine.is(o.body),"Expects routine {-o.body-}"),_.assert(null===o.tail||_.routine.is(o.tail),()=>`Expects routine {-o.tail-}, but got ${_.entity.strType(o.tail)}`),_.assert(void 0!==o.body.defaults,"Body should have defaults"),o},_uniteReplacing_.body=function unite_body(o){if(_.longIs(o.head)){let _head=_.routine.s.compose(o.head,function(){arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(4===arguments.length),_.assert(!_.unrollIs(result)),_.assert(_.object.isBasic(result)),_.unroll.from([unitedRoutine,[result]])});_.assert(_.routine.is(_head)),o.head=function head(){let result=_head.apply(this,arguments);return result[result.length-1]},o.head.composed=_head.composed}else _.number.is(o.head)&&(o.head=function headWithNargs_functor(nargs,body){return _.assert(!!o.body.defaults),function headWithDefaults(routine,args){_.assert(args.length<=nargs+1),_.assert(2===arguments.length);let o=_.routine.options(routine,args[nargs]||Object.create(null));return _.unroll.from([...Array.prototype.slice.call(args,0,nargs),o])}}(o.head,o.body));let body;null===o.head&&(o.body.defaults?o.head=function headWithDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),_.routine.options(routine,o||Object.create(null))}:o.head=function headWithoutDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),o||null}),o.name||(_.assert(_.strDefined(o.body.name),"Body routine should have name"),o.name=o.body.name,o.name.indexOf("_body")===o.name.length-5&&o.name.length>5&&(o.name=o.name.substring(0,o.name.length-5))),body="replacing"===o.strategy?o.body:_.routine._amend({dst:null,srcs:o.body,strategy:o.strategy,amending:"extending"});let unitedRoutine=function _unite_functor(){const name=arguments[0];const head=arguments[1];const body=arguments[2];const tail=arguments[3];let r;return _.assert(null===head||_.routineIs(head)),_.assert(null===body||_.routineIs(body)),_.assert(null===tail||_.routineIs(tail)),(r=null===tail?{[name]:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)}}:null===head?{[name]:function(){let result;let o=arguments[0];return _.assert(1===arguments.length,"Expects single argument {-o-}."),_.unrollIs(o)?result=body.apply(this,o):_.mapIs(o)?result=body.call(this,o):_.assert(0,"Unexpected type of {-o-}, expects options map or unroll."),tail.call(this,result,o)}}:{[name]:function(){let result;let o=head.call(this,unitedRoutine,arguments);_.assert(!_.argumentsArray.is(o),"does not expect arguments array"),result=_.unrollIs(o)?body.apply(this,o):body.call(this,o);debugger;return tail.call(this,result,o)}})[name]}(o.name,o.head,body,o.tail);return _.assert(_.strDefined(unitedRoutine.name),"Looks like your interpreter does not support dynamic naming of functions. Please use ES2015 or later interpreter."),_.routine._amend({dst:unitedRoutine,srcs:body,strategy:"replacing",amending:"extending"}),unitedRoutine.head=o.head,unitedRoutine.body=body,o.tail&&(unitedRoutine.tail=o.tail),_.assert(unitedRoutine.defaults===body.defaults,"Something wrong, united routined should have same instance of defaults its body has"),unitedRoutine},_uniteReplacing_.defaults={head:null,body:null,tail:null,name:null,strategy:"replacing"},_uniteReplacing_.head=function unite_head(routine,args){let o=args[0];return void 0!==args[1]&&(o=3===args.length?{head:args[0],body:args[1],tail:args[2]}:{head:args[0],body:args.length>1?args[1]:null}),_.routine.optionsWithoutUndefined(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length),_.assert(null===o.head||_.numberIs(o.head)||_.routine.is(o.head)||_.routine.s.are(o.head),"Expects either routine, routines or number of arguments {-o.head-}"),_.assert(_.routine.is(o.body),"Expects routine {-o.body-}"),_.assert(null===o.tail||_.routine.is(o.tail),()=>`Expects routine {-o.tail-}, but got ${_.entity.strType(o.tail)}`),_.assert(void 0!==o.body.defaults,"Body should have defaults"),o},_uniteReplacing_.body=_uniteReplacing_body,_uniteReplacing_}(),_.routine.unite.defaults={head:null,body:null,tail:null,name:null,strategy:"replacing"},_.routine.uniteCloning_replaceByUnite=function(){const _uniteCloning_body=function unite_body(o){if(_.longIs(o.head)){let _head=_.routine.s.compose(o.head,function(){arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(4===arguments.length),_.assert(!_.unrollIs(result)),_.assert(_.object.isBasic(result)),_.unroll.from([unitedRoutine,[result]])});_.assert(_.routine.is(_head)),o.head=function head(){let result=_head.apply(this,arguments);return result[result.length-1]},o.head.composed=_head.composed}else _.number.is(o.head)&&(o.head=function headWithNargs_functor(nargs,body){return _.assert(!!o.body.defaults),function headWithDefaults(routine,args){_.assert(args.length<=nargs+1),_.assert(2===arguments.length);let o=_.routine.options(routine,args[nargs]||Object.create(null));return _.unroll.from([...Array.prototype.slice.call(args,0,nargs),o])}}(o.head,o.body));let body;null===o.head&&(o.body.defaults?o.head=function headWithDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),_.routine.options(routine,o||Object.create(null))}:o.head=function headWithoutDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),o||null}),o.name||(_.assert(_.strDefined(o.body.name),"Body routine should have name"),o.name=o.body.name,o.name.indexOf("_body")===o.name.length-5&&o.name.length>5&&(o.name=o.name.substring(0,o.name.length-5))),body="replacing"===o.strategy?o.body:_.routine._amend({dst:null,srcs:o.body,strategy:o.strategy,amending:"extending"});let unitedRoutine=function _unite_functor(){const name=arguments[0];const head=arguments[1];const body=arguments[2];const tail=arguments[3];let r;return _.assert(null===head||_.routineIs(head)),_.assert(null===body||_.routineIs(body)),_.assert(null===tail||_.routineIs(tail)),(r=null===tail?{[name]:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)}}:null===head?{[name]:function(){let result;let o=arguments[0];return _.assert(1===arguments.length,"Expects single argument {-o-}."),_.unrollIs(o)?result=body.apply(this,o):_.mapIs(o)?result=body.call(this,o):_.assert(0,"Unexpected type of {-o-}, expects options map or unroll."),tail.call(this,result,o)}}:{[name]:function(){let result;let o=head.call(this,unitedRoutine,arguments);_.assert(!_.argumentsArray.is(o),"does not expect arguments array"),result=_.unrollIs(o)?body.apply(this,o):body.call(this,o);debugger;return tail.call(this,result,o)}})[name]}(o.name,o.head,body,o.tail);return _.assert(_.strDefined(unitedRoutine.name),"Looks like your interpreter does not support dynamic naming of functions. Please use ES2015 or later interpreter."),_.routine._amend({dst:unitedRoutine,srcs:body,strategy:"replacing",amending:"extending"}),unitedRoutine.head=o.head,unitedRoutine.body=body,o.tail&&(unitedRoutine.tail=o.tail),_.assert(unitedRoutine.defaults===body.defaults,"Something wrong, united routined should have same instance of defaults its body has"),unitedRoutine};_uniteCloning_body.defaults={head:null,body:null,tail:null,name:null,strategy:null};const _uniteCloning_=function uniteCloning(){let o=uniteCloning.head.call(this,uniteCloning,arguments);return uniteCloning.body.call(this,o)};return _uniteCloning_.head=function unite_head(routine,args){let o=args[0];return void 0!==args[1]&&(o=3===args.length?{head:args[0],body:args[1],tail:args[2]}:{head:args[0],body:args.length>1?args[1]:null}),_.routine.optionsWithoutUndefined(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length),_.assert(null===o.head||_.numberIs(o.head)||_.routine.is(o.head)||_.routine.s.are(o.head),"Expects either routine, routines or number of arguments {-o.head-}"),_.assert(_.routine.is(o.body),"Expects routine {-o.body-}"),_.assert(null===o.tail||_.routine.is(o.tail),()=>`Expects routine {-o.tail-}, but got ${_.entity.strType(o.tail)}`),_.assert(void 0!==o.body.defaults,"Body should have defaults"),o},_uniteCloning_.body=function unite_body(o){if(_.longIs(o.head)){let _head=_.routine.s.compose(o.head,function(){arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(4===arguments.length),_.assert(!_.unrollIs(result)),_.assert(_.object.isBasic(result)),_.unroll.from([unitedRoutine,[result]])});_.assert(_.routine.is(_head)),o.head=function head(){let result=_head.apply(this,arguments);return result[result.length-1]},o.head.composed=_head.composed}else _.number.is(o.head)&&(o.head=function headWithNargs_functor(nargs,body){return _.assert(!!o.body.defaults),function headWithDefaults(routine,args){_.assert(args.length<=nargs+1),_.assert(2===arguments.length);let o=_.routine.options(routine,args[nargs]||Object.create(null));return _.unroll.from([...Array.prototype.slice.call(args,0,nargs),o])}}(o.head,o.body));let body;null===o.head&&(o.body.defaults?o.head=function headWithDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),_.routine.options(routine,o||Object.create(null))}:o.head=function headWithoutDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),o||null}),o.name||(_.assert(_.strDefined(o.body.name),"Body routine should have name"),o.name=o.body.name,o.name.indexOf("_body")===o.name.length-5&&o.name.length>5&&(o.name=o.name.substring(0,o.name.length-5))),body="replacing"===o.strategy?o.body:_.routine._amend({dst:null,srcs:o.body,strategy:o.strategy,amending:"extending"});let unitedRoutine=function _unite_functor(){const name=arguments[0];const head=arguments[1];const body=arguments[2];const tail=arguments[3];let r;return _.assert(null===head||_.routineIs(head)),_.assert(null===body||_.routineIs(body)),_.assert(null===tail||_.routineIs(tail)),(r=null===tail?{[name]:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)}}:null===head?{[name]:function(){let result;let o=arguments[0];return _.assert(1===arguments.length,"Expects single argument {-o-}."),_.unrollIs(o)?result=body.apply(this,o):_.mapIs(o)?result=body.call(this,o):_.assert(0,"Unexpected type of {-o-}, expects options map or unroll."),tail.call(this,result,o)}}:{[name]:function(){let result;let o=head.call(this,unitedRoutine,arguments);_.assert(!_.argumentsArray.is(o),"does not expect arguments array"),result=_.unrollIs(o)?body.apply(this,o):body.call(this,o);debugger;return tail.call(this,result,o)}})[name]}(o.name,o.head,body,o.tail);return _.assert(_.strDefined(unitedRoutine.name),"Looks like your interpreter does not support dynamic naming of functions. Please use ES2015 or later interpreter."),_.routine._amend({dst:unitedRoutine,srcs:body,strategy:"replacing",amending:"extending"}),unitedRoutine.head=o.head,unitedRoutine.body=body,o.tail&&(unitedRoutine.tail=o.tail),_.assert(unitedRoutine.defaults===body.defaults,"Something wrong, united routined should have same instance of defaults its body has"),unitedRoutine},_uniteCloning_.defaults={head:null,body:null,tail:null,name:null,strategy:"cloning"},_uniteCloning_.head=function unite_head(routine,args){let o=args[0];return void 0!==args[1]&&(o=3===args.length?{head:args[0],body:args[1],tail:args[2]}:{head:args[0],body:args.length>1?args[1]:null}),_.routine.optionsWithoutUndefined(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length),_.assert(null===o.head||_.numberIs(o.head)||_.routine.is(o.head)||_.routine.s.are(o.head),"Expects either routine, routines or number of arguments {-o.head-}"),_.assert(_.routine.is(o.body),"Expects routine {-o.body-}"),_.assert(null===o.tail||_.routine.is(o.tail),()=>`Expects routine {-o.tail-}, but got ${_.entity.strType(o.tail)}`),_.assert(void 0!==o.body.defaults,"Body should have defaults"),o},_uniteCloning_.body=_uniteCloning_body,_uniteCloning_}(),_.routine.uniteCloning_replaceByUnite.defaults={head:null,body:null,tail:null,name:null,strategy:"cloning"},_.routine._amend=function _amend(o){let dst=o.dst;let srcs=o.srcs;let srcIsVector=_.vectorIs(srcs);let extended=false;let _dstAmend;if(_.routine.assertOptions(_amend,o),_.assert(1===arguments.length),_.assert(_.routine.is(dst)||null===dst),_.assert(null===srcs||void 0===srcs||_.aux.is(srcs)||_.routine.is(srcs)||_.vector.is(srcs)),_.assert("extending"===o.amending,"not implemented"),_.assert("cloning"===o.strategy||"replacing"===o.strategy||"inheriting"===o.strategy,()=>`Unknown strategy ${o.strategy}`),null===dst&&(dst=function _dstMake(srcs){let dstMap=Object.create(null);if(srcIsVector)for(let src of srcs)null!==src&&_.props.extend(dstMap,src);else null!==srcs&&_.props.extend(dstMap,srcs);return dst=dstMap.body?_.routine.unite({head:dstMap.head||null,body:dstMap.body||null,tail:dstMap.tail||null,name:dstMap.name||null,strategy:o.strategy}):function dstFrom(routine){return function routineClone(routine){_.assert(_.routine.is(routine));let name=routine.name;const routine2={[name]:function(){return routine.apply(this,arguments)}}[name];let o2={value:routine,enumerable:false};return Object.defineProperty(routine2,"originalRoutine",o2),routine2}(routine)}(srcIsVector?srcs[0]:srcs),_.assert(_.routineIs(dst)),dst}(srcs)),"cloning"===o.strategy?_dstAmend=function _dstAmendCloning(dst,src){_.assert(!!dst),_.assert(_.aux.is(src)||_.routine.is(src));for(let s in src){let property=src[s];if(dst[s]===property)continue;let d=Object.getOwnPropertyDescriptor(dst,s);d&&!d.writable||(extended=true,_.object.isBasic(property)?(_.assert(!_.props.own(dst,s)||_.object.isBasic(dst[s])),dst[s]?_.props.extend(dst[s],property):dst[s]=property=_.props.extend(null,property)):dst[s]=property)}}:"replacing"===o.strategy?_dstAmend=function _dstAmendReplacing(dst,src){_.assert(!!dst),_.assert(_.aux.is(src)||_.routine.is(src));for(let s in src){let property=src[s];if(dst[s]===property)continue;let d=Object.getOwnPropertyDescriptor(dst,s);d&&!d.writable||(extended=true,dst[s]=property)}}:"inheriting"===o.strategy?_dstAmend=function _dstAmendInheriting(dst,src){_.assert(!!dst),_.assert(_.aux.is(src)||_.routine.is(src));for(let s in src){let property=src[s];if(dst[s]===property)continue;let d=Object.getOwnPropertyDescriptor(dst,s);d&&!d.writable||(extended=true,_.object.isBasic(property)&&(property=Object.create(property),dst[s]&&_.props.supplement(property,dst[s])),dst[s]=property)}}:_.assert(0,"not implemented"),srcIsVector)for(let src of srcs)_dstAmend(dst,src);else _dstAmend(dst,srcs);return extended&&dst.body&&(dst.body=function bodyFrom(){const body=dst.body;let body2=body;_.assert(void 0===body.head,"Body should not have own head"),_.assert(void 0===body.tail,"Body should not have own tail"),_.assert(void 0===body.body,"Body should not have own body");{let srcs;(srcs=srcIsVector?o.srcs.map(src=>propertiesBut(src)):[propertiesBut(o.srcs)]).unshift(body),body2=_.routine._amend({dst:"replacing"===o.strategy?body2:null,srcs:srcs,strategy:o.strategy,amending:o.amending}),_.assert(void 0===body2.head,"Body should not have own head"),_.assert(void 0===body2.tail,"Body should not have own tail"),_.assert(void 0===body2.body,"Body should not have own body")}return body2}(dst.body)),dst;function propertiesBut(src){if(!src)return src;let result=_.props.extend(null,src);return delete result.head,delete result.body,delete result.taul,result}},_.routine._amend.defaults={dst:null,srcs:null,strategy:"cloning",amending:"extending"},_.routine._is=function _is(src,typeStr){return"[object Function]"===typeStr||"[object AsyncFunction]"===typeStr},_.routine.is=function is(src){let typeStr=Object.prototype.toString.call(src);return _.routine._is(src,typeStr)};var __mapSupplementWithUndefined=function __mapSupplementWithUndefined(dstMap,srcMap){for(let k in srcMap)Object.hasOwnProperty.call(dstMap,k)||(dstMap[k]=srcMap[k])};_.routine.options=function optionsWithUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=0===options.length?Object.create(null):options[0]),null===options&&(options=Object.create(null)),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),__mapSupplementWithUndefined(options,defaults),options},__mapSupplementWithUndefined=function __mapSupplementWithUndefined(dstMap,srcMap){for(let k in srcMap)Object.hasOwnProperty.call(dstMap,k)||(dstMap[k]=srcMap[k])},_.routine.options_=function optionsWithUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=0===options.length?Object.create(null):options[0]),null===options&&(options=Object.create(null)),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),__mapSupplementWithUndefined(options,defaults),options},_.routine.assertOptions=function assertOptionsWithUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=options[0]),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),options},_.routine.isTrivial=function routineIsTrivial_functor(){const syncPrototype=Object.getPrototypeOf(Function);const asyncPrototype=Object.getPrototypeOf(async function _async(){});return function routineIsTrivial(src){if(!src)return false;let prototype=Object.getPrototypeOf(src);return prototype===syncPrototype||prototype===asyncPrototype}}(),_.routine.extend=function extendCloning(dst,...srcs){return _.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.routine._amend({dst:dst,srcs:[...srcs],strategy:"cloning",amending:"extending"})},_.routine.s.compose=function(){const _compose_head=function _compose_head(routine,args){let o=args[0];return _.mapIs(o)||(o={bodies:args[0]}),void 0!==args[1]&&(o.chainer=args[1]),o.bodies=function __arrayFlatten(src){let result=[];if(null===src)return result;if(_.argumentsArray.like(src))for(let i=0;i<src.length;i++){let e=src[i];_.array.is(e)||_.argumentsArray.is(e)?result.push(...e):result.push(e)}else result.push(src);return result}(o.bodies),o.bodies=o.bodies.filter(e=>null!==e),_.routine.options(routine,o),_.assert(_.routine.s.are(o.bodies)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length||2===args.length),_.assert(1===args.length||!_.object.isBasic(args[0])),_.assert(_.arrayIs(o.bodies)||_.routine.is(o.bodies)),_.assert(_.routine.is(args[1])||void 0===args[1]||null===args[1]),_.assert(null===o.chainer||_.routine.is(o.chainer)),_.assert(null===o.tail||_.routine.is(o.tail)),o};_compose_head.locals={__arrayFlatten:function __arrayFlatten(src){let result=[];if(null===src)return result;if(_.argumentsArray.like(src))for(let i=0;i<src.length;i++){let e=src[i];_.array.is(e)||_.argumentsArray.is(e)?result.push(...e):result.push(e)}else result.push(src);return result}};const _compose_body=function _compose_body(o){null===o.chainer&&(o.chainer=_.routine.chainer.default);let bodies=[];for(let s=0;s<o.bodies.length;s++){let body=o.bodies[s];_.assert(_.routine.is(body)),body.composed?body.composed.chainer===o.chainer&&body.composed.tail===o.tail?bodies.push(...body.composed.elements):bodies.push(...body):bodies.push(body)}o.bodies=bodies;let tail=o.tail;let chainer=o.chainer;return _.assert(_.routine.is(chainer)),_.assert(null===tail||_.routine.is(tail)),0===bodies.length?o.act=function compositionEmpty(){return[]}:1===bodies.length?o.act=function compositionOfSingle(){let result=[];let args=_.unroll.from(arguments);let r=bodies[0].apply(this,args);return _.assert(!_.argumentsArray.is(r)),void 0!==r&&_.unrollAppend(result,r),result}:o.act=function composition(){let result=[];let args=_.unroll.from(arguments);for(let k=0;k<bodies.length;k++){let r=bodies[k].apply(this,args);if(_.assert(!_.argumentsArray.is(r)),void 0!==r&&_.unrollAppend(result,r),(args=chainer(args,r,o,k))===_.dont)break;_.assert(_.unroll.is(args))}return result},o.act.composed=o,tail?(_.routine.extendReplacing(routineWithTail,o.act),routineWithTail):o.act;function routineWithTail(){return tail.call(this,arguments,o)}};return _compose_body.defaults={chainer:null,bodies:null,tail:null},_.routine.unite({head:_compose_head,body:_compose_body})}(),_.routine.s.compose.defaults={chainer:null,bodies:null,tail:null},_.routine.s.are=function are(src){if(_.assert(1===arguments.length,"Expects single argument"),_.argumentsArray.like(src)){for(let s=0;s<src.length;s++)if(!_.routine.is(src[s]))return false;return true}return _.routine.is(src)},_.errIs=function is(src){return src instanceof Error||"[object Error]"===Object.prototype.toString.call(src)},_.regexpLike=function like(src){return src instanceof RegExp||"[object String]"===Object.prototype.toString.call(src)},_.intervalIs=function intervalIs(range){return _.assert(1===arguments.length),!!_.number.s.areAll(range)&&2===range.length},_.numberDefined=function numberIsFinite(src){return!!_.number.is(src)&&isFinite(src)},_.numbersAreAll=function areAll(src){if(_.assert(1===arguments.length),_.bufferTypedIs(src))return true;if(_.argumentsArray.like(src)&&!_.arrayIsEmpty(src)){for(let s=0;s<src.length;s++)if(!_.number.is(src[s]))return false;return true}return false},_.strConcat=function concat(srcs,o){o=_.routine.options(concat,o||Object.create(null)),_.assert(1===arguments.length||2===arguments.length),_.assert(this.strConcat===concat),null===o.onToStr&&(o.onToStr=function onToStr(src,op){return _.entity.exportString(src,op.optionsForToStr)}),o.optionsForToStr=_.props.supplement(o.optionsForToStr,{stringWrapper:""}),o.optionsForToStr.format=o.optionsForToStr.format||"string.diagnostic",_.routine.is(srcs)&&(srcs=srcs()),_.argumentsArray.like(srcs)||(srcs=[srcs]);let result="";if(!srcs.length)return result;let concatenatePairWithLineDelimeter=o.onPairWithDelimeter?o.onPairWithDelimeter:function concatenateSimple(src1,src2){return src1+src2};let a=0;for(;!result&&a<srcs.length;)result=o.onToStr(srcs[a],o),++a;for(;a<srcs.length;a++){let src=srcs[a];src=o.onToStr(src,o),result=result.replace(/[^\S\n]\s*$/,""),result=_.strEnds(result,o.lineDelimter)||_.strBegins(src,o.lineDelimter)?concatenatePairWithLineDelimeter(result,src,o):`${result} ${src.replace(/^\s+/,"")}`}return(o.linePrefix||o.linePostfix)&&(result=result.split(o.lineDelimter),result=o.linePrefix+result.join(o.linePostfix+o.lineDelimter+o.linePrefix)+o.linePostfix),result},_.strConcat.defaults={linePrefix:"",linePostfix:"",lineDelimter:"\n",optionsForToStr:null,onToStr:null,onPairWithDelimeter:null},
_.strHas=function has(src,ins){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),()=>`Expects string, got ${_.entity.strType(src)}`),_.assert(_.regexpLike(ins),()=>`Expects string-like, got ${_.entity.strType(ins)}`),_.strIs(ins)?-1!==src.indexOf(ins):ins.test(src)},_.strHasAny=function strHasAny(src,ins){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.arrayIs(ins)){for(let i=0;i<ins.length;i++)if(_.strHas(src,ins[i]))return true;return false}return _.strHas(src,ins)},_.strLinesStrip=function strip(src){if(arguments.length>1){let result=_.unroll.make(null);for(let a=0;a<arguments.length;a++)result[a]=_.str.lines.strip(arguments[a]);return result}_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length);let lines=_.strLinesSplit(src);return lines=lines.map(line=>line.trim()).filter(line=>line),_.strIs(src)&&(lines=_.str.lines.join(lines)),lines},_.strLinesNumber=function strLinesNumber(o){if(_.object.isBasic(o)||(o={src:arguments[0],zeroLine:arguments.length>1?arguments[1]:null}),_.routine.options(strLinesNumber,o),_.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(o.src)||_.strsAreAll(o.src),"Expects string or strings {-o.src-}"),null===o.zeroLine)if(null===o.zeroChar)o.zeroLine=1;else if(_.number.is(o.zeroChar)){let src=_.arrayIs(o.src)?o.src.join("\n"):o.src;o.zeroLine=_.strLinesCount(src.substring(0,o.zeroChar+1))}let lines=_.strIs(o.src)?_.str.lines.split(o.src):o.src;let maxNumberLength=String(lines.length-1+o.zeroLine).length;let zeroLineLength=String(o.zeroLine).length;let maxNumLength=maxNumberLength>zeroLineLength?maxNumberLength:zeroLineLength;if(o.onLine)for(let l=0;l<lines.length;l+=1){let numLength=String(l+o.zeroLine).length;lines[l]=o.onLine([" ".repeat(maxNumLength-numLength),l+o.zeroLine," : ",lines[l]],o.zeroLine+l,o),void 0===lines[l]&&(lines.splice(l,1),l-=1),_.assert(_.strIs(lines[l]))}else for(let l=0;l<lines.length;l+=1){let numLength=String(l+o.zeroLine).length;lines[l]=" ".repeat(maxNumLength-numLength)+(l+o.zeroLine)+" : "+lines[l]}if(o.highlightingToken&&o.highlighting){let results;return _.assert(null===o.highlighting||_.number.is(o.highlighting)||_.longIs(o.highlighting),"Expects number or array of numbers {-o.highlighting-}"),!_.arrayIs(o.highlighting)&&(o.highlighting>o.zeroLine+lines.length-1||o.highlighting<o.zeroLine)?lines.join("\n"):(results=lines.map(el=>{return _.arrayIs(o.highlighting)?o.highlighting.includes(parseInt(el,10))?o.highlightingToken+" "+el:""+" ".repeat(o.highlightingToken.length+1)+el:(""+o.highlighting).includes(parseInt(el,10))?o.highlightingToken+" "+el:""+" ".repeat(o.highlightingToken.length+1)+el}),JSON.stringify(lines)===JSON.stringify(results.map(el=>el.trim()))?lines.join("\n"):results.join("\n"))}return lines.join("\n")},_.strLinesNumber.defaults={src:null,zeroLine:null,zeroChar:null,onLine:null,highlighting:null,highlightingToken:"*"},_.strLinesSplit=function split(src,eol){return _.arrayIs(src)?src:(_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length||2===arguments.length),void 0===eol&&(eol=_.str.lines.Eol.default),src.split(eol))},_.strLinesJoin=function join(src,eol){_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length||2===arguments.length),void 0===eol&&(eol=_.str.lines.Eol.default);let result=src;return _.arrayIs(src)&&(result=src.join(eol)),result},_.strSplit=function(){const _strSplit_head=[];_strSplit_head.push(function strSplitFast_head(routine,args){let o=args[0];return 2===args.length?o={src:args[0],delimeter:args[1]}:_.strIs(args[0])&&(o={src:args[0]}),_.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length||2===args.length,"Expects one or two arguments"),_.assert(_.strIs(o.src)),_.assert(null===o.delimeter||_.regexp.like(o.delimeter)||_.arrayIs(o.delimeter)),_.assert(_.object.isBasic(o)),o}),_strSplit_head.push(function strSplitsQuotedRejoin_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length,"Expects one or two arguments"),_.assert(_.object.isBasic(o)),o.quoting&&(_.bool.like(o.quoting)?(o.quotingPrefixes||(o.quotingPrefixes=['"']),o.quotingPostfixes||(o.quotingPostfixes=['"'])):_.strIs(o.quoting)||_.regexpIs(o.quoting)||_.arrayIs(o.quoting)?(_.assert(!o.quotingPrefixes),_.assert(!o.quotingPostfixes),o.quoting=_.array.as(o.quoting),o.quotingPrefixes=o.quoting.map(q=>_.arrayIs(q)?q[0]:q),o.quotingPostfixes=o.quoting.map(q=>_.arrayIs(q)?q[0]:q),o.quoting=true):_.assert(0,"unexpected type of {-o.quoting-}"),_.assert(!o.pairing||o.quotingPrefixes.length===o.quotingPostfixes.length,"If option::o.paring is true then the length of o.quotingPrefixes should be equal to the length of o.quotingPostfixes")),o}),_strSplit_head.push(function strSplitsDropDelimeters_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.strIs(o.delimeter)&&(o.delimeter=[o.delimeter]),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),o}),_strSplit_head.push(function strSplitsStrip_head(routine,args){let o=args[0];return _.routine.options(routine,o),o.stripping&&_.bool.like(o.stripping)&&(o.stripping=_.strStrip.defaults.stripper),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),_.assert(!o.stripping||_.strIs(o.stripping)||_.regexpIs(o.stripping)),o}),_strSplit_head.push(function strSplitsDropEmpty_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),o});const _strSplit_body=function strSplit_body(o){if(o.delimeter=_.array.as(o.delimeter),!o.stripping&&!o.quoting&&!o.onDelimeter)return _.strSplitFast.body(_.mapOnly_(null,o,_.strSplitFast.defaults));_.assert(1===arguments.length);let fastOptions=_.mapOnly_(null,o,_.strSplitFast.defaults);if(fastOptions.preservingEmpty=1,fastOptions.preservingDelimeters=1,o.quoting&&(fastOptions.delimeter=_.arrayAppendArraysOnce([],[o.quotingPrefixes,o.quotingPostfixes,fastOptions.delimeter])),o.splits=_.strSplitFast.body(fastOptions),o.quoting&&o.onQuote){let quotes=_.arrayAppendArraysOnce(null,[o.quotingPrefixes,o.quotingPostfixes]);for(let i=0;i<o.splits.length;i++){let index=_.longLeftIndex(quotes,o.splits[i],equalizeStrings);-1!==index&&(o.splits[i]=o.onQuote(o.splits[i],index,quotes))}}if(o.onDelimeter){let delimeter=_.filter_(null,o.delimeter,function(pattern){return _.regexpIs(pattern)?pattern.test(o.src)?pattern:null:pattern});for(let i=0;i<o.splits.length;i++){let index=_.longLeftIndex(delimeter,o.splits[i],equalizeStrings);-1!==index&&(o.splits[i]=o.onDelimeter(o.splits[i],index,o.delimeter))}}return o.quoting&&_.strSplitsQuotedRejoin.body(o),o.preservingDelimeters||_.strSplitsDropDelimeters.body(o),o.stripping&&_.strSplitsStrip.body(o),o.preservingEmpty||_.strSplitsDropEmpty.body(o),o.splits;function equalizeStrings(pattern,el){return _.strIs(pattern)?pattern===el:null!==pattern&&pattern.test(el)}};return _strSplit_body.defaults={preservingEmpty:1,preservingDelimeters:1,preservingQuoting:1,inliningQuoting:1,stripping:1,quoting:1,quotingPrefixes:null,quotingPostfixes:null,onDelimeter:null,onQuote:null},_.routine.unite({head:_strSplit_head,body:_strSplit_body})}(),_.strSplit.defaults={preservingEmpty:1,preservingDelimeters:1,preservingQuoting:1,inliningQuoting:1,stripping:1,quoting:1,quotingPrefixes:null,quotingPostfixes:null,onDelimeter:null,onQuote:null,src:null,delimeter:" "},_.strSplitFast=function(){const _strSplitFast_body=function strSplitFast_body(o){let result,closests,position,closestPosition,closestIndex,hasEmptyDelimeter,delimeter;o.delimeter=_.array.as(o.delimeter);let foundDelimeters=o.delimeter.slice();if(_.assert(1===arguments.length),_.assert(_.arrayIs(o.delimeter)),_.assert(_.bool.like(o.preservingDelimeters)),o.preservingDelimeters||1!==o.delimeter.length){if(!o.delimeter.length)return result=[o.src];result=[],closests=[],position=0,closestPosition=0,closestIndex=-1,hasEmptyDelimeter=false;for(let d=0;d<o.delimeter.length;d++){let delimeter=o.delimeter[d];_.regexpIs(delimeter)?(_.assert(!delimeter.sticky),""!==delimeter.source&&"()"!==delimeter.source&&"(?:)"!==delimeter.source||(hasEmptyDelimeter=true)):0===delimeter.length&&(hasEmptyDelimeter=true),closests[d]=delimeterNext(d,position)}do{if(closestWhich(),closestPosition===o.src.length)break;delimeter.length||(position+=1),ordinaryAdd(o.src.substring(position,closestPosition)),(delimeter.length>0||position<o.src.length)&&delimeterAdd(delimeter),position=closests[closestIndex]+(delimeter.length?delimeter.length:1);for(let d=0;d<o.delimeter.length;d++)closests[d]<position&&(closests[d]=delimeterNext(d,position))}while(position<o.src.length);!delimeter&&hasEmptyDelimeter||ordinaryAdd(o.src.substring(position,o.src.length))}else result=o.src.split(o.delimeter[0]),o.preservingEmpty||(result=result.filter(e=>e||false));return result;function delimeterAdd(delimeter){o.preservingDelimeters&&(o.preservingEmpty||delimeter)&&result.push(delimeter)}function ordinaryAdd(ordinary){(o.preservingEmpty||ordinary)&&result.push(ordinary)}function closestWhich(){closestPosition=o.src.length,closestIndex=-1;for(let d=0;d<o.delimeter.length;d++)closests[d]<o.src.length&&closests[d]<closestPosition&&(closestPosition=closests[d],closestIndex=d);delimeter=foundDelimeters[closestIndex]}function delimeterNext(d,position){_.assert(position<=o.src.length);let delimeter=o.delimeter[d];let result;if(_.strIs(delimeter))result=o.src.indexOf(delimeter,position);else{let execed=delimeter.exec(o.src.substring(position));execed&&(result=execed.index+position,foundDelimeters[d]=execed[0])}return-1===result?o.src.length:result}};return _strSplitFast_body.defaults={src:null,delimeter:" ",preservingEmpty:1,preservingDelimeters:1},_.routine.unite({head:function strSplitFast_head(routine,args){let o=args[0];return 2===args.length?o={src:args[0],delimeter:args[1]}:_.strIs(args[0])&&(o={src:args[0]}),_.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length||2===args.length,"Expects one or two arguments"),_.assert(_.strIs(o.src)),_.assert(null===o.delimeter||_.regexp.like(o.delimeter)||_.arrayIs(o.delimeter)),_.assert(_.object.isBasic(o)),o},body:_strSplitFast_body})}(),_.strSplitFast.defaults={src:null,delimeter:" ",preservingEmpty:1,preservingDelimeters:1},_.strSplitsQuotedRejoin=function(){const _strSplitsQuotedRejoin_body=function strSplitsQuotedRejoin_body(o){_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits));let s=0;if(o.quoting)for(;s<o.splits.length;s+=1)splitsQuote(o.splits[s],s);return o.splits;function splitsQuote(split,i){let s2;let q=o.quotingPrefixes.indexOf(split);if(q>=0){let postfix=o.quotingPostfixes[q];for(s2=i+2;s2<o.splits.length;s2+=1)if(o.splits[s2]===postfix){if(o.pairing&&o.quotingPrefixes.indexOf(o.splits[s])!==o.quotingPostfixes.indexOf(o.splits[s2]))break;let bextra=0;let eextra=0;o.inliningQuoting&&(s-=1,bextra+=1,s2+=1,eextra+=1);let splitNew=o.splits.splice(s,s2-s+1,null);o.preservingQuoting||(splitNew.splice(bextra,1),splitNew.splice(splitNew.length-1-eextra,1)),splitNew=splitNew.join(""),o.onQuoting?o.splits[s]=o.onQuoting(splitNew,o):o.splits[s]=splitNew,s2=s;break}}if(s2>=o.splits.length&&!_.longHas(o.delimeter,split)){let splitNew=o.splits.splice(s,2).join("");o.splits[s-1]=o.splits[s-1]+splitNew}}};return _strSplitsQuotedRejoin_body.defaults={quoting:1,quotingPrefixes:null,quotingPostfixes:null,preservingQuoting:1,inliningQuoting:1,splits:null,delimeter:null,onQuoting:null,pairing:0},_.routine.unite({head:function strSplitsQuotedRejoin_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length,"Expects one or two arguments"),_.assert(_.object.isBasic(o)),o.quoting&&(_.bool.like(o.quoting)?(o.quotingPrefixes||(o.quotingPrefixes=['"']),o.quotingPostfixes||(o.quotingPostfixes=['"'])):_.strIs(o.quoting)||_.regexpIs(o.quoting)||_.arrayIs(o.quoting)?(_.assert(!o.quotingPrefixes),_.assert(!o.quotingPostfixes),o.quoting=_.array.as(o.quoting),o.quotingPrefixes=o.quoting.map(q=>_.arrayIs(q)?q[0]:q),o.quotingPostfixes=o.quoting.map(q=>_.arrayIs(q)?q[0]:q),o.quoting=true):_.assert(0,"unexpected type of {-o.quoting-}"),_.assert(!o.pairing||o.quotingPrefixes.length===o.quotingPostfixes.length,"If option::o.paring is true then the length of o.quotingPrefixes should be equal to the length of o.quotingPostfixes")),o},body:_strSplitsQuotedRejoin_body})}(),_.strSplitsQuotedRejoin.defaults={quoting:1,quotingPrefixes:null,quotingPostfixes:null,preservingQuoting:1,inliningQuoting:1,splits:null,delimeter:null,onQuoting:null,pairing:0},_.strSplitsDropDelimeters=function(){const _strSplitsDropDelimeters_body=function strSplitsDropDelimeters_body(o){_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits));for(let s=o.splits.length-1;s>=0;s--){let split=o.splits[s];_.regexpsTestAny(o.delimeter,split)&&o.splits.splice(s,1)}return o.splits};return _strSplitsDropDelimeters_body.defaults={splits:null,delimeter:null},_.routine.unite({head:function strSplitsDropDelimeters_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.strIs(o.delimeter)&&(o.delimeter=[o.delimeter]),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),o},body:_strSplitsDropDelimeters_body})}(),_.strSplitsDropDelimeters.defaults={splits:null,delimeter:null},_.strSplitsStrip=function(){const _strSplitsStrip_body=function strSplitsStrip_body(o){if(_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits)),!o.stripping)return o.splits;for(let s=0;s<o.splits.length;s++){let split=o.splits[s];_.strIs(split)&&(split=_.strStrip({src:split,stripper:o.stripping})),o.splits[s]=split}return o.splits};return _strSplitsStrip_body.defaults={stripping:1,splits:null},_.routine.unite({head:function strSplitsStrip_head(routine,args){let o=args[0];return _.routine.options(routine,o),o.stripping&&_.bool.like(o.stripping)&&(o.stripping=_.strStrip.defaults.stripper),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),_.assert(!o.stripping||_.strIs(o.stripping)||_.regexpIs(o.stripping)),o},body:_strSplitsStrip_body})}(),_.strSplitsStrip.defaults={stripping:1,splits:null},_.strSplitsDropEmpty=function(){const _strSplitsDropEmpty_body=function strSplitsDropEmpty_body(o){_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits));for(let s=0;s<o.splits.length;s++)o.splits[s]||(o.splits.splice(s,1),s-=1);return o.splits};return _strSplitsDropEmpty_body.defaults={splits:null},_.routine.unite({head:function strSplitsDropEmpty_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),o},body:_strSplitsDropEmpty_body})}(),_.strSplitsDropEmpty.defaults={splits:null},_.strStrip=function strip(o){(_.strIs(o)||_.arrayIs(o))&&(o={src:o}),_.assert(1===arguments.length,"Expects single argument"),_.routine.options(strip,o),o.stripper=function stripperNormalize(){let stripper=o.stripper;return _.bool.likeTrue(o.stripper)?stripper=strip.defaults.stripper:_.arrayIs(o.stripper)?_.assert(_.strsAreAll(o.stripper),"Expects characters in container {-o.stripper-}"):_.strIs(o.stripper)?(stripper=_.regexpEscape(o.stripper),stripper=new RegExp(stripper,"g")):_.regexpIs(o.stripper)||_.assert(0,"Unexpected type of {-o.stripper-}. Expects either a String, an Array or a Regexp {-o.stripper-}"),stripper}();let stripRoutine=_.regexpIs(o.stripper)?function singleStripByRegexp(src){return src.replace(o.stripper,"")}:function singleStripByArrayOfStrings(src){let begin=0;for(;begin<src.length&&-1!==o.stripper.indexOf(src[begin]);begin++);let end=src.length-1;for(;end>=0&&-1!==o.stripper.indexOf(src[end]);end--);return begin>=end?"":src.substring(begin,end+1)};if(_.arrayIs(o.src)){_.assert(_.strsAreAll(o.src),"Expects strings {-o.srs-}");let result=[];for(let i=0;i<o.src.length;i++)result[i]=stripRoutine(o.src[i]);return result}return _.assert(_.strIs(o.src)),stripRoutine(o.src)},_.strStrip.defaults={src:null,stripper:/^(\s|\n|\0)+|(\s|\n|\0)+$/g},_.strLinesSelect=function strLinesSelect(o){2===arguments.length?_.arrayIs(arguments[1])?o={src:arguments[0],range:arguments[1]}:_.number.is(arguments[1])?o={src:arguments[0],range:[arguments[1],arguments[1]+1]}:_.assert(0,"unexpected argument",_.entity.strType(range)):3===arguments.length&&(o={src:arguments[0],range:[arguments[1],arguments[2]]}),_.routine.options(strLinesSelect,o),_.assert(arguments.length<=3),_.assert(_.strIs(o.src)),_.assert(_.bool.like(o.highlighting)||_.longHas(["*"],o.highlighting)),_.bool.like(o.highlighting)&&o.highlighting&&(o.highlighting="*"),o.range||(null===o.line?o.range=[0,_.strCount(o.src,o.delimteter)+1]:"center"===o.selectMode?o.range=[o.line-Math.ceil((o.nearestLines+1)/2)+1,o.line+Math.floor((o.nearestLines-1)/2)+1]:"begin"===o.selectMode?o.range=[o.line,o.line+o.nearestLines]:"end"===o.selectMode&&(o.range=[o.line-o.nearestLines+1,o.line+1])),null===o.line&&("center"===o.selectMode?o.line=Math.floor((o.range[0]+o.range[1])/2):"begin"===o.selectMode?o.line=o.range[0]:"end"===o.selectMode&&(o.line=o.range[1]-1),o.line=o.line>0?o.line:1),_.assert(_.longIs(o.range)),_.assert(_.intIs(o.line)&&o.line>=0,"Expects positive integer {-o.line-}.");let f=0;let counter=o.zeroLine;for(;counter<o.range[0];){if(-1===(f=o.src.indexOf(o.delimteter,f)))return"";f+=o.delimteter.length,counter+=1}let l=f-1;for(;counter<o.range[1];){if(l+=1,-1===(l=o.src.indexOf(o.delimteter,l))){l=o.src.length;break}counter+=1}let result=f<l?o.src.substring(f,l):"";let zeroLine=o.range[0]<=0?o.zeroLine:o.range[0];return o.numbering&&result.length&&(result=_.strLinesNumber({src:result,zeroLine:zeroLine,onLine:function lineHighlight(line,l){return o.highlighting?(l===o.line?line[0]="* "+line[0]:line[0]="  "+line[0],line.join("")):line.join("")}})),result},_.strLinesSelect.defaults={src:null,range:null,line:null,nearestLines:3,selectMode:"center",highlighting:"*",numbering:0,zeroLine:1,delimteter:"\n"},_._strLeftSingle_=function _leftSingle_(src,ins,cinterval){_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(src)),_.number.is(cinterval)?cinterval=[cinterval,src.length-1]:void 0===cinterval&&(cinterval=[0,src.length-1]),cinterval[0]=void 0===cinterval[0]?0:cinterval[0],cinterval[1]=void 0===cinterval[1]?src.length-1:cinterval[1],cinterval[0]<0&&(cinterval[0]=src.length+cinterval[0]),cinterval[1]<-1&&(cinterval[1]=src.length+cinterval[1]),_.assert(_.intervalIs(cinterval)),_.assert(0<=cinterval[0]&&cinterval[0]<=src.length),_.assert(-1<=cinterval[1]&&cinterval[1]<=src.length-1);let result=Object.create(null);result.index=src.length,result.instanceIndex=-1,result.entry=void 0;let src1=src.substring(cinterval[0],cinterval[1]+1);ins=_.array.as(ins);for(let k=0;k<ins.length;k++){let entry=ins[k];if(_.strIs(entry)){let found=src1.indexOf(entry);found>=0&&(found<result.index||void 0===result.entry)&&(result.instanceIndex=k,result.index=found,result.entry=entry)}else if(_.regexpIs(entry)){let found=src1.match(entry);found&&(found.index<result.index||void 0===result.entry)&&(result.instanceIndex=k,result.index=found.index,result.entry=found[0])}else _.assert(0,"Expects string-like ( string or regexp )")}return 0!==cinterval[0]&&result.index!==src.length&&(result.index+=cinterval[0]),result},_._strRightSingle_=function _rightSingle_(src,ins,cinterval){_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(src)),_.number.is(cinterval)?cinterval=[cinterval,src.length-1]:void 0===cinterval&&(cinterval=[0,src.length-1]),cinterval[0]=void 0===cinterval[0]?0:cinterval[0],cinterval[1]=void 0===cinterval[1]?src.length-1:cinterval[1],cinterval[0]<0&&(cinterval[0]=src.length+cinterval[0]),cinterval[1]<-1&&(cinterval[1]=src.length+cinterval[1]),_.assert(_.intervalIs(cinterval)),_.assert(0<=cinterval[0]&&cinterval[0]<=src.length),_.assert(-1<=cinterval[1]&&cinterval[1]<=src.length-1),src.length;let result=Object.create(null);result.index=-1,result.instanceIndex=-1,result.entry=void 0;let src1=src.substring(cinterval[0],cinterval[1]+1);for(let k=0,len=(ins=_.array.as(ins)).length;k<len;k++){let entry=ins[k];if(_.strIs(entry)){let found=src1.lastIndexOf(entry);found>=0&&found>result.index&&(result.instanceIndex=k,result.index=found,result.entry=entry)}else if(_.regexpIs(entry)){let regexp1=_.regexpsJoin([".*","(",entry,")"]);let match1=src1.match(regexp1);if(!match1)continue;let regexp2=_.regexpsJoin([entry,"(?!(?=.).*",entry,")"]);let match2=src1.match(regexp2);let found;_.assert(!!match2);let found1=match1[1];let found2=match2[0];let index;let index1=match1.index+match1[0].length;let index2=match2.index+match2[0].length;(index=index1===index2?found1.length<found2.length?index2-(found=found2).length:index1-(found=found1).length:index1<index2?index2-(found=found2).length:index1-(found=found1).length)>result.index&&(result.instanceIndex=k,result.index=index,result.entry=found)}else _.assert(0,"Expects string-like ( string or regexp )")}return 0!==cinterval[0]&&-1!==result.index&&(result.index+=cinterval[0]),result},_.strIsolate=function(){const _strIsolate_body=function strIsolate_body(o){let result=[];let times=o.times;let index=o.left?0:o.src.length;let more=o.left?function strLeft(index){let r=_._strLeftSingle_(o.src,o.delimeter,[index,void 0]);if(quote&&void 0!==r.entry){let range=inQuoteRange(r.index);if(range)return strLeft(range[1]+1)}return r}:function strRight(index){let r=_._strRightSingle_(o.src,o.delimeter,[void 0,index-1]);if(quote&&void 0!==r.entry){let range=inQuoteRange(r.index);if(range)return strRight(range[0])}return r};let delta=o.left?1:-1;let quote;for(_.routine.assertOptions(strIsolate_body,arguments),_.arrayIs(o.delimeter)&&1===o.delimeter.length&&(o.delimeter=o.delimeter[0]),o.quote&&(quote=_.strQuoteAnalyze({src:o.src,quote:o.quote}));times>0;){let found=more(index);if(void 0===found.entry)break;if(times-=1,index=o.left?found.index+delta:found.index+found.entry.length+delta,0===times)return result.push(o.src.substring(0,found.index)),result.push(found.entry),result.push(o.src.substring(found.index+found.entry.length)),result;if(o.left){if(index>=o.src.length)break}else if(index<=0)break}return result.length?result:0===o.times?everything(!o.left):times===o.times?everything(o.left^o.none):everything(o.left);function everything(side){return side?[o.src,void 0,""]:["",void 0,o.src]}function inQuoteRange(offset){let i=_.sorted.searchFirstIndex(quote.ranges,offset);if(i%2&&(i-=1),i<0||i>=quote.ranges.length)return false;let b=quote.ranges[i];let e=quote.ranges[i+1];return b<=offset&&offset<=e&&[b,e]}};return _strIsolate_body.defaults={src:null,delimeter:" ",quote:0,left:1,times:1,none:1},_.routine.unite({head:function strIsolate_head(routine,args){let o;return args.length>1?o=3===args.length?{src:args[0],delimeter:args[1],times:args[2]}:2===args.length?{src:args[0],delimeter:args[1]}:{src:args[0]}:(o=args[0],_.assert(1===args.length,"Expects single argument")),_.routine.options(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(o.src)),_.assert(_.regexpsLikeAll(o.delimeter)),_.assert(_.number.is(o.times)),o},body:_strIsolate_body})}(),_.strIsolate.defaults={src:null,delimeter:" ",quote:0,left:1,times:1,none:1},_.strIsolateLeftOrNone=function(){const _strIsolateLeftOrNone_body=function strIsolateLeftOrNone_body(o){return o.left=1,o.none=1,_.strIsolate.body(o)};return _strIsolateLeftOrNone_body.defaults={src:null,delimeter:" ",times:1,quote:null},_.routine.unite({head:function strIsolate_head(routine,args){let o;return args.length>1?o=3===args.length?{src:args[0],delimeter:args[1],times:args[2]}:2===args.length?{src:args[0],delimeter:args[1]}:{src:args[0]}:(o=args[0],_.assert(1===args.length,"Expects single argument")),_.routine.options(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(o.src)),_.assert(_.regexpsLikeAll(o.delimeter)),_.assert(_.number.is(o.times)),o},body:_strIsolateLeftOrNone_body})}(),_.strIsolateLeftOrNone.defaults={src:null,delimeter:" ",times:1,quote:null},_.strIsolateRightOrNone=function(){const _strIsolateRightOrNone_body=function strIsolateRightOrNone_body(o){return o.left=0,o.none=1,_.strIsolate.body(o)};return _strIsolateRightOrNone_body.defaults={src:null,delimeter:" ",times:1,quote:null},_.routine.unite({head:function strIsolate_head(routine,args){let o;return args.length>1?o=3===args.length?{src:args[0],delimeter:args[1],times:args[2]}:2===args.length?{src:args[0],delimeter:args[1]}:{src:args[0]}:(o=args[0],_.assert(1===args.length,"Expects single argument")),_.routine.options(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(o.src)),_.assert(_.regexpsLikeAll(o.delimeter)),_.assert(_.number.is(o.times)),o},body:_strIsolateRightOrNone_body})}(),_.strIsolateRightOrNone.defaults={src:null,delimeter:" ",times:1,quote:null},_.strIsolateLeftOrAll=function(){const _strIsolateLeftOrAll_body=function strIsolateLeftOrAll_body(o){return o.left=1,o.none=0,_.strIsolate.body(o)};return _strIsolateLeftOrAll_body.defaults={src:null,delimeter:" ",times:1,quote:null},_.routine.unite({head:function strIsolate_head(routine,args){let o;return args.length>1?o=3===args.length?{src:args[0],delimeter:args[1],times:args[2]}:2===args.length?{src:args[0],delimeter:args[1]}:{src:args[0]}:(o=args[0],_.assert(1===args.length,"Expects single argument")),_.routine.options(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(o.src)),_.assert(_.regexpsLikeAll(o.delimeter)),_.assert(_.number.is(o.times)),o},body:_strIsolateLeftOrAll_body})}(),_.strIsolateLeftOrAll.defaults={src:null,delimeter:" ",times:1,quote:null},_.strIsolateRightOrAll=function(){const _strIsolateRightOrAll_body=function strIsolateRightOrAll_body(o){return o.left=0,o.none=0,_.strIsolate.body(o)};return _strIsolateRightOrAll_body.defaults={src:null,delimeter:" ",times:1,quote:null},_.routine.unite({head:function strIsolate_head(routine,args){let o;return args.length>1?o=3===args.length?{src:args[0],delimeter:args[1],times:args[2]}:2===args.length?{src:args[0],delimeter:args[1]}:{src:args[0]}:(o=args[0],_.assert(1===args.length,"Expects single argument")),_.routine.options(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(o.src)),_.assert(_.regexpsLikeAll(o.delimeter)),_.assert(_.number.is(o.times)),o},body:_strIsolateRightOrAll_body})}(),_.strIsolateRightOrAll.defaults={src:null,delimeter:" ",times:1,quote:null},_.strLinesIndentation=function strLinesIndentation(src,tab,every){if(void 0===every&&(every=true),_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(src)||_.arrayIs(src),"Expects src as string or array"),_.assert(_.strIs(tab)||_.number.is(tab),"Expects tab as string or number"),_.assert(void 0===every||_.bool.like(every)),_.number.is(tab)&&(tab=_.strDup(" ",tab)),_.strIs(src)){if(-1===src.indexOf("\n"))return src;src=_.str.lines.split(src)}if(true===every)return src.join("\n"+tab);{let result="";return src.forEach((e,c)=>{c>0&&(result+="\n"),result+=e.length>0&&c>0?tab+e:e}),result}},_.strEscape=function strEscape(o){_.strIs(o)&&(o={src:o}),_.assert(_.strIs(o.src),"Expects string {-o.src-}, but got",_.entity.strType(o.src)),_.routine.options(strEscape,o);let result="";let stringWrapperCode=o.stringWrapper.charCodeAt(0);for(let s=0;s<o.src.length;s++){let code=o.src.charCodeAt(s);if("`"===o.stringWrapper&&36===code)result+="\\$";else if(o.stringWrapper&&code===stringWrapperCode)result+="\\"+o.stringWrapper;else if(127<=code&&code<=159||173===code)result+=_.strCodeUnicodeEscape(code);else switch(code){case 92:result+="\\\\";break;case 8:result+="\\b";break;case 12:result+="\\f";break;case 10:result+="\\n";break;case 13:result+="\\r";break;case 9:result+="\\t";break;default:result+=code<32?_.strCodeUnicodeEscape(code):String.fromCharCode(code)}}return result},_.strEscape.defaults={src:null,stringWrapper:"'",charsToEscape:null},_.strShort_=function short_(o){2===arguments.length?o={src:arguments[0],widthLimit:arguments[1]}:1===arguments.length&&_.strIs(o)&&(o={src:arguments[0]}),_.routine.options(short_,o),_.assert(_.strIs(o.src)),_.assert(_.number.is(o.widthLimit)),_.assert(o.widthLimit>=0,"Option::o.widthLimit must be greater or equal to zero"),_.assert(_.number.is(o.heightLimit)&&o.heightLimit>=0,"If provided option::o.heightLimit must be greater or equal to zero"),_.assert(null===o.delimeter||_.strIs(o.delimeter)||_.bool.likeTrue(o.delimeter)),_.assert(1===arguments.length||2===arguments.length),o.delimeter||(o.delimeter=""),o.heightDelimeter||(o.heightDelimeter=""),0===o.widthLimit&&(o.widthLimit=Infinity),0===o.heightLimit&&(o.heightLimit=Infinity),_.bool.likeTrue(o.delimeter)&&(o.delimeter="..."),o.onLength||(o.onLength=(src=>src.length));let src=o.src;let isOneLine=-1===o.src.indexOf("\n");if(isOneLine&&o.onLength(o.src)<o.widthLimit)return o.changed=false,o.result=o.src,o;let options=Object.create(null);if(options.limit=o.widthLimit,options.delimeter=o.delimeter,options.onLength=o.onLength,options.cutting=o.cutting,isOneLine)return options.src=src,_.strShortWidth(options),o.result=options.result,o.changed=options.changed,o;{let splitted=o.src.split("\n");let options2=Object.create(null);options2.src=splitted,options2.limit=o.heightLimit,options2.delimeter=o.heightDelimeter,options2.cutting=o.heightCutting,_._strShortHeight(options2),options.src=options2.result,_._strShortWidth(options);let result=options.result.join("\n");return result===o.src?o.changed=false:result!==o.src&&(o.changed=true),o.result=result,o}},_.strShort_.defaults={src:null,widthLimit:40,heightLimit:0,delimeter:null,heightDelimeter:null,onLength:null,cutting:"center",heightCutting:"center"},_.numberFromStrMaybe=function fromStrMaybe(src){if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src)||_.number.is(src)),_.number.is(src))return src;if(!src)return src;let parsed=src?Number(src):NaN;return isNaN(parsed)?src:parsed},_.path.name=function(){const _name_body=function name_body(o){_.strIs(o)&&(o={path:o}),_.routine.assertOptions(name_body,arguments),o.path=this.canonize(o.path);let i=o.path.lastIndexOf("/");if(-1!==i&&(o.path=o.path.substr(i+1)),!o.full){let i=o.path.lastIndexOf(".");-1!==i&&(o.path=o.path.substr(0,i))}return o.path};return _name_body.defaults={path:null,full:0},_.routine.unite({head:function name_head(routine,args){let o=args[0];return _.strIs(o)&&(o={path:o}),_.routine.options_(routine,o),_.assert(1===args.length),_.assert(2===arguments.length),_.assert(_.strIs(o.path),"Expects string {-o.path-}"),o},body:_name_body})}(),_.path.name.defaults={path:null,full:0},_.path.fullName=function(){const _name_body=function name_body(o){_.strIs(o)&&(o={path:o}),_.routine.assertOptions(name_body,arguments),o.path=this.canonize(o.path);let i=o.path.lastIndexOf("/");if(-1!==i&&(o.path=o.path.substr(i+1)),!o.full){let i=o.path.lastIndexOf(".");-1!==i&&(o.path=o.path.substr(0,i))}return o.path};return _name_body.defaults={path:null,full:0},_.routine.unite({head:function name_head(routine,args){let o=args[0];return _.strIs(o)&&(o={path:o}),_.routine.options_(routine,o),_.assert(1===args.length),_.assert(2===arguments.length),_.assert(_.strIs(o.path),"Expects string {-o.path-}"),o},body:_name_body})}(),_.path.fullName.defaults={path:null,full:1},_.str={lines:{Eol:{any:["\r\n","\n\r","\n"],posix:"\n",windows:"\r\n",mac:"\n\r",default:"\n"},split:function split(src,eol){return _.arrayIs(src)?src:(_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length||2===arguments.length),void 0===eol&&(eol=_.str.lines.Eol.default),src.split(eol))},join:function join(src,eol){_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length||2===arguments.length),void 0===eol&&(eol=_.str.lines.Eol.default);let result=src;return _.arrayIs(src)&&(result=src.join(eol)),result},strip:function strip(src){if(arguments.length>1){let result=_.unroll.make(null);for(let a=0;a<arguments.length;a++)result[a]=_.str.lines.strip(arguments[a]);return result}_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length);let lines=_.strLinesSplit(src);return lines=lines.map(line=>line.trim()).filter(line=>line),_.strIs(src)&&(lines=_.str.lines.join(lines)),lines},atLeft:function atLeft(src,index,eol){let result;if(_.assert(_.number.is(index)),index<0)return(result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[0,-1],result;let o2=Object.create(null);return o2.src=src,o2.eol=eol,o2.onEach=function onEach(it){(result=it).line=src.slice(it.charInterval[0],it.charInterval[1]-it.nl.length+1)},o2.interval=[index,index],o2.withLine=false,this.eachLeft(o2),result||((result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[src.length,src.length-1]),delete result.eol,delete result.onEach,delete result.interval,delete result.withLine,result},atRight:function atRight(src,index,eol){let result;if(_.assert(_.number.is(index)),index<0)return(result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[src.length,src.length-1],result;let o2=Object.create(null);return o2.src=src,o2.eol=eol,o2.onEach=function onEach(it){(result=it).line=src.slice(it.charInterval[0],it.charInterval[1]-it.nl.length+1)},o2.interval=[index,index],o2.withLine=false,this.eachRight(o2),result||((result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[0,-1]),delete result.eol,delete result.onEach,delete result.interval,delete result.withLine,result},at:function atLeft(src,index,eol){let result;if(_.assert(_.number.is(index)),index<0)return(result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[0,-1],result;let o2=Object.create(null);return o2.src=src,o2.eol=eol,o2.onEach=function onEach(it){(result=it).line=src.slice(it.charInterval[0],it.charInterval[1]-it.nl.length+1)},o2.interval=[index,index],o2.withLine=false,this.eachLeft(o2),result||((result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[src.length,src.length-1]),delete result.eol,delete result.onEach,delete result.interval,delete result.withLine,result},_eachLeft:function _eachLeft(o){void 0===o.eol?o.eol=_.str.lines.Eol.default:_.str.is(o.eol)||(o.eol=[...o.eol]);const lastIndex=o.interval?o.interval[1]:Infinity;const src=o.src;let foundTokenIndex;let foundOffset;let handleEach;return o.charInterval=[-1,-1],o.lineIndex=-1,o.interval&&o.interval[1]<0?(o.charInterval[0]=0,o):(o.nl="",handleEach=o.interval?o.withLine?function handleWithIntervalWithLine(){o.interval&&o.interval[0]>o.lineIndex||(o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o))}:function handleWithIntervalWithoutLine(){o.interval&&o.interval[0]>o.lineIndex||o.onEach(o)}:o.withLine?function handleWithoutIntervalWithLine(){o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o)}:function handleWithoutIntervalWithoutLine(){o.onEach(o)},_.str.is(o.eol)?single():function multiple(){foundTokenIndex=-1,foundOffset=src.length;let first=function indexInit(){let first=[];for(let i=o.eol.length-1;i>=0;i--){let offset=src.indexOf(o.eol[i]);-1!==offset?(first.unshift(offset),foundOffset>=offset&&(foundOffset=offset,foundTokenIndex=i)):(o.eol.splice(i,1),foundTokenIndex-=1)}return first}();if(1===first.length)return o.eol=o.eol[foundTokenIndex],single();if(0===first.length)return o.lineIndex=0,o.charInterval[0]=0,o.charInterval[1]=src.length-1,void handleEach();for(;o.lineIndex!==lastIndex;){if(o.charInterval[0]=Math.max(o.charInterval[0],o.charInterval[1])+1,o.charInterval[1]=indexOf(first),o.lineIndex+=1,o.charInterval[1]===o.src.length){o.charInterval[1]=src.length-1,o.nl="",handleEach();break}o.nl=o.eol[foundTokenIndex],o.charInterval[1]+=o.nl.length-1,handleEach()}}(),(!o.interval||o.lineIndex<o.interval[1])&&(o.lineIndex+=1,o.charInterval[0]=src.length,_.assert(o.charInterval[1]===src.length-1),o.withLine&&(o.line="")),o);function single(){for(o.nl=o.eol;o.lineIndex!==lastIndex;){if(o.charInterval[0]=Math.max(o.charInterval[0],o.charInterval[1])+1,o.charInterval[1]=src.indexOf(o.eol,o.charInterval[0]),o.lineIndex+=1,-1===o.charInterval[1]){o.charInterval[1]=src.length-1,o.nl="",handleEach();break}o.charInterval[1]+=o.nl.length-1,handleEach()}}function indexOf(first){if(first[foundTokenIndex]>=o.charInterval[0])return first[foundTokenIndex];foundOffset=src.length;for(let i=first.length-1;i>=0;i--){let offset=first[i];if(offset<o.charInterval[0])if(-1===(offset=src.indexOf(o.eol[i],first[i]+1))){if(tokenDelete(first,i),0===first.length)return src.length}else first[i]=offset,foundOffset>=offset&&(foundOffset=offset,foundTokenIndex=i);else foundOffset>=offset&&(foundOffset=offset,foundTokenIndex=i)}return first[foundTokenIndex]}function tokenDelete(first,i){o.eol.splice(i,1),first.splice(i,1),foundTokenIndex>i&&(foundTokenIndex-=1)}},eachLeft:function eachLeft(o){return _.map.is(o)?_.assert(1===arguments.length):(_.assert(2===arguments.length||3===arguments.length),o=3===arguments.length?{src:arguments[0],interval:arguments[1],onEach:arguments[2]}:{src:arguments[0],onEach:arguments[1]}),void 0===o.withLine&&(o.withLine=true),_.assert(_.routine.is(o.onEach)),_.assert(_.str.is(o.src)),this._eachLeft(o)},_eachRight:function _eachRight(o){void 0===o.eol?o.eol=_.str.lines.Eol.default:_.str.is(o.eol)||(o.eol=[...o.eol]);const lastIndex=o.interval?o.interval[1]:Infinity;const src=o.src;let foundTokenIndex;let foundOffset;let nnl="";let handleEach;return handleEach=o.interval?o.withLine?function handleWithIntervalWithLine(){o.interval&&o.interval[0]>o.lineIndex||(o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o))}:function handleWithIntervalWithoutLine(){o.interval&&o.interval[0]>o.lineIndex||o.onEach(o)}:o.withLine?function handleWithoutIntervalWithLine(){o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o)}:function handleWithoutIntervalWithoutLine(){o.onEach(o)},o.charInterval=[o.src.length,o.src.length],o.lineIndex=-1,o.interval&&o.interval[1]<0?(o.charInterval[1]=o.src.length-1,o):(o.nl="",_.str.is(o.eol)?single():function multiple(){foundTokenIndex=-1,foundOffset=0;let first=function indexInit(){let first=[];for(let i=o.eol.length-1;i>=0;i--){let offset=src.lastIndexOf(o.eol[i]);-1!==offset?(offset+=o.eol[i].length,first.unshift(offset),foundOffset<=offset&&(foundOffset=offset,foundTokenIndex=i)):(o.eol.splice(i,1),foundTokenIndex-=1)}return first}();if(1===first.length)return o.eol=o.eol[foundTokenIndex],single();if(0===first.length)return o.lineIndex=0,o.charInterval[0]=0,o.charInterval[1]=src.length-1,void handleEach();for(;o.lineIndex!==lastIndex;){if(o.lineIndex+=1,o.nl=nnl,o.charInterval[1]=o.charInterval[0]-1,o.charInterval[0]=indexOf(first),-1===o.charInterval[0]){o.charInterval[0]=0,handleEach();break}nnl=o.eol[foundTokenIndex],handleEach()}}(),(!o.interval||o.lineIndex<o.interval[1])&&(o.lineIndex+=1,o.charInterval[1]=-1,_.assert(0===o.charInterval[0]),o.withLine&&(o.line="")),o);function single(){for(;o.lineIndex!==lastIndex;){o.lineIndex+=1,o.nl=nnl,o.charInterval[1]=o.charInterval[0]-1;let right=o.charInterval[1]-o.nl.length;if(right>=0||0===o.lineIndex?o.charInterval[0]=src.lastIndexOf(o.eol,right):o.charInterval[0]=-1,-1===o.charInterval[0]){o.charInterval[0]=0,handleEach();break}nnl=o.eol,o.charInterval[0]+=nnl.length,handleEach()}}function indexOf(first){let left=o.charInterval[0]-nnl.length-1;if(first[foundTokenIndex]<=left)return first[foundTokenIndex];foundOffset=-1;for(let i=first.length-1;i>=0;i--){let offset=first[i];if(offset>left)if(-1===(offset=left>=0?src.lastIndexOf(o.eol[i],left):-1)){if(tokenDelete(first,i),0===first.length)return-1}else offset+=o.eol[i].length,first[i]=offset,foundOffset<=offset&&(foundOffset=offset,foundTokenIndex=i);else foundOffset<=offset&&(foundOffset=offset,foundTokenIndex=i)}return first[foundTokenIndex]}function tokenDelete(first,i){o.eol.splice(i,1),first.splice(i,1),foundTokenIndex>i&&(foundTokenIndex-=1)}},eachRight:function eachRight(o){return _.map.is(o)?_.assert(1===arguments.length):(_.assert(2===arguments.length||3===arguments.length),o=3===arguments.length?{src:arguments[0],interval:arguments[1],onEach:arguments[2]}:{src:arguments[0],onEach:arguments[1]}),void 0===o.withLine&&(o.withLine=true),_.assert(_.routine.is(o.onEach)),_.assert(_.str.is(o.src)),this._eachRight(o)},each:function eachLeft(o){return _.map.is(o)?_.assert(1===arguments.length):(_.assert(2===arguments.length||3===arguments.length),o=3===arguments.length?{src:arguments[0],interval:arguments[1],onEach:arguments[2]}:{src:arguments[0],onEach:arguments[1]}),void 0===o.withLine&&(o.withLine=true),_.assert(_.routine.is(o.onEach)),_.assert(_.str.is(o.src)),this._eachLeft(o)}},is:function is(src){return"[object String]"===Object.prototype.toString.call(src)},like:function like(src){return!!_.str.is(src)||!!_.regexp.is(src)},defined:function defined(src){return!!src&&"[object String]"===Object.prototype.toString.call(src)},has:function has(src,ins){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),()=>`Expects string, got ${_.entity.strType(src)}`),_.assert(_.regexpLike(ins),()=>`Expects string-like, got ${_.entity.strType(ins)}`),_.strIs(ins)?-1!==src.indexOf(ins):ins.test(src)},short_:function short_(o){2===arguments.length?o={src:arguments[0],widthLimit:arguments[1]}:1===arguments.length&&_.strIs(o)&&(o={src:arguments[0]}),_.routine.options(short_,o),_.assert(_.strIs(o.src)),_.assert(_.number.is(o.widthLimit)),_.assert(o.widthLimit>=0,"Option::o.widthLimit must be greater or equal to zero"),_.assert(_.number.is(o.heightLimit)&&o.heightLimit>=0,"If provided option::o.heightLimit must be greater or equal to zero"),_.assert(null===o.delimeter||_.strIs(o.delimeter)||_.bool.likeTrue(o.delimeter)),_.assert(1===arguments.length||2===arguments.length),o.delimeter||(o.delimeter=""),o.heightDelimeter||(o.heightDelimeter=""),0===o.widthLimit&&(o.widthLimit=Infinity),0===o.heightLimit&&(o.heightLimit=Infinity),_.bool.likeTrue(o.delimeter)&&(o.delimeter="..."),o.onLength||(o.onLength=(src=>src.length));let src=o.src;let isOneLine=-1===o.src.indexOf("\n");if(isOneLine&&o.onLength(o.src)<o.widthLimit)return o.changed=false,o.result=o.src,o;let options=Object.create(null);if(options.limit=o.widthLimit,options.delimeter=o.delimeter,options.onLength=o.onLength,options.cutting=o.cutting,isOneLine)return options.src=src,_.strShortWidth(options),o.result=options.result,o.changed=options.changed,o;{let splitted=o.src.split("\n");let options2=Object.create(null);options2.src=splitted,options2.limit=o.heightLimit,options2.delimeter=o.heightDelimeter,options2.cutting=o.heightCutting,_._strShortHeight(options2),options.src=options2.result,_._strShortWidth(options);let result=options.result.join("\n");return result===o.src?o.changed=false:result!==o.src&&(o.changed=true),o.result=result,o}},_shortWidth:function _shortWidth(o){_.assert(_.arrayIs(o.src)),_.routine.options(_shortWidth,o);let begin="";let end="";let fixLength=o.onLength(o.delimeter);o.changed=false;let result=o.src.map(el=>{let delimeter=o.delimeter;if((fixLength=o.onLength(o.delimeter))===o.limit)return o.changed=true,o.delimeter;if(o.onLength(el)+fixLength<=o.limit)return el;if(o.onLength(delimeter)>o.limit&&(el=delimeter,delimeter="",fixLength=0),o.changed=true,"left"===o.cutting)return delimeter+function cutLeft(src){let startIndex=0;let endIndex=src.length-1;let endLength=o.onLength(src);let middleIndex=src.length-o.limit-1;for(;endLength+fixLength>o.limit;)[begin,end]=splitInTwo(src,middleIndex+1),endLength=o.onLength(end),startIndex=middleIndex,middleIndex=Math.floor((startIndex+endIndex)/2);for(;o.onLength(end)+fixLength<=o.limit;)end=begin[begin.length-1]+end,begin=begin.slice(0,-1);return end.slice(1)}(el);if("right"===o.cutting)return function cutRight(src){let endIndex=src.length-1;let beginLength=o.onLength(src);let middleIndex=o.limit;for(;beginLength+fixLength>o.limit;)[begin,end]=splitInTwo(src,middleIndex),beginLength=o.onLength(begin),endIndex=middleIndex,middleIndex=Math.floor((0+endIndex)/2);for(;o.onLength(begin)+fixLength<=o.limit;)begin+=end[0],end=end.slice(1);return begin.slice(0,-1)}(el)+delimeter;{let[begin,end]=function cutMiddle(src){let originalStr=src;let chunkSize,middleIndexLeft,middleIndexRight;for(o.limit%2==0?(middleIndexLeft=o.limit/2-1,middleIndexRight=-o.limit/2+src.length):(middleIndexLeft=Math.floor(o.limit/2),middleIndexRight=Math.ceil(-o.limit/2)+src.length);o.onLength(src)+fixLength>o.limit;){if(src.length<=5){let index=Math.floor(src.length/2);begin=src.slice(0,index),end=src.slice(index+1)}else begin=src.slice(0,middleIndexLeft+1),end=src.slice(middleIndexRight);src=begin+end,middleIndexLeft=chunkSize=Math.floor(src.length/3),middleIndexRight=2*chunkSize}for(;o.onLength(begin+end)+fixLength<o.limit;)o.onLength(begin)>o.onLength(end)?end=originalStr.slice(-end.length-1):begin=originalStr.slice(0,begin.length+1);let beginInitial=o.onLength(begin);let endInitial=o.onLength(end);for(;o.onLength(begin)===beginInitial;)begin=originalStr.slice(0,begin.length+1);for(;o.onLength(end)===endInitial;)end=originalStr.slice(-end.length-1);return[begin.slice(0,-1),end.slice(1)]}(el);return begin+delimeter+end}});return o.result=result,o;function splitInTwo(src,middle){return[src.slice(0,middle),src.slice(middle)]}},shortHeight:function shortHeight(o){2===arguments.length?o={src:arguments[0],limit:arguments[1]}:1===arguments.length&&_.strIs(o)&&(o={src:arguments[0]}),_.routine.options(shortHeight,o),_.assert(_.strIs(o.src)),_.assert(_.number.is(o.limit)&&o.limit>=0,"option::o.limit must be greater or equal to zero"),_.assert(1===arguments.length||2===arguments.length);let originalSrc=o.src;let splitted=o.src.split("\n");return o.delimeter||(o.delimeter=""),o.src=splitted,_._strShortHeight(o),o.src=originalSrc,o.result=o.result.join("\n"),o},_shortHeight:function _shortHeight(o){_.assert(_.arrayIs(o.src)),_.routine.options(shortHeight,o),o.changed=false;let delimeterLength=""===o.delimeter?0:1;if(delimeterLength===o.limit)return o.changed=true,o.result=[o.delimeter],o;let result=function cut(src){if(src.length+delimeterLength>o.limit)if(o.changed=true,"left"===o.cutting)src=src.slice(-(o.limit-delimeterLength)),""!==o.delimeter&&src.unshift(o.delimeter);else if("right"===o.cutting)src=src.slice(0,o.limit-delimeterLength),""!==o.delimeter&&src.push(o.delimeter);else{let[left,right]=function handleHeightCuttingCenter(src){let indexLeft,indexRight;let limit=o.limit-delimeterLength;if(1===limit)return[src.slice(0,1)];return limit%2==0?indexRight=-(indexLeft=limit/2):indexRight=1-(indexLeft=Math.floor(limit/2)+1),[src.slice(0,indexLeft),src.slice(indexRight)]}(src);let result=[];result.push(...left),""!==o.delimeter&&result.push(o.delimeter),void 0!==right&&result.push(...right),src=result}return src}(o.src.slice());return o.result=result,o},concat:function concat(srcs,o){o=_.routine.options(concat,o||Object.create(null)),_.assert(1===arguments.length||2===arguments.length),_.assert(this.strConcat===concat),null===o.onToStr&&(o.onToStr=function onToStr(src,op){return _.entity.exportString(src,op.optionsForToStr)}),o.optionsForToStr=_.props.supplement(o.optionsForToStr,{stringWrapper:""}),o.optionsForToStr.format=o.optionsForToStr.format||"string.diagnostic",_.routine.is(srcs)&&(srcs=srcs()),_.argumentsArray.like(srcs)||(srcs=[srcs]);let result="";if(!srcs.length)return result;let concatenatePairWithLineDelimeter=o.onPairWithDelimeter?o.onPairWithDelimeter:function concatenateSimple(src1,src2){return src1+src2};let a=0;for(;!result&&a<srcs.length;)result=o.onToStr(srcs[a],o),++a;for(;a<srcs.length;a++){let src=srcs[a];src=o.onToStr(src,o),result=result.replace(/[^\S\n]\s*$/,""),result=_.strEnds(result,o.lineDelimter)||_.strBegins(src,o.lineDelimter)?concatenatePairWithLineDelimeter(result,src,o):`${result} ${src.replace(/^\s+/,"")}`}return(o.linePrefix||o.linePostfix)&&(result=result.split(o.lineDelimter),result=o.linePrefix+result.join(o.linePostfix+o.lineDelimter+o.linePrefix)+o.linePostfix),result},_beginOf:function _beginOf(src,begin){if(_.strIs(begin)){if(0===src.lastIndexOf(begin,0))return begin}else if(_.regexpIs(begin)){let matched=begin.exec(src);if(matched&&0===matched.index)return matched[0]}else _.assert(0,"Expects string-like ( string or regexp )")},_endOf:function _endOf(src,end){if(_.strIs(end)){if(-1!==src.indexOf(end,src.length-end.length))return end}else if(_.regexpIs(end)){let matched=RegExp(end.toString().slice(1,-1)+"$").exec(src);if(matched&&matched.index+matched[0].length===src.length)return matched[0]}else _.assert(0,"Expects string-like ( string or regexp )")},begins:function begins(src,begin){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(begin)||_.regexpIs(begin)||_.longIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(begin))return!(void 0===_._strBeginOf(src,begin));for(let b=0,blen=begin.length;b<blen;b++)if(void 0!==_._strBeginOf(src,begin[b]))return true;return false},ends:function ends(src,end){if(_.assert(_.strIs(src),()=>`Expects argument::src of type::string, but got ${_.entity.strType(src)}`),_.assert(_.strIs(end)||_.regexpIs(end)||_.longIs(end),"Expects string/regexp or array of strings/regexps {-end-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(end))return!(void 0===_._strEndOf(src,end));for(let b=0,blen=end.length;b<blen;b++)if(void 0!==_._strEndOf(src,end[b]))return true;return false},beginOf:function beginOf(src,begin){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(begin)||_.regexpIs(begin)||_.longIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(begin))return _._strBeginOf(src,begin);for(let b=0,blen=begin.length;b<blen;b++){let result=_._strBeginOf(src,begin[b]);if(void 0!==result)return result}},endOf:function endOf(src,end){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(end)||_.regexpIs(end)||_.longIs(end),"Expects string/regexp or array of strings/regexps {-end-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(end))return _._strEndOf(src,end);for(let b=0,blen=end.length;b<blen;b++){let result=_._strEndOf(src,end[b]);if(void 0!==result)return result}},removeBegin:function removeBegin(src,begin){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(src)||_.strIs(src),"Expects string or array of strings {-src-}"),_.assert(_.longIs(begin)||_.strIs(begin)||_.regexpIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}");let result=[];let srcIsArray=_.longIs(src);if(_.strIs(src)&&!_.longIs(begin))return _._strRemovedBegin(src,begin);src=_.array.as(src),begin=_.array.as(begin);for(let s=0,slen=src.length;s<slen;s++){let beginOf=void 0;let src1=src[s];for(let b=0,blen=begin.length;b<blen&&void 0===(beginOf=_._strBeginOf(src1,begin[b]));b++);void 0!==beginOf&&(src1=src1.substr(beginOf.length,src1.length)),result[s]=src1}return srcIsArray?result:result[0]},removeEnd:function removeEnd(src,end){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(src)||_.strIs(src),"Expects string or array of strings {-src-}"),_.assert(_.longIs(end)||_.strIs(end)||_.regexpIs(end),"Expects string/regexp or array of strings/regexps {-end-}");let result=[];let srcIsArray=_.longIs(src);if(_.strIs(src)&&!_.longIs(end))return _._strRemovedEnd(src,end);src=_.array.as(src),end=_.array.as(end);for(let s=0,slen=src.length;s<slen;s++){let endOf=void 0;let src1=src[s];for(let b=0,blen=end.length;b<blen&&void 0===(endOf=_._strEndOf(src1,end[b]));b++);void 0!==endOf&&(src1=src1.substr(0,src1.length-endOf.length)),result[s]=src1}return srcIsArray?result:result[0]},remove:function remove(srcStr,insStr){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(srcStr),"Expects string {-src-}"),_.assert(_.strIs(insStr)||_.regexpIs(insStr),"Expects string/regexp {-begin-}");let result=srcStr;return result.replace(insStr,"")},_exportStringDiagnosticShallow:function _exportStringDiagnosticShallow(src,o){return src},exportStringDiagnosticShallow:function exportStringDiagnosticShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringDiagnosticShallow(...arguments)},_exportStringCodeShallow:function _exportStringCodeShallow(src,o){return`'${src}'`},exportStringCodeShallow:function exportStringCodeShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringCodeShallow(...arguments)},exportString:function exportStringDiagnosticShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringDiagnosticShallow(...arguments)},_identicalShallow:function _identicalShallow(src1,src2){return src1===src2},identicalShallow:function identicalShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!this.is(src1)&&!!this.is(src2)&&this._identicalShallow(...arguments)},identical:function identicalShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!this.is(src1)&&!!this.is(src2)&&this._identicalShallow(...arguments)},_equivalentShallow:function _equivalentShallow(src1,src2){let strIs1=_.strIs(src1);let strIs2=_.strIs(src2);if(!strIs1&&strIs2)return this._equivalentShallow(src2,src1);if(strIs1&&strIs2)return src1===src2||_.str.lines.strip(src1)===_.str.lines.strip(src2);if(strIs1){_.assert(!!src2.exec);let matched=src2.exec(src1);return!!matched&&matched[0].length===src1.length}return _.regexpIdentical(src1,src2)},equivalentShallow:function equivalentShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!_.regexp.like(src1)&&!!_.regexp.like(src2)&&_.str._equivalentShallow(...arguments)},equivalent:function equivalentShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!_.regexp.like(src1)&&!!_.regexp.like(src2)&&_.str._equivalentShallow(...arguments)},prependOnce:function prependOnce(src,begin){return _.assert(_.strIs(src)&&_.strIs(begin),"Expects {-src-} and {-begin-} as strings"),0===src.lastIndexOf(begin,0)?src:begin+src},appendOnce:function appendOnce(src,end){return _.assert(_.strIs(src)&&_.strIs(end),"Expects {-src-} and {-end-} as strings"),-1===src.indexOf(end,src.length-end.length)?src+end:src},parseType:function parseType(src){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src),"Expects string"),/^{- .+ -}$/g.test(src)?(src=src.slice(3,-3),_.str._parseType(src)):Object.create(null)},_parseType:function _parseType(src){_.assert(_.strIs(src),"Expects string");let o={type:"",traits:[]};let splitted=src.split(" ");let type=splitted[0];let length;if(2===splitted.length?o.name=splitted[1]:4===splitted.length?length=+splitted[2]:5===splitted.length&&(o.name=splitted[1],length=+splitted[3]),length=isNaN(length)?null:length,-1===type.indexOf("."))o.type=type;else{let[t,...traits]=type.split(".");o.type=t,o.traits=traits}return null!==length&&(o.length=length),o},quote:function quote(o){if(_.mapIs(o)||(o={src:arguments[0],quote:arguments.length>1?arguments[1]:null}),void 0!==o.quote&&null!==o.quote||(o.quote=quote.defaults.quote),_.map.assertHasOnly(o,quote.defaults),_.assert(1===arguments.length||2===arguments.length),_.arrayIs(o.src)){let result=[];for(let s=0;s<o.src.length;s++)result.push(_.strQuote({src:o.src[s],quote:o.quote}));return result}let src=o.src;return _.primitive.is(src)||(src=_.entity.exportString(src)),_.assert(_.primitive.is(src)),o.quote+String(src)+o.quote},unquote:function unquote(o){if(_.mapIs(o)||(o={src:arguments[0],quote:arguments.length>1?arguments[1]:null}),void 0!==o.quote&&null!==o.quote||(o.quote=unquote.defaults.quote),_.map.assertHasOnly(o,unquote.defaults),_.assert(1===arguments.length||2===arguments.length),_.arrayIs(o.src)){let result=[];for(let s=0;s<o.src.length;s++)result.push(_.strUnquote({src:o.src[s],quote:o.quote}));return result}let result=o.src;let isolated=_.strIsolateInside(result,o.quote);return""===isolated[0]&&""===isolated[4]&&(result=isolated[2]),result},quotePairsNormalize:function quotePairsNormalize(quote){_.bool.like(quote)&&quote&&(quote=quoteAnalyze.defaults.quote),_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(quote)||_.arrayIs(quote)),quote=_.array.as(quote);for(let q=0;q<quote.length;q++){let quotingPair=quote[q];_.assert(_.pair.is(quotingPair)||_.strIs(quotingPair)),_.strIs(quotingPair)&&(quotingPair=quote[q]=[quotingPair,quotingPair]),_.assert(_.strIs(quotingPair[0])&&_.strIs(quotingPair[1]))}return quote},quoteAnalyze:function quoteAnalyze(o){let i=-1;let result=Object.create(null);result.ranges=[],result.quotes=[],_.mapIs(o)||(o={src:arguments[0],quote:arguments.length>1?arguments[1]:null}),void 0!==o.quote&&null!==o.quote||(o.quote=quoteAnalyze.defaults.quote),_.map.assertHasOnly(o,quoteAnalyze.defaults),_.assert(1===arguments.length||2===arguments.length),o.quote=_.strQuotePairsNormalize(o.quote);let maxQuoteLength=0;for(let q=0;q<o.quote.length;q++){let quotingPair=o.quote[q];maxQuoteLength=Math.max(maxQuoteLength,quotingPair[0].length,quotingPair[1].length)}let isEqual=1===maxQuoteLength?function isEqualChar(quote){return _.assert(o.src.length>=i),o.src[i]===quote}:function isEqualString(quote){return!(i+quote.length>o.src.length)&&o.src.substring(i,i+quote.length)===quote};let inRange=false;do{for(;i<o.src.length;)if(i+=1,inRange)isEqual(inRange)&&(result.ranges.push(i),inRange=false);else for(let q=0;q<o.quote.length;q++){let quotingPair=o.quote[q];if(isEqual(quotingPair[0])){result.quotes.push(quotingPair[0]),result.ranges.push(i),inRange=quotingPair[1];break}}inRange&&(result.quotes.pop(),i=result.ranges.pop()+1,inRange=false)}while(i<o.src.length);return result},_leftSingle_:function _leftSingle_(src,ins,cinterval){_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(src)),_.number.is(cinterval)?cinterval=[cinterval,src.length-1]:void 0===cinterval&&(cinterval=[0,src.length-1]),cinterval[0]=void 0===cinterval[0]?0:cinterval[0],cinterval[1]=void 0===cinterval[1]?src.length-1:cinterval[1],cinterval[0]<0&&(cinterval[0]=src.length+cinterval[0]),cinterval[1]<-1&&(cinterval[1]=src.length+cinterval[1]),_.assert(_.intervalIs(cinterval)),_.assert(0<=cinterval[0]&&cinterval[0]<=src.length),_.assert(-1<=cinterval[1]&&cinterval[1]<=src.length-1);let result=Object.create(null);result.index=src.length,result.instanceIndex=-1,result.entry=void 0;let src1=src.substring(cinterval[0],cinterval[1]+1);ins=_.array.as(ins);for(let k=0;k<ins.length;k++){let entry=ins[k];if(_.strIs(entry)){let found=src1.indexOf(entry);found>=0&&(found<result.index||void 0===result.entry)&&(result.instanceIndex=k,result.index=found,result.entry=entry)}else if(_.regexpIs(entry)){let found=src1.match(entry);found&&(found.index<result.index||void 0===result.entry)&&(result.instanceIndex=k,result.index=found.index,result.entry=found[0])}else _.assert(0,"Expects string-like ( string or regexp )")}return 0!==cinterval[0]&&result.index!==src.length&&(result.index+=cinterval[0]),result},left_:function left_(src,ins,cinterval){if(_.assert(2===arguments.length||3===arguments.length),_.argumentsArray.like(src)){let result=[];for(let s=0;s<src.length;s++)result[s]=_._strLeftSingle_(src[s],ins,cinterval);return result}return _._strLeftSingle_(src,ins,cinterval)},right_:function right_(src,ins,cinterval){if(_.assert(2===arguments.length||3===arguments.length),_.argumentsArray.like(src)){let result=[];for(let s=0;s<src.length;s++)result[s]=_._strRightSingle_(src[s],ins,cinterval);return result}return _._strRightSingle_(src,ins,cinterval)},insideOf:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},insideOf_:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},outsideOf:function outsideOf(src,begin,end){let beginOf,endOf;if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(3===arguments.length,"Expects exactly three arguments"),void 0!==(beginOf=_.strBeginOf(src,begin))&&void 0!==(endOf=_.strEndOf(src,end)))return beginOf+endOf},_removedBegin:function _removedBegin(src,begin){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}");let result=src;let beginOf=_._strBeginOf(result,begin);return void 0!==beginOf&&(result=result.substr(beginOf.length,result.length)),result},_removedEnd:function _removedEnd(src,end){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}");let result=src;let endOf=_._strEndOf(result,end);return void 0!==endOf&&(result=result.substr(0,result.length-endOf.length)),result},replaceBegin:function replaceBegin(src,begin,ins){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.strIs(ins)||_.longIs(ins),"Expects {-ins-} as string/array of strings"),_.longIs(begin)&&_.longIs(ins)&&_.assert(begin.length===ins.length),begin=_.array.as(begin);let result=_.array.as(src).slice();for(let k=0,srcLength=result.length;k<srcLength;k++)for(let j=0,beginLength=begin.length;j<beginLength;j++)if(_.strBegins(result[k],begin[j])){let prefix=_.longIs(ins)?ins[j]:ins;_.assert(_.strIs(prefix)),result[k]=prefix+_.strRemoveBegin(result[k],begin[j]);break}return 1===result.length&&_.strIs(src)?result[0]:result},replaceEnd:function replaceEnd(src,end,ins){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.strIs(ins)||_.longIs(ins),"Expects {-ins-} as string/array of strings"),_.longIs(end)&&_.longIs(ins)&&_.assert(end.length===ins.length),end=_.array.as(end);let result=_.array.as(src).slice();for(let k=0,srcLength=result.length;k<srcLength;k++)for(let j=0,endLength=end.length;j<endLength;j++)if(_.strEnds(result[k],end[j])){let postfix=_.longIs(ins)?ins[j]:ins;_.assert(_.strIs(postfix)),result[k]=_.strRemoveEnd(result[k],end[j])+postfix;break}return 1===result.length&&_.strIs(src)?result[0]:result},replace:function replace(src,ins,sub){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.strsAreAll(sub),"Expects {-sub-} as string/array of strings"),_.longIs(ins)&&_.longIs(sub)&&_.assert(ins.length===sub.length),ins=_.array.as(ins);for(let i=0;i<ins.length;i++)_.assert(""!==ins[i],"{-ins-} should be a string with length");let result=_.array.as(src).slice();for(let i=0;i<result.length;i++)result[i]=_.strSplit({src:result[i],delimeter:ins,quoting:0,stripping:0,preservingEmpty:1,preservingDelimeters:1,onDelimeter:(e,k)=>_.strIs(sub)?sub:sub[k]}),result[i]=result[i].join("");return 1===result.length&&_.strIs(src)?result[0]:result},strip:function strip(o){(_.strIs(o)||_.arrayIs(o))&&(o={src:o}),_.assert(1===arguments.length,"Expects single argument"),_.routine.options(strip,o),o.stripper=function stripperNormalize(){let stripper=o.stripper;return _.bool.likeTrue(o.stripper)?stripper=strip.defaults.stripper:_.arrayIs(o.stripper)?_.assert(_.strsAreAll(o.stripper),"Expects characters in container {-o.stripper-}"):_.strIs(o.stripper)?(stripper=_.regexpEscape(o.stripper),stripper=new RegExp(stripper,"g")):_.regexpIs(o.stripper)||_.assert(0,"Unexpected type of {-o.stripper-}. Expects either a String, an Array or a Regexp {-o.stripper-}"),stripper}();let stripRoutine=_.regexpIs(o.stripper)?function singleStripByRegexp(src){return src.replace(o.stripper,"")}:function singleStripByArrayOfStrings(src){let begin=0;for(;begin<src.length&&-1!==o.stripper.indexOf(src[begin]);begin++);let end=src.length-1;for(;end>=0&&-1!==o.stripper.indexOf(src[end]);end--);return begin>=end?"":src.substring(begin,end+1)};if(_.arrayIs(o.src)){_.assert(_.strsAreAll(o.src),"Expects strings {-o.srs-}");let result=[];for(let i=0;i<o.src.length;i++)result[i]=stripRoutine(o.src[i]);return result}return _.assert(_.strIs(o.src)),stripRoutine(o.src)},stripLeft:function stripLeft(o){return(_.strIs(o)||_.arrayIs(o))&&(o={src:o}),_.routine.options(stripLeft,o),_.assert(1===arguments.length,"Expects single argument"),_.strStrip(o)},stripRight:function stripRight(o){
return(_.strIs(o)||_.arrayIs(o))&&(o={src:o}),_.routine.options(stripRight,o),_.assert(1===arguments.length,"Expects single argument"),_.strStrip(o)},_removeAllSpaces:function _removeAllSpaces(src,sub){return _.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(src)),void 0===sub&&(sub=""),src.replace(/\s/g,sub)},_stripEmptyLines:function _stripEmptyLines(srcStr){let result="";let lines=srcStr.split("\n");_.assert(_.strIs(srcStr)),_.assert(1===arguments.length,"Expects single argument");for(let l=0;l<lines.length;l+=1){let line=lines[l];_.strStrip(line)&&(result+=line+"\n")}return result.substring(0,result.length-1)},splitsCoupledGroup:function splitsCoupledGroup(o){_.arrayIs(o)&&(o={splits:o}),(o=_.routine.options(splitsCoupledGroup,o)).prefix=_.array.as(o.prefix),o.postfix=_.array.as(o.postfix),_.assert(1===arguments.length),_.assert(_.regexpsLikeAll(o.prefix)),_.assert(_.regexpsLikeAll(o.postfix));let begins=[];for(let i=0;i<o.splits.length;i++){let element=o.splits[i];if(_.regexpsTestAny(o.prefix,element))begins.push(i);else if(_.regexpsTestAny(o.postfix,element)){if(0===begins.length&&!o.allowingUncoupledPostfix)throw _.err(`"${element}" does not have complementing openning\n`);if(0===begins.length)continue;let begin=begins.pop();let l=i-begin;_.assert(l>=0);let newElement=o.splits.splice(begin,l+1,null);o.splits[begin]=newElement,i-=l}}if(begins.length&&!o.allowingUncoupledPrefix){debugger;throw _.err(`"${begins[begins.length-1]}" does not have complementing closing\n`)}return o.splits},splitsUngroupedJoin:function splitsUngroupedJoin(o){_.arrayIs(o)&&(o={splits:o});let s=(o=_.routine.options(splitsUngroupedJoin,o)).splits.length-1;let l=null;for(;s>=0;){let split=o.splits[s];_.strIs(split)?null===l&&(l=s):null!==l&&join(),s-=1}return null!==l&&join(),o.splits;function join(){if(s+1<l){let element=o.splits.slice(s+1,l+1).join("");o.splits.splice(s+1,l+1,element)}l=null}},splitsQuotedRejoin:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},splitsDropDelimeters:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},splitsStrip:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},splitsDropEmpty:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},splitFast:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},split:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},splitNonPreserving:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},splitInlined:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},splitInlinedStereo_:function splitInlinedStereo_(o){_.strIs(o)&&(o={src:o}),o.quotingPrefixes=o.quotingPrefixes||['"'],o.quotingPostfixes=o.quotingPostfixes||['"'],_.assert(this===_),_.assert(_.strIs(o.src)),_.assert(_.object.isBasic(o)),_.assert(1===arguments.length,"Expects single argument"),_.routine.options(splitInlinedStereo_,o);let isDefaultOnInlined=true;null===o.onInlined?o.onInlined=(e=>[e]):(_.assert(_.routine.is(o.onInlined),"Expects a routine as option::onInlined"),isDefaultOnInlined=false);let end=function handleTrivial(){let delimLeftPosition=o.src.indexOf(o.prefix);let delimRightPosition=o.src.indexOf(o.postfix);return-1===delimLeftPosition||-1===delimRightPosition?o.preservingOrdinary?[o.src]:[]:o.preservingOrdinary||o.preservingInlined?1===o.src.split(o.prefix).length&&(o.preservingOrdinary?[o.src]:[]):[]}();if(false!==end)return end;let replacementForPrefix="𠌰";let isReplacedPrefix=false;let splitOptions=_.mapOnly_(null,o,split.defaults);splitOptions.preservingDelimeters=1,splitOptions.delimeter=o.prefix===o.postfix?o.prefix:[o.prefix,o.postfix],splitOptions.stripping=0,splitOptions.preservingEmpty=1;let result=_.strSplit(splitOptions);return result=function preprocessBeforeJoin(array){let ordinary="";let result=[];for(let i=0;i<array.length;i++)array[i]===o.prefix&&array[i+2]===o.postfix?(pushOrdinary(result,ordinary),o.preservingInlined&&(result.push(array[i]),result.push(o.stripping?array[i+1].trim():array[i+1]),result.push(array[i+2])),i+=2,ordinary=""):ordinary+=array[i];return pushOrdinary(result,ordinary),result}(result),result=_.strSplitsQuotedRejoin({splits:result,delimeter:[o.prefix,o.postfix],quoting:1,quotingPrefixes:[o.prefix],quotingPostfixes:[o.postfix],preservingQuoting:o.preservingDelimeters,inliningQuoting:0,onQuoting:o.preservingEmpty?function escapeInlined(func){return function(el){return _.escape.wrap(func(el))}}(o.onInlined):o.onInlined}),o.preservingEmpty&&function handlePreservingEmpty(){_.escape.is(result[0])&&result.unshift(""),_.escape.is(result[result.length-1])&&result.push("");let len=result.length;for(let i=0;i<len;i++)_.escape.is(result[i])&&_.escape.is(result[i+1])&&(result.splice(i+1,0,""),len++)}(),function unescape(){for(let i=0;i<result.length;i++)_.escape.is(result[i])&&(result[i]=_.escape.unwrap(result[i]))}(),o.preservingDelimeters&&!o.inliningDelimeters&&isDefaultOnInlined&&function splitInlined(){result=result.map(el=>{return _.arrayIs(el)&&(el=[o.prefix,el[0].slice(1,-1),o.postfix]),el})}(),isReplacedPrefix&&(result=result.map(el=>{return _.strIs(el)?el.replace(replacementForPrefix,o.prefix):el})),result;function pushOrdinary(result,ordinary){if(o.preservingOrdinary&&ordinary)if(ordinary===o.prefix)result.push(replacementForPrefix),isReplacedPrefix=true;else{if(ordinary=o.stripping?ordinary.trim():ordinary,o.onOrdinary){ordinary=o.onOrdinary(ordinary)||ordinary}result.push(ordinary)}}},from:function from(src){return null===src?src:void 0===src?src:_.primitive.is(src)?String(src):_.bufferAnyIs(src)?_.bufferToStr(src):(_.assert(_.strIs(src)),src)},isolate:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},isolateLeftOrNone:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},isolateLeftOrAll:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},isolateRightOrNone:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},isolateRightOrAll:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)},isolateInsideSignle:function isolateInsideSignle(src,begin,end){let b,e;if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(2===arguments.length||3===arguments.length),void 0===end){let pairs=arguments[1];_.assert(_.strIs(pairs)||_.arrayIs(pairs)),pairs=_.strQuotePairsNormalize(pairs);let l=0;let begin=[];for(let q=0;q<pairs.length;q++){let quotingPair=pairs[q];begin.push(quotingPair[0])}do{if(void 0===(b=_.strLeft_(src,begin,[l,src.length-1])).entry)return notFound();_.assert(_.number.is(b.instanceIndex));let end=pairs[b.instanceIndex][1];if(void 0!==(e=_.strRight_(src,end,Math.min(b.index,src.length))).entry)break;l=b.index+1}while(l<src.length);if(void 0===e.entry)return notFound()}else{if(void 0===(b=_.strLeft_(src,begin)).entry)return notFound();if(void 0===(e=_.strRight_(src,end,Math.min(b.index,src.length))).entry)return notFound()}return e.index<b.index+b.entry.length?notFound():[src.substring(0,b.index),b.entry,src.substring(b.index+b.entry.length,e.index),e.entry,src.substring(e.index+e.entry.length,src.length)];function notFound(){return["",void 0,src,void 0,""]}},isolateInside:function isolateInside(src,begin,end){if(_.assert(2===arguments.length||3===arguments.length),_.argumentsArray.like(src)){let result=[];for(let s=0;s<src.length;s++)result[s]=_.strIsolateInsideSignle(src[s],begin,end);return result}return _.strIsolateInsideSignle(src,begin,end)}},_.entity._exportStringIsVisibleElement=function _exportStringIsVisibleElement(src,o){var isPrimitive=_.primitiveIs(src);var isArray=_.longIs(src);var isObject=!isArray&&_.objectLike(src);var type=_.entity.strTypeSecondary(src);return!isPrimitive&&"exportString"in src&&_.routineIs(src.exportString)&&_.instanceIs(src)?!(isObject&&o.noObject||isArray&&o.noArray):_.vectorAdapterIs(src)?!o.noRow:_.errIs(src)?!o.noError:"Function"===type?!o.noRoutine:"Number"===type?!o.noNumber&&!o.noAtomic:"String"===type?!o.noString&&!o.noAtomic:"Date"===type?!o.noDate:isArray?!(o.noArray||!o.wrap&&!(src=_.entity._exportStringFromArrayFiltered(src,o)).length):isObject?!o.noObject&&!(!o.wrap&&!_.entity._exportStringFromObjectKeysFiltered(src,o).length):!isPrimitive&&_.routineIs(src.toString)?!(isObject&&o.noObject||isArray&&o.noArray):!(o.noAtomic||o.noUndefines&&void 0===src)},_.entity._exportStringIsSimpleElement=function _exportStringIsSimpleElement(element,o){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.object.isBasic(o)||void 0===o,"Expects map {-o-}"),_.strIs(element)?!(element.length>40||!o.escaping&&-1!==element.indexOf("\n")):element&&!_.object.isBasic(element)&&_.numberIs(element.length)?!element.length:_.object.isBasic(element)||_.objectLike(element)?!_.entity.lengthOf(element):_.primitiveIs(element)},_.entity._exportStringFromStr=function _exportStringFromStr(src,o){var result="";_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.object.isBasic(o)||void 0===o,"Expects map {-o-}"),void 0===o.stringWrapper&&(o.stringWrapper="'");var q=o.stringWrapper;if(o.widthLimit)void 0!==o.shortDelimeter&&null!==o.shortDelimeter||(o.shortDelimeter=_.strShort_.defaults.delimeter||"..."),result=_.strShort_({src:_.strEscape(src),widthLimit:o.widthLimit-2*q.length,heightLimit:o.heightLimit||0,delimeter:o.shortDelimeter}).result;else if(o.escaping){if(void 0===o.stringWrapper)debugger;result=_.strEscape({src:src,stringWrapper:o.stringWrapper})}else result=src;return q&&(result=q+result+q),result},_.entity._exportStringFromSymbol=function _exportStringFromSymbol(src,o){let text=src.toString().slice(7,-1);return`{- Symbol${text?" "+text+" ":" "}-}`},_.entity._exportStringFromBufferRaw=function _exportStringFromBufferRaw(src,o){var result="";return _.assert(_.bufferRawIs(src)),new U8x(src).forEach(function(e,k){0!==k&&(result+=", "),result+="0x"+e.toString(16)}),{text:result="( new U8x([ "+result+" ]) ).buffer",simple:true}},_.entity._exportStringFromBufferTyped=function _exportStringFromBufferTyped(src,o){var result="";return _.assert(_.bufferTypedIs(src)),src.forEach(function(e,k){0!==k&&(result+=", "),result+=_.entity._exportStringFromNumber(e,o)}),{text:result="( new "+src.constructor.name+"([ "+result+" ]) )",simple:true}},_.entity._exportStringFromBufferNode=function _exportStringFromBufferNode(src,o){var result="";_.assert(_.bufferNodeIs(src));let k=0;for(let value of src.values())0!==k&&(result+=", "),result+=value,++k;return{text:result="( BufferNode.from([ "+result+" ]) )",simple:true}},_.entity._exportStringFromArray=function _exportStringFromArray(src,o){var result="";if(_.assert(2===arguments.length),_.assert(src&&_.numberIs(src.length)),_.assert(_.object.isBasic(o)||void 0===o,"Expects map {-o-}"),o.level>=o.levels)return{text:_.entity._exportStringShortAct(src,o),simple:1};var optionsItem=_.props.extend(null,o);if(optionsItem.tab=o.tab+o.dtab,optionsItem.level=o.level+1,optionsItem.prependTab=0,0===src.length)return o.wrap?{text:"[]",simple:1}:{text:"",simple:1};var length=(src=_.entity._exportStringFromArrayFiltered(src,o)).length;var simple=!optionsItem.multiline;if(simple&&(simple=length<8),simple)for(var i=0;i<length&&(simple=_.entity._exportStringIsSimpleElement(src[i],optionsItem));i++);return{text:result+=_.entity._exportStringFromContainer({values:src,optionsContainer:o,optionsItem:optionsItem,simple:simple,prefix:"[",postfix:"]"}),simple:simple}},_.entity._exportStringFromArrayFiltered=function _exportStringFromArrayFiltered(src,o){_.assert(2===arguments.length);var optionsItem=_.props.extend(null,o);optionsItem.level=o.level+1;var v=0;var length=src.length;for(var i=0;i<length;i++)v+=!!_.entity._exportStringIsVisibleElement(src[i],optionsItem);if(v!==length){var i2=0;i=0;var src2=_.long.makeUndefined(src,v);for(;i<length;)_.entity._exportStringIsVisibleElement(src[i],optionsItem)&&(src2[i2]=src[i],i2+=1),i+=1;length=(src=src2).length}return src},_.entity._exportStringFromObject=function _exportStringFromObject(src,o){var result="";if(_.assert(2===arguments.length),_.assert(_.objectLike(src)||"Error"===_.entity.strTypeSecondary(src)),_.assert(_.object.isBasic(o)||void 0===o,"Expects map {-o-}"),o.level>=o.levels)return{text:_.entity._exportStringShortAct(src,o),simple:1};if(!o.noObject){var optionsItem=_.props.extend(null,o);optionsItem.noObject=o.noSubObject?1:optionsItem.noObject,optionsItem.tab=o.tab+o.dtab,optionsItem.level=o.level+1,optionsItem.prependTab=0;var keys=_.entity._exportStringFromObjectKeysFiltered(src,o);var length=keys.length;if(0===length)return o.wrap?{text:"{}",simple:1}:{text:"",simple:1};var simple=!optionsItem.multiline;if(simple&&(simple=length<4),simple)for(var k in src)if(!(simple=_.entity._exportStringIsSimpleElement(src[k],optionsItem)))break;return{text:result+=_.entity._exportStringFromContainer({values:src,names:keys,optionsContainer:o,optionsItem:optionsItem,simple:simple,prefix:"{",postfix:"}",keyWrapper:o.keyWrapper,stringWrapper:o.stringWrapper}),simple:simple}}},_.entity._exportStringFromObjectKeysFiltered=function _exportStringFromObjectKeysFiltered(src,o){_.assert(2===arguments.length);var optionsItem=_.props.extend(null,o);optionsItem.noObject=o.noSubObject?1:optionsItem.noObject;var keys=_.props._keys({srcMap:src,onlyOwn:o.onlyOwn,onlyEnumerable:o.onlyEnumerable||void 0===o.onlyEnumerable||null===o.onlyEnumerable||false});for(var n=0;n<keys.length;n++)_.entity._exportStringIsVisibleElement(src[keys[n]],optionsItem)||(keys.splice(n,1),n-=1);return keys},_.entity._exportStringFromHashMap=function _exportStringFromHashMap(src,o){var result="HashMap\n";return _.assert(src instanceof HashMap),src.forEach(function(e,k){result+="\n"+k+" : "+_.entity.exportStringDiagnosticShallow(e)}),{text:result,simple:0}},_.entity._exportStringFromSet=function _exportStringFromSet(src,o){let result=_.entity._exportStringFromArray(_.array.from(src),o);return result.text=`new Set(${result.text})`,result},_.entity._exportStringShortAct=function _exportStringShortAct(src,o){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.object.isBasic(o),"Expects map {-o-}");var result="";try{if(_.strIs(src)){var o2={widthLimit:o.widthLimit?Math.min(o.widthLimit,40):40,heightLimit:o.heightLimit||0,stringWrapper:o.stringWrapper,prefix:o.prefix,postfix:o.postfix,infix:o.infix,shortDelimeter:o.shortDelimeter};result=_.entity._exportStringFromStr(src,o2)}else _.errIs(src)?result+=_ObjectToString.call(src):_.routineIs(src)?result+=_.entity._exportStringFromRoutine(src,o):_.numberIs(src)?result+=_.entity._exportStringFromNumber(src,o):result=_.entity.exportStringDiagnosticShallow(src)}catch(err){throw _.err(err)}return result},_.entity._exportStringFromContainer=function _exportStringFromContainer(o){var result="";_.assert(arguments.length>0),_.assert(_.object.isBasic(o)||void 0===o,"Expects map {-o-}"),_.assert(_.arrayIs(o.names)||!o.names);var values=o.values;var names=o.names;var optionsContainer=o.optionsContainer;var optionsItem=o.optionsItem;var length=names?names.length:values.length;var simple=o.simple;var prefix=o.prefix;var postfix=o.postfix;var limit=optionsContainer.limitElementsNumber;var l=length;void 0===o.keyWrapper&&(o.keyWrapper=""),limit>0&&limit<l&&(l=limit,optionsContainer.limitElementsNumber=0);var linePostfix="";var r;optionsContainer.comma&&(linePostfix+=optionsContainer.comma),simple||(linePostfix+="\n"+optionsItem.tab),optionsContainer.prependTab&&(result+=optionsContainer.tab),optionsContainer.wrap&&(result+=prefix,simple?l&&(result+=" "):result+="\n"+optionsItem.tab),optionsContainer.json&&(optionsContainer.keyWrapper='"');var written=0;for(var n=0;n<l;n++){if(_.assert(optionsItem.tab===optionsContainer.tab+optionsContainer.dtab),_.assert(optionsItem.level===optionsContainer.level+1),r=names?_.entity._exportString(values[names[n]],optionsItem):_.entity._exportString(values[n],optionsItem),_.assert(_.object.isBasic(r)&&_.strIs(r.text)),_.assert(optionsItem.tab===optionsContainer.tab+optionsContainer.dtab),written>0?result+=linePostfix:optionsContainer.wrap||names&&simple||(result+=optionsItem.dtab),names){if(void 0===o.keyWrapper)debugger;let name=_.strEscape({src:names[n],stringWrapper:o.keyWrapper});optionsContainer.keyWrapper?result+=optionsContainer.keyWrapper+name+optionsContainer.keyWrapper+optionsContainer.colon:result+=name+optionsContainer.colon,r.simple||(result+="\n"+optionsItem.tab)}r.text&&(result+=r.text,written+=1)}return length-l>0&&(result+=function other(length){return linePostfix+"[ ... other "+(length-l)+" element(s) ]"}(length)),optionsContainer.wrap&&(simple?l&&(result+=" "):result+="\n"+optionsContainer.tab,result+=postfix),result},_.entity._exportStringFromNumber=function _exportStringFromNumber(src,o){var result="";if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.numberIs(src)&&_.object.isBasic(o)),null!==o.precision&&(o.precision<1||o.precision>21))throw _.err("RangeError");if(null!==o.fixed&&(o.fixed<0||o.fixed>20))throw _.err("RangeError");return _.numberIs(o.precision)?result+=src.toPrecision(o.precision):_.numberIs(o.fixed)?result+=src.toFixed(o.fixed):result+=String(src),Object.is(src,-0)&&(result="-"+result),result},_.entity._exportString=function _exportString(src,o){if(null!==o.precision&&(o.precision<1||o.precision>21))throw _.err("RangeError");if(null!==o.fixed&&(o.fixed<0||o.fixed>20))throw _.err("RangeError");var result="";var simple=1;var type=_.entity.strTypeSecondary(src);if(o.level>=o.levels)return{text:_.entity._exportStringShortAct(src,o),simple:1};if(_.entity._exportStringIsVisibleElement(src,o)){var isPrimitive=_.primitiveIs(src);var isLong=_.longIs(src);_.arrayIs(src);var isObject=!isLong&&_.object.isBasic(src);if(!isLong&&_.objectLike(src),!isPrimitive&&"exportString"in src&&_.routineIs(src.exportString)&&_.instanceIs(src)){_.assert(0===src.exportString.length||1===src.exportString.length,"Method exportString should expect either none or one argument");var r=src.exportString({it:o});if(_.object.isBasic(r))_.assert(void 0!==r.simple&&void 0!==r.text),simple=r.simple,result+=r.text;else{if(!_.strIs(r))throw _.err("unexpected");simple=-1===r.indexOf("\n"),result+=r}}else if(_.errIs(src))if(o.errorAsMap){void 0!==o.onlyEnumerable&&null!==o.onlyEnumerable||(o.onlyEnumerable=1);var o2=_.props.extend(null,o);o2.onlyEnumerable=0,result+=(r=_.entity._exportStringFromObject(src,o2)).text,simple=r.simple}else result+=src.toString();else"Function"===type?result+=_.entity._exportStringFromRoutine(src,o):"Number"===type&&_.numberIs(src)?result+=_.entity._exportStringFromNumber(src,o):"BigInt"===type?result+=_.entity._exportStringFromBigInt(src,o):"String"===type?result+=_.entity._exportStringFromStr(src,o):"Date"===type?o.jsonLike?result+='"'+src.toISOString()+'"':o.jsLike?result+="new Date( '"+src.toISOString()+"' )":result+=src.toISOString():"Symbol"===type?result+=_.entity._exportStringFromSymbol(src,o):_.bufferRawIs(src)?(result+=(r=_.entity._exportStringFromBufferRaw(src,o)).text,simple=r.simple):_.bufferTypedIs(src)?(result+=(r=_.entity._exportStringFromBufferTyped(src,o)).text,simple=r.simple):_.bufferNodeIs(src)?(result+=(r=_.entity._exportStringFromBufferNode(src,o)).text,simple=r.simple):isLong?(result+=(r=_.entity._exportStringFromArray(src,o)).text,simple=r.simple):isObject?(result+=(r=_.entity._exportStringFromObject(src,o)).text,simple=r.simple):_.hashMapLike(src)?(result+=(r=_.entity._exportStringFromHashMap(src,o)).text,simple=r.simple):_.setLike(src)?(result+=(r=_.entity._exportStringFromSet(src,o)).text,simple=r.simple):!isPrimitive&&_.routineIs(src.toString)?result+=src.toString():o.jsonLike?result+=void 0===src||NaN===src?"null":String(src):result+=String(src);return{text:result,simple:simple}}},_.entity.exportString=function _exportStringFine_functor(){var primeFilter={noRoutine:0,noAtomic:0,noArray:0,noObject:0,noRow:0,noError:0,noNumber:0,noString:0,noDate:0,noUndefines:0};var composes={levels:1,level:0,wrap:1,stringWrapper:null,keyWrapper:"",prependTab:1,errorAsMap:0,onlyOwn:1,tab:"",dtab:"  ",colon:" : ",limitElementsNumber:0,widthLimit:0,heightLimit:0,format:"string.diagnostic"};var optional={noSubObject:0,onlyRoutines:0,onlyEnumerable:1,precision:null,fixed:null,comma:null,multiline:0,multilinedString:null,escaping:0,jsonLike:0,jsLike:0};var def;Object.preventExtensions(primeFilter),Object.preventExtensions(composes),Object.preventExtensions(optional),Object.preventExtensions({}),def=_.props.extend(null,optional,primeFilter,composes);var routine=function exportStringFine(src,o){_.assert(1===arguments.length||2===arguments.length),_.assert(_.object.isBasic(o)||void 0===o,"Expects map {-o-}");o=o||Object.create(null);if(Object.create(null),!_.primitiveIs(src)&&"exportString"in src&&_.routineIs(src.exportString)&&_.instanceIs(src)&&_.object.isBasic(src.exportString.defaults)&&src.exportString.defaults,void 0!==o.levels&&null!==o.levels||(o.jsonLike||o.jsLike)&&(o.levels=1<<20),o.jsLike&&(void 0!==o.escaping&&null!==o.escaping||(o.escaping=1),void 0!==o.keyWrapper&&null!==o.keyWrapper||(o.keyWrapper='"'),void 0!==o.stringWrapper&&null!==o.stringWrapper||(o.stringWrapper="`")),o.jsonLike&&(void 0!==o.escaping&&null!==o.escaping||(o.escaping=1),void 0!==o.keyWrapper&&null!==o.keyWrapper||(o.keyWrapper='"'),void 0!==o.stringWrapper&&null!==o.stringWrapper||(o.stringWrapper='"')),_.map.assertHasOnly(o,def),(void 0===(o=_.props.supplement(o,def)).multilinedString||null===o.multilinedString)&&(o.multilinedString="`"===o.stringWrapper),void 0!==o.stringWrapper&&null!==o.stringWrapper||(o.multilinedString?o.stringWrapper="`":o.stringWrapper="'"),o.onlyRoutines){for(var f in _.assert(!o.noRoutine,"Expects {-o.noRoutine-} false if( o.onlyRoutines ) is true"),primeFilter)o[f]=1;o.noRoutine=0}void 0!==o.comma&&null!==o.comma||(o.comma=o.wrap?", ":" "),o.comma&&!_.strIs(o.comma)&&(o.comma=", "),_.assert(_.strIs(o.stringWrapper),"Expects string {-o.stringWrapper-}"),o.jsonLike&&(o.jsLike||_.assert('"'===o.stringWrapper,"Expects double quote ( o.stringWrapper ) true if either ( o.jsonLike ) or ( o.jsLike ) is true"),_.assert(!o.multilinedString,"Expects {-o.multilinedString-} false if either ( o.jsonLike ) or ( o.jsLike ) is true to make valid JSON"));var r=_.entity._exportString(src,o);return r?r.text:""};return routine.defaults=def,routine.methods=_.entity.exportStringMethods,routine.fields=_.entity.exportStringFields,routine}(),_.entity.exportString.defaults={noSubObject:0,onlyRoutines:0,onlyEnumerable:1,precision:null,fixed:null,comma:null,multiline:0,multilinedString:null,escaping:0,jsonLike:0,jsLike:0,noRoutine:0,noAtomic:0,noArray:0,noObject:0,noRow:0,noError:0,noNumber:0,noString:0,noDate:0,noUndefines:0,levels:1,level:0,wrap:1,stringWrapper:null,keyWrapper:"",prependTab:1,errorAsMap:0,onlyOwn:1,tab:"",dtab:"  ",colon:" : ",limitElementsNumber:0,widthLimit:0,heightLimit:0,format:"string.diagnostic"},_.entity.namespaceForExporting=function namespaceForExporting(src){return _.primitive.is(src)?_.primitive:_.date.is(src)?_.date:_.regexp.is(src)?_.regexp:_.set.like(src)?_.set:_.hashMap.like(src)?_.hashMap:_.routine.is(src)?_.routine:_.buffer.like(src)?_.buffer:_.long.like(src)?_.long:_.vector.like(src)?_.vector:_.countable.like(src)?_.countable:_.aux.like(src)?_.aux:_.object.like(src)?_.object:null},_.entity._exportStringShallow=function _exportStringShallow(src,o){_.assert(2===arguments.length),_.assert(_.number.is(o.widthLimit)&&o.widthLimit>=0),_.assert(_.number.is(o.heightLimit)&&o.heightLimit>=0),_.assert(void 0===o.src),_.assert("string.diagnostic"===o.format||"string.code"===o.format);let result="";let method="string.diagnostic"===o.format?"exportStringDiagnosticShallow":"exportStringCodeShallow";try{let namespace=this.namespaceForExporting(src);null===namespace&&(_.assert(0,"not tested"),namespace=_.blank),result=namespace[method](src),result=_.strShort_({src:result,widthLimit:o.widthLimit,heightLimit:o.heightLimit}).result}catch(err){debugger;throw err}return result},_.entity._exportStringShallow.defaults={format:null,widthLimit:0,heightLimit:0},_.entity._exportStringDiagnosticShallow=function _exportStringDiagnosticShallow(src,o){let namespace=this.namespaceForExporting(src);return namespace?namespace.exportStringDiagnosticShallow(src):_.strShort_(String(src)).result},_.entity.exportStringDiagnosticShallow=function exportStringDiagnosticShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects one or two arguments"),(o=_.aux.supplement(o||null,exportStringDiagnosticShallow.defaults)).format=o.format||exportStringDiagnosticShallow.defaults.format,_.entity._exportStringShallow(src,o)},_.entity.exportStringDiagnosticShallow.defaults={format:"string.diagnostic",widthLimit:0,heightLimit:0},_.entity._exportStringFromRoutine=function _exportStringFromRoutine(src,o){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.routineIs(src),"Expects routine {-src-}"),o.jsLike?_.routineSourceGet?_.routineSourceGet(src):src.toString():"[ routine "+(src.name||src._name||"without name")+" ]"},_.error._setupUncaughtErrorHandler2=function _setupUncaughtErrorHandler2(){function _handleUncaughtHeadBrowser(args){debugger;let[message,sourcePath,lineno,colno,error]=args;return[{err:new Error(args[0]),args:args}]}_realGlobal_._setupUncaughtErrorHandlerDone||(_realGlobal_._setupUncaughtErrorHandlerDone=1,_realGlobal_.process&&"function"==typeof _realGlobal_.process.on?(_realGlobal_.process.on("uncaughtException",_.error._handleUncaught1),_realGlobal_.process.on("unhandledRejection",_.error._handleUncaughtPromise1),_.error._handleUncaughtHead=function _handleUncaughtHeadNode(args){return[{err:args[0],args:args}]},"browser"===Config.interpreter&&(_.error._handleUncaughtHead=_handleUncaughtHeadBrowser)):Object.hasOwnProperty.call(_realGlobal_,"onerror")&&(_.error._handleUncaught0=_realGlobal_.onerror,_realGlobal_.onerror=_.error._handleUncaught1,_.error._handleUncaughtHead=_handleUncaughtHeadBrowser))},_.error._setupUncaughtErrorHandler9=function _setupUncaughtErrorHandler9(){if(!_realGlobal_._setupUncaughtErrorHandlerDone){debugger;throw Error("setup0 should be called first")}_realGlobal_._setupUncaughtErrorHandlerDone>1||(_realGlobal_._setupUncaughtErrorHandlerDone=2,_global.process&&_.routine.is(_global.process.on)?_.error._handleUncaughtHead=function _errHeadNode(args){return[{err:args[0],args:args}]}:Object.hasOwnProperty.call(_global,"onerror")&&(_.error._handleUncaughtHead=function _errHeadBrowser(args){let[message,sourcePath,lineno,colno,error]=args;let err=error||message;return _._err&&(err=_._err({args:[error||message],level:1,fallBackStack:"at handleError @ "+sourcePath+":"+lineno,throwLocation:{filePath:sourcePath,line:lineno,col:colno}})),[{err:err,args:args}]}))},_.error._handleUncaughtHead=function _errHeadNode(args){return[{err:args[0],args:args}]},_.error._handleUncaught1=function _handleUncaught1(){debugger;let args=_.error._handleUncaughtHead(arguments);let result=_.error._handleUncaught2.apply(this,args);return _.error._handleUncaught0&&_.error._handleUncaught0.apply(this,arguments),result},_.error._handleUncaughtPromise1=function _handleUncaughtPromise1(err,promise){let o=Object.create(null);return o.promise=promise,o.err=err,o.origination="uncaught promise error",_.error._handleUncaught2.call(this,o)},_.error._handleUncaught2=function _handleUncaught2(o){const __=_global_.globals&&_globals_.testing.wTools;const process0=function processNamespaceGet(){let result;return!result&&_.process&&_.process.exitReason&&(result=_.process),!result&&_realGlobal_&&_realGlobal_.wTools&&_realGlobal_.wTools.process&&_realGlobal_.wTools.process.exitReason&&(result=_realGlobal_.wTools.process),!result&&_realGlobal_._globals_.testing&&__&&__.process&&__.process.exitReason&&(result=__.process),result||(result=_.process),result}();function exitError(err,rewriting){let set=false;debugger;if(process0&&process0.exit)try{process0.exitCode(-1),process0.exitReason()||process0.exitReason(err),set=true}catch(err2){debugger;console.log(err2)}if(!set)try{_global.process&&(process.exitCode||(process.exitCode=-1),set=true)}catch(err2){}}!function optionsRefine(){o.origination||(o.origination="uncaught error"),o.prefix=`--------------- ${o.origination} ---------------\x3e\n`,o.postfix=`--------------- ${o.origination} ---------------<\n`,o.logger=_global.logger||_global.console}(),o.err=function errRefine(err){try{return _.error.process(err)}catch(err2){return console.error(err2),err}}(o.err),function processUncaughtErrorEvent(){try{process0&&process0.eventGive&&process0.eventGive({event:"uncaughtError",origination:o.origination,err:o.err});for(let g in _realGlobal_._globals_){const _global=_realGlobal_._globals_[g];_global.wTools&&_global.wTools.process&&_global.wTools.process.eventGive&&_global.wTools.process!==process0&&_global.wTools.process.eventGive({event:"uncaughtError",origination:o.origination,err:o.err})}}catch(err2){debugger;console.log(err2),exitError(err2)}}(),_.error.isAttended(o.err)||(function consoleUnbar(){let Logger=function loggerClassGet(){let result;return!result&&_.Logger&&_.Logger.ConsoleBar&&(result=_.Logger),!result&&_realGlobal_&&_realGlobal_.wTools&&_realGlobal_.wTools.Logger&&_realGlobal_.wTools.Logger.ConsoleBar&&(result=_realGlobal_.wTools.Logger),!result&&__&&__.Logger&&__.Logger.ConsoleBar&&(result=__.Logger),result}();try{Logger&&Logger.ConsoleBar&&Logger.ConsoleIsBarred(console)&&Logger.ConsoleBar({on:0})}catch(err2){debugger;console.error(err2)}}(),console.error(o.prefix),function errLogFields(){if(!o.err.originalMessage&&_.object.like&&_.object.like(o.err))try{let props=Object.create(null);for(let k in o.err)props[k]=o.err[k];o.logger.error(_.entity.exportString(props));debugger}catch(err2){debugger;console.error(err2)}}(),function errLog(){try{_.error&&_.error._log?_.error._log(o.err,o.logger):console.error(o.err)}catch(err2){debugger;console.error(err2),console.error(o.err)}}(),console.error(o.postfix),function processExit(){if(exitError(o.err),process0&&process0.exit)try{process0.exit()}catch(err2){debugger;console.log(err2),exitError(o.err)}try{_global.process&&process.exit()}catch(err2){}}())},_.error._handleUncaught2.defaults={err:null,origination:null},_.event._chainGenerate=function _chainGenerate(args){let chain=[];_.assert(1===arguments.length),_.assert(_.longIs(args));for(let a=0;a<args.length-2;a++)chainMake(a);return chain.push([_.event.nameValueFrom(args[args.length-2]),args[args.length-1]]),_.assert(_.routine.is(args[args.length-1])),chain;function chainMake(a){let e1=_.event.nameValueFrom(args[a]);chain.push([e1,function on(){let self=this;let next=chain[a+1];if(_.routine.is(self.on))self.on(next[0],next[1]),self.eventHasHandler(e1,on)&&self.off(e1,on);else{let o=_.event.onHead(_.event.on,next);o.once=on.once,_.event._on(self,o),on.once||_.event.eventHasHandler(self,{eventName:e1,eventHandler:on})&&_.event.off(self,{callbackMap:{[e1]:on}})}}])}},_.event._chainToCallback=function _chainToCallback(args){return _.event._chainGenerate(args)[0][1]},_.event._chainValidate=function _chainValidate(chain){for(let i=0;i<chain.length-1;i++)_.assert(_.event.nameIs(chain[i]));return _.assert(_.routine.is(chain[chain.length-1])),true},_.event._callbackMapValidate=function _callbackMapValidate(callbackMap){_.assert(_.mapIs(callbackMap));for(let k in callbackMap){let callback=callbackMap[k];_.assert(_.routine.is(callback)||_.longIs(callback)),_.routine.is(callback)||_.event._chainValidate(callback)}},_.event.nameValueFrom=function nameValueFrom(name){return _.strIs(name)?name:(_.assert(_.event.nameIs(name)),name.value)},_.event.nameIs=function nameIs(name){return name instanceof _.event.Name},_.event.chainIs=function chainIs(src){return src instanceof _.event.Chain},_.event.Name=function Name(name){return this instanceof Name?(_.assert(1===arguments.length),_.assert(_.strIs(name)),this.value=name,this):_.event.nameIs(name)?name:new Name(...arguments)},_.event.Chain=function Chain(){if(!_.event.chainIs(this))return _.event.chainIs(arguments[0])?(_.assert(1===arguments.length,"Expects single Chain or set of event names"),arguments[0]):new Chain(...arguments);let result=_.array.make(arguments.length);_.assert(arguments.length>=1,"Expects events names");for(let i=0;i<arguments.length;i++)result[i]=_.event.Name(arguments[i]);return this.chain=result,this},_.event._on=function _on(edispatcher,o){_.routine.options(_on,o),_.assert(_.mapIs(o.callbackMap)),_.assert(_.object.isBasic(edispatcher)),_.assert(_.object.isBasic(edispatcher.events)),_.map.assertHasOnly(o.callbackMap,edispatcher.events,"Unknown kind of event"),_.assert(2===arguments.length);const once=!!o.once;let descriptors=Object.create(null);let append;append=o.first?_.arrayPrepend:_.arrayAppend;for(let c in o.callbackMap){let callback=o.callbackMap[c];descriptors[c]=descriptorMake(),_.longIs(callback)&&(callback=_.event._chainToCallback([c,...callback])),_.assert(_.routine.is(callback)),callback=callbackOn_functor.call(descriptors[c],callback,c),descriptors[c].off=off_functor.call(descriptors[c],edispatcher,{callbackMap:{[c]:callback}}),append(edispatcher.events[c],callback)}return descriptors;function callbackOn_functor(callback,name){let self=this;function callbackOn(){let result;return self.enabled&&(result=callback.apply(this,arguments),true===once&&_.event.off(edispatcher,{callbackMap:{[name]:callbackOn}})),result}return callbackOn.native=callback,callbackOn.native.once=once,callbackOn}function descriptorMake(){let descriptor=Object.create(null);return descriptor.off=null,descriptor.enabled=true,descriptor.first=o.first,descriptor.callbackMap=o.callbackMap,descriptor}function off_functor(edispatcher,o){return function(){return _.assert(0===arguments.length,"Expects no arguments."),_.event.off(edispatcher,o)}}},_.event._on.defaults={callbackMap:null,first:false,once:false},_.event.on=function on(edispatcher,o){return o.once=false,_.event._on(edispatcher,o)},_.event.onHead=function onHead(routine,args){let o;if(_.assert(_.longIs(args)),_.assert(2===arguments.length),2===args.length)if(_.assert(_.routine.is(args[1])),(o=Object.create(null)).callbackMap=Object.create(null),_.event.chainIs(args[0])){let chain=args[0].chain;o.callbackMap[chain[0].value]=_.longOnly_(null,chain,[1,chain.length-1]),o.callbackMap[chain[0].value].push(args[1])}else _.strIs(args[0])?o.callbackMap[args[0]]=args[1]:_.event.nameIs(args[0])?o.callbackMap[args[0].value]=args[1]:_.assert(0,"Expects Chain with names or single name of event.");else 1===args.length?o=args[0]:_.assert(0,"Expects single options map {-o-} or events Chain and callback as arguments.");return o},_.event.once=function once(edispatcher,o){return o.once=true,_.event._on(edispatcher,o)},_.event.off=function off(edispatcher,o){_.routine.options(off,o),_.assert(_.mapIs(o.callbackMap)),_.assert(_.object.isBasic(edispatcher)),_.assert(_.object.isBasic(edispatcher.events)),_.map.assertHasOnly(o.callbackMap,edispatcher.events,"Unknown kind of event"),_.assert(2===arguments.length);for(let c in o.callbackMap)null===o.callbackMap[c]?_.array.empty(edispatcher.events[c]):_.arrayRemoveOnceStrictly(edispatcher.events[c],o.callbackMap[c],callbackEqualize);return o;function callbackEqualize(callback,handler){return handler===callback||handler===callback.native}},_.event.off.defaults={callbackMap:null},_.event.eventHasHandler=function eventHasHandler(edispatcher,o){return _.routine.options(eventHasHandler,o),_.assert(_.strIs(o.eventName)),_.assert(_.routine.is(o.eventHandler)),_.assert(_.mapIs(edispatcher)),_.assert(_.mapIs(edispatcher.events)),_.assert(2===arguments.length),_.longHas(edispatcher.events[o.eventName],o.eventHandler,function handlerEqualize(callback,handler){return handler===callback||handler===callback.native})},_.event.eventHasHandler.defaults={eventName:null,eventHandler:null},_.event.eventGive=function eventGive(edispatcher,o){let was;_.assert(2===arguments.length),_.assert(!!edispatcher.events[o.event],`Unknown event ${o.event}`),_.assert(_.long.is(o.args),"Expects arguments {-o.args-}");let visited=[];do{was=visited.length;let events=edispatcher.events[o.event].slice();_.each(events,callback=>{if(!_.longHas(visited,callback)){visited.push(callback);try{callback.apply(edispatcher,o.args)}catch(err){o.onError(err,o)}}})}while(was!==visited.length)},_.event.eventGive.defaults={event:null,args:null,onError:null},_.event.eventGiveHead=function eventGiveHead(edispatcher,routine,args){let o=args[0];return _.assert(3===arguments.length,"Expects exactly three arguments."),_.assert(args.length>0),_.assert(_.aux.is(edispatcher.events),"Expects events dispatcher."),_.strIs(o)&&(o={event:o}),_.assert(_.aux.is(o),"Expects string or options map in {-o.args[ 1 ]-}."),null!==o.onError&&void 0!==o.onError||(o.onError=function onError(err,o){throw _.err(`Error on handing event ${o.event}\n`,err)}),_.map.assertHasOnly(o,routine.defaults),o.args?_.assert(1===args.length):o.args=args,o},_.each=function entityEach(src,onEach){if(_.assert(2===arguments.length),_.assert(onEach.length<=3),_.assert(_.routine.is(onEach)),_.longIs(src))for(let k=0;k<src.length;k++)onEach(src[k],k,src);else if(_.aux.is(src))for(let k in src)onEach(src[k],k,src);else onEach(src,void 0,void 0);return src},_.uri.isGlobal=function isGlobal(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string"),_.strHas(filePath,"://")},_.uri.parseConsecutive=function(){const _parse_body=function parse_body(o){let self=this;let result=Object.create(null);if(_.mapIs(o.srcPath)){if(_.map.assertHasOnly(o.srcPath,this.UriFull.propsExtension),o.srcPath.protocols)return o.srcPath;o.srcPath.full?o.srcPath=o.srcPath.full:o.srcPath=this.str(o.srcPath)}let postfixes="";!function longPathParse(){let isolates=_.strIsolateLeftOrNone.body({src:o.srcPath,delimeter:self.protocolToken,times:1,quote:false});isolates[1]&&(result.protocol=isolates[0]),result.longPath=isolates[2]}();let delimeter=[self.tagToken,self.hashToken,self.queryToken];return _.strHasAny(result.longPath,delimeter)&&function postfixesParse(delimeter){let rest="";let splits2=_.path.split(result.longPath);let left,s;for(s=0;s<splits2.length;s++){let split=splits2[s];if(!_.path._unescape(split).wasEscaped&&(left=_.strLeft_(split,delimeter)).entry){s>0?(result.longPath=splits2.slice(0,s).join(self.upToken),result.longPath+=self.upToken+split.slice(0,left.index)):result.longPath=split.slice(0,left.index),split=split.slice(left.index+1),splits2[s]=split,rest=splits2.slice(s).join(self.upToken);break}}left&&left.entry&&function restParse(rest,entry,delimeter){_.arrayRemoveOnceStrictly(delimeter,entry);let isolates=_.strIsolateLeftOrAll(rest,delimeter);entry===self.queryToken?result.query=isolates[0]:entry===self.hashToken?result.hash=isolates[0]:entry===self.tagToken&&(result.tag=isolates[0]),postfixes+=entry+isolates[0],isolates[1]&&restParse(isolates[2],isolates[1],delimeter)}(rest,left.entry,delimeter)}(delimeter),"full"===o.kind?(result.postfixedPath=result.longPath+postfixes,self._parseLongPath(result,result.longPath),result.protocol?result.protocols=result.protocol.split("+"):result.protocols=[],_.strIs(result.protocol)&&(result.origin=result.protocol+self.protocolToken+result.hostFull),result.full=o.srcPath):"consecutive"===o.kind||("atomic"===o.kind?(self._parseLongPath(result,result.longPath),delete result.hostFull,delete result.longPath):_.assert(0)),result};return _parse_body.defaults={srcPath:null,kind:"full"},_parse_body.components={protocol:null,query:null,hash:null,tag:null,protocols:null,postfixedPath:null,resourcePath:null,longPath:null,full:null,hostFull:null,host:null,port:null,user:null,origin:null},_parse_body.Kind=["full","atomic","consecutive"],_.routine.unite({head:function parse_head(routine,args){_.assert(1===args.length,"Expects single argument");let o={srcPath:args[0]};return _.routine.options_(routine,o),_.assert(_.strIs(o.srcPath)||_.mapIs(o.srcPath)),_.assert(_.longHas(routine.Kind,o.kind),()=>"Unknown kind of parsing "+o.kind),o},body:_parse_body})}(),_.uri.parseConsecutive.defaults={srcPath:null,kind:"consecutive"},_.uri.refine=function refine(filePath){let parent=this.path;return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath)),this.isGlobal(filePath)?(filePath=this.parseConsecutive(filePath),_.strDefined(filePath.longPath)&&(filePath.longPath=parent.refine.call(this,filePath.longPath)),(filePath.hash||filePath.tag)&&(filePath.longPath=parent.detrail(filePath.longPath)),this.str(filePath)):parent.refine.call(this,filePath)},_.uri._normalize=function _normalize(o){if(_.routine.assertOptions(_normalize,arguments),_.assert(_.strIs(o.src),"Expects string"),!o.src.length)return"";let result=o.src;result=this.refine(result),o.tolerant&&(result=result.replace(this._delUpDupRegexp,this.upToken));let endsWithUp=false;let beginsWithHere=false;for(result!==this.upToken&&!_.strEnds(result,this.upToken+this.upToken)&&_.strEnds(result,this.upToken)&&(endsWithUp=true,result=_.strRemoveEnd(result,this.upToken));!_.strBegins(result,this.hereUpToken+this.upToken)&&_.strBegins(result,this.hereUpToken);)beginsWithHere=true,result=_.strRemoveBegin(result,this.hereUpToken);if(-1!==result.indexOf(this.hereToken)){for(;this._delHereRegexp.test(result);)result=result.replace(this._delHereRegexp,function(match,postSlash){return postSlash||""});""===result&&(result=this.upToken)}if(-1!==result.indexOf(this.downToken))for(;this._delDownRegexp.test(result);)result=result.replace(this._delDownRegexp,function(){arguments[0];let notBegin=arguments[1];arguments[2];let preSlash=arguments[3];let postSlash=arguments[4];return""===preSlash?notBegin:notBegin?notBegin+(postSlash||""):notBegin+preSlash});return result.length||(result="."),o.detrailing&&(result===this.upToken||_.strEnds(result,this.upToken+this.upToken)||(result=_.strRemoveEnd(result,this.upToken))),!o.detrailing&&endsWithUp&&result!==this.rootToken&&(result+=this.upToken),!o.undoting&&beginsWithHere&&(result=this._dot(result)),result},_.uri._normalize.defaults={src:null,tolerant:false,detrailing:false,undoting:false},_.uri.canonize=function canonize(filePath){let parent=this.path;if(_.strIs(filePath)){if(!this.isGlobal(filePath))return parent.canonize.call(this,filePath);filePath=this.parseConsecutive(filePath)}return _.assert(!!filePath),filePath.longPath=parent.canonize.call(this,filePath.longPath),this.str(filePath)},_.uri.canonizeTolerant=function canonizeTolerant(src){_.assert(_.strIs(src),"Expects string");let result=this._normalize({src:src,tolerant:true,detrailing:true,undoting:true});return _.assert(1===arguments.length,"Expects single argument"),_.assert(result===this.upToken||_.strEnds(result,this.upToken)||!_.strEnds(result,this.upToken+this.upToken)),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},_.uri.protocolToken="://",_.uri.portToken=":",_.uri.userToken="@",_.uri.tagToken="!",_.uri.hashToken="#",_.uri.queryToken="?",_.uri._delDownRegexp=/((?:.|^))(?:(?:\/\/)|(((?:^|\/))(?!\.\.(?:\/|$))(?:(?!\/).)+\/))\.\.((?:\/|$))/,_.uri._delHereRegexp=/\/\.(\/|$)/,_.uri._delUpDupRegexp=/\/{2,}/g,_.uri.rootToken="/",_.uri.upToken="/",_.uri.hereToken=".",_.uri.downToken="..",_.uri.hereUpToken="./",_.uri.downUpToken="../",_.uri._pathIsGlobRegexp=/(?:[?*]+)|(?:([!?*@+]*)\((.*?(?:\|(.*?))*)\))|(?:\[(.+?)\])|(?:\{(.*)\})|(?: )/,_.uri.currentAtBegin="/mnt/home-hdd/Документы/Intellectual/wTools",_.color.strFg=function formatForeground(srcStr,color){return _.number.is(color)&&(color=_.color.colorNameNearest(color)),_.assert(2===arguments.length,"Expects 2 arguments"),_.assert(_.strIs(srcStr),"Expects string {-srcStr-}"),_.assert(_.strIs(color),"Expects string {-color-}"),`❮foreground : ${color}❯${srcStr}❮foreground : default❯`},_.color.strBg=function formatBackground(srcStr,color){return _.number.is(color)&&(color=_.color.colorNameNearest(color)),_.assert(2===arguments.length,"Expects 2 arguments"),_.assert(_.strIs(srcStr),"Expects string {-srcStr-}"),_.assert(_.strIs(color),"Expects string {-color-}"),`❮background : ${color}❯${srcStr}❮background : default❯`},_.color.rgbaHtmlFrom=function rgbaHtmlFrom(o){_.mapIs(o)||(o={src:arguments[0],colorMap:arguments.length>1?arguments[1]:null}),_.assert(1===arguments.length,"Expects single argument"),_.routine.options_(rgbaHtmlFrom,o);let result=this.rgbaHtmlFromTry(o);if(!result)debugger;if(!result)throw _.err(`Not color : "${_.entity.exportStringDiagnosticShallow(o.src)}"`);return result},_.color.rgbaHtmlFrom.defaults={src:null,colorMap:null},_.color.rgbaHtmlFromTry=function rgbaHtmlFromTry(o){let result;return _.mapIs(o)||(o={src:arguments[0]}),_.assert(1===arguments.length),_.routine.options_(rgbaHtmlFromTry,o),_.numberIs(o.src)||_.longIs(o.src)||!_.mapIs(o.src)&&_.object.isBasic(o.src)?this._rgbaFromNotName(o.src):(_.strIs(o.src)&&(result=this.fromTable(o)),result?end():(_.strIs(o.src)&&(result=_.color.hexToColor(o.src)),result?end():(_.strIs(o.src)&&(result=_.color.rgbaHtmlToRgba(o.src)),result?end():(_.strIs(o.src)&&(result=_.color.hslaToRgba(o.src)),result?end():o.def))));function end(){return _.assert(_.longIs(result)),4!==result.length&&(result=_.longGrow_(result,result,[0,3],1)),result}},_.color.rgbaHtmlFromTry.defaults={src:null,colorMap:null,def:null},_.color.rgbaHtmlToRgba=function rgbaHtmlToRgba(src){_.assert(_.strDefined(src));let splitted=_.strSplitFast({src:src,delimeter:["(",")",","],preservingDelimeters:0,preservingEmpty:0});if(_.strBegins(splitted[0],"rgb")){let result=[parseInt(splitted[1])/255,parseInt(splitted[2])/255,parseInt(splitted[3])/255,1];return"rgba"===splitted[0]&&(result[3]=Number(splitted[4])),result}return null},_.color.rgba.fromHexStr=function fromHexStr(hex){let result;return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(hex)),(result=/^#?([a-f\d])([a-f\d])([a-f\d])$/i.exec(hex))?result=[parseInt(result[1],16)/15,parseInt(result[2],16)/15,parseInt(result[3],16)/15]:(result=/^#?([a-f\d])([a-f\d])([a-f\d])([a-f\d])$/i.exec(hex))?result=[parseInt(result[1],16)/15,parseInt(result[2],16)/15,parseInt(result[3],16)/15,parseInt(result[4],16)/15]:(result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex))?result=[parseInt(result[1],16)/255,parseInt(result[2],16)/255,parseInt(result[3],16)/255]:(result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex))?result=[parseInt(result[1],16)/255,parseInt(result[2],16)/255,parseInt(result[3],16)/255,parseInt(result[4],16)/255]:null},_.color.hslaToRgba=function hslaToRgba(hsla,result){},_.color._colorDistance=function _colorDistance(c1,c2){_.assert(_.longIs(c1)),_.assert(_.longIs(c2));let a=c1.slice();let b=c2.slice();for(let i=0;i<4;i++)_.numberIsFinite(a[i])||(a[i]=1),_.numberIsFinite(b[i])||(b[i]=1);return Math.pow(a[0]-b[0],2)+Math.pow(a[1]-b[1],2)+Math.pow(a[2]-b[2],2)+Math.pow(a[3]-b[3],2)},_.color._rgbByBitmask=function _rgbByBitmask(src){let result=[];return result[0]=(src>>16&255)/255,result[1]=(src>>8&255)/255,result[2]=(src>>0&255)/255,result},_.color._rgbaFromNotName=function _rgbaFromNotName(src){if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.numberIs(src)||_.longIs(src)||_.object.isBasic(src)),_.object.isBasic(src)){_.map.assertHasOnly(src,{r:null,g:null,b:null,a:null});let result=[];return result[0]=void 0===src.r?1:src.r,result[1]=void 0===src.g?1:src.g,result[2]=void 0===src.b?1:src.b,result[3]=void 0===src.a?1:src.a,result}if(_.numberIs(src)){let result=this._rgbByBitmask(src);return _.longGrow_(result,result,[0,3],1)}let result=[];for(let r=0;r<src.length;r++)result[r]=Number(src[r]);return result.length<4&&(result[3]=1),result},_.color._colorNameNearest=function _colorNameNearest(color,map){if(_.assert(1===arguments.length||2===arguments.length),1===arguments.length&&(map=_.color.ColorMap),_.assert(_.object.isBasic(map)),_.strIs(color))return _.assertWithoutBreakpoint(map[color],"Unknown color",_.strQuote(color)),_.objectLike(map[color])?(_.assert(map[color].name),this._colorNameNearest(map[color].name,map)):color;color=this._rgbaFromNotName(color),_.assert(4===color.length);for(let r=0;r<4;r++)color[r]=Number(color[r]),color[r]<0?color[r]=0:color[r]>1&&(color[r]=1);let names=Object.keys(map);let nearest=names[0];let max=this._colorDistance(map[names[0]],color);if(0===max)return nearest;for(let i=1;i<=names.length-1;i++){let d=this._colorDistance(map[names[i]],color);if(d<max&&(max=d,nearest=names[i]),0===d)return names[i]}return nearest},_.color.colorNameNearest=function colorNameNearest(color){let self=this;if(_.assert(1===arguments.length,"Expects single argument"),_.strIs(color)){let color2=_.color.hexToColor(color);color2&&(color=color2)}try{return self._colorNameNearest(color)}catch(err){return}},_.color._fromTable=function _fromTable(o){let result=o.colorMap[o.src];return _.routine.assertOptions(_fromTable,o),result||(result=o.def),result&&(result=result.slice()),result},_.color._fromTable.defaults={src:null,def:null,colorMap:null},_.color.fromTable=function fromTable(o){return _.mapIs(o)||(o={src:arguments[0],def:arguments.length>1?arguments[1]:null,colorMap:arguments.length>2?arguments[2]:null}),o.colorMap||(o.colorMap=this.ColorMap),_.routine.options_(fromTable,o),_.assert(arguments.length<=3),_.assert(_.strIs(o.src)),o.src=o.src.toLowerCase(),o.src=o.src.trim(),this._fromTable(o)},_.color.fromTable.defaults={src:null,def:null,colorMap:null},_.color.hexToColor=function hexToColor(hex){return _.color.rgba.fromHexStr(hex)},_.color.ColorMap={invisible:[0,0,0,0],transparent:[1,1,1,.5],cyan:[0,1,1],magenta:[1,0,1],maroon:[.5,0,0],"dark green":[0,.5,0],navy:[0,0,.5],olive:[.5,.5,0],teal:[0,.5,.5],"bright green":[.5,1,0],"spring green":[0,1,.5],pink:[1,0,.5],"dark orange":[1,.5,0],azure:[0,.5,1],"dark blue":[0,0,.63],brown:[.65,.16,.16],white:[1,1,1],smoke:[.9,.9,.9],silver:[.75,.75,.75],gray:[.5,.5,.5],dim:[.35,.35,.35],black:[0,0,0],yellow:[1,1,0],purple:[.5,0,.5],orange:[1,.65,0],"bright blue":[.68,.85,.9],red:[1,0,0],buff:[.94,.86,.51],green:[0,1,0],"purplish pink":[.96,.46,.56],blue:[0,0,1],"yellowish pink":[1,.48,.36],violet:[.5,0,1],"orange yellow":[1,.56,0],"purplish red":[.7,.16,.32],"greenish yellow":[.96,.78,0],"reddish brown":[.5,.1,.05],"yellow green":[.57,.6,0],"yellowish brown":[.34,.2,.08],"reddish orange":[.95,.23,.07],"olive green":[.14,.17,.09],aquamarine:[.5,1,.83],"light blue":[.94,1,1],beige:[.96,.96,.86],bisque:[1,.89,.77],chocolate:[.82,.41,.12],coral:[1,.5,.3],cornsilk:[1,.97,.86],crimson:[.86,.08,.23],gainsboro:[.86,.86,.86],gold:[1,.84,0],honeydew:[.94,1,.94],indigo:[.29,0,.51],ivory:[1,1,.94],khaki:[.94,.9,.55],lavender:[.9,.9,.98],linen:[.98,.94,.9],moccasin:[1,.89,.71],orchid:[.85,.44,.84],peru:[.8,.52,.25],plum:[.87,.63,.87],salmon:[.98,.5,.45],sienna:[.63,.32,.17],snow:[1,.98,.98],tan:[.82,.7,.55],thistle:[.85,.75,.85],tomato:[1,.39,.28],turquoise:[.25,.88,.81],wheat:[.96,.87,.7],"moderate pink":[.93,.56,.53],"dark pink":[.78,.41,.39],"pale pink":[1,.8,.73],"grayish pink":[.81,.61,.56],"pinkish white ":[.98,.86,.78],"pinkish gray ":[.78,.65,.59],"vivid red":[.76,0,.13],"strong red":[.75,.13,.2],"deep red":[.48,0,.11],"very deep red":[.31,0,.08],"moderate red":[.67,.2,.23],"dark red":[.41,.11,.14],"very dark red":[.2,.04,.09],"light grayish red":[.69,.45,.4],"grayish red":[.55,.28,.26],"dark grayish red":[.28,.16,.16],"blackish red":[.12,.05,.07],"reddish gray":[.55,.42,.38],"dark reddish gray":[.32,.24,.21],"reddish black":[.12,.07,.07],"vivid yellowish pink":[1,.52,.36],"deep yellowish pink":[.96,.29,.27],"light yellowish pink":[1,.7,.55],"moderate yellowish pink":[.93,.58,.45],"dark yellowish pink":[.8,.42,.36],"pale yellowish pink":[1,.78,.66],"grayish yellowish pink":[.83,.61,.52],"brownish pink":[.8,.6,.48],"strong reddish orange":[1,.73,.38],"deep reddish orange":[.66,.11,.07],"moderate reddish orange":[.83,.33,.22],"dark reddish orange":[.61,.18,.12],"grayish reddish orange":[.72,.36,.26],"deep reddish brown":[.29,0,.02],"light reddish brown":[.67,.4,.32],"moderate reddish brown":[.44,.18,.15],"dark reddish brown":[.2,.06,.07],"light grayish reddish brown":[.59,.42,.34],"grayish reddish brown":[.37,.22,.19],"dark grayish reddish brown":[.22,.12,.11],"vivid orange":[1,.41,0],"brilliant orange":[1,.72,.25],"strong orange":[1,.44,.1],"deep orange":[.76,.3,.04],"light orange":[1,.63,.38],"moderate orange":[.91,.47,.24],"brownish orange":[.69,.32,.14],"strong brown":[.46,.2,.07],"deep brown":[.3,.13,.05],"light brown":[.66,.4,.25],"moderate brown":[.4,.22,.14],"dark brown":[.21,.09,.05],"light grayish brown":[.58,.42,.33],"grayish brown":[.35,.24,.19],"dark grayish brown":[.2,.13,.1],"light brownish gray":[.55,.43,.36],"brownish gray":[.31,.24,.2],"brownish black":[.08,.06,.04],"brilliant orange yellow":[1,.69,.18],"strong orange yellow":[1,.56,.05],"deep orange yellow":[.84,.43,0],"light orange yellow":[1,.73,.38],"moderate orange yellow":[.97,.58,.24],"dark orange yellow":[.76,.46,.16],"pale orange yellow":[1,.79,.53],"strong yellowish brown":[.58,.31,.05],"light yellowish brown":[.73,.55,.33],"moderate yellowish brown":[.49,.32,.18],"dark yellowish brown":[.25,.15,.07],"light grayish yellowish brown":[.71,.53,.39],"grayish yellowish brown":[.47,.35,.25],"dark grayish yellowish brown":[.24,.17,.12],"vivid yellow":[1,.7,0],"brilliant yellow":[1,.81,.25],"strong yellow":[.9,.62,.12],"deep yellow":[.71,.47,0],"light yellow":[1,.83,.37],"moderate yellow":[.84,.62,.25],"dark yellow":[.69,.49,.17],"pale yellow":[1,.86,.55],"grayish yellow":[.81,.64,.38],"dark grayish yellow":[.64,.49,.27],"yellowish white":[1,.89,.72],"yellowish gray":[.79,.66,.52],"light olive brown":[.58,.36,.04],"moderate olive brown":[.39,.25,.06],"dark olive brown":[.19,.13,.07],"vivid greenish yellow":[.96,.78,0],"brilliant greenish yellow":[1,.86,.2],"strong greenish yellow":[.8,.66,.09],"deep greenish yellow":[.62,.51,0],"light greenish yellow":[1,.87,.35],"moderate greenish yellow":[.77,.64,.24],"dark greenish yellow":[.61,.51,.15],"pale greenish yellow":[1,.87,.52],"grayish greenish yellow":[.77,.65,.37],"light olive":[.52,.42,.13],"moderate olive":[.37,.29,.06],"dark olive":[.21,.17,.07],"light grayish olive":[.55,.45,.29],"grayish olive":[.32,.27,.17],"dark grayish olive":[.17,.15,.09],"light olive gray":[.53,.45,.35],"olive gray":[.3,.26,.2],"olive black":[.07,.1,.06],"brilliant yellow green":[.81,.82,.23],"strong yellow green":[.5,.56,.09],"deep yellow green":[.26,.37,.09],"light yellow green":[.86,.83,.42],"moderate yellow green":[.55,.54,.25],"pale yellow green":[.94,.84,.6],"grayish yellow green":[.56,.52,.36],"strong olive green":[.04,.27,0],"deep olive green":[.08,.14,0],"moderate olive green":[.26,.29,.11],"grayish olive green":[.28,.27,.18],"dark grayish olive green":[.15,.15,.1],"vivid yellowish green":[.22,.6,.19],"brilliant yellowish green":[.55,.8,.37],"strong yellowish green":[.28,.52,.19],"deep yellowish green":[0,.33,.12],"very deep yellowish green":[0,.16,0],"very light yellowish green":[.78,.87,.56],"light yellowish green":[0,.48,.65],"moderate yellowish green":[.4,.5,.29],"dark yellowish green":[.19,.29,.15],"very dark yellowish green":[.07,.15,.07],"vivid green":[0,.49,.2],"brilliant green":[.28,.65,.42],"strong green":[0,.42,.24],"deep green":[0,.27,.14],"very light green":[.6,.78,.58],"light green":[.44,.61,.43],"moderate green":[.22,.4,.27],"very dark green":[.09,.15,.11],"very pale green":[.85,.87,.73],"pale green":[.55,.57,.48],"grayish green":[.34,.37,.31],"dark grayish green":[.19,.22,.19],"blackish green":[.08,.09,.07],"greenish white":[.96,.9,.8],"light greenish gray":[.73,.69,.59],"greenish gray":[.48,.46,.4],"dark greenish gray":[.27,.26,.23],"greenish black":[.09,.08,.07],"vivid bluish green":[0,.51,.43],"brilliant bluish green":[0,.61,.46],"strong bluish green":[0,.43,.36],"deep bluish green":[0,.22,.17],"very light bluish green":[.63,.84,.71],"light bluish green":[.4,.62,.52],"moderate bluish green":[.18,.4,.34],"dark bluish green":[0,.23,.2],"very dark bluish green":[0,.11,.09],"vivid greenish blue":[0,.48,.65],"brilliant greenish blue":[.16,.55,.61],"strong greenish blue":[0,.4,.49],"deep greenish blue":[0,.48,.65],"very light greenish blue":[.64,.78,.75],"light greenish blue":[.39,.6,.62],"moderate greenish blue":[.19,.38,.42],"dark greenish blue":[0,.22,.25],"very dark greenish blue":[.01,.13,.15],"vivid blue,ultramarine":[0,.49,.68],"brilliant blue,celestial blue":[.26,.52,.71],"strong blue,bright blue":[0,.33,.54],"deep blue,royal blue":[0,.18,.33],"very light blue":[.65,.74,.84],"sky blue":[.42,.57,.69],"moderate blue,cerulean blue":[.22,.34,.47],"dark blue,navy blue":[0,.13,.22],"very pale blue,cloud blue":[.76,.79,.79],"pale blue,alice blue":[.57,.57,.57],"grayish blue,slate blue":[.29,.33,.36],"dark grayish blue":[.17,.2,.22],"blackish blue":[.09,.1,.12],"bluish white":[.98,.87,.81],"light bluish gray":[.75,.68,.63],"bluish gray":[.49,.45,.43],"dark bluish gray":[.27,.27,.27],"bluish black":[.08,.09,.1],"vivid purplish blue":[.13,.08,.37],"brilliant purplish blue":[.38,.39,.61],"strong purplish blue":[.28,.26,.54],"deep purplish blue":[.1,.08,.25],"very light purplish blue":[.73,.67,.78],"light purplish blue":[.51,.49,.64],"moderate purplish blue":[.26,.24,.39],"dark purplish blue":[.1,.09,.16],"very pale purplish blue":[.8,.73,.77],"pale purplish blue":[.54,.5,.56],"grayish purplish blue":[.25,.24,.32],"vivid violet":[.53,.29,.68],"brilliant violet":[.46,.36,.6],"strong violet":[.33,.22,.48],"deep violet":[.14,.04,.21],"very light violet":[.93,.75,.95],"light violet":[.53,.42,.6],"moderate violet":[.33,.22,.39],"dark violet":[.13,.07,.17],"very pale violet":[.85,.69,.75],"pale violet":[.58,.48,.55],"grayish violet":[.27,.22,.29],"vivid purple":[.58,.2,.57],"brilliant purple":[.87,.5,.8],"strong purple":[.5,.24,.46],"deep purple":[.33,.1,.31],"very deep purple":[.2,.04,.21],"very light purple":[.89,.66,.75],"light purple":[.73,.5,.64],"moderate purple":[.5,.28,.44],"dark purple":[.28,.16,.25],"very dark purple":[.14,.05,.13],"very pale purple":[.9,.73,.76],"pale purple":[.68,.52,.55],"grayish purple":[.45,.32,.36],"dark grayish purple":[.27,.18,.21],"blackish purple":[.11,.06,.09],"purplish white":[.98,.86,.78],"light purplish gray":[.78,.66,.62],"purplish gray":[.53,.44,.42],"dark purplish gray":[.34,.25,.26],"purplish black":[.11,.07,.09],"vivid reddish purple":[.49,0,.35],"strong reddish purple":[.6,.21,.42],"deep reddish purple":[.39,.07,.29],"very deep reddish purple":[.28,.03,.21],"light reddish purple":[.73,.42,.54],"moderate reddish purple":[.55,.27,.4],"dark reddish purple":[.31,.15,.23],"very dark reddish purple":[.15,.04,.12],"pale reddish purple":[.67,.46,.5],"grayish reddish purple":[.49,.3,.36],"brilliant purplish pink":[1,.59,.73],"deep purplish pink":[.92,.32,.52],"light purplish pink":[1,.66,.69],"moderate purplish pink":[.89,.5,.56],"dark purplish pink":[.78,.4,.45],"pale purplish pink":[.99,.74,.73],"grayish purplish pink":[.8,.57,.58],"vivid purplish red":[.84,.15,.36],"deep purplish red":[.44,0,.21],"very deep purplish red":[.28,0,.15],"moderate purplish red":[.65,.22,.33],"dark purplish red":[.36,.12,.19],"very dark purplish red":[.16,.03,.1],"light grayish purplish red":[.7,.44,.44],"grayish purplish red":[.55,.28,.32],"light gray":[.76,.66,.58],"medium gray":[.51,.44,.4],"dark gray":[.29,.26,.24],"bright black":[.5,.5,.5],"dark magenta":[.5,0,.5],"dark cyan":[0,.5,.5],"dark white":[.75,.75,.75],"bright white":[1,1,1],"bright red":[1,0,0],"bright yellow":[1,1,0],"bright cyan":[0,1,1],"bright magenta":[1,0,1],"dark black":[0,0,0]},_.Logger.TransformCssStylingToDirectives=function TransformCssStylingToDirectives(input){if(!_.strHas(input[0],"%c"))return input;let result=[""];let splitted=_.strSplitFast({src:input[0],delimeter:"%c",preservingEmpty:0,preservingDelimeters:0});return splitted.forEach((chunk,i)=>{let styles=input[i+1];if(styles){let splits=_.strSplitFast({src:styles,delimeter:[";",":"],preservingEmpty:0,preservingDelimeters:0});if(splits.length>1)for(let i=0;i<splits.length;i+=2){let key=_.strStrip(splits[i]);let value=_.strStrip(splits[i+1]);"none"!==value&&("color"===key?(value=_.color.rgbaHtmlFrom(value),value=_.color.colorNameNearest(value),chunk=_.color.strFg(chunk,value)):"background"===key?(value=_.color.rgbaHtmlFrom(value),value=_.color.colorNameNearest(value),chunk=_.color.strBg(chunk,value)):"text-decoration"===key&&(chunk=`❮${value} : true❯${chunk}❮${value} : false❯`))}}result[0]+=chunk}),result[0]?(result.push(...input.slice(splitted.length+1)),result):input};let StarterExtension={debuggerEnabled:_starter_.debug};Object.assign(_starter_,StarterExtension)}(),function _proceduring_(){"use strict";const _global=_global_;let _starter_=_global._starter_=_global._starter_||Object.create(null);let _=_starter_;function TokensSyntax(){let result={idToValue:null,idToName:[],nameToId:{},alternatives:{}};return Object.setPrototypeOf(result,TokensSyntax),result}_.array.likeResizable=function likeResizable(src){return _.array.is(src)},_.arrayLikeResizable=_.array.likeResizable.bind(_.array),_.map.extend=function extend(dstMap,srcMap){if(null===dstMap&&(dstMap=Object.create(null)),2===arguments.length){let srcProto=Object.getPrototypeOf(srcMap);if(null===srcProto||srcProto===Object.prototype)return Object.assign(dstMap,srcMap)}_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++){let srcMap=arguments[a];_.assert(!_.primitive.is(srcMap),"Expects non-primitive");let srcProto=Object.getPrototypeOf(srcMap);null===srcProto||srcProto===Object.prototype?Object.assign(dstMap,srcMap):this._extendWithProps(dstMap,srcMap)}return dstMap},_.map.supplement=function supplement(dstMap,srcMap){if(null===dstMap&&2===arguments.length)return Object.assign(Object.create(null),srcMap);null===dstMap&&(dstMap=Object.create(null)),_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++)srcMap=arguments[a],this._supplementWithProps(dstMap,srcMap);return dstMap},_.mapExtend=_.map.extend.bind(_.map),_.mapSupplement=_.map.supplement.bind(_.map),_.vectorize=function(){const _vectorize_body=function vectorize_body(o){_.routine.assertOptions(vectorize_body,arguments),_.argumentsArray.like(o.routine)&&1===o.routine.length&&(o.routine=o.routine[0]);let routine=o.routine;let propertyCondition=o.propertyCondition;o.bypassingFilteredOut;let bypassingEmpty=o.bypassingEmpty;let vectorizingArray=o.vectorizingArray;let vectorizingMapVals=o.vectorizingMapVals;let vectorizingMapKeys=o.vectorizingMapKeys;let vectorizingContainerAdapter=o.vectorizingContainerAdapter;let unwrapingContainerAdapter=o.unwrapingContainerAdapter;let head=null;let select=null===o.select?1:o.select;let selectAll=Infinity===o.select;let multiply=select>1?function multiplyReally(args){let length,keys;args=[...args],selectAll&&(select=args.length),_.assert(args.length===select,()=>"Expects "+select+" arguments, but got "+args.length);for(let d=0;d<select;d++){if(vectorizingArray&&_.argumentsArray.like(args[d])){length=args[d].length;break}if(vectorizingArray&&_.set.like(args[d])){length=args[d].size;break}if(vectorizingContainerAdapter&&_.containerAdapter.is(args[d])){length=args[d].length;break}if(vectorizingMapVals&&_.aux.is(args[d])){keys=_.props.onlyOwnKeys(args[d]);break}}if(void 0!==length)for(let d=0;d<select;d++){if(vectorizingMapVals)_.assert(!_.mapIs(args[d]),()=>"Arguments should have only arrays or only maps, but not both. Incorrect argument : "+args[d]);else if(vectorizingMapKeys&&_.mapIs(args[d]))continue;args[d]=_.multiple(args[d],length)
}else if(void 0!==keys)for(let d=0;d<select;d++)if(_.mapIs(args[d]))_.assert(_.arraySet.identical(_.props.onlyOwnKeys(args[d]),keys),()=>"Maps should have same keys : "+keys);else{vectorizingArray&&_.assert(!_.argumentsArray.like(args[d]),()=>"Arguments should have only arrays or only maps, but not both. Incorrect argument : "+args[d]);let arg=Object.create(null);_.mapSetWithKeys(arg,keys,args[d]),args[d]=arg}return args}:multiplyNo;routine=function routineNormalize(routine){return _.strIs(routine)?function methodCall(){return _.assert(_.routine.is(this[routine]),()=>"Context "+_.entity.exportStringDiagnosticShallow(this)+" does not have routine "+routine),this[routine].apply(this,arguments)}:_.argumentsArray.like(routine)?(_.assert(2===routine.length),function methodCall(){let c=this[routine[0]];return _.assert(_.routine.is(c[routine[1]]),()=>"Context "+_.entity.exportStringDiagnosticShallow(c)+" does not have routine "+routine),c[routine[1]].apply(c,arguments)}):routine}(routine),_.assert(_.routine.is(routine),()=>"Expects routine {-o.routine-}, but got "+routine);let resultRoutine=vectorizeArray;return _.number.is(select)?vectorizingArray||vectorizingMapVals||vectorizingMapKeys?propertyCondition?resultRoutine=function vectorizeWithFilters(src){_.assert(0,"not tested"),_.assert(1===arguments.length,"Expects single argument");let args=multiply(arguments);if(vectorizingArray&&_.argumentsArray.like(src))throw args=[...args],_.err("not tested");if(vectorizingMapVals&&_.mapIs(src))throw args=[...args],Object.create(null),_.err("not tested");return routine.call(this,src)}:vectorizingMapKeys?vectorizingMapVals?(_.assert(1===select,"Only single argument is allowed if {-o.vectorizingMapKeys-} and {-o.vectorizingMapVals-} are enabled."),resultRoutine=function vectorizeMapWithKeysOrArray(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let srcs=args[0];if(_.assert(args.length===select,()=>"Expects "+select+" arguments but got : "+args.length),vectorizingMapKeys&&vectorizingMapVals&&_.mapIs(srcs)){let result=Object.create(null);for(let s in srcs){let val=routine.call(this,srcs[s]);result[routine.call(this,s)]=val}return result}if(vectorizingArray&&_.argumentsArray.like(srcs)){let result=[];for(let s=0;s<srcs.length;s++)result[s]=routine.call(this,srcs[s]);return result}return routine.apply(this,arguments)}):resultRoutine=function vectorizeKeysOrArray(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let src=args[0];let args2,result,map,mapIndex,arr;if(_.assert(args.length===select,()=>"Expects "+select+" arguments but got : "+args.length),vectorizingMapKeys)for(let d=0;d<select;d++)vectorizingArray&&_.argumentsArray.like(args[d])?arr=args[d]:_.mapIs(args[d])&&(_.assert(void 0===map,()=>"Arguments should have only single map. Incorrect argument : "+args[d]),map=args[d],mapIndex=d);if(map){if(result=Object.create(null),args2=[...args],vectorizingArray&&_.argumentsArray.like(arr))for(let i=0;i<arr.length;i++){for(let m=0;m<select;m++)args2[m]=args[m][i];for(let k in map){args2[mapIndex]=k,result[routine.apply(this,args2)]=map[k]}}else for(let k in map){args2[mapIndex]=k,result[routine.apply(this,args2)]=map[k]}return result}if(vectorizingArray&&_.argumentsArray.like(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)((e,r)=>{for(let m=0;m<select;m++)args2[m]=args[m][r];append(routine.apply(this,args2))}),result}return routine.apply(this,arguments)}:resultRoutine=!vectorizingArray||vectorizingMapVals?function vectorizeMapOrArray(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let src=args[0];if(vectorizingArray&&_.argumentsArray.like(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)((e,r)=>{for(let m=0;m<select;m++)args2[m]=args[m][r];append(routine.apply(this,args2))}),result}if(vectorizingMapVals&&_.mapIs(src)){let args2=[...args];let result=Object.create(null);for(let r in src){for(let m=0;m<select;m++)args2[m]=args[m][r];result[r]=routine.apply(this,args2)}return result}return routine.apply(this,arguments)}:multiply===multiplyNo?vectorizeArray:function vectorizeArrayMultiplying(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let src=args[0];if(_.argumentsArray.like(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)((e,r)=>{for(let m=0;m<select;m++)args2[m]=args[m][r];append(routine.apply(this,args2))}),result}return routine.apply(this,args)}:resultRoutine=routine:(_.assert(multiply===multiplyNo),routine.head&&(head=routine.head,routine=routine.body),propertyCondition?_.assert(0,"not implemented"):vectorizingArray||!vectorizingMapVals?resultRoutine=_.strIs(select)?vectorizeForOptionsMap:function vectorizeForOptionsMapForKeys(){let result=[];if(bypassingEmpty&&!arguments.length)return result;for(let i=0;i<o.select.length;i++)select=o.select[i],result[i]=vectorizeForOptionsMap.apply(this,arguments);return result}:_.assert(0,"not implemented")),resultRoutine.vectorized=o,_.routine.extend(resultRoutine,routine),resultRoutine;function multiplyNo(args){return args}function vectorizeArray(){if(bypassingEmpty&&!arguments.length)return[];let args=arguments;let src=args[0];if(_.arrayIs(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)(e=>{args2[0]=e,append(routine.apply(this,args2))}),result}if(_.set.like(src)){let args2=[...args];let result=new Set;for(let e of src)args2[0]=e,result.add(routine.apply(this,args2));return result}if(vectorizingContainerAdapter&&_.containerAdapter.is(src)){let args2=[...args];let result=src.filter(e=>{return args2[0]=e,routine.apply(this,args2)});return unwrapingContainerAdapter?result.original:result}return routine.apply(this,args)}function vectorizeForOptionsMap(srcMap){if(bypassingEmpty&&!arguments.length)return[];let src=srcMap[select];let args=[...arguments];if(_.assert(1===arguments.length,"Expects single argument"),_.argumentsArray.like(src)){head&&(args=head(routine,args),_.assert(_.arrayLikeResizable(args)));let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)(e=>{args[0]=_.props.extend(null,srcMap),args[0][select]=e,append(routine.apply(this,args))}),result}if(_.set.like(src)){head&&(args=head(routine,args),_.assert(_.arrayLikeResizable(args)));let result=new Set;for(let e of src)args[0]=_.props.extend(null,srcMap),args[0][select]=e,result.add(routine.apply(this,args));return result}return vectorizingContainerAdapter&&_.containerAdapter.is(src)?(head&&(args=head(routine,args),_.assert(_.arrayLikeResizable(args))),result=src.filter(e=>{return args[0]=_.props.extend(null,srcMap),args[0][select]=e,routine.apply(this,args)}),unwrapingContainerAdapter?result.original:result):routine.apply(this,arguments)}};return _vectorize_body.defaults={routine:null,propertyCondition:null,bypassingFilteredOut:1,bypassingEmpty:0,vectorizingArray:1,vectorizingMapVals:0,vectorizingMapKeys:0,vectorizingContainerAdapter:0,unwrapingContainerAdapter:0,select:1},_.routine.unite({head:function vectorize_head(routine,args){let o=args[0];return 2===args.length?o={routine:args[0],select:args[1]}:(_.routine.is(o)||_.strIs(o))&&(o={routine:args[0]}),_.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.routine.is(o.routine)||_.strIs(o.routine)||_.strsAreAll(o.routine),()=>"Expects routine {-o.routine-}, but got "+o.routine),_.assert(1===args.length||2===args.length),_.assert(o.select>=1||_.strIs(o.select)||_.argumentsArray.like(o.select),()=>"Expects {-o.select-} as number >= 1, string or array, but got "+o.select),o},body:_vectorize_body})}(),_.vectorize.defaults={routine:null,propertyCondition:null,bypassingFilteredOut:1,bypassingEmpty:0,vectorizingArray:1,vectorizingMapVals:0,vectorizingMapKeys:0,vectorizingContainerAdapter:0,unwrapingContainerAdapter:0,select:1},_.strsAreAll=function strsAreAll(src){if(_.assert(1===arguments.length),_.argumentsArray.like(src)){for(let s=0;s<src.length;s++)if(!_.strIs(src[s]))return false;return true}return _.strIs(src)},_.strReplaceAll=function strReplaceAll(src,ins,sub){let o;3===arguments.length?(o={src:src}).dictionary=[[ins,sub]]:2===arguments.length?o={src:arguments[0],dictionary:arguments[1]}:1===arguments.length?o=arguments[0]:_.assert(0,"Expects at least single options map {-o-} or a combination of arguments : src-dictionary, src-ins-sub. "),_.routine.options_(strReplaceAll,o),_.assert(_.strIs(o.src)),_._strReplaceMapPrepare(o);let result=[];let index=0;return _.strFindAll(o.src,o.ins).forEach(it=>{let sub=o.sub[it.tokenId];let unknown=o.src.substring(index,it.charsRangeLeft[0]);unknown&&o.onUnknown&&(unknown=o.onUnknown(unknown,it,o)),""!==unknown&&result.push(unknown),_.routineIs(sub)&&(sub=sub.call(o,it.match,it)),""!==sub&&result.push(sub),index=it.charsRangeLeft[1]}),result.push(o.src.substring(index,o.src.length)),o.joining&&(result=result.join("")),result},_.strReplaceAll.defaults={src:null,dictionary:null,ins:null,sub:null,joining:1,onUnknown:null},_.strFindAll=function strFindAll(src,ins){let o;2===arguments.length?o={src:arguments[0],ins:arguments[1]}:1===arguments.length&&(o=arguments[0]),(_.strIs(o.ins)||_.regexpIs(o.ins))&&(o.ins=[o.ins]),_.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(o.src)),_.assert(_.argumentsArray.like(o.ins)||_.object.isBasic(o.ins)),_.routine.options_(strFindAll,o);let tokensSyntax=_.tokensSyntaxFrom(o.ins);let descriptorsArray=[];let execeds=[];let closests=[];let closestTokenId=-1;let closestIndex=o.src.length;let currentIndex=0;let descriptorFor=o.fast?function descriptorForFast(src,index,tokenId){let originalIns=tokensSyntax.idToValue[tokenId];let match;let it=[];if(-1===tokenId&&(originalIns=src.substring(index,closestIndex)),_.strIs(originalIns))match=originalIns;else{let execed=execeds[tokenId];_.assert(!!execed),match=execed[0]}it[0]=index,it[1]=index+match.length,it[2]=tokenId,descriptorsArray.push(it),_.assert(_.strIs(match)),currentIndex=match.length>0?index+match.length:index+1,o.counter+=1}:function descriptorForFull(src,index,tokenId){let originalIns=tokensSyntax.idToValue[tokenId];let match;let it=Object.create(null);let groups;if(-1===tokenId&&(originalIns=src.substring(index,closestIndex)),_.strIs(originalIns))match=originalIns,groups=[];else{let execed=execeds[tokenId];_.assert(!!execed),match=execed[0],groups=_.longSlice(execed,1,execed.length)}it.match=match,it.groups=groups,it.tokenId=tokenId,it.charsRangeLeft=[index,index+match.length],it.counter=o.counter,it.input=src,tokensSyntax.idToName&&tokensSyntax.idToName[tokenId]&&(it.tokenName=tokensSyntax.idToName[tokenId]),descriptorsArray.push(it),_.assert(_.strIs(match)),currentIndex=match.length>0?index+match.length:index+1,o.counter+=1};for(tokensSyntax.idToValue.forEach((ins,tokenId)=>{_.assert(_.strIs(ins)||_.regexpIs(ins)),_.regexpIs(ins)&&_.assert(!ins.sticky);let found=find(o.src,ins,tokenId);closests[tokenId]=found,found<closestIndex&&(closestIndex=found,closestTokenId=tokenId)});closestIndex<o.src.length;)o.tokenizingUnknown&&closestIndex>currentIndex&&descriptorFor(o.src,currentIndex,-1),descriptorFor(o.src,closestIndex,closestTokenId),closestIndex=o.src.length,closests.forEach((index,tokenId)=>{index<currentIndex&&(index=closests[tokenId]=find(o.src,tokensSyntax.idToValue[tokenId],tokenId)),_.assert(closests[tokenId]>=currentIndex),index<closestIndex&&(closestIndex=index,closestTokenId=tokenId)}),_.assert(closestIndex<=o.src.length);return o.tokenizingUnknown&&closestIndex>currentIndex&&descriptorFor(o.src,currentIndex,-1),descriptorsArray;function find(src,ins,tokenId){let result;return _.strIs(ins)?result=function findWithString(src,ins){if(!ins.length)return src.length;let index=src.indexOf(ins,currentIndex);return index<0?src.length:index}(o.src,ins):_.regexpIs(ins)?result="(?:)"===ins.source?src.length:function findWithRegexp(src,ins,tokenId){let execed;let result=src.length;if(0===currentIndex||ins.global)do{result=(execed=ins.exec(src))?execed.index:src.length}while(result<currentIndex);else(execed=ins.exec(src.substring(currentIndex)))&&(result=execed.index+currentIndex);return execed&&(execeds[tokenId]=execed),result}(o.src,ins,tokenId):_.assert(0),_.assert(result>=0),result}},_.strFindAll.defaults={src:null,ins:null,fast:0,counter:0,tokenizingUnknown:0},_.strReverse=function strReverse(srcStr){_.assert(1===arguments.length,"Expects single argument");let result="";for(let i=0;i<srcStr.length;i++)result=srcStr[i]+result;return result},_.strCount=function strCount(src,ins){let result=0;_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src)),_.assert(_.regexpLike(ins));let i=0;do{let found=_.strLeft_(src,ins,[i,src.length-1]);if(void 0===found.entry)break;i=found.index+found.entry.length,found.entry.length||(i+=1),result+=1,_.assert(-1!==i,"not tested")}while(-1!==i&&i<src.length);return result},_.strLeft_=function left_(src,ins,cinterval){if(_.assert(2===arguments.length||3===arguments.length),_.argumentsArray.like(src)){let result=[];for(let s=0;s<src.length;s++)result[s]=_._strLeftSingle_(src[s],ins,cinterval);return result}return _._strLeftSingle_(src,ins,cinterval)},_.tokensSyntaxFrom=function tokensSyntaxFrom(ins){if(ins instanceof _.TokensSyntax)return ins;let result=TokensSyntax();if((_.strIs(ins)||_.regexpIs(ins))&&(ins=[ins]),_.assert(1===arguments.length),_.assert(_.argumentsArray.like(ins)||_.object.isBasic(ins)),result.idToValue=ins,_.mapIs(ins)){result.idToValue=[],result.idToName=[];let i=0;for(var name in ins){let element=ins[name];if(_.longIs(element)){let alternative=result.alternatives[name]=result.alternatives[name]||[];for(let e=0;e<element.length;e++){let name2=name+"_"+element[e];result.idToValue[i]=ins[name][e],result.idToName[i]=name2,result.nameToId[name2]=i,alternative.push(name2),i+=1}}else result.idToValue[i]=ins[name],result.idToName[i]=name,result.nameToId[name]=i,i+=1}}return result},_._strReplaceMapPrepare=function _strReplaceMapPrepare(o){if(_.map.assertHasAll(o,_strReplaceMapPrepare.defaults),_.assert(1===arguments.length),_.assert(_.object.isBasic(o.dictionary)||_.longIs(o.dictionary)||null===o.dictionary),_.assert(_.longIs(o.ins)&&_.longIs(o.sub)||null===o.ins&&null===o.sub),o.dictionary){if(o.ins=[],o.sub=[],_.object.isBasic(o.dictionary)){let i=0;for(let d in o.dictionary)o.ins[i]=d,o.sub[i]=o.dictionary[d],i+=1}else{let i=0;o.dictionary.forEach(d=>{let ins=d[0];let sub=d[1];if(_.assert(2===d.length),_.assert(_.arrayIs(ins)===_.arrayIs(sub)),_.arrayIs(ins)){_.assert(ins.length===sub.length);for(let n=0;n<ins.length;n++)o.ins[i]=ins[n],o.sub[i]=sub[n],i+=1}else o.ins[i]=ins,o.sub[i]=sub,i+=1})}o.dictionary=null}return _.assert(!o.dictionary),_.assert(o.ins.length===o.sub.length),o},_._strReplaceMapPrepare.defaults={dictionary:null,ins:null,sub:null},_.map.assertHasAll=function assertHasAll(srcMap,all,msg){return true},_.map.sureHasAll=function sureHasAll(srcMap,all,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapBut_(null,all,srcMap));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},_.longSlice=function _longShallow(src,f,l){return _.assert(1<=arguments.length&&arguments.length<=3),_.assert(_.longIs(src),"Expects long {-src-}"),_.assert(void 0===f||_.number.is(f)),_.assert(void 0===l||_.number.is(l)),f=void 0===f?0:f,l=void 0===l?src.length:l,f<0&&(f=src.length+f),l<0&&(l=src.length+l),f<0&&(f=0),f>l&&(l=f),_.bufferTypedIs(src)?_.longOnly_(null,src,[f,l-1]):Array.prototype.slice.call(src,f,l)},_.regexpEscape=function escape(src){return _.assert(_.strIs(src)),_.assert(1===arguments.length,"Expects single argument"),src.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")},_.regexpLike=function like(src){return src instanceof RegExp||"[object String]"===Object.prototype.toString.call(src)},_.regexpsLikeAll=function likeAll(src){if(_.assert(1===arguments.length),_.argumentsArray.like(src)){for(let s=0;s<src.length;s++)if(!_.regexp.like(src[s]))return false;return true}return _.regexp.like(src)},_.filter_=function filter_(dst,src,onEach){let result;if(2===arguments.length?(_.assert(3===arguments.length,"Expects three arguments"),onEach=src,src=dst):_.assert(3===arguments.length,"Expects two or three arguments"),onEach=_._filter_functor(onEach,1),_.assert(_.routine.is(onEach)),dst===src)if(result=src,_.longIs(src))for(let s=src.length-1;s>=0;s--){let r=onEach.call(src,src[s],s,src);_.unrollIs(r)?_.longBut_(result,s,r):void 0!==r?result[s]=r:result.splice(s,1)}else if(_.aux.is(src))for(let s in src){let r=onEach.call(src,src[s],s,src);void 0===r?delete src[s]:src[s]=r}else result=onEach.call(null,src,null,null);else if(result=dst,_.longIs(src)){let s,d;for(null===dst?result=_.argumentsArray.is(src)?[]:_.long.make(src,0):_.assert(_.longIs(dst),"{-dst-} container should be long like"),s=0,d=0;s<src.length;s++){let r=onEach.call(src,src[s],s,src);_.unrollIs(r)?(_.longBut_(result,d,r),d+=r.length):void 0!==r&&(result[d]=r,d+=1)}}else if(_.aux.is(src)){null===dst?result=_.entity.makeUndefined(src):_.assert(_.aux.is(dst),"{-dst-} container should be map like");for(let s in src){let r=onEach.call(src,src[s],s,src);void 0!==r&&(result[s]=r)}}else{let r=onEach.call(null,src,null,null);void 0!==r&&(_.longIs(dst)?result=_.arrayAppendElement(dst,r):_.aux.is(dst)?result=_.props.extend(dst,r):_.primitive.is(dst)?result=r:_.assert(0,"Not clear how to add result in destination container {-dst-}"))}return result},_._filter_functor=function _filter_functor(condition,levels){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.routine.is(condition)||_.object.isBasic(condition)),_.object.isBasic(condition)){let template=condition;condition=function condition(e,k,src){return _.assert(3===arguments.length),e===template?e:_.object.like(e)&&_.objectSatisfy({template:template,src:e,levels:levels})?e:void 0}}return condition},_.entityMakeUndefined=void 0,_.props.keys=function keys(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(keys,o||null)).srcMap=srcMap,this._keys(o)},_.props.keys.defaults={onlyOwn:0,onlyEnumerable:1},_.path.globShortFilterKeys=function(){const _globShortFilter_body=function globShortFilter_body(o){let self=this;let result;if(_.assert(1===arguments.length),self.isGlob(o.selector)){let regexp=self.globShortSplitsToRegexps(o.selector);result=_.filter_(null,o.src,(e,k)=>{let val=o.onEvaluate(e,k,o.src);return regexp.test(val)?e:void 0})}else result=_.filter_(null,o.src,(e,k)=>{return o.onEvaluate(e,k,o.src)===o.selector?e:void 0});return result};return _globShortFilter_body.defaults={src:null,selector:null,onEvaluate:null},_.routine.unite({head:function globShortFilter_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||2===args.length);let o=args[0];return void 0!==args[1]&&(o={src:args[0],selector:args[1]}),null===(o=_.routine.options_(routine,o)).onEvaluate&&(o.onEvaluate=function byVal(e,k,src){return e}),o},body:_globShortFilter_body})}(),_.path.globShortFilterKeys.defaults={src:null,selector:null,onEvaluate:function byKey(e,k,src){return _.arrayIs(src)?e:k}},_.path.globShortSplitsToRegexps=function(){let toVectorize=Object.create(null);return toVectorize.routine=function globShortSplitToRegexp(glob){if(_.assert(_.strIs(glob)||_.regexpIs(glob)),_.assert(1===arguments.length),_.regexpIs(glob))return glob;let str=this._globShortSplitToRegexpSource(glob);return new RegExp("^"+str+"$")},toVectorize.vectorizingArray=1,toVectorize.vectorizingMapVals=0,toVectorize.vectorizingMapKeys=1,toVectorize.select=1,toVectorize.propertyCondition=null,toVectorize.bypassingFilteredOut=1,toVectorize.bypassingEmpty=0,toVectorize.vectorizingContainerAdapter=0,toVectorize.unwrapingContainerAdapter=0,_.vectorize(toVectorize)}(),_.path._globShortSplitToRegexpSource=function functor(){let self;let _globRegexpSourceCache=Object.create(null);let _transformation0=[[/\[(.+?)\]/g,handlePass],[/\.\./g,handlePass],[/\./g,handlePass],[/\(\)|\0/g,handlePass],[/([!?*@+]*)\((.*?(?:\|(.*?))*)\)/g,handlePass],[/\*\*\*/g,handlePass],[/\*\*/g,handlePass],[/(\*)/g,handlePass],[/(\?)/g,handlePass]];let _transformation1=[[/\[(.+?)\]/g,function handleSquareBrackets(src,it){let inside=it.groups[0];return"^"===(inside=(inside=inside.replace(/[\[\]]/g,m=>"\\"+m)).replace(/^!/g,"^"))[0]&&(inside+="/"),["["+inside+"]"]}],[/\{(.*)\}/g,function handleCurlyBrackets(src,it){throw _.err("Glob with curly brackets is not allowed ",src)}]];let _transformation2=[[/\.\./g,"\\.\\."],[/\./g,"\\."],[/\(\)|\0/g,""],[/([!?*@+]?)\((.*?(?:\|(.*?))*)\)/g,function hanleParentheses(src,it){let inside=it.groups[1].split("|");let multiplicator=it.groups[0];"*"===(multiplicator=_.strReverse(multiplicator))&&(multiplicator+="?"),_.assert(0===_.strCount(multiplicator,"!")||"!"===multiplicator),_.assert(0===_.strCount(multiplicator,"@")||"@"===multiplicator);let result="(?:"+(inside=inside.map(i=>self._globShortSplitToRegexpSource(i))).join("|")+")";return"@"===multiplicator?result=result:"!"===multiplicator?result="(?:(?!(?:"+result+"|/)).)*?":result+=multiplicator,result}],[/\*\*\*/g,"(?:.*)"],[/\*\*/g,".*"],[/(\*)/g,"[^/]*"],[/(\?)/g,"[^/]"]];return _globShortSplitToRegexpSource.functor=functor,_globShortSplitToRegexpSource;function _globShortSplitToRegexpSource(src){self=this;let result=_globRegexpSourceCache[src];return result||(_.assert(_.strIs(src)),_.assert(1===arguments.length,"Expects single argument"),_.assert(!_.strHas(src,/(^|\/)\.\.(\/|$)/)||src===self.downToken,'glob should not has splits with ".." combined with something'),result=function transform(src){let result=src;return result=_.strReplaceAll({src:result,dictionary:_transformation0,joining:1,onUnknown:handleUnknown}),result=_.strReplaceAll(result,_transformation1),_.strReplaceAll(result,_transformation2)}(src),_globRegexpSourceCache[src]=result,result)}function handleUnknown(src){return _.regexpEscape(src)}function handlePass(src){return src}}(),_.path.is=function is(path){return _.assert(1===arguments.length,"Expects single argument"),_.strIs(path)},_.path.name=function(){const _name_body=function name_body(o){_.strIs(o)&&(o={path:o}),_.routine.assertOptions(name_body,arguments),o.path=this.canonize(o.path);let i=o.path.lastIndexOf("/");if(-1!==i&&(o.path=o.path.substr(i+1)),!o.full){let i=o.path.lastIndexOf(".");-1!==i&&(o.path=o.path.substr(0,i))}return o.path};return _name_body.defaults={path:null,full:0},_.routine.unite({head:function name_head(routine,args){let o=args[0];return _.strIs(o)&&(o={path:o}),_.routine.options_(routine,o),_.assert(1===args.length),_.assert(2===arguments.length),_.assert(_.strIs(o.path),"Expects string {-o.path-}"),o},body:_name_body})}(),_.path.name.defaults={path:null,full:0},_.path.fullName=function(){const _name_body=function name_body(o){_.strIs(o)&&(o={path:o}),_.routine.assertOptions(name_body,arguments),o.path=this.canonize(o.path);let i=o.path.lastIndexOf("/");if(-1!==i&&(o.path=o.path.substr(i+1)),!o.full){let i=o.path.lastIndexOf(".");-1!==i&&(o.path=o.path.substr(0,i))}return o.path};return _name_body.defaults={path:null,full:0},_.routine.unite({head:function name_head(routine,args){let o=args[0];return _.strIs(o)&&(o={path:o}),_.routine.options_(routine,o),_.assert(1===args.length),_.assert(2===arguments.length),_.assert(_.strIs(o.path),"Expects string {-o.path-}"),o},body:_name_body})}(),_.path.fullName.defaults={path:null,full:1},_.path.detrail=function detrail(path){return _.assert(this.is(path)),_.assert(1===arguments.length),path!==this.rootToken?_.strRemoveEnd(path,this.upToken):path},_.path.reroot=function(){const _join_body=function join_body(o){let self=this;let result=null;for(let a=o.paths.length-1;a>=0;a--){let src=o.paths[a];if(o.allowingNull&&null===src)break;if(null===result&&(result=""),_.assert(_.strIs(src),()=>`Expects strings as path arguments, but #${a} argument is ${_.entity.strType(src)}`),!prepend(src))break}return o.raw||null===result||(result=self.normalize(result)),result;function prepend(src){let trailed=false;let endsWithUp=false;return src&&(src=self.refine(src)),!(src&&(_.strEnds(src,self.upToken)&&(src.length>1?(result&&(src=src.substr(0,src.length-1)),true,result=result===self.downToken?self.hereToken:result===self.downUpToken?self.hereUpToken:_.strRemoveBegin(result,self.downUpToken)):endsWithUp=true),src&&result&&(endsWithUp||_.strBegins(result,self.upToken)||(result=self.upToken+result)),result=src+result,!o.reroot&&_.strBegins(result,self.rootToken)))}};return _join_body.defaults={paths:null,reroot:0,allowingNull:1,raw:0},_.routine.unite({head:function join_head(routine,args){_.assert(args.length>0,"Expects argument");let o={paths:args};return _.routine.options_(routine,o),_.assert(_.boolLike(o.reroot)),_.assert(_.boolLike(o.allowingNull)),_.assert(_.boolLike(o.raw)),o},body:_join_body})}(),_.path.reroot.defaults={paths:null,reroot:1,allowingNull:1,raw:0},_.path.traceToRoot=function traceToRoot(filePath){let self=this;let result=[];for(filePath=self.normalize(filePath),_.assert(1===arguments.length),_.assert(self.isAbsolute(filePath)),result.push(filePath),filePath=self.detrail(filePath);filePath!==self.rootToken;)_.assert(filePath!==self.rootToken+self.downToken&&!_.strBegins(filePath,self.rootToken+self.downToken+self.upToken)),filePath=self.dir(filePath),result.push(filePath);return result.reverse()};let ToolsExtension={TokensSyntax:TokensSyntax};Object.assign(_starter_,ToolsExtension),Object.assign(_starter_.path,{})}(),function _njs_(){"use strict";_global_;let _starter_=_global_._starter_;let _=_starter_;let _natInclude="undefined"==typeof require?null:require;let _natResolve="undefined"==typeof require?null:require.resolve;function _sourceCodeModule(){let SourceFile=_starter_.SourceFile;return function accesor(propName,onGet,onSet){let property={enumerable:true,configurable:true,get:onGet,set:onSet};Object.defineProperty(SourceFile,propName,property)}("_cache",function cacheGet(){return _starter_.sourcesMap},function cacheSet(src){return _starter_.sourcesMap=src,_starter_.sourcesMap.module||_starter_._sourceMake("module","/",_sourceCodeModule),_starter_.sourcesMap}),this.exports=SourceFile,SourceFile}let Extension={_natInclude:_natInclude,_natResolve:_natResolve,_njsModuleFromSource:function _njsModuleFromSource(sourceFile){if(sourceFile.njsModule)return sourceFile.njsModule;let Module=_natInclude("module");let natPath=this.path.nativize(sourceFile.filePath);let njsModule=Module._cache[natPath];return njsModule||(njsModule=new Module(natPath,sourceFile.parent?sourceFile.parent.njsModule:null),Module._cache[natPath]=njsModule),njsModule.sourceFile=sourceFile,sourceFile.njsModule=njsModule,njsModule},_sourceForIncludeWithNjsModule:function _sourceForIncludeWithNjsModule(njsModule,filePath){let sourceFile=njsModule.sourceFile||null;return this._sourceForInclude(sourceFile,_.path.dir(njsModule.filename),filePath)},_sourceFromNjsModule:function _sourceFromNjsModule(njsModule){let r=this._sourceForPathGet(njsModule.filename);return r?(this._njsSourceFileUpdateFromNjs(r,njsModule),r):((r=this.SourceFile({filePath:njsModule.filename,njsModule:njsModule})).parent||njsModule.parent&&(r.parent=this._sourceFromNjsModule(njsModule.parent)),r)},_njsSourceFile:function _njsSourceFile(sourceFile,op){sourceFile._natInclude=_natInclude,sourceFile._natResolve=_natResolve,void 0===sourceFile.njsModule&&(sourceFile.njsModule=null),op.njsModule&&(sourceFile.njsModule=op.njsModule),this._njsSourceFileUpdateFromNjs(sourceFile,sourceFile.njsModule)},_njsSourceFileUpdateFromNjs:function _njsSourceFileUpdateFromNjs(sourceFile,njsModule){_.assert(!sourceFile.njsModule||sourceFile.njsModule===njsModule,"Something wrong!"),sourceFile.njsModule=njsModule,sourceFile.njsModule&&(sourceFile.njsModule.sourceFile=sourceFile,sourceFile.state=njsModule.loaded?"opened":"opening",sourceFile.exports=njsModule.exports)},_sourceResolveAct:function _sourceResolveAct(parentSource,basePath,filePath){let _natResolve;return(_natResolve=parentSource?parentSource._natResolve:this._natResolve)(filePath)},_njsSourceIncludeFromNjsAct:function _njsSourceIncludeFromNjsAct(njsModule,childSource,sourcePath){let parentSource=njsModule.sourceFile||null;return this._sourceIncludeResolvedCalling(parentSource,childSource,sourcePath)},_includeAct:function _includeAct(parentSource,basePath,filePath){let resolvedFilePath=this._pathResolveLocal(parentSource,basePath,filePath);return resolvedFilePath=_.path.nativize(resolvedFilePath),(parentSource?parentSource._natInclude:this._natInclude)(resolvedFilePath)},_SetupAct:function _SetupAct(){let starter=this;starter._sourceMake("module","/",_sourceCodeModule);let Module=_natInclude("module");let NjsResolveFilename=Module._resolveFilename;Module._resolveFilename=function _resolveFilename(request,parent,isMain){let result=starter._sourceOwnResolve(parent,null,request);return null===result?NjsResolveFilename.apply(this,arguments):result};let NjsLoad=Module._load;Module._load=function _load(request,parent,isMain){parent.sourceFile||starter._sourceFromNjsModule(parent);let childSource=starter._sourceForIncludeWithNjsModule(parent,request);if(null===childSource){let result=NjsLoad.apply(this,arguments);let child=Module._cache[NjsResolveFilename.apply(this,arguments)];return child&&starter._sourceFromNjsModule(child),result}return starter._njsSourceIncludeFromNjsAct(parent,childSource,request)}}};Object.assign(_starter_,Extension)}(),function _starter_(){"use strict";const _global=_global_;if(_global._starter_&&_global._starter_._inited)return;let _starter_=_global_._starter_;let _=_starter_;function SourceFile(o){let starter=_starter_;let sourceFile=this;return sourceFile instanceof SourceFile?(void 0===o.isScript&&(o.isScript=true),o.filePath=starter.path.canonizeTolerant(o.filePath),o.dirPath||(o.dirPath=starter.path.dir(o.filePath)),o.dirPath=starter.path.canonizeTolerant(o.dirPath),sourceFile.filePath=o.filePath,sourceFile.dirPath=o.dirPath,sourceFile.nakedCall=o.nakedCall,sourceFile.isScript=o.isScript,sourceFile.filename=o.filePath,sourceFile.exports=Object.create(null),sourceFile.parent=null,sourceFile.children=[],sourceFile.njsModule=o.njsModule,sourceFile.error=null,sourceFile.state=o.nakedCall?"preloaded":"created",sourceFile.starter=starter,sourceFile.include=function include(id){return SourceFile._load(id,this,false)}.bind(sourceFile),sourceFile.resolve=starter._sourceResolve.bind(starter,sourceFile,sourceFile.dirPath),sourceFile.include.resolve=sourceFile.resolve,sourceFile.include.sourceFile=sourceFile,sourceFile.isModuleDeclareFile="node_modules"===starter.path.name(sourceFile.dirPath),sourceFile.path=["/"],getter("id",function idGet(){return this.filePath}),getter("loaded",function loadedGet(){return"opened"===this.state}),"browser"===starter.interpreter?starter._broSourceFile(sourceFile,o):starter._njsSourceFile(sourceFile,o),starter.loggingSourceFiles&&console.log(` . SourceFile ${o.filePath}`),starter.sourcesMap[_.path.nativize(o.filePath)]=sourceFile,sourceFile.isModuleDeclareFile&&(starter.moduleMainFilesMap[starter.path.fullName(o.filePath)]=sourceFile),sourceFile):new SourceFile(o);function getter(propName,onGet){let property={enumerable:true,configurable:true,get:onGet};Object.defineProperty(sourceFile,propName,property)}}_starter_.path,_starter_.sourcesMap,SourceFile._load=function _load(request,parent,isMain){return _starter_._sourceInclude(parent,parent.dirPath,request)},SourceFile._resolveFilename=function _resolveFilename(request,parent){return _starter_._sourceResolveAct(parent,parent.dirPath,request)},SourceFile.prototype=Object.create(null),SourceFile.prototype.load=function load(filename){return _starter_._sourceIncludeResolvedCalling(null,this,this.filePath)};let Extension={SourceFile:SourceFile,_sourceMake:function _sourceMake(filePath,dirPath,nakedCall){return SourceFile({filePath:filePath,dirPath:dirPath,nakedCall:nakedCall})},_sourceIncludeResolvedCalling:function _sourceIncludeResolvedCalling(parentSource,childSource,sourcePath){let starter=this;try{if(!childSource)throw _._err({args:[`Found no source file ${sourcePath}`],level:4});if("errored"===childSource.state||"opening"===childSource.state||"opened"===childSource.state)return end();childSource.parent=parentSource||null,childSource.state="opening",childSource.nakedCall(),childSource.state="opened","njs"===Config.interpreter&&starter._njsModuleFromSource(childSource)}catch(err){throw err=_.err(err,`\nError including source file ${childSource?childSource.filePath:sourcePath}`),childSource&&(childSource.error=err,childSource.state="errored"),err}return end();function end(){return starter.requireCache[childSource.filePath]||(starter.requireCache[childSource.filePath]=childSource),childSource.exports}},_includeAct:null,_sourceInclude:function _sourceInclude(parentSource,basePath,filePath){let starter=this;try{if(_.arrayIs(filePath)){let result=[];for(let f=0;f<filePath.length;f++){let r=starter._sourceInclude(parentSource,basePath,filePath[f]);void 0===r?result.push(r):_.arrayAppendArrays(result,r)}return result}if(!_starter_.withServer&&_.path.isGlob(filePath)){let resolvedFilePath=starter._pathResolveLocal(parentSource,basePath,filePath);let filtered=_.props.keys(_.path.globShortFilterKeys(starter.sourcesMap,resolvedFilePath));if(filtered.length)return starter._sourceInclude(parentSource,basePath,filtered)}else{let resolvedFilePath=this._pathResolveLocal(parentSource,basePath,filePath);let chachedSource=this.requireCache[resolvedFilePath];if(chachedSource)return _.assert("errored"===chachedSource.state||"opening"===chachedSource.state||"opened"===chachedSource.state),chachedSource.exports;let childSource=this.sourcesMap[resolvedFilePath];if(childSource)return starter._sourceIncludeResolvedCalling(parentSource,childSource,filePath)}return starter._includeAct(parentSource,basePath,filePath)}catch(err){throw err=_.err(err,`\nError including source file ${filePath}`)}},_sourceResolveAct:null,_sourceResolve:function _sourceResolve(parentSource,basePath,filePath){let result=this._sourceOwnResolve(parentSource,basePath,filePath);return null!==result?result:this._sourceResolveAct(parentSource,basePath,filePath)},_sourceOwnResolve:function _sourceOwnResolve(parentSource,basePath,filePath){let childSource=this._sourceForInclude.apply(this,arguments);return childSource?childSource.filePath:null},_sourceForPathGet:function _sourceForPathGet(filePath){return filePath=this.path.canonizeTolerant(filePath),this.sourcesMap[filePath]||null},_sourceForInclude:function _sourceForInclude(sourceFile,basePath,filePath){let resolvedFilePath=this._pathResolveLocal(sourceFile,basePath,filePath);return this.sourcesMap[resolvedFilePath]||null},_pathResolveLocal:function _pathResolveLocal(sourceFile,basePath,filePath){let starter=this;if(sourceFile&&!basePath&&(basePath=sourceFile.dirPath),!basePath&&!sourceFile)throw _.err("Base path is not specified, neither script file");let isAbsolute="/"===filePath[0];let isDotted=_.strBegins(filePath,"./")||_.strBegins(filePath,"../")||"."===filePath||".."===filePath;if(isDotted||(filePath=starter.path.canonizeTolerant(filePath)),isDotted&&!isAbsolute&&"/"!==(filePath=starter.path.canonizeTolerant(basePath+"/"+filePath))[0]&&(filePath="./"+filePath),!isDotted&&!isAbsolute){if(starter.moduleMainFilesMap[filePath])return starter.moduleMainFilesMap[filePath].filePath;let filePathLower=filePath.toLowerCase();if(starter.moduleMainFilesMap[filePathLower])return starter.moduleMainFilesMap[filePathLower].filePath}return _.path.nativize(filePath)},_Setup:function _Setup(){this._inited||(_starter_.catchingUncaughtErrors&&(_starter_.error._setupUncaughtErrorHandler2(),_starter_.error._setupUncaughtErrorHandler9()),this._SetupAct(),this._inited=1)},redirectingConsole:null,_inited:false};for(let k in Extension)void 0===_starter_[k]&&(_starter_[k]=Extension[k]);_starter_._Setup()}();let _libraryFilePath_=_starter_.path.canonizeTolerant(__filename);_starter_.path.canonizeTolerant(__dirname),function Include_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/Include.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Include_s_naked(){!function _l0_Include_s_(){"use strict";void 0!==module&&(module.exports=require("./Include7.s"),require("./l8/Setup.s"))}()});module.exports;let require=module.include;module.include}(),function Include1_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/Include1.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Include1_s_naked(){!function _l0_Include1_s_(){"use strict";void 0!==module&&(require("./l0/l0/Global.s"),require("./l0/l3/Config.s"),require("./l0/l3/Predefined.s"),module.exports=require("./l0/l5/Setup.s"),require("./l1/1Diagnostic.s"),require("./l1/2Long.s"),require("./l1/2Props.s"),require("./l1/3Blank.s"),require("./l1/5ArgumentsArray.s"),require("./l1/5BufferTyped.s"),require("./l1/Array.s"),require("./l1/ArraySet.s"),require("./l1/Auxiliary.s"),require("./l1/BigInt.s"),require("./l1/Bool.s"),require("./l1/Buffer.s"),require("./l1/BufferBytes.s"),require("./l1/BufferNode.s"),require("./l1/BufferRaw.s"),require("./l1/BuffersTyped.s"),require("./l1/BufferView.s"),require("./l1/Class.s"),require("./l1/Constructible.s"),require("./l1/Container.s"),require("./l1/ContainerAdapter.s"),require("./l1/Countable.s"),require("./l1/Ct.s"),require("./l1/Date.s"),require("./l1/Entity.s"),require("./l1/Escape.s"),require("./l1/Event.s"),require("./l1/Functional.s"),require("./l1/Functor.s"),require("./l1/Fuzzy.s"),require("./l1/Global.s"),require("./l1/HashMap.s"),require("./l1/Interval.s"),require("./l1/Intervalc.s"),require("./l1/Intervall.s"),require("./l1/Intervalo.s"),require("./l1/Introspector.s"),require("./l1/Itself.s"),require("./l1/Logger.s"),require("./l1/Logic.s"),require("./l1/LogicNode.s"),require("./l1/Seeker.s"),require("./l1/Map.s"),require("./l1/Module.s"),require("./l1/Number.s"),require("./l1/Object.s"),require("./l1/Primitive.s"),require("./l1/Process.s"),require("./l1/Pair.s"),require("./l1/Path.s"),require("./l1/Printer.s"),require("./l1/PropertyTransformer.s"),require("./l1/Prototype.s"),require("./l1/Regexp.s"),require("./l1/Routine.s"),require("./l1/Set.s"),require("./l1/Sorted.s"),require("./l1/Str.s"),require("./l1/Stringer.s"),require("./l1/StrLines.s"),require("./l1/Symbol.s"),require("./l1/Time.s"),require("./l1/Type.s"),require("./l1/Units.s"),require("./l1/Unroll.s"),require("./l1/Vector.s"),require("./l1/Wrap.s"),require("./l1/zErr.s"))}()});module.exports;let require=module.include;module.include}(),function Include3_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/Include3.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Include3_s_naked(){!function _l0_Include3_s_(){"use strict";void 0!==module&&(module.exports=require("./Include1.s"),require("./l3/1Wrap.s"),require("./l3/1LogicNode.s"),require("./l3/2Props.s"),require("./l3/3Blank.s"),require("./l3/3Long.s"),require("./l3/3Path.s"),require("./l3/ArgumentsArray.s"),require("./l3/Array.s"),require("./l3/ArraySet.s"),require("./l3/Auxiliary.s"),require("./l3/Bool.s"),require("./l3/Buffer.s"),require("./l3/BuffersTyped.s"),require("./l3/BufferTyped.s"),require("./l3/Container.s"),require("./l3/ContainerAdapter.s"),require("./l3/Countable.s"),require("./l3/Diagnostic.s"),require("./l3/Entity.s"),require("./l3/Event.s"),require("./l3/Escape.s"),require("./l3/HashMap.s"),require("./l3/Itself.s"),require("./l3/Logic.s"),require("./l3/Map.s"),require("./l3/Module.s"),require("./l3/Number.s"),require("./l3/Object.s"),require("./l3/Primitive.s"),require("./l3/Process.s"),require("./l3/Regexp.s"),require("./l3/Routine.s"),require("./l3/Seeker.s"),require("./l3/Set.s"),require("./l3/Str.s"),require("./l3/Stringer.s"),require("./l3/Time.s"),require("./l3/Unroll.s"),require("./l3/Vector.s"),require("./l3/zErr.s"))}()});module.exports;let require=module.include;module.include}(),function Include5_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/Include5.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Include5_s_naked(){!function _l0_Include5_s_(){"use strict";void 0!==module&&(module.exports=require("./Include3.s"),require("./l5/1Seeker.s"),require("./l5/ArgumentsArray.s"),require("./l5/Array.s"),require("./l5/ArraySet.s"),require("./l5/Auxiliary.s"),require("./l5/BigInt.s"),require("./l5/Bool.s"),require("./l5/Buffer.s"),require("./l5/Constructible.s"),require("./l5/Container.s"),require("./l5/Countable.s"),require("./l5/Ct.s"),require("./l5/Date.s"),require("./l5/Diagnostic.s"),require("./l5/Entity.s"),require("./l5/Err.s"),require("./l5/Escape.s"),require("./l5/Event.s"),require("./l5/Functional.s"),require("./l5/Fuzzy.s"),require("./l5/Global.s"),require("./l5/HashMap.s"),require("./l5/Interval.s"),require("./l5/Intervalc.s"),require("./l5/Intervall.s"),require("./l5/Intervalo.s"),require("./l5/Introspector.s"),require("./l5/Itself.s"),require("./l5/Logic.s"),require("./l5/Long.s"),require("./l5/Map.s"),require("./l5/Number.s"),require("./l5/Object.s"),require("./l5/Pair.s"),require("./l5/Path.s"),require("./l5/Permutation.s"),require("./l5/Primitive.s"),require("./l5/Printer.s"),require("./l5/Process.s"),require("./l5/Props.s"),require("./l5/PropertyTransformer.s"),require("./l5/Prototype.s"),require("./l5/Regexp.s"),require("./l5/Routine.s"),require("./l5/Set.s"),require("./l5/Sorted.s"),require("./l5/Str.s"),require("./l5/Stringer.s"),require("./l5/Symbol.s"),require("./l5/Time.s"),require("./l5/Type.s"),require("./l5/Units.s"),require("./l5/Unroll.s"),require("./l5/Vector.s"),require("./l5/zModule.s"))}()});module.exports;let require=module.include;module.include}(),function Include7_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/Include7.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Include7_s_naked(){!function _l0_Include7_s_(){"use strict";void 0!==module&&(module.exports=require("./Include5.s"),require("./l6/Compose.s"),require("./l6/PropertyTransformers.s"),require("./l7/ArgumentsArray.s"),require("./l7/Array.s"),require("./l7/ArraySet.s"),require("./l7/Auxiliary.s"),require("./l7/BigInt.s"),require("./l7/Bool.s"),require("./l7/Buffer.s"),require("./l7/Constructible.s"),require("./l7/Container.s"),require("./l7/Countable.s"),require("./l7/Ct.s"),require("./l7/Date.s"),require("./l7/Diagnostic.s"),require("./l7/Entity.s"),require("./l7/Err.s"),require("./l7/Escape.s"),require("./l7/Event.s"),require("./l7/Functional.s"),require("./l7/Fuzzy.s"),require("./l7/Global.s"),require("./l7/HashMap.s"),require("./l7/Interval.s"),require("./l7/Intervalc.s"),require("./l7/Intervall.s"),require("./l7/Intervalo.s"),require("./l7/Introspector.s"),require("./l7/Logic.s"),require("./l7/Seeker.s"),require("./l7/Long.s"),require("./l7/Map.s"),require("./l7/Module.s"),require("./l7/Number.s"),require("./l7/Object.s"),require("./l7/Pair.s"),require("./l7/Path.s"),require("./l7/Primitive.s"),require("./l7/Printer.s"),require("./l7/Process.s"),require("./l7/Props.s"),require("./l7/PropertyTransformer.s"),require("./l7/Prototype.s"),require("./l7/Regexp.s"),require("./l7/Routine.s"),require("./l7/Set.s"),require("./l7/Sorted.s"),require("./l7/Str.s"),require("./l7/Stringer.s"),require("./l7/Symbol.s"),require("./l7/Time.s"),require("./l7/Type.s"),require("./l7/Units.s"),require("./l7/Unroll.s"),require("./l7/Vector.s"))}()});module.exports;let require=module.include;module.include}(),function Global_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l0/Global.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l0");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Global_s_naked(){!function _Global_s_(){"use strict";let _global=get();function get(){let _global=void 0;return"undefined"!=typeof _global_&&_global_._global_===_global_?_global=_global_:"undefined"!=typeof globalThis&&globalThis.globalThis===globalThis?_global=globalThis:"undefined"!=typeof Global&&Global.Global===Global?_global=Global:"undefined"!=typeof global&&global.global===global?_global=global:"undefined"!=typeof window&&window.window===window?_global=window:"undefined"!=typeof self&&self.self===self&&(_global=self),_global}function filePathIsBin(filePath){return/\.node$/.test(filePath)}_global._globals_||(_global._globals_=Object.create(null),_global._globals_.real=_global._realGlobal_||_global,_global._realGlobal_=_global,_global._global_=_global);const ModuleFileSymbol=Symbol.for("ModuleFile");const ModuleFileNative=void 0!==module?require("module"):null;const __=_realGlobal_.wTools=_realGlobal_.wTools||Object.create(null);__.global=__.global||Object.create(null),__.module=__.module||Object.create(null),__.global._stack=__.global._stack||[],__.global.get=__.global.get||get,__.global.new=__.global.new||function _new(name,global){if(_realGlobal_._globals_[name])throw Error(`Global namespace::${name} already exists!`);let global2=_realGlobal_._globals_[name]=Object.create(global||_realGlobal_);global2.__GLOBAL_NAME__=name,global2.wTools=Object.create(null),global2.wTools.global=Object.create(null),global2.wTools.global.current=global2,global2.wTools.module=Object.create(null),global2.wTools.module.nativeFilesMap=Object.create(null);for(let name in ModuleFileNative._cache)filePathIsBin(name)&&(global2.wTools.module.nativeFilesMap[name]=ModuleFileNative._cache[name]);return global2},__.global.open=__.global.open||function open(name){if(!_global_.wTools.global.current)throw Error("Global namespace is not setup");if(!_global_.wTools.module.nativeFilesMap)throw Error("Global namespace is not setup");if(!_globals_[name])throw Error(`Global namespace::${name} deos not exist!`);if(!_global_.__GLOBAL_NAME__)throw Error("Current global namespace deos not have name!");if(_global_.wTools.module.nativeFilesMap!==ModuleFileNative._cache)throw Error("Current global have native module files map of different global");_realGlobal_.wTools.global._stack.push({name:_global_.__GLOBAL_NAME__,global:_global_,moduleNativeFilesMap:ModuleFileNative._cache});let global2=_globals_[name];return _realGlobal_._global_=global2,ModuleFileNative._cache=global2.wTools.module.nativeFilesMap,global2},__.global.makeAndOpen=__.global.makeAndOpen||function makeAndOpen(module,name){const _global=__.global.new(name,_global_);return __.global.open(name),__.module.fileSetEnvironment(module,name),_global},__.global.close=__.global.close||function close(name){if(name!==_global_.__GLOBAL_NAME__)throw Error(`Current global is ${_global_.__GLOBAL_NAME__}, not ${name}`);if(_global_.wTools.module.nativeFilesMap!==ModuleFileNative._cache)throw Error("Current global have native module files map of different global");if(!_realGlobal_.wTools.global._stack.length)throw Error("Nothing to close");let was=_realGlobal_.wTools.global._stack.pop();ModuleFileNative._cache=was.moduleNativeFilesMap,_realGlobal_._global_=was.global},__.global.setup=__.global.setup||function setup(global,name){if(!name)throw Error("Expects name of the global");if(Object.hasOwnProperty.call(global,"__GLOBAL_NAME__")&&global.__GLOBAL_NAME__!==name)throw Error(`The global have name ${global.__GLOBAL_NAME__}, not ${name}`);if(global.__GLOBAL_NAME__=Object.hasOwnProperty.call(global,"__GLOBAL_NAME__")?global.__GLOBAL_NAME__:name,global.wTools=Object.hasOwnProperty.call(global,"wTools")?global.wTools:Object.create(null),global.wTools.global=global.wTools.global||Object.create(null),global.wTools.global.current&&global.wTools.global.current!==global)throw Error("The global refers to different global. Something wrong!");if(global.wTools.global.current=global.wTools.global.current||global,global.wTools.module=global.wTools.module||Object.create(null),void 0!==module&&void 0!==module&&(global.wTools.module.nativeFilesMap=global.wTools.module.nativeFilesMap||require("module")._cache),!global.wTools.module.rootFileNative){let rootFileNative=global.wTools.module.rootFileNative=module;for(;__.module.fileNativeParent(rootFileNative);)rootFileNative=__.module.fileNativeParent(rootFileNative);global.wTools.module.rootFileNative=rootFileNative}const ModuleFileNative=require("module");global.wTools.module.nativeFilesMap||(global.wTools.module.nativeFilesMap=ModuleFileNative._cache)},__.module.fileSetEnvironment=__.module.fileSetEnvironment||function fileSetEnvironment(moduleFile,name){let moduleNativeFile=__.module.fileNativeFrom(moduleFile);let global2=_globals_[name];if(null===name)return void(moduleNativeFile._virtualEnvironment=null);if(!!moduleNativeFile._virtualEnvironment)throw Error(`Module already have virtual environment ${moduleNativeFile._virtualEnvironment.name}`);if(!_globals_[name])throw Error(`Global namespace::${name} deos not exist!`);if(!global2.wTools.module.nativeFilesMap)throw Error(`Global namespace::${name} deos not have defined module.nativeFilesMap!`);let env=moduleNativeFile._virtualEnvironment=Object.create(null);env.name=global2.__GLOBAL_NAME__,env.global=global2,env.moduleNativeFilesMap=global2.wTools.module.nativeFilesMap},__.module.fileResetEnvironment=__.module.fileResetEnvironment||function fileResetEnvironment(moduleFile,name){let moduleNativeFile=__.module.fileNativeFrom(moduleFile);if(!moduleNativeFile._virtualEnvironment)throw Error("Module deos not have virtual environment");if(moduleNativeFile._virtualEnvironment.name!==name)throw Error(`Not global::${name} is not associated global`);delete moduleNativeFile._virtualEnvironment},__.module.fileNativeIs=__.module.fileNativeIs||function fileNativeIs(src){return!!src&&(!ModuleFileNative||src instanceof ModuleFileNative)},__.module.fileUniversalIs=__.module.fileUniversalIs||function fileUniversalIs(src){return!!src&&!Reflect.hasOwnProperty(src,"constructor")&&true===src[ModuleFileSymbol]},__.module.fileNativeFrom=__.module.fileNativeFrom||function fileNativeFrom(src){return __.module.fileNativeIs(src)?src:__.module.fileUniversalIs(src)&&src.moduleNativeFile||void 0},__.module.fileNativeParent=__.module.fileNativeParent||function fileNativeParent(file){if(file.parent&&void 0!==file.parent.id)return file.parent},__.module.filePathIsBin=__.module.filePathIsBin||filePathIsBin,_global_===_realGlobal_&&__.global.setup(_realGlobal_,"real")}()});module.exports;let require=module.include;module.include}(),function Config_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l3/Config.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Config_s_naked(){!function _Config_s_(){"use strict";_realGlobal_.Config||(_realGlobal_.Config={debug:true}),void 0===_realGlobal_.Config.debug&&(_realGlobal_.Config.debug=true),void 0===_realGlobal_.Config.interpreter&&(void 0!==module&&"undefined"!=typeof process?_realGlobal_.Config.interpreter="njs":_realGlobal_.Config.interpreter="browser"),void 0===_realGlobal_.Config.isWorker&&("undefined"!=typeof self&&self.self===self&&"undefined"!=typeof importScripts?_realGlobal_.Config.isWorker=true:_realGlobal_.Config.isWorker=false),_global_.Config||(_global_.Config=Object.create(_realGlobal_.Config)),void 0===_global_.Config.debug&&(_global_.Config.debug=true),void 0===_global_.Config.interpreter&&(_global_.Config.interpreter=_realGlobal_.Config.interpreter),void 0===_global_.Config.isWorker&&(_global_.Config.isWorker=_realGlobal_.Config.isWorker)}()});module.exports,module.include,module.include}(),function Predefined_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l3/Predefined.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Predefined_s_naked(){!function _Predefined_s_(){"use strict";const _global=_global_;if("real"===_global_.__GLOBAL_NAME__&&_global_.wTools&&_global_.wTools.Module){debugger;throw new Error("module::wTools was included several times")}if(!_global.__GLOBAL_NAME__)throw Error("Current global does not have name. Something wrong!");const Self=_global.wTools;Self.__GLOBAL_NAME__=_global.__GLOBAL_NAME__,Self.tools=Self,Self.def=Symbol.for("def"),Self.null=Symbol.for("null"),Self.undefined=Symbol.for("undefined"),Self.void=Symbol.for("void"),Self.nothing=Symbol.for("nothing"),Self.anything=Symbol.for("anything"),Self.maybe=Symbol.for("maybe"),Self.unknown=Symbol.for("unknown"),Self.dont=Symbol.for("dont"),Self.self=Symbol.for("self"),Self.optional=Symbol.for("optional"),_realGlobal_.U64x=BigUint64Array,_realGlobal_.U32x=Uint32Array,_realGlobal_.U16x=Uint16Array,_realGlobal_.U8x=Uint8Array,_realGlobal_.U8xClamped=Uint8ClampedArray,_realGlobal_.Ux=_realGlobal_.U32x,_realGlobal_.I64x=BigInt64Array,_realGlobal_.I32x=Int32Array,_realGlobal_.I16x=Int16Array,_realGlobal_.I8x=Int8Array,_realGlobal_.Ix=_realGlobal_.I32x,_realGlobal_.F64x=Float64Array,_realGlobal_.F32x=Float32Array,_realGlobal_.Fx=_realGlobal_.F32x,"undefined"!=typeof Buffer&&(_realGlobal_.BufferNode=Buffer),_realGlobal_.BufferRaw=ArrayBuffer,"undefined"!=typeof SharedArrayBuffer&&(_realGlobal_.BufferRawShared=SharedArrayBuffer),_realGlobal_.BufferView=DataView,_realGlobal_.HashMap=Map,_realGlobal_.HashMapWeak=WeakMap,_global.wTools=Self}()});module.exports,module.include,module.include}(),function Setup_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l5/Setup.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Setup_s_naked(){!function _Setup_s_(){"use strict";const _global=_global_;const _=_global.wTools;_.setup=_.setup||Object.create(null),_.error=_.error||Object.create(null),_.process=_.process||Object.create(null);let ErrorExtension={_handleUncaughtHead:null,_handleUncaught0:null,_handleUncaught1:function _handleUncaught1(){debugger;let args=_.error._handleUncaughtHead(arguments);let result=_.error._handleUncaught2.apply(this,args);return _.error._handleUncaught0&&_.error._handleUncaught0.apply(this,arguments),result},_handleUncaughtPromise1:function _handleUncaughtPromise1(err,promise){let o=Object.create(null);return o.promise=promise,o.err=err,o.origination="uncaught promise error",_.error._handleUncaught2.call(this,o)},_handleUncaught2:function _handleUncaught2(o){return _.error._handleUncaught2Minimal(o)},_handleUncaught2Minimal:function _handleUncaught2Minimal(o){o.origination||(o.origination="uncaught error"),o.prefix=`--------------- ${o.origination} ---------------\x3e\n`,o.postfix=`--------------- ${o.origination} ---------------<\n`;let errStr=o.err.toString();try{errStr=o.err.toString()}catch(err2){debugger;console.error(err2)}console.error(o.prefix),console.error(errStr),console.error(""),console.error(`_realGlobal_._setupUncaughtErrorHandlerDone : ${_realGlobal_._setupUncaughtErrorHandlerDone}`),console.error(""),console.error(o.err?o.err.stack:""),console.error(o.postfix),function processExit(){try{_global.process&&(process.exitCode||(process.exitCode=-1))}catch(err2){}}()},_setupUncaughtErrorHandler2:function _setupUncaughtErrorHandler2(){function _handleUncaughtHeadBrowser(args){debugger;let[message,sourcePath,lineno,colno,error]=args;return[{err:new Error(args[0]),args:args}]}_realGlobal_._setupUncaughtErrorHandlerDone||(_realGlobal_._setupUncaughtErrorHandlerDone=1,_realGlobal_.process&&"function"==typeof _realGlobal_.process.on?(_realGlobal_.process.on("uncaughtException",_.error._handleUncaught1),_realGlobal_.process.on("unhandledRejection",_.error._handleUncaughtPromise1),_.error._handleUncaughtHead=function _handleUncaughtHeadNode(args){return[{err:args[0],args:args}]},"browser"===Config.interpreter&&(_.error._handleUncaughtHead=_handleUncaughtHeadBrowser)):Object.hasOwnProperty.call(_realGlobal_,"onerror")&&(_.error._handleUncaught0=_realGlobal_.onerror,_realGlobal_.onerror=_.error._handleUncaught1,_.error._handleUncaughtHead=_handleUncaughtHeadBrowser))},_setup2:function _setup2(){_.error._setupUncaughtErrorHandler2()}};Object.assign(_.error,ErrorExtension),Object.assign(_.setup,{}),_.error._setup2(),void 0!==module&&(module.exports=_)}()});module.exports,module.include,module.include}(),function _1Diagnostic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/1Diagnostic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _1Diagnostic_s_naked(){!function _l1_1Diagnostic_s_(){"use strict";_global_;const _=_global_.wTools;function __boolLike(src){let type=Object.prototype.toString.call(src);return"[object Boolean]"===type||"[object Number]"===type}function _sureDebugger(condition){if(_.error.breakpointOnAssertEnabled)debugger}function sure(condition,...args){if(!condition||!__boolLike(condition)){if(_sureDebugger(),!_._err)throw Error(...args);throw 1===arguments.length?_._err({args:["Assertion fails"],level:2}):2===arguments.length?_._err({args:[arguments[1]],level:2}):_._err({args:Array.prototype.slice.call(arguments,1),level:2})}}function sureBriefly(condition,...args){if(!condition||!__boolLike(condition)){if(_sureDebugger(),!_._err)throw Error(...args);throw 1===arguments.length?_._err({args:["Assertion fails"],level:2,brief:1}):2===arguments.length?_._err({args:[arguments[1]],level:2,brief:1}):_._err({args:Array.prototype.slice.call(arguments,1),level:2,brief:1})}}function sureWithoutDebugger(condition,...args){if(!condition||!__boolLike(condition)){if(!_._err)throw Error(...args);throw 1===arguments.length?_._err({args:["Assertion fails"],level:2}):2===arguments.length?_._err({args:[arguments[1]],level:2}):_._err({args:Array.prototype.slice.call(arguments,1),level:2})}}function assert(condition,...args){return true}function assertWithoutBreakpoint(condition,...args){return true}function assertNotTested(src){_.assert(false,"not tested : "+stack(1))}function assertWarn(condition){condition&&__boolLike(condition)||console.warn.apply(console,[].slice.call(arguments,1))}_.diagnostic=_.diagnostic||Object.create(null);let DiagnosticExtension={sure:sure,sureBriefly:sureBriefly,sureWithoutDebugger:sureWithoutDebugger,assert:assert,assertWithoutBreakpoint:assertWithoutBreakpoint,assertNotTested:assertNotTested,assertWarn:assertWarn};Object.assign(_.diagnostic,DiagnosticExtension);let ToolsExtension={_err:function _err(){return new Error(...arguments)},sure:sure,sureBriefly:sureBriefly,sureWithoutDebugger:sureWithoutDebugger,assert:assert,assertWithoutBreakpoint:assertWithoutBreakpoint,assertNotTested:assertNotTested,assertWarn:assertWarn};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function _2Long_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/2Long.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _2Long_s_naked(){!function _l1_Long_s_(){"use strict";_global_;const _=_global_.wTools;_.assert(void 0===_.long),_.assert(void 0===_.withLong),_.long=_.long||Object.create(null),_.long.namespaces=_.long.namespaces||Object.create(null),_.long.toolsNamespacesByType=_.long.toolsNamespacesByType||Object.create(null),_.long.toolsNamespacesByName=_.long.toolsNamespacesByName||Object.create(null),_.long.toolsNamespaces=_.long.toolsNamespacesByName,_.withLong=_.long.toolsNamespacesByType;const is=function is_functor(){let result;const TypedArray=Object.getPrototypeOf(Int8Array);return(result=_global_.BufferNode?function isNjs(src){return!(!Array.isArray(src)&&(src instanceof TypedArray?src instanceof BufferNode:(isNjs.functor=is_functor,"[object Arguments]"!==Object.prototype.toString.call(src))))}:function isBrowser(src){return!!Array.isArray(src)||src instanceof TypedArray||"[object Arguments]"===Object.prototype.toString.call(src)}).functor=is_functor,result}();const isUnfoldedSmarter=function isUnfoldedSmarter_functor(){const TypedArray=Object.getPrototypeOf(Int8Array);return _global_.BufferNode?function isUnfoldedSmarterNjs(src){return!(!Array.isArray(src)&&(src instanceof TypedArray?src instanceof BufferNode:"[object Arguments]"!==Object.prototype.toString.call(src)))}:function isUnfoldedSmarterBrowser(src){return!!Array.isArray(src)||src instanceof TypedArray||"[object Arguments]"===Object.prototype.toString.call(src)}}();function isEmpty(src){return!!_.long.is(src)&&0===src.length}function isPopulated(src){return!!_.long.is(src)&&src.length>0}function like(src){return!_.primitive.is(src)&&_.long.is(src)}function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length?(_.assert(_.countable.is(src)||_.routine.is(src)),this._makeEmpty(src)):this._makeEmpty()}function makeUndefined(src,length){return _.assert(0<=arguments.length&&arguments.length<=2),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routine.is(src)),_.assert(_.number.is(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.number.is(src)||this.like(src)||_.countable.is(src)||_.routine.is(src)),this._makeUndefined(...arguments)}function makeZeroed(src,length){return _.assert(0<=arguments.length&&arguments.length<=2),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routine.is(src)),_.assert(_.number.is(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.number.is(src)||this.like(src)||_.countable.is(src)||_.routine.is(src)),this._makeZeroed(...arguments)}function makeFilling(type,value,length){return 2===arguments.length?(_.assert(_.number.is(value)||_.countable.is(value)),_.assert(void 0!==type)):3===arguments.length?(_.assert(void 0!==value),_.assert(_.number.is(length)||_.countable.is(length)),_.assert(null===type||this.like(type)||_.routine.is(type))):_.assert(0,"Expects 2 or 3 arguments"),this._makeFilling(...arguments)}function make(src,length){return _.assert(arguments.length<=2),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routine.is(src)),_.assert(_.number.is(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.number.is(src)||_.long.is(src)||_.countable.is(src)||_.routine.is(src)),this._make(...arguments)}function cloneShallow(src){return _.assert(this.like(src)),_.assert(1===arguments.length),this._cloneShallow(src)}function from(src){return _.assert(1===arguments.length,"Expects single argument"),this.is(src)?src:null===src?this.make(null):this.make(null,src)}function leftIndex(){let arr=arguments[0];let ins=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let fromIndex=0;if(_.number.is(arguments[2])&&(fromIndex=arguments[2],evaluator1=arguments[3],evaluator2=arguments[4]),_.assert(2<=arguments.length&&arguments.length<=5,"Expects 2-5 arguments: source array, element, and optional evaluator / equalizer"),_.assert(_.longLike(arr),"Expect a Long"),_.assert(_.number.is(fromIndex)),_.assert(!evaluator1||1===evaluator1.length||2===evaluator1.length||3===evaluator1.length),_.assert(!evaluator1||_.routine.is(evaluator1)),_.assert(!evaluator2||1===evaluator2.length),_.assert(!evaluator2||_.routine.is(evaluator2)),!evaluator1)return _.assert(!evaluator2),Array.prototype.indexOf.call(arr,ins,fromIndex);if(1===evaluator1.length){if(ins=evaluator2?evaluator2(ins):evaluator1(ins),arr.findIndex&&0===fromIndex)return arr.findIndex(val=>evaluator1(val)===ins);for(let a=fromIndex;a<arr.length;a++)if(evaluator1(arr[a])===ins)return a}else{_.assert(!evaluator2);for(let a=fromIndex;a<arr.length;a++)if(evaluator1(arr[a],ins))return a}return-1}function rightIndex(){let arr=arguments[0];let ins=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let fromIndex=arr.length-1;if(_.number.is(arguments[2])&&(fromIndex=arguments[2],evaluator1=arguments[3],evaluator2=arguments[4]),_.assert(2<=arguments.length&&arguments.length<=5,"Expects 2-5 arguments: source array, element, and optional evaluator / equalizer"),_.assert(_.number.is(fromIndex)),_.assert(!evaluator1||1===evaluator1.length||2===evaluator1.length||3===evaluator1.length),
_.assert(!evaluator1||_.routine.is(evaluator1)),_.assert(!evaluator2||1===evaluator2.length),_.assert(!evaluator2||_.routine.is(evaluator2)),!evaluator1)return _.assert(!evaluator2),Array.prototype.lastIndexOf.call(arr,ins,fromIndex);if(1===evaluator1.length){ins=evaluator2?evaluator2(ins):evaluator1(ins);for(let a=fromIndex;a>=0;a--)if(evaluator1(arr[a])===ins)return a}else{_.assert(!evaluator2);for(let a=fromIndex;a>=0;a--)if(evaluator1(arr[a],ins))return a}return-1}function left(){let arr=arguments[0];let ins=arguments[1];let fromIndex=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];let result=Object.create(null);let i=_.longLeftIndex(arr,ins,fromIndex,evaluator1,evaluator2);return _.assert(2<=arguments.length&&arguments.length<=5),result.index=i,i>=0&&(result.element=arr[i]),result}function right(){let arr=arguments[0];let ins=arguments[1];let fromIndex=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];let result=Object.create(null);let i=_.longRightIndex(arr,ins,fromIndex,evaluator1,evaluator2);return _.assert(2<=arguments.length&&arguments.length<=5),result.index=i,i>=0&&(result.element=arr[i]),result}function leftDefined(arr){return _.assert(1===arguments.length,"Expects single argument"),_.longLeft(arr,true,function(val){return void 0!==val})}function rightDefined(arr){return _.assert(1===arguments.length,"Expects single argument"),_.longRight(arr,true,function(val){return void 0!==val})}let LongExtension={NamespaceName:"long",NamespaceNames:["long"],NamespaceQname:"wTools/long",MoreGeneralNamespaceName:"long",MostGeneralNamespaceName:"countable",TypeName:"Long",TypeNames:["Long"],InstanceConstructor:null,IsLong:true,tools:_,is:is,isOld:function isOld(src){return!(_.primitive.is(src)||!_.class.methodIteratorOf(src)||!_.argumentsArray.like(src)&&!_.bufferTyped.is(src))},isCompact:function isCompact(src){return!!_.argumentsArray.like(src)||!!_.bufferTyped.is(src)},isUnfolded:function isUnfolded(src){return"[object Arguments]"===Object.prototype.toString.call(src)||!!Array.isArray(src)||!!_.bufferTyped.is(src)},isUnfoldedSmartOrder:function isUnfoldedSmartOrder(src){return!!Array.isArray(src)||!!_.bufferTyped.is(src)||"[object Arguments]"===Object.prototype.toString.call(src)},isUnfoldedSmarter:isUnfoldedSmarter,isEmpty:isEmpty,isPopulated:isPopulated,like:like,isResizable:function isResizable(src){return!!_.array.is(src)},IsResizable:function IsResizable(){return this.default.IsResizable()},_makeEmpty:function _makeEmpty(src){if(1===arguments.length){if(_.argumentsArray.is(src))return _.argumentsArray._makeEmpty(0);if(_.unroll.is(src))return _.unroll._makeEmpty();if(_.routine.is(src)){let result=new src(0);return _.assert(_.long.is(result)),result}if(this.is(src))return new src.constructor}return this.tools.long.default._makeEmpty()},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src,length){if(2===arguments.length){if(_.number.is(length)||(length=_.number.is(length.length)?length.length:[...length].length),null===src)return this.tools.long.default._makeUndefined(length);if(_.argumentsArray.is(src))return _.argumentsArray._makeUndefined(src,length);if(_.unroll.is(src))return _.unroll._makeUndefined(src,length);if(_.routine.is(src)){let result=new src(length);return _.assert(_.long.is(result)),result}return new src.constructor(length)}if(1===arguments.length){let constructor;return this.like(src)?_.argumentsArray.is(src)?_.argumentsArray._makeUndefined(src):_.unroll.is(src)?_.unroll._makeUndefined(src):new(constructor=src.constructor)(length=src.length):this.tools.long.default._makeUndefined(src)}return this.tools.long.default._makeUndefined()},makeUndefined:makeUndefined,_makeZeroed:function _makeZeroed(src,length){if(2===arguments.length){if(_.number.is(length)||(length=_.number.is(length.length)?length.length:[...length].length),null===src)return this.tools.long.default._makeZeroed(length);if(_.argumentsArray.is(src))return _.argumentsArray._makeZeroed(src,length);if(_.unroll.is(src))return _.unroll._makeZeroed(src,length);if(_.routine.is(src)){let result=fill(new src(length));return _.assert(_.long.is(result)),result}return fill(new src.constructor(length))}if(1===arguments.length){let constructor;return this.like(src)?_.argumentsArray.is(src)?_.argumentsArray._makeZeroed(src):_.unroll.is(src)?_.unroll._makeZeroed(src):fill(new(constructor=src.constructor)(length=src.length)):this.tools.long.default._makeZeroed(src)}return this.tools.long.default._make();function fill(dst){let l=dst.length;for(let i=0;i<l;i++)dst[i]=0;return dst}},makeZeroed:makeZeroed,_makeFilling:function _makeFilling(type,value,length){2===arguments.length&&(value=arguments[0],length=arguments[1],type=this.like(length)?length:null),_.number.is(length)||(length.length?length=length.length:_.countable.is(length)&&(length=[...length].length));let result=this._make(type,length);for(let i=0;i<length;i++)result[i]=value;return result},makeFilling:makeFilling,_make:function _make(src,length){if(2===arguments.length){let data=length;if(_.number.is(length)?data=src:_.number.is(length.length)?length=length.length:(data=[...length],length=data.length),_.argumentsArray.is(src))return fill(_.argumentsArray._make(length),data);if(_.unroll.is(src))return fill(_.unroll._make(length),data);if(null===src)return fill(this.tools.long.default._make(length),data);let result;return _.routine.is(src)?result=fill(new src(length),data):src.constructor&&(result=fill(new src.constructor(length),data)),_.assert(_.long.is(result),"Not clear how to make such long"),result}if(void 0!==src&&null!==src){if(_.number.is(src))return this.tools.long.default._make(src);if(_.unroll.is(src))return _.unroll._make(src);if(_.argumentsArray.is(src))return _.argumentsArray._make(src);if(src.constructor===Array)return[...src];if(_.buffer.typedIs(src))return new src.constructor(src);if(_.countable.is(src))return this.tools.long.default._make(src);if(_.routine.is(src)){let result=new src;return _.assert(this.is(result),"Expects long as returned instance"),result}}return this.tools.long.default.make();function fill(dst,data){if(null===data||void 0===data)return dst;let l=Math.min(length,data.length);for(let i=0;i<l;i++)dst[i]=data[i];return dst}},make:make,_cloneShallow:function _cloneShallow(src){return _.argumentsArray.is(src)?_.argumentsArray.make(src):_.unroll.is(src)?_.unroll.make(src):src.constructor===Array?[...src]:new src.constructor(src)},cloneShallow:cloneShallow,from:from,leftIndex:leftIndex,rightIndex:rightIndex,left:left,right:right,leftDefined:leftDefined,rightDefined:rightDefined,_namespaceRegister:function _namespaceRegister(namespace){let aggregatorNamespace=this;aggregatorNamespace||(aggregatorNamespace=_.long),namespace.NamespaceNames.forEach(name=>{_.assert(void 0===aggregatorNamespace.namespaces[name]),aggregatorNamespace.namespaces[name]=namespace}),_.assert(!!namespace.IsResizable),_.assert(void 0===namespace.IsLong||true===namespace.IsLong),namespace.IsLong=true,namespace.asDefault=aggregatorNamespace._asDefaultGenerate(namespace)},_asDefaultGenerate:function _asDefaultGenerate(namespace){let aggregatorNamespace=this;_.assert(!!namespace),_.assert(!!namespace.TypeName);let result=aggregatorNamespace.toolsNamespacesByType[namespace.TypeName];if(result)return result;result=aggregatorNamespace.toolsNamespacesByType[namespace.TypeName]=Object.create(_),namespace.TypeNames.forEach(name=>{_.assert(void 0===aggregatorNamespace.toolsNamespacesByType[name]||aggregatorNamespace.toolsNamespacesByType[name]===result),aggregatorNamespace.toolsNamespacesByType[name]=result});for(let name in aggregatorNamespace.namespaces){let namespace2=aggregatorNamespace.namespaces[name];let namespace3=result[namespace2.TypeName]=Object.create(namespace2);namespace3.tools=result,namespace3.TypeNames.forEach(name=>{result[name]=namespace3})}let namespace2=result[aggregatorNamespace.NamespaceName]=Object.create(aggregatorNamespace);return namespace2.tools=result,namespace2.default=namespace,aggregatorNamespace.NamespaceNames.forEach(name=>{result[name]=namespace2}),result},namespaceOf:function namespaceOf(src){if(_.unroll.is(src))return _.unroll;if(_.array.is(src))return _.array;if(_.argumentsArray.is(src))return _.argumentsArray;return _.bufferTyped.namespaceOf(src)||(_.long.is(src)?_.long:null)},namespaceWithDefaultOf:function namespaceWithDefaultOf(src){if(null===src)debugger;return null===src?this.default:this.namespaceOf(src)},_functor_functor:function _functor_functor(methodName,typer,which){if(_.assert(!!methodName),typer||(typer="namespaceOf"),which||(which=0),0===which)return end(function _functor0(container){_.assert(1===arguments.length),_.assert(_.routine.is(this[typer]),()=>`No routine::${typer} in the namesapce::${this.NamespaceName}`);const namespace=this[typer](container);return _.assert(_.routine.is(namespace[methodName]),`No routine::${methodName} in the namesapce::${namespace.NamespaceName}`),namespace[methodName].bind(namespace,container)});if(1===which)return end(function _functor1(container){_.assert(1===arguments.length),_.assert(_.routine.is(this[typer]),()=>`No routine::${typer} in the namesapce::${this.NamespaceName}`);const namespace=this[typer](container);_.assert(_.routine.is(namespace[methodName]),`No routine::${methodName} in the namesapce::${namespace.NamespaceName}`);const routine0=namespace[methodName];return function routine1(arg1,...args){return routine0.call(this,arg1,container,...args)}.bind(namespace)});function end(result){return result.functor=new Function(`return _.long._functor_functor( '${methodName}', '${typer}', ${which} )`),result}_.assert(0)}};Object.assign(_.long,LongExtension);let ToolsExtension={longIs:is.bind(_.long),longIsEmpty:isEmpty.bind(_.long),longIsPopulated:isPopulated.bind(_.long),longLike:like.bind(_.long),longMakeEmpty:makeEmpty.bind(_.long),longMakeUndefined:makeUndefined.bind(_.long),longMakeZeroed:makeZeroed.bind(_.long),longMakeFilling:makeFilling.bind(_.long),longMake:make.bind(_.long),longCloneShallow:cloneShallow.bind(_.long),longFrom:from.bind(_.long),longLeftIndex:leftIndex,longRightIndex:rightIndex,longLeft:left,longRight:right,longLeftDefined:leftDefined,longRightDefined:rightDefined};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function _2Props_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/2Props.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _2Props_s_naked(){!function _l1_2Props_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return null!==src&&void 0!==src}function like(src){return _.props.is(src)}function makeEmpty(src){return _.assert(1===arguments.length),this._makeEmpty(...arguments)}function makeUndefined(src,length){return _.assert(1===arguments.length||2===arguments.length),this._makeUndefined(...arguments)}function make(src,length){return _.assert(this.like(src)),_.assert(1===arguments.length||2===arguments.length),this._make(...arguments)}function cloneShallow(src){return _.assert(this.like(src)),_.assert(1===arguments.length),this._cloneShallow(src)}function from(src){return _.assert(1===arguments.length,"Expects single argument"),this.is(src)?src:this.make(src)}function extend(dstMap,srcMap){if(null===dstMap&&(dstMap=Object.create(null)),2===arguments.length){let srcProto=Object.getPrototypeOf(srcMap);if(null===srcProto||srcProto===Object.prototype)return Object.assign(dstMap,srcMap)}_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++){let srcMap=arguments[a];_.assert(!_.primitive.is(srcMap),"Expects non-primitive");let srcProto=Object.getPrototypeOf(srcMap);null===srcProto||srcProto===Object.prototype?Object.assign(dstMap,srcMap):this._extendWithProps(dstMap,srcMap)}return dstMap}function supplement(dstMap,srcMap){if(null===dstMap&&2===arguments.length)return Object.assign(Object.create(null),srcMap);null===dstMap&&(dstMap=Object.create(null)),_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++)srcMap=arguments[a],this._supplementWithProps(dstMap,srcMap);return dstMap}function _keys(o){let result=[];_.routine.options(_keys,o);let srcMap=o.srcMap;let selectFilter=o.selectFilter;if(_.assert(1===arguments.length,"Expects single argument"),_.assert(this.like(srcMap)),_.assert(null===selectFilter||_.routine.is(selectFilter)),o.onlyEnumerable){let result1=[];if(o.onlyOwn)for(let k in srcMap)Object.hasOwnProperty.call(srcMap,k)&&result1.push(k);else for(let k in srcMap)result1.push(k);filter(srcMap,result1)}else if(o.onlyOwn)filter(srcMap,Object.getOwnPropertyNames(srcMap));else{let proto=srcMap;result=[];do{filter(proto,Object.getOwnPropertyNames(proto)),proto=Object.getPrototypeOf(proto)}while(proto)}return result;function filter(srcMap,keys){if(selectFilter)for(let k=0;k<keys.length;k++){let e=selectFilter(srcMap,keys[k]);void 0!==e&&(element=e,-1===(dst=result).indexOf(element)&&dst.push(element))}else!function arrayAppendArrayOnce(dst,src){src.forEach(element=>{-1===dst.indexOf(element)&&dst.push(element)})}(result,keys);var dst,element}}function keys(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(keys,o||null)).srcMap=srcMap,this._keys(o)}function onlyOwnKeys(srcMap,o){let result;if(_.assert(1===arguments.length||2===arguments.length),o=_.routine.options(onlyOwnKeys,o||null),_.assert(this.like(srcMap)),o.srcMap=srcMap,o.onlyOwn=1,result=this._keys(o),!o.onlyEnumerable)debugger;return result}function onlyEnumerableKeys(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),o=_.routine.options(onlyEnumerableKeys,o||null),_.assert(this.like(srcMap)),o.srcMap=srcMap,o.onlyEnumerable=1,this._keys(o)}function allKeys(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(allKeys,o||null)).srcMap=srcMap,this._keys(o)}function _vals(o){_.routine.options(_vals,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(null===o.selectFilter||_.routine.is(o.selectFilter)),_.assert(null===o.selectFilter);let result=this._keys(o);for(let k=0;k<result.length;k++)result[k]=o.srcMap[result[k]];return result}function vals(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(vals,o||null)).srcMap=srcMap,this._vals(o)}function onlyOwnVals(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyOwnVals,o||null)).srcMap=srcMap,o.onlyOwn=1,this._vals(o)}function onlyEnumerableVals(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyEnumerableVals,o||null)).srcMap=srcMap,o.onlyEnumerable=1,this._vals(o)}function allVals(srcMap,o){_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(allVals,o||null)).srcMap=srcMap,o.onlyOwn=0,o.onlyEnumerable=0;let result=this._vals(o);debugger;return result}function _pairs(o){if(_.routine.options(_pairs,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(null===o.selectFilter||_.routine.is(o.selectFilter)),_.assert(this.like(o.srcMap)),o.selectFilter,o.selectFilter)debugger;return o.selectFilter||(o.selectFilter=function selectFilter(srcMap,k){return[k,srcMap[k]]}),this._keys(o)}function pairs(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(pairs,o||null)).srcMap=srcMap,this._pairs(o)}function onlyOwnPairs(srcMap,o){_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyOwnPairs,o||null)).srcMap=srcMap,o.onlyOwn=1;let result=this._pairs(o);debugger;return result}function onlyEnumerablePairs(srcMap,o){_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyEnumerablePairs,o||null)).srcMap=srcMap,o.onlyEnumerable=1;let result=this._pairs(o);debugger;return result}function allPairs(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(allPairs,o||null)).srcMap=srcMap,o.onlyOwn=0,o.onlyEnumerable=0,this._pairs(o)}function _ofAct(o){let result=Object.create(null);_.routine.options(_ofAct,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(this===_.props),_.assert(this.like(o.srcMap));let keys=this._keys(o);for(let k=0;k<keys.length;k++)result[keys[k]]=o.srcMap[keys[k]];return result}function _of(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(_of,o||null)).srcMap=srcMap,_.props._ofAct(o)}function onlyOwn(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyOwn,o||null)).srcMap=srcMap,o.onlyOwn=1,_.props._ofAct(o)}function onlyExplicit(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyExplicit,o||null)).srcMap=srcMap,_.props._ofAct(o)}function routines(srcMap,o){_.assert(1===arguments.length||2===arguments.length),_.assert(this===_.props),(o=_.routine.options(routines,o||null)).srcMap=srcMap,o.selectFilter=function selectRoutine(srcMap,k){debugger;if(_.routine.is(srcMap[k]))return k;debugger};debugger;return _.props._ofAct(o)}function onlyOwnRoutines(srcMap,o){_.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyOwnRoutines,o||null)).srcMap=srcMap,o.onlyOwn=1,o.selectFilter=function selectRoutine(srcMap,k){debugger;if(_.routine.is(srcMap[k]))return k;debugger};debugger;return _.props._ofAct(o)}function onlyExplicitRoutines(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyExplicitRoutines,o||null)).srcMap=srcMap,o.onlyOwn=0,o.onlyEnumerable=0,o.selectFilter=function selectRoutine(srcMap,k){if(_.routine.is(srcMap[k]))return k},_.props._ofAct(o)}function fields(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(fields,o||null)).srcMap=srcMap,o.selectFilter=function selectRoutine(srcMap,k){if(!_.routine.is(srcMap[k]))return k},_.props._ofAct(o)}function onlyOwnFields(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyOwnFields,o||null)).srcMap=srcMap,o.onlyOwn=1,o.selectFilter=function selectRoutine(srcMap,k){if(!_.routine.is(srcMap[k]))return k},_.props._ofAct(o)}function onlyExplicitFields(srcMap,o){return _.assert(this===_.props),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(onlyExplicitFields,o||null)).srcMap=srcMap,o.onlyOwn=0,o.onlyEnumerable=0,o.selectFilter=function selectRoutine(srcMap,k){if(!_.routine.is(srcMap[k]))return k},_.routine.is(srcMap)&&(o.selectFilter=function selectRoutine(srcMap,k){if(!_.longHas(["arguments","conlyExpliciter"],k))return _.routine.is(srcMap[k])?void 0:k}),_.props._ofAct(o)}_.props=_.props||Object.create(null),Symbol.for("prototype"),Symbol.for("constructor"),_keys.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},keys.defaults={onlyOwn:0,onlyEnumerable:1},onlyOwnKeys.defaults={onlyEnumerable:1},onlyEnumerableKeys.defaults={onlyOwn:0},allKeys.defaults={onlyOwn:0,onlyEnumerable:0},_vals.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},vals.defaults={onlyOwn:0,onlyEnumerable:1},onlyOwnVals.defaults={onlyEnumerable:1},onlyEnumerableVals.defaults={onlyOwn:0},allVals.defaults={},_pairs.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},pairs.defaults={onlyOwn:0,onlyEnumerable:1},onlyOwnPairs.defaults={onlyEnumerable:1},onlyEnumerablePairs.defaults={onlyOwn:0},allPairs.defaults={},_ofAct.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},_of.defaults={onlyOwn:0,onlyEnumerable:1},onlyOwn.defaults={onlyEnumerable:1},onlyExplicit.defaults={onlyOwn:0,onlyEnumerable:0},routines.defaults={onlyOwn:0,onlyEnumerable:1},onlyOwnRoutines.defaults={onlyEnumerable:1},onlyExplicitRoutines.defaults={},fields.defaults={onlyOwn:0,onlyEnumerable:1},onlyOwnFields.defaults={onlyEnumerable:1},onlyExplicitFields.defaults={};let PropsExtension={NamespaceName:"props",NamespaceNames:["props"],NamespaceQname:"wTools/props",MoreGeneralNamespaceName:"props",MostGeneralNamespaceName:"props",TypeName:"Props",TypeNames:["Props","Properties"],InstanceConstructor:null,tools:_,is:is,like:like,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:function _makeEmpty(src){return _.map.is(src)?_.map._makeEmpty(src):_.aux.is(src)?_.aux._makeEmpty(src):_.object.isBasic(src)?_.object._makeEmpty(src):void _.assert(0,`Not clear how to make ${_.strType(src)}`)},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src,length){return _.map.is(src)?_.map._makeUndefined(src):_.aux.is(src)?_.aux._makeUndefined(src):_.object.isBasic(src)?_.object._makeUndefined(src):(_.assert(0),new src.constructor)},makeUndefined:makeUndefined,_make:function _make(src){if(_.map.is(src))return _.map._make(src);if(_.aux.is(src))return _.aux._make(src);if(_.object.isBasic(src))return _.object._make(src);_.assert(0);let method=_.class.methodCloneShallowOf(src);return method?method.call(src):new src.constructor(src)},make:make,_cloneShallow:function _cloneShallow(src){if(_.map.is(src))return _.map._cloneShallow(src);if(_.aux.is(src))return _.aux._cloneShallow(src);if(_.object.isBasic(src))return _.object._cloneShallow(src);let method=_.class.methodCloneShallowOf(src);return method?method.call(src):new src.constructor(src)},cloneShallow:cloneShallow,from:from,_extendWithHashmap:function _extendWithHashmap(dstMap,src){for(let[key,val]of src)dstMap[key]=val;return dstMap},_extendWithSet:function _extendWithSet(dstMap,src){for(let key of src)dstMap[key]=key;return dstMap},_extendWithCountable:function _extendWithCountable(dstMap,src){for(let e of src)_.assert(2===e.length),dstMap[e[0]]=e[1];return dstMap},_extendWithProps:function _extendWithProps(dstMap,src){for(let k in src)dstMap[k]=src[k];return dstMap},_extendUniversal:function _extendUniversal(dstMap,srcMap){_.assert(!_.primitive.is(srcMap),"Expects non-primitive");let srcProto=Object.getPrototypeOf(srcMap);return null===srcProto||srcProto===Object.prototype?Object.assign(dstMap,srcMap):_.hashMap.like(srcMap)?this._extendWithHashmap(dstMap,srcMap):_.set.like(srcMap)?this._extendWithSet(dstMap,srcMap):_.long.like(srcMap)?this._extendWithCountable(dstMap,srcMap):this._extendWithProps(dstMap,srcMap),dstMap},extendUniversal:function extendUniversal(dstMap,srcMap){if(null===dstMap&&(dstMap=Object.create(null)),2===arguments.length){let srcProto=Object.getPrototypeOf(srcMap);if(null===srcProto||srcProto===Object.prototype)return Object.assign(dstMap,srcMap)}_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++){let srcMap=arguments[a];_.assert(!_.primitive.is(srcMap),"Expects non-primitive");let srcProto=Object.getPrototypeOf(srcMap);null===srcProto||srcProto===Object.prototype?Object.assign(dstMap,srcMap):this._extendUniversal(dstMap,srcMap)}return dstMap},extend:extend,_supplementWithHashmap:function _supplementWithHashmap(dstMap,src){for(let[key,val]of src)key in dstMap||(dstMap[key]=val);return dstMap},_supplementWithSet:function _supplementWithSet(dstMap,src){for(let key of src)key in dstMap||(dstMap[key]=key);return dstMap},_supplementWithCountable:function _supplementWithCountable(dstMap,src){for(let e of src)_.assert(2===e.length),e[0]in dstMap||(dstMap[e[0]]=e[1]);return dstMap},_supplementWithProps:function _supplementWithProps(dstMap,src){for(let k in src)k in dstMap||(dstMap[k]=src[k]);return dstMap},_supplementUniversal:function _supplementUniversal(dstMap,srcMap){_.assert(!_.primitive.is(srcMap),"Expects non-primitive");let srcProto=Object.getPrototypeOf(srcMap);return null===srcProto||srcProto===Object.prototype?Object.assign(dstMap,srcMap):_.hashMap.like(srcMap)?this._supplementWithHashmap(dstMap,srcMap):_.set.like(srcMap)?this._supplementWithSet(dstMap,srcMap):_.long.like(srcMap)?this._supplementWithCountable(dstMap,srcMap):this._supplementWithProps(dstMap,srcMap),dstMap},supplementUniversal:function supplementUniversal(dstMap,srcMap){if(null===dstMap&&2===arguments.length)return Object.assign(Object.create(null),srcMap);null===dstMap&&(dstMap=Object.create(null)),_.assert(arguments.length>=2,"Expects at least two arguments"),_.assert(this.like(dstMap),()=>`Expects dstMap::${this.NamespaceName} as the first argument`);for(let a=1;a<arguments.length;a++)srcMap=arguments[a],this._supplementWithProps(dstMap,srcMap);return dstMap},supplement:supplement,_keys:_keys,keys:keys,onlyOwnKeys:onlyOwnKeys,onlyEnumerableKeys:onlyEnumerableKeys,allKeys:allKeys,_vals:_vals,vals:vals,onlyOwnVals:onlyOwnVals,onlyEnumerableVals:onlyEnumerableVals,allVals:allVals,_pairs:_pairs,pairs:pairs,onlyOwnPairs:onlyOwnPairs,onlyEnumerablePairs:onlyEnumerablePairs,allPairs:allPairs,_ofAct:_ofAct,of:_of,onlyOwn:onlyOwn,onlyExplicit:onlyExplicit,routines:routines,onlyOwnRoutines:onlyOwnRoutines,onlyExplicitRoutines:onlyExplicitRoutines,fields:fields,onlyOwnFields:onlyOwnFields,onlyExplicitFields:onlyExplicitFields,own:function own(src,key){return!_.primitive.is(src)&&Object.hasOwnProperty.call(src,key)},has:function has(src,key){return!_.primitive.is(src)&&!!Reflect.has(src,key)},ownEnumerable:function ownEnumerable(src,key){if(_.primitive.is(src))return false;let descriptor=Object.getOwnPropertyDescriptor(src,key);if(!descriptor)return false;debugger;return!!descriptor.enumerable},hasEnumerable:function hasEnumerable(src,key){if(_.primitive.is(src))return false;let found=_.props.descriptorOf(src,key);debugger;return!!found.descriptor&&!!found.descriptor.enumerable},descriptorActiveOf:function descriptorActiveOf(object,name){let result=Object.create(null);_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!!object,"No object");do{let descriptor=Object.getOwnPropertyDescriptor(object,name);if(descriptor&&!("value"in descriptor))return result.descriptor=descriptor,result.object=object,result;object=Object.getPrototypeOf(object)}while(object);return result},descriptorOf:function descriptorOf(object,name){let result=Object.create(null);_.assert(2===arguments.length,"Expects exactly two arguments");do{let descriptor=Object.getOwnPropertyDescriptor(object,name);if(descriptor)return result.descriptor=descriptor,result.object=object,result;object=Object.getPrototypeOf(object)}while(object);return result},descriptorOwnOf:function descriptorOwnOf(object,name){return Object.getOwnPropertyDescriptor(object,name)},namespaceOf:function namespaceOf(src){return _.map.is(src)?_.map:_.aux.is(src)?_.aux:_.object.is(src)?_.object:_.props.is(src)?_.props:null},namespaceWithDefaultOf:_.long.namespaceWithDefaultOf,_functor_functor:_.long._functor_functor};Object.assign(_.props,PropsExtension);let ToolsExtension={propsIs:is.bind(_.props),propsLike:like.bind(_.props),propsMakeEmpty:makeEmpty.bind(_.props),propsMakeUndefined:makeUndefined.bind(_.props),propsMake:make.bind(_.props),propsCloneShallow:cloneShallow.bind(_.props),propsFrom:from.bind(_.props),propsExtend:extend.bind(_.props),propsSupplement:supplement.bind(_.props)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function _3Blank_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/3Blank.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _3Blank_s_naked(){!function _l1_3Blank_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return true}function like(src){return this.is(src)}_.blank=_.blank||Object.create(null);let ToolsExtension={blankIs:is.bind(_.blank),blankLike:like.bind(_.blank)};Object.assign(_,ToolsExtension);let BlankExtension={NamespaceName:"blank",NamespaceNames:["blank"],NamespaceQname:"wTools/blank",MoreGeneralNamespaceName:"blank",MostGeneralNamespaceName:"blank",TypeName:"Blank",TypeNames:["Blank"],InstanceConstructor:null,tools:_,is:is,like:like,IsResizable:function IsResizable(){return _.assert(0===arguments.length),false},_makeEmpty:function _makeEmpty(src){return src},makeEmpty:function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),src},_makeUndefined:function _makeUndefined(src){return src},makeUndefined:function makeUndefined(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),src},_make:function _make(src){return src},make:function make(src){return _.assert(this.like(src)),_.assert(1===arguments.length),this._make(src)},_cloneShallow:function _cloneShallow(src){return src},cloneShallow:_.props.cloneShallow,from:_.props.from,namespaceOf:function namespaceOf(src){return this},namespaceWithDefaultOf:function namespaceWithDefaultOf(src){return this},_functor_functor:_.props._functor_functor};Object.assign(_.blank,BlankExtension)}()});module.exports,module.include,module.include}(),function _5ArgumentsArray_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/5ArgumentsArray.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _5ArgumentsArray_s_naked(){!function _l1_5ArgumentsArray_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return"[object Arguments]"===Object.prototype.toString.call(src)}function like(src){return!!Array.isArray(src)||"[object Arguments]"===Object.prototype.toString.call(src)}function make(src,length){return _.assert(0===arguments.length||null===src||_.countable.is(src)||_.numberIs(src)),_.assert(void 0===length||!_.number.is(src)||!_.number.is(length)),_.assert(arguments.length<2||_.number.is(length)||_.countable.is(length)),_.assert(arguments.length<=2),this._make(...arguments)}function makeEmpty(src){return _.assert(0===arguments.length||null===src||this.like(src)||_.countable.is(src)),_.assert(arguments.length<=1),this._makeEmpty(src)}function makeUndefined(src,length){return _.assert(0<=arguments.length&&arguments.length<=2),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routineIs(src)),_.assert(_.numberIs(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.numberIs(src)||_.countable.is(src)||_.routineIs(src)),this._makeUndefined(...arguments)}function cloneShallow(src){return _.assert(this.is(src)),_.assert(1===arguments.length),this._cloneShallow(src)}function from(src){return _.assert(1===arguments.length,"Expects single argument"),this.is(src)?src:this.make(src)}_.argumentsArray=_.argumentsArray||Object.create(null);var ToolsExtension={argumentsArrayIs:is.bind(_.argumentsArray),argumentsArrayLike:like.bind(_.argumentsArray),argumentsArrayMakeEmpty:makeEmpty.bind(_.argumentsArray),argumentsArrayMakeUndefined:makeUndefined.bind(_.argumentsArray),argumentsArrayMake:make.bind(_.argumentsArray),argumentsArrayCloneShallow:cloneShallow.bind(_.argumentsArray),argumentsArrayFrom:from.bind(_.argumentsArray)};Object.assign(_,ToolsExtension);var ArgumentsArrayExtension={NamespaceName:"argumentsArray",NamespaceNames:["argumentsArray"],NamespaceQname:"wTools/argumentsArray",MoreGeneralNamespaceName:"long",MostGeneralNamespaceName:"countable",TypeName:"ArgumentsArray",TypeNames:["ArgumentsArray","Arguments"],InstanceConstructor:null,tools:_,is:is,isOld:function isOld(src){return"[object Arguments]"===Object.prototype.toString.call(src)},isIterator:function isIterator(src){return!(!src||!src[Symbol.iterator])&&"[object Arguments]"===Object.prototype.toString.call(src)},like:like,likeOld:function likeOld(src){return!!_.array.is(src)||!!_.argumentsArray.is(src)},likeUnfolded:function likeUnfolded(src){return!!Array.isArray(src)||"[object Arguments]"===Object.prototype.toString.call(src)},IsResizable:function IsResizable(){return _.assert(0===arguments.length),false},_makeAct:function _makeAct(){return arguments},_make:function _make(src,length){if(2===arguments.length){let data=length;return _.number.is(length)&&(data=src),_.countable.is(length)&&(length=length.length),function fill(dst,data){if(null===data||void 0===data)return dst;let l=Math.min(length,data.length);for(let i=0;i<l;i++)dst[i]=data[i];return dst}(_.argumentsArray._makeAct.apply(_,_.number.is(length)?Array(length):[...length]),data)}if(1===arguments.length){if(_.numberIs(src))return _.argumentsArray._makeAct.apply(_,Array(src));if(_.countable.is(src))return _.argumentsArray._makeAct.apply(_,[...src])}return _.argumentsArray._makeAct.apply(_,[])},make:make,_makeEmpty:function _makeEmpty(){return this._make(0)},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src,length){return 0===arguments.length?this._make(0):(void 0===length&&(length=src),length&&!_.number.is(length)&&(length=length.length?length.length:[...length].length),this._make(length))},makeUndefined:makeUndefined,_makeZeroed:function _makeZeroed(src,length){return this._makeFilling.call(this,0,...arguments)},makeZeroed:function makeZeroed(src,length){return _.assert(0<=arguments.length&&arguments.length<=2),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routine.is(src)),_.assert(_.number.is(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.numberIs(src)||_.long.is(src)||_.countable.is(src)||_.routine.is(src)),this._makeZeroed(...arguments)},_makeFilling:function _makeFilling(type,value,length){2===arguments.length&&(value=arguments[0],length=arguments[1]),_.number.is(length)||(length.length?length=length.length:_.countable.is(length)&&(length=[...length].length));let result=this._make(length);for(let i=0;i<length;i++)result[i]=value;return result},makeFilling:function makeFilling(type,value,length){return _.assert(2===arguments.length||3===arguments.length),2===arguments.length?(_.assert(_.number.is(value)||_.countable.is(value)),_.assert(void 0!==type)):(_.assert(void 0!==value),_.assert(_.number.is(length)||_.countable.is(length)),_.assert(null===type||_.routine.is(type)||_.long.is(type))),this._makeFilling(...arguments)},_cloneShallow:function _cloneShallow(src){return this._makeAct(...src)},cloneShallow:cloneShallow,from:from,namespaceOf:_.blank.namespaceOf,namespaceWithDefaultOf:_.blank.namespaceWithDefaultOf,_functor_functor:_.blank._functor_functor};Object.assign(_.argumentsArray,ArgumentsArrayExtension),_.long._namespaceRegister(_.argumentsArray)}()});module.exports,module.include,module.include}(),function _5BufferTyped_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/5BufferTyped.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _5BufferTyped_s_naked(){!function _l1_5BufferTyped_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return src instanceof Object.getPrototypeOf(Int8Array)&&!_.buffer.nodeIs(src)}_.buffer=_.buffer||Object.create(null),_.bufferTyped=_.bufferTyped||Object.create(null),_.bufferTyped.namespaces=_.bufferTyped.namespaces||Object.create(null);let isUsingGetPrototypeWithFunctor=function isUsingGetPrototypeWithFunctor_functor(){let TypedArray=Object.getPrototypeOf(Int8Array);return function isUsingGetPrototypeWithFunctor(src){return src instanceof TypedArray&&!_.buffer.nodeIs(src)}}();let isUsingExistenceOfField=function isUsingExistenceOfField_functor(){let TypedArray=Object.getPrototypeOf(Int8Array);return function isUsingExistenceOfField(src){return!!src&&!!src.buffer&&src instanceof TypedArray&&!_.buffer.nodeIs(src)}}();let isUsingSet=function alternateSet_functor(){let typedArraysSet=new Set;return typedArraysSet.add("[object BigUint64Array]"),typedArraysSet.add("[object Uint32Array]"),typedArraysSet.add("[object Uint16Array]"),typedArraysSet.add("[object Uint8Array]"),typedArraysSet.add("[object Uint8ClampedArray]"),typedArraysSet.add("[object BigInt64Array]"),typedArraysSet.add("[object Int32Array]"),typedArraysSet.add("[object Int16Array]"),typedArraysSet.add("[object Int8Array]"),typedArraysSet.add("[object Float64Array]"),typedArraysSet.add("[object Float32Array]"),function alternateSet(src){return!!typedArraysSet.has(Object.prototype.toString.call(src))&&!_.buffer.nodeIs(src)}}();let isUsingHashMap=function isUsingHashMap_functor(){let typedArraysMap=new Map;return typedArraysMap.set("[object BigUint64Array]","[object BigUint64Array]"),typedArraysMap.set("[object Uint32Array]","[object Uint32Array]"),typedArraysMap.set("[object Uint16Array]","[object Uint16Array]"),typedArraysMap.set("[object Uint8Array]","[object Uint8Array]"),typedArraysMap.set("[object Uint8ClampedArray]","[object Uint8ClampedArray]"),typedArraysMap.set("[object BigInt64Array]","[object BigInt64Array]"),typedArraysMap.set("[object Int32Array]","[object Int32Array]"),typedArraysMap.set("[object Int16Array]","[object Int16Array]"),typedArraysMap.set("[object Int8Array]","[object Int8Array]"),typedArraysMap.set("[object Float64Array]","[object Float64Array]"),typedArraysMap.set("[object Float32Array]","[object Float32Array]"),function isUsingHashMap(src){return!!typedArraysMap.has(Object.prototype.toString.call(src))&&!_.buffer.nodeIs(src)}}();let isUsingMap=function isUsingMap_functor(){let typedArraysMap=Object.create(null);return typedArraysMap["[object BigUint64Array]"]="[object BigUint64Array]",typedArraysMap["[object Uint32Array]"]="[object Uint32Array]",typedArraysMap["[object Uint16Array]"]="[object Uint16Array]",typedArraysMap["[object Uint8Array]"]="[object Uint8Array]",typedArraysMap["[object Uint8ClampedArray]"]="[object Uint8ClampedArray]",typedArraysMap["[object BigInt64Array]"]="[object BigInt64Array]",typedArraysMap["[object Int32Array]"]="[object Int32Array]",typedArraysMap["[object Int16Array]"]="[object Int16Array]",typedArraysMap["[object Int8Array]"]="[object Int8Array]",typedArraysMap["[object Float64Array]"]="[object Float64Array]",typedArraysMap["[object Float32Array]"]="[object Float32Array]",function isUsingMap(src){return!!typedArraysMap[Object.prototype.toString.call(src)]&&!_.buffer.nodeIs(src)}}();function _makeUndefined(src,length){return 0===arguments.length?this.make(0):(void 0===length&&(length=src),length&&!_.number.is(length)&&(length=length.length?length.length:[...length].length),this.like(src)?new src.constructor(length):this._make(length))}let BufferTypedExtension={NamespaceName:"bufferTyped",NamespaceNames:["bufferTyped"],NamespaceQname:"wTools/bufferTyped",MoreGeneralNamespaceName:"long",MostGeneralNamespaceName:"countable",TypeName:"BufferTyped",TypeNames:["BufferTyped"],InstanceConstructor:null,tools:_,is:is,like:is,IsResizable:function IsResizable(){return _.assert(0===arguments.length),false},isSlow:function isSlow(src){let type=Object.prototype.toString.call(src);return!!/\wArray/.test(type)&&"[object SharedArrayBuffer]"!==type&&!_.buffer.nodeIs(src)},isUsingGetPrototype:function isUsingGetPrototype(src){return src instanceof Object.getPrototypeOf(Int8Array)&&!_.buffer.nodeIs(src)},isUsingGetPrototypeWithFunctor:isUsingGetPrototypeWithFunctor,isUsingExistenceOfField:isUsingExistenceOfField,isUsingSet:isUsingSet,isUsingHashMap:isUsingHashMap,isUsingMap:isUsingMap,_make:function _make(src,length){if(2===arguments.length){let data=length;return _.number.is(length)?data=src:length.length&&(length=length.length),_.countable.is(length)&&(data=[...length],length=data.length),this.like(src)?fill(new src.constructor(length),data):fill(this.tools.bufferTyped.default.make(length),data)}return 1===arguments.length?this.like(src)?new src.constructor(src):this.tools.bufferTyped.default.make(src):this.tools.bufferTyped.default.make(0);function fill(dst,data){if(null===data||void 0===data)return dst;let l=Math.min(length,data.length);for(let i=0;i<l;i++)dst[i]=data[i];return dst}},make:_.long.make,_makeEmpty:function _makeEmpty(src){if(1===arguments.length){if(_.routine.is(src)){let result=new src(0);return _.assert(this.like(result)),result}if(this.like(src))return new src.constructor}return this.tools.bufferTyped.default.make()},makeEmpty:function makeEmpty(src){return _.assert(0===arguments.length||this.like(src)||_.countable.is(src)||_.routine.is(src)),_.assert(arguments.length<=1),this._makeEmpty(...arguments)},_makeUndefined:_makeUndefined,makeUndefined:_.argumentsArray.makeUndefined,_makeZeroed:_makeUndefined,makeZeroed:_.argumentsArray.makeZeroed,_makeFilling:function _makeFilling(type,value,length){2===arguments.length&&(value=arguments[0],length=arguments[1],type=this.like(length)?length:null),_.number.is(length)||(length.length?length=length.length:_.countable.is(length)&&(length=[...length].length));let result=this._make(type,length);for(let i=0;i<length;i++)result[i]=value;return result},makeFilling:_.argumentsArray.makeFilling,_cloneShallow:function _cloneShallow(src){return src.slice(0)},cloneShallow:_.argumentsArray.cloneShallow,from:_.argumentsArray.from,_namespaceRegister:function _namespaceRegister(namespace,defaultNamespaceName){return namespace.NamespaceNames.forEach(name=>{_.assert(void 0===_.bufferTyped.namespaces[name]),_.bufferTyped.namespaces[name]=namespace}),_.assert(void 0===namespace.IsTyped||true===namespace.IsTyped),namespace.IsTyped=true,_.long._namespaceRegister(...arguments)},namespaceOf:function namespaceOf(src){return _.f32x.is(src)?_.f32x:_.f64x.is(src)?_.f64x:_.i8x.is(src)?_.i8x:_.i16x.is(src)?_.i16x:_.i32x.is(src)?_.i32x:_.u8x.is(src)?_.u8x:_.u8xClamped.is(src)?_.u8xClamped:_.u16x.is(src)?_.u16x:_.u32x.is(src)?_.u32x:null},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.bufferTyped,BufferTypedExtension);let BufferExtension={typedIs:is.bind(_.buffer)};Object.assign(_.buffer,BufferExtension);let ToolsExtension={bufferTypedIs:is.bind(_.buffer)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Array_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Array.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Array_s_naked(){!function _l1_Array_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return Array.isArray(src)}function isEmpty(src){return!!_.array.is(src)&&0===src.length}function isPopulated(src){return!!_.array.is(src)&&src.length>0}function likeResizable(src){return _.array.is(src)}function like(src){return this.is(src)}_.array=_.array||Object.create(null),_.countable=_.countable||Object.create(null),_.vector=_.vector||Object.create(null),_.assert(!!_.argumentsArray.make,"Expects routine _.argumentsArray.make");let ArrayExtension={NamespaceName:"array",NamespaceNames:["array"],NamespaceQname:"wTools/array",MoreGeneralNamespaceName:"long",MostGeneralNamespaceName:"countable",TypeName:"Array",TypeNames:["Array"],InstanceConstructor:Array,tools:_,is:is,isEmpty:isEmpty,isPopulated:isPopulated,likeResizable:likeResizable,like:like,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:_.argumentsArray._makeEmpty,makeEmpty:_.argumentsArray.makeEmpty,_makeUndefined:_.argumentsArray._makeUndefined,makeUndefined:_.argumentsArray.makeUndefined,_makeZeroed:_.argumentsArray._makeZeroed,makeZeroed:_.argumentsArray.makeZeroed,_makeFilling:_.argumentsArray._makeFilling,makeFilling:_.argumentsArray.makeFilling,_make:function _make(src,length){if(2===arguments.length){let data=length;return _.number.is(length)?data=src:length.length&&(length=length.length),_.countable.is(length)&&(data=[...length],length=data.length),function fill(dst,data){if(null===data||void 0===data)return dst;let l=Math.min(length,data.length);for(let i=0;i<l;i++)dst[i]=data[i];return dst}(new Array(length),data)}if(1===arguments.length){if(_.number.is(src))return new Array(src);if(_.countable.is(src))return[...src]}return[]},make:_.argumentsArray.make,_cloneShallow:function _cloneShallow(srcArray){return srcArray.slice()},cloneShallow:_.argumentsArray.cloneShallow,from:_.argumentsArray.from,as:function as(src){return _.assert(1===arguments.length),_.assert(void 0!==src),null===src?[]:_.array.is(src)?src:_.countable.like(src)?[...src]:[src]},asShallow:function asShallow(src){return _.assert(1===arguments.length),_.assert(void 0!==src),null===src?[]:_.longLike(src)?_.array.slice(src):[src]},namespaceOf:_.blank.namespaceOf,namespaceWithDefaultOf:_.blank.namespaceWithDefaultOf,_functor_functor:_.blank._functor_functor};Object.assign(_.array,ArrayExtension),_.long._namespaceRegister(_.array),_.assert(void 0===_.long.default),_.long.default=_.array,_.assert(void 0===_.countable.default),_.countable.default=_.array,_.assert(void 0===_.vector.default),_.vector.default=_.array;let ToolsExtension={arrayIs:is.bind(_.array),arrayIsEmpty:isEmpty.bind(_.array),arrayIsPopulated:isPopulated.bind(_.array),arrayLikeResizable:likeResizable.bind(_.array),arrayLike:like.bind(_.array),arrayMakeEmpty:_.argumentsArray.makeEmpty.bind(_.array),arrayMakeUndefined:_.argumentsArray.makeUndefined.bind(_.array),arrayMake:_.argumentsArray.make.bind(_.array),arrayCloneShallow:_.argumentsArray.cloneShallow.bind(_.array),arrayFrom:_.argumentsArray.from.bind(_.array)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function ArraySet_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/ArraySet.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ArraySet_s_naked(){!function _l1_ArraySet_s_(){"use strict";_global_;const _=_global_.wTools;_.arraySet=_.arraySet||Object.create(null),Object.assign(_,{}),Object.assign(_.arraySet,{})}()});module.exports,module.include,module.include}(),function Auxiliary_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Auxiliary.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Auxiliary_s_naked(){!function _l1_Auxiliary_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null===proto||(proto===Object.prototype?!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src):!_.routineIs(proto[Symbol.iterator])&&!(_.primitive.is(proto)||Reflect.has(proto,"constructor")&&proto.constructor!==Object.prototype.constructor))}function like(src){return _.aux.is(src)}function isPure(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null===proto||proto.constructor!==Object&&!_.routineIs(proto[Symbol.iterator])&&!_.primitive.is(proto)&&!Reflect.has(proto,"constructor")}function isPolluted(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null!==proto&&(proto===Object.prototype?!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src):!_.routineIs(proto[Symbol.iterator])&&proto.constructor===Object)}function isEmpty(src){return!!this.like(src)&&0===this.keys(src).length}function isPopulated(src){return!!this.like(src)&&this.keys(src).length>0}function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length&&_.assert(this.like(src)),this._makeEmpty(src)}function makeUndefined(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(this.like(src)),_.assert(_.number.is(length))):1===arguments.length&&_.assert(_.number.is(src)||this.like(src)),this._makeUndefined(src)}function make(src,length){return _.assert(0===arguments.length||null===src||!_.primitive.is(src)),_.assert(void 0===length||0===length),_.assert(arguments.length<=2),this._make(...arguments)}_.aux=_.aux||Object.create(null),_.assert(!!_.props.keys,"Expects routine _.props.keys"),_.assert(!!_.props._extendWithHashmap,"Expects routine _.props._extendWithHashmap");let ToolsExtension={auxIs:is.bind(_.aux),auxIsPure:isPure.bind(_.aux),auxIsPolluted:isPolluted.bind(_.aux),auxIsEmpty:isEmpty.bind(_.aux),auxIsPopulated:isPopulated.bind(_.aux),auxLike:like.bind(_.aux),auxMakeEmpty:makeEmpty.bind(_.aux),auxMakeUndefined:makeUndefined.bind(_.aux),auxMake:make.bind(_.aux),auxCloneShallow:_.props.cloneShallow.bind(_.aux),auxFrom:_.props.from.bind(_.aux),auxExtend:_.props.extend.bind(_.aux),auxSupplement:_.props.supplement.bind(_.aux)};Object.assign(_,ToolsExtension);var AuxiliaryExtension={NamespaceName:"aux",NamespaceNames:["aux"],NamespaceQname:"wTools/aux",MoreGeneralNamespaceName:"props",MostGeneralNamespaceName:"props",TypeName:"Aux",TypeNames:["Aux","Auxiliary"],InstanceConstructor:null,tools:_,is:is,like:like,isPrototyped:function isPrototyped(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null!==proto&&proto!==Object.prototype&&!_.routineIs(proto[Symbol.iterator])&&!(_.primitive.is(proto)||Reflect.has(proto,"constructor")&&proto.constructor!==Object.prototype.constructor)},isPure:isPure,isPolluted:isPolluted,isEmpty:isEmpty,isPopulated:isPopulated,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:function _makeEmpty(src){let result=Object.create(null);let src2=_.prototype.of(src);for(;src2&&src2!==Object.prototype;)result=Object.create(result),src2=_.prototype.of(src2);return result},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src,length){return Object.create(null)},makeUndefined:makeUndefined,_make:function _make(src){return src?this.like(src)?this._cloneShallow(src):this.extendUniversal(Object.create(null),src):Object.create(null)},make:make,_cloneShallow:function _cloneShallow(src){let dst=Object.create(null);let prototypes=_.prototype.each(src);let c=1;for(let i=1,l=prototypes.length;i<l;i++){let prototype=prototypes[i];prototype&&prototype!==Object.prototype&&(dst=Object.create(dst),c+=1)}let result=dst;for(;c>0;)copy(dst,src),dst=_.prototype.of(dst),src=_.prototype.of(src),c-=1;return result;function copy(dst,src){let keys=_.props.onlyOwnKeys(src);for(let k=0;k<keys.length;k++)dst[keys[k]]=src[keys[k]]}},cloneShallow:_.props.cloneShallow,from:_.props.from,_keys:_.props._keys,keys:_.props.keys,onlyOwnKeys:_.props.onlyOwnKeys,onlyEnumerableKeys:_.props.onlyEnumerableKeys,allKeys:_.props.allKeys,_vals:_.props._vals,vals:_.props.vals,onlyOwnVals:_.props.onlyOwnVals,onlyEnumerableVals:_.props.onlyEnumerableVals,allVals:_.props.allVals,_pairs:_.props._pairs,pairs:_.props.pairs,onlyOwnPairs:_.props.onlyOwnPairs,onlyEnumerablePairs:_.props.onlyEnumerablePairs,allPairs:_.props.allPairs,_extendWithHashmap:_.props._extendWithHashmap,_extendWithSet:_.props._extendWithSet,_extendWithCountable:_.props._extendWithCountable,_extendWithProps:_.props._extendWithProps,_extendUniversal:_.props._extendUniversal,extendUniversal:_.props.extendUniversal,extend:_.props.extend,_supplementWithHashmap:_.props._supplementWithHashmap,_supplementWithSet:_.props._supplementWithSet,_supplementWithCountable:_.props._supplementWithCountable,_supplementWithProps:_.props._supplementWithProps,_supplementUniversal:_.props._supplementUniversal,supplementUniversal:_.props.supplementUniversal,supplement:_.props.supplement,namespaceOf:function namespaceOf(src){return _.map.is(src)?_.map:_.aux.is(src)?_.aux:null},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.aux,AuxiliaryExtension)}()});module.exports,module.include,module.include}(),function BigInt_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/BigInt.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BigInt_s_naked(){!function _l1_BigInt_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return"[object BigInt]"===Object.prototype.toString.call(src)}function exportStringCodeShallow(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.bigInt.is(src)),`${String(src)}n`}_.bigInt=_.bigInt||Object.create(null),_.bigInts=_.bigInt.s=_.bigInts||_.bigInt.s||Object.create(null);let BigIntExtension={is:is,exportString:exportStringCodeShallow,exportStringCodeShallow:exportStringCodeShallow,exportStringDiagnosticShallow:exportStringCodeShallow};Object.assign(_.bigInt,BigIntExtension);let ToolsExtension={bigIntIs:is};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Bool_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Bool.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Bool_s_naked(){!function _l1_Bool_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return true===src||false===src}function like(src){return true===src||false===src||0===src||1===src}function likeFalse(src){return!!_.bool.like(src)&&!src}function likeTrue(src){return!!_.bool.like(src)&&!!src}_.bool=_.bool||Object.create(null),_.bools=_.bool.s=_.bools||_.bool.s||Object.create(null);let BoolExtension={is:is,like:like,likeFalse:likeFalse,likeTrue:likeTrue};Object.assign(_.bool,BoolExtension);let ToolsExtension={boolIs:is,boolLike:like,boolLikeFalse:likeFalse,boolLikeTrue:likeTrue};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Buffer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Buffer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Buffer_s_naked(){!function _l1_Buffer_s_(){"use strict";const _global=_global_;const _=_global_.wTools;function anyIs(src){return src instanceof ArrayBuffer||!!(_global.BufferRawShared&&src instanceof SharedArrayBuffer)||!!ArrayBuffer.isView(src)}function make(src,length){return _.assert(arguments.length<=2),2===arguments.length?(_.assert(null===src||this.is(src)||_.long.is(src)||_.routineIs(src)),_.assert(_.number.is(length)||this.is(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.number.is(src)||this.is(src)||_.long.is(src)||_.routineIs(src)),this._make(...arguments)}function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length&&_.assert(this.like(src)||_.countable.is(src)||_.routineIs(src)),this._makeEmpty(...arguments)}function _makeUndefined(src,length){if(void 0===length&&(length=src),length&&!_.number.is(length)&&(length=_.number.is(length.length)?length.length:_.number.is(length.byteLength)?length.byteLength:[...length].length),null===src||_.number.is(src))return this.tools.bufferTyped.make(length);if(_.buffer.rawIs(src))return new BufferRaw(length);if(_.buffer.viewIs(src))return new BufferView(new BufferRaw(length));if(_.buffer.typedIs(src))return new src.constructor(length);if(_.buffer.nodeIs(src))return BufferNode.alloc(length);if(_.countable.is(src))return this.tools.bufferTyped.make(length);if(_.routineIs(src)){_.assert(2===arguments.length);let result=new src(length);return _.assert(_.buffer.is(result),"Not clear how to make such buffer"),result}return this.tools.bufferTyped.make()}function makeUndefined(src,length){return _.assert(0<=arguments.length&&arguments.length<=2),2===arguments.length?(_.assert(null===src||this.like(src)||_.long.is(src)||_.routineIs(src)),_.assert(_.number.is(length)||this.like(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.number.is(src)||this.like(src)||_.long.is(src)||_.routineIs(src)),this._makeUndefined(...arguments)}_.buffer=_.buffer||Object.create(null);let BufferExtension={NamespaceName:"buffer",NamespaceNames:["buffer"],NamespaceQname:"wTools/buffer",TypeName:"Buffer",TypeNames:["Buffer","BufferAny"],InstanceConstructor:null,tools:_,anyIs:anyIs,is:anyIs,like:anyIs,IsResizable:function IsResizable(){return _.assert(0===arguments.length),false},_make_functor:function _make_functor(onMake){return function _bufferMake(src,ins){let result;let length=ins;let minLength;return _.countable.is(length)||_.bufferNodeIs(length)?length=length.length?length.length:(ins=[...length]).length:_.bufferRawIs(length)||_.bufferViewIs(length)?(length=length.byteLength,ins=_.bufferViewIs(ins)?new U8x(ins.buffer):new U8x(ins)):void 0===length||null===length?null===src?length=0:_.longIs(src)||_.bufferNodeIs(src)?(length=src.length,ins=src):_.bufferRawIs(src)?(length=src.byteLength,ins=new U8x(src)):_.bufferViewIs(src)?(length=src.byteLength,ins=new U8x(src.buffer)):_.number.is(src)?(length=src,src=null):_.routine.is(src)?_.assert(0,"Unknown length of buffer"):0===arguments.length?(length=0,src=null):_.assert(0):_.number.is(length)||_.assert(0,"Unknown length of buffer"),length||(length=0),_.number.is(ins)&&(ins=_.bufferRawIs(src)?new U8x(src):_.bufferViewIs(src)?new U8x(src.buffer):_.longIs(src)||_.bufferNodeIs(src)?src:null),minLength=ins?Math.min(ins.length,length):0,_.argumentsArray.is(src)&&(src=_.routine.join(this.tools.bufferTyped.default,this.tools.bufferTyped.default.make)),null===src&&(src=_.routine.join(this.tools.bufferTyped.default,this.tools.bufferTyped.default.make)),_.assert(0<=arguments.length&&arguments.length<=2),_.assert(_.number.isFinite(length)),_.assert(_.routine.is(src)||_.longIs(src)||_.bufferAnyIs(src),"unknown type of array",_.entity.strType(src)),result=onMake.call(this,src,ins,length,minLength),_.assert(_.bufferAnyIs(result)||_.longLike(result)),result}},_make:function _make(src,length){void 0===length&&(length=src);let data=length;if(_.number.is(length)?data=src:length&&(_.number.is(length.length)?length=length.length:_.number.is(length.byteLength)?length=length.byteLength:(data=[...length],length=data.length)),2===arguments.length){if(null===src)return fill(this.tools.bufferTyped.make(length),data);if(_.buffer.rawIs(src))return fill(new BufferRaw(length),data);if(_.buffer.viewIs(src))return new BufferView(fill(new BufferRaw(length),data));if(_.buffer.typedIs(src))return fill(new src.constructor(length),data);if(_.buffer.nodeIs(src))return fill(BufferNode.alloc(length),data);if(_.long.is(src))return fill(this.tools.bufferTyped.make(length),data);let result;return _.routineIs(src)&&(result=fill(new src(length),data)),_.assert(_.buffer.is(result),"Not clear how to make such buffer"),result}if(1===arguments.length){if(null===src||_.number.is(src))return this.tools.bufferTyped.make(src);if(_.buffer.rawIs(src))return fill(new BufferRaw(length),data);if(_.buffer.viewIs(src))return new BufferView(fill(new BufferRaw(length),data));if(_.buffer.typedIs(src))return fill(new src.constructor(src));if(_.buffer.nodeIs(src))return fill(BufferNode.from(src));if(_.countable.is(src))return this.tools.bufferTyped.make(src)}return this.tools.bufferTyped.make();function fill(dst,data){if(null===data||void 0===data)return dst;let dstTyped=dst;_.bufferRawIs(dst)&&(dstTyped=new U8x(dst)),_.bufferViewIs(dst)&&(dstTyped=new U8x(dst.buffer));let dataTyped=data;_.bufferRawIs(data)&&(dataTyped=new U8x(data)),_.bufferViewIs(data)&&(dataTyped=new U8x(data.buffer));let l=Math.min(length,dataTyped.length);for(let i=0;i<l;i++)dstTyped[i]=dataTyped[i];return dst}},make:make,_makeEmpty:function _makeEmpty(src){if(1===arguments.length){if(_.routineIs(src)){let result=new src(0);return _.assert(this.like(result)),result}if(this.like(src))return _.buffer.viewIs(src)?new src.constructor(new BufferRaw):_.buffer.nodeIs(src)?BufferNode.alloc(0):new src.constructor}return this.tools.bufferTyped.default.make()},makeEmpty:makeEmpty,_makeUndefined:_makeUndefined,makeUndefined:makeUndefined,_makeZeroed:_makeUndefined,makeZeroed:makeUndefined,_makeFilling:function _makeFilling(type,value,length){2===arguments.length&&(type=null,value=arguments[0],length=arguments[1]),_.number.is(length)||(length.length?length=length.length:length.byteLength?length=length.byteLength:_.countable.is(length)&&(length=[...length].length));let result=this._make(type,length);let resultTyped=result;resultTyped.length||(resultTyped=_.buffer.viewIs(resultTyped)?new U8x(resultTyped.buffer):new U8x(resultTyped));for(let i=0;i<length;i++)resultTyped[i]=value;return result},makeFilling:function makeFilling(type,value,length){return _.assert(2===arguments.length||3===arguments.length),2===arguments.length?(_.assert(_.number.is(value)||_.countable.is(value)||this.like(length)),_.assert(void 0!==type)):(_.assert(void 0!==value),_.assert(_.number.is(length)||_.countable.is(length)||this.like(length)),_.assert(null===type||_.long.is(type)||this.like(type)||_.routine.is(type))),this._makeFilling(...arguments)},_cloneShallow:function _cloneShallow(src){if(_.buffer.rawIs(src))return bufferRawCopy(src);if(_.buffer.viewIs(src))return new BufferView(bufferRawCopy(src));if(_.buffer.typedIs(src))return src.slice(0);if(_.buffer.nodeIs(src))return BufferNode.from(src);function bufferRawCopy(src){const dst=new BufferRaw(src.byteLength);const buffer=src.buffer||src;const offset=src.byteOffset||0;return new U8x(dst).set(new U8x(buffer,offset,src.byteLength)),dst}},cloneShallow:_.argumentsArray.cloneShallow,from:_.argumentsArray.from,namespaceOf:function namespaceOf(src){return _.bufferRaw.is(src)?_.bufferRaw:_.bufferView.is(src)?_.bufferView:_.bufferNode.is(src)?_.bufferNode:_.bufferTyped.namespaceOf(src)},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.buffer,BufferExtension);let ToolsExtension={bufferAnyIs:anyIs.bind(_.buffer),bufferIs:anyIs.bind(_.buffer),bufferMake:make.bind(_.buffer),bufferMakeEmpty:makeEmpty.bind(_.buffer),bufferMakeUndefined:makeUndefined.bind(_.buffer),bufferMakeZeroed:_.buffer.makeZeroed.bind(_.buffer),bufferFromArrayOfArray:function bufferFromArrayOfArray(array,options){if(_.object.isBasic(array)&&(array=(options=array).buffer),array=(options=options||Object.create(null)).buffer=array||options.buffer,void 0===options.BufferType&&(options.BufferType=F32x),void 0===options.sameLength&&(options.sameLength=1),!options.sameLength)throw _.err("_.bufferFromArrayOfArray :","different length of arrays is not implemented");if(!array.length)return new options.BufferType;let scalarsPerElement=_.number.is(array[0].length)?array[0].length:array[0].len;if(!_.number.is(scalarsPerElement))throw _.err("_.bufferFromArrayOfArray :","cant find out element length");let length=array.length*scalarsPerElement;let result=new options.BufferType(length);let i=0;for(let a=0;a<array.length;a++){let element=array[a];for(let e=0;e<scalarsPerElement;e++)result[i]=element[e],i+=1}return result},bufferRawFromTyped:function bufferRawFromTyped(buffer){if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.bufferTypedIs(buffer)||_.bufferRawIs(buffer)),_.bufferRawIs(buffer))return buffer;let result=buffer.buffer;return(buffer.byteOffset||buffer.byteLength!==result.byteLength)&&(result=result.slice(buffer.byteOffset||0,buffer.byteLength)),_.assert(_.bufferRawIs(result)),result},bufferRawFrom:function bufferRawFrom(buffer){let result;return _.assert(1===arguments.length,"Expects single argument"),buffer instanceof BufferRaw?buffer:(_.bufferNodeIs(buffer)||_.arrayIs(buffer)?result=new U8x(buffer).buffer:_.bufferTypedIs(buffer)||_.bufferViewIs(buffer)?(result=buffer.buffer,(buffer.byteOffset||buffer.byteLength!==result.byteLength)&&(result=result.slice(buffer.byteOffset,buffer.byteOffset+buffer.byteLength))):_.strIs(buffer)?result=_global_.BufferNode?_.bufferRawFrom(BufferNode.from(buffer,"utf8")):_.encode.utf8ToBuffer(buffer).buffer:_global.File&&buffer instanceof File?(result=(new FileReaderSync).readAsArrayBuffer(buffer),_.assert(0,"not tested")):_.assert(0,()=>"Unknown type of source "+_.entity.strType(buffer)),_.assert(_.bufferRawIs(result)),result)},bufferBytesFrom:function bufferBytesFrom(buffer){let result;if(_.bufferBytesIs(buffer))return buffer;if(_.assert(1===arguments.length,"Expects single argument"),_.bufferNodeIs(buffer))_.assert(_.bufferRawIs(buffer.buffer)),result=new U8x(buffer.buffer,buffer.byteOffset,buffer.byteLength);else if(_.bufferRawIs(buffer))result=new U8x(buffer,0,buffer.byteLength);else if(_.bufferTypedIs(buffer))result=new U8x(buffer.buffer,buffer.byteOffset,buffer.byteLength);else{if(!_.bufferViewIs(buffer))return _.bufferBytesFrom(_.bufferRawFrom(buffer));result=new U8x(buffer.buffer,buffer.byteOffset,buffer.byteLength)}return _.assert(_.bufferBytesIs(result)),result},bufferBytesFromNode:function bufferBytesFromNode(src){return _.assert(_.bufferNodeIs(src)),new U8x(buffer)},bufferNodeFrom:function bufferNodeFrom(buffer){if(_.bufferNodeIs(buffer))return buffer;let result;return _.assert(1===arguments.length,"Expects single argument"),
_.assert(_.bufferAnyIs(buffer)||_.strIs(buffer)||_.arrayIs(buffer),"Expects buffer, string of array, but got",_.entity.strType(buffer)),result=0===buffer.length||0===buffer.byteLength?BufferNode.from([]):_.strIs(buffer)?_.bufferNodeFrom(_.bufferRawFrom(buffer)):buffer.buffer?BufferNode.from(buffer.buffer,buffer.byteOffset,buffer.byteLength):BufferNode.from(buffer),_.assert(_.bufferNodeIs(result)),result}};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function BufferBytes_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/BufferBytes.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BufferBytes_s_naked(){!function _l1_BufferBytes_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!_.buffer.nodeIs(src)&&src instanceof U8x}_.assert(void 0===_.bufferBytes),_.assert(void 0===_.u8x),_.bufferBytes=_.u8x=_.bufferBytes||_.u8x||Object.create(null);let BufferBytesExtension={NamespaceName:"u8x",NamespaceNames:["u8x","bufferBytes"],NamespaceQname:"wTools/u8x",TypeName:"U8x",TypeNames:["U8x","Uint8Array","BufferBytes"],InstanceConstructor:U8x,tools:_,is:is,like:is};Object.assign(_.bufferBytes,BufferBytesExtension);let BufferExtension={bytesIs:is.bind(_.bufferBytes)};Object.assign(_.buffer,BufferExtension);let ToolsExtension={bufferBytesIs:is.bind(_.bufferBytes),bufferBytesLike:is.bind(_.bufferBytes)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function BufferNode_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/BufferNode.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BufferNode_s_naked(){!function _l1_BufferNode_s_(){"use strict";const _global=_global_;const _=_global_.wTools;function nodeIs(src){return!!_global_.BufferNode&&src instanceof BufferNode}_.bufferNode=_.bufferNode||Object.create(null);let BufferNodeExtension={NamespaceName:"bufferNode",NamespaceNames:["bufferNode"],NamespaceQname:"wTools/bufferNode",TypeName:"BufferNode",TypeNames:["BufferNode"],InstanceConstructor:_global.BufferNode,tools:_,nodeIs:nodeIs,is:nodeIs,like:nodeIs,_make:_.buffer._make,make:_.buffer.make,_makeEmpty:_.buffer._makeEmpty,makeEmpty:_.buffer.makeEmpty,_makeUndefined:_.buffer._makeUndefined,makeUndefined:_.buffer.makeUndefined};Object.assign(_.bufferNode,BufferNodeExtension);let BufferExtension={nodeIs:nodeIs.bind(_.buffer)};Object.assign(_.buffer,BufferExtension);let ToolsExtension={bufferNodeIs:nodeIs.bind(_.buffer)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function BufferRaw_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/BufferRaw.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BufferRaw_s_naked(){!function _l1_BufferRaw_s_(){"use strict";_global_;const _=_global_.wTools;function rawIs(src){let type=Object.prototype.toString.call(src);return"[object ArrayBuffer]"===type||"[object SharedArrayBuffer]"===type}_.bufferRaw=_.bufferRaw||Object.create(null);let BufferRawExtension={NamespaceName:"bufferRaw",NamespaceNames:["bufferRaw"],NamespaceQname:"wTools/bufferRaw",TypeName:"BufferRaw",TypeNames:["BufferRaw","ArrayBuffer"],InstanceConstructor:ArrayBuffer,tools:_,rawIs:rawIs,is:rawIs,like:rawIs,_make:_.buffer._make,make:_.buffer.make,_makeEmpty:_.buffer._makeEmpty,makeEmpty:_.buffer.makeEmpty,_makeUndefined:_.buffer._makeUndefined,makeUndefined:_.buffer.makeUndefined};Object.assign(_.bufferRaw,BufferRawExtension);let BufferExtension={rawIs:rawIs.bind(_.buffer)};Object.assign(_.buffer,BufferExtension);let ToolsExtension={bufferRawIs:rawIs.bind(_.buffer)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function BuffersTyped_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/BuffersTyped.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BuffersTyped_s_naked(){!function _l1_BuffersTyped_s_(){"use strict";_global_;const _=_global_.wTools;function _functor(fo){function is(src){return src instanceof this.InstanceConstructor}function like(src){let type=Object.prototype.toString.call(src);return!!/\wArray/.test(type)&&"[object SharedArrayBuffer]"!==type&&!_.bufferNodeIs(src)}function _makeUndefined(src,length){return void 0===length&&(length=src),length&&!_.number.is(length)&&(length=length.length?length.length:[...length].length),new this.InstanceConstructor(length)}function cloneShallow(srcArray){return _.assert(this.like(srcArray)),_.assert(1===arguments.length),this._cloneShallow(srcArray)}function from(src){return _.assert(1===arguments.length,"Expects single argument"),this.is(src)?src:this.make(src)}_.assert(!!_.bufferTyped),_[fo.name]=_[fo.name]||Object.create(null),fo.names.forEach(name=>{_[name]=_[fo.name]});let ToolsExtension={[fo.name+"Is"]:is.bind(_[fo.name]),[fo.name+"Like"]:like.bind(_[fo.name]),[fo.name+"MakeEmpty"]:_.argumentsArray.makeEmpty.bind(_[fo.name]),[fo.name+"MakeUndefined"]:_.argumentsArray.makeUndefined.bind(_[fo.name]),[fo.name+"Make"]:_.argumentsArray.make.bind(_[fo.name]),[fo.name+"CloneShallow"]:cloneShallow.bind(_[fo.name]),[fo.name+"From"]:from.bind(_[fo.name])};_.props.supplement(_,ToolsExtension);let BufferTypedExtension={NamespaceName:fo.name,NamespaceNames:fo.names,NamespaceQname:`wTools/${fo.name}`,MoreGeneralNamespaceName:"bufferTyped",MostGeneralNamespaceName:"countable",TypeName:fo.typeName,TypeNames:fo.typeNames,InstanceConstructor:fo.instanceConstructor,IsTyped:true,tools:_,is:is,like:like,IsResizable:function IsResizable(){return _.assert(0===arguments.length),false},_makeEmpty:function _makeEmpty(src){return new this.InstanceConstructor(0)},makeEmpty:_.argumentsArray.makeEmpty,_makeUndefined:_makeUndefined,makeUndefined:_.argumentsArray.makeUndefined,_makeZeroed:_makeUndefined,makeZeroed:_.argumentsArray.makeUndefined,_makeFilling:_.argumentsArray.makeFilling,makeFilling:_.argumentsArray.makeFilling,_make:function _make(src,length){if(2===arguments.length){let data=length;return _.number.is(length)?data=src:length.length?length=length.length:_.countable.is(length)&&(data=[...length],length=data.length),function fill(dst,data){if(null===data||void 0===data)return dst;let l=Math.min(length,data.length);for(let i=0;i<l;i++)dst[i]=data[i];return dst}(new this.InstanceConstructor(length),data)}return 1===arguments.length?new this.InstanceConstructor(src):new this.InstanceConstructor(0)},make:_.argumentsArray.make,_cloneShallow:function _cloneShallow(srcArray){return srcArray.slice()},cloneShallow:cloneShallow,from:from,namespaceOf:_.blank.namespaceOf,namespaceWithDefaultOf:_.blank.namespaceWithDefaultOf,_functor_functor:_.blank._functor_functor};_.props.supplement(_[fo.name],BufferTypedExtension),_.bufferTyped._namespaceRegister(_[fo.name])}_functor({name:"u32x",names:["u32x","ux"],typeName:"U32x",typeNames:["U32x","Uint32Array","Ux"],instanceConstructor:U32x}),_functor({name:"u16x",names:["u16x"],typeName:"U16x",typeNames:["U16x","Uint16Array"],instanceConstructor:U16x}),_functor({name:"u8x",names:["u8x"],typeName:"U8x",typeNames:["U8x","Uint8Array"],instanceConstructor:U8x}),_functor({name:"u8xClamped",names:["u8xClamped"],typeName:"U8xClamped",typeNames:["U8xClamped","Uint8ClampedArray"],instanceConstructor:U8xClamped}),_functor({name:"i32x",names:["i32x","ix"],typeName:"I32x",typeNames:["I32x","Int32Array","Ix"],instanceConstructor:I32x}),_functor({name:"i16x",names:["i16x"],typeName:"I16x",typeNames:["I16x","Int16Array"],instanceConstructor:I16x}),_functor({name:"i8x",names:["i8x"],typeName:"I8x",typeNames:["I8x","Int8Array"],instanceConstructor:I8x}),_functor({name:"f64x",names:["f64x"],typeName:"F64x",typeNames:["F64x","Float64Array"],instanceConstructor:F64x}),_functor({name:"f32x",names:["f32x","fx"],typeName:"F32x",typeNames:["F32x","Float32Array","Fx"],instanceConstructor:F32x}),_.assert(!!_.fx),_.assert(void 0===_.bufferTyped.default),_.bufferTyped.default=_.fx}()});module.exports,module.include,module.include}(),function BufferView_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/BufferView.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BufferView_s_naked(){!function _l1_BufferView_s_(){"use strict";_global_;const _=_global_.wTools;function viewIs(src){return"[object DataView]"===Object.prototype.toString.call(src)}_.bufferView=_.bufferView||Object.create(null);let BufferViewExtension={NamespaceName:"bufferView",NamespaceNames:["bufferView"],NamespaceQname:"wTools/bufferView",TypeName:"BufferView",TypeNames:["BufferView","DataView"],InstanceConstructor:DataView,tools:_,viewIs:viewIs,is:viewIs,like:viewIs,_make:_.buffer._make,make:_.buffer.make,_makeEmpty:_.buffer._makeEmpty,makeEmpty:_.buffer.makeEmpty,_makeUndefined:_.buffer._makeUndefined,makeUndefined:_.buffer.makeUndefined};Object.assign(_.bufferView,BufferViewExtension);let BufferExtension={viewIs:viewIs.bind(_.buffer)};Object.assign(_.buffer,BufferExtension);let ToolsExtension={bufferViewIs:viewIs.bind(_.buffer)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Class_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Class.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Class_s_naked(){!function _l1_Class_s_(){"use strict";_global_;const _=_global_.wTools;function declareBasic(o){for(let e in o)if(void 0===declareBasic.defaults[e])throw Error(`Unknown option::${e}`);for(let e in declareBasic.defaults)void 0===o[e]&&(o[e]=declareBasic.defaults[e]);function exportStringIgnoringArgs(){return this[exportStringSymbol]()}_.assert(function routineIs(src){let typeStr=Object.prototype.toString.call(src);return"[object Function]"===typeStr||"[object AsyncFunction]"===typeStr}(o.constructor)&&o.constructor!==Object.constructor&&o.constructor!==Object),_.assert(function strDefined(src){if(src)return"[object String]"===Object.prototype.toString.call(src)}(o.constructor.name)&&"Object"!==o.constructor.name),_.assert(1===arguments.length),_.assert(void 0===o.iterate),o.exportString=o.exportString||function exportString(){return`{- ${this.constructor.name} -}`},o.cloneShallow=o.cloneShallow||function cloneShallow(){return _.assert(!(this instanceof cloneShallow)),this},o.cloneDeep=o.cloneDeep||o.cloneShallow,o.equalAre=o.equalAre||function equalAre(it){_.assert(1===arguments.length);debugger;if(it.src!==it.src2)return it.stop(false)},o.constructor.prototype=Object.create(o.prototype),o.iterator&&(o.constructor.prototype[iteratorSymbol]=o.iterator),o.constructor.prototype[exportPrimitiveSymbol]=exportStringIgnoringArgs,o.constructor.prototype[exportStringNjsSymbol]=exportStringIgnoringArgs,o.constructor.prototype[exportStringSymbol]=o.exportString,o.constructor.prototype[cloneShallowSymbol]=o.cloneShallow,o.constructor.prototype[cloneDeepSymbol]=o.cloneDeep,o.constructor.prototype[equalAreSymbol]=o.equalAre,o.constructor.prototype.constructor=o.constructor,Object.defineProperty(o.constructor.prototype,exportTypeNameGetterSymbol,{enumerable:false,configurable:false,get:function TypeNameGet(){return this.constructor.name}})}_.class=_.class||Object.create(null),declareBasic.defaults={constructor:null,prototype:null,parent:null,exportString:null,cloneShallow:null,cloneDeep:null,equalAre:null,iterator:null},Object.assign(_,{});const iteratorSymbol=Symbol.iterator;const exportTypeNameGetterSymbol=Symbol.toStringTag;const exportPrimitiveSymbol=Symbol.toPrimitive;const exportStringNjsSymbol=Symbol.for("nodejs.util.inspect.custom");const exportStringSymbol=Symbol.for("exportString");const ascendSymbol=Symbol.for("ascend");const equalAreSymbol=Symbol.for("equalAre");const cloneShallowSymbol=Symbol.for("cloneShallow");const cloneDeepSymbol=Symbol.for("cloneDeep");const elementWithKeySetSymbol=Symbol.for("elementWithKeySet");const elementSetSymbol=Symbol.for("elementSet");let ClassExtension={methodIteratorOf:function methodIteratorOf(src){if(src)return _.routine.like(src[iteratorSymbol])?src[iteratorSymbol]:void 0},methodEqualOf:function methodEqualOf(src){if(src)return _.routine.is(src[equalAreSymbol])?src[equalAreSymbol]:_.routine.is(src.equalAre)?src.equalAre:void 0},methodExportStringOf:function methodExportStringOf(src){if(src)return _.routine.is(src[exportStringSymbol])?src[exportStringSymbol]:_.routine.is(src.exportString)?src.exportString:void 0},methodAscendOf:function methodAscendOf(src){if(src)return _.routine.is(src[ascendSymbol])?src[ascendSymbol]:_.routine.is(src.ascend)?src.ascend:void 0},methodCloneShallowOf:function methodCloneShallowOf(src){if(src)return _.routine.is(src[cloneShallowSymbol])?src[cloneShallowSymbol]:_.routine.is(src.cloneShallow)?src.cloneShallow:void 0},methodCloneDeepOf:function methodCloneDeepOf(src){if(src)return _.routine.is(src[cloneDeepSymbol])?src[cloneDeepSymbol]:_.routine.is(src.cloneDeep)?src.cloneDeep:void 0},methodElementWithKeySetOf:function methodElementWithKeySetOf(src){if(src)return _.routine.is(src[elementWithKeySetSymbol])?src[elementWithKeySetSymbol]:void 0},methodElementSetOf:function methodElementSetOf(src){if(src)return _.routine.is(src[elementSetSymbol])?src[elementSetSymbol]:_.routine.is(src.eSet)?src.eSet:void 0},methodMakeEmptyOf:function methodMakeEmptyOf(src){return _.routine.is(src.makeEmpty)?src.makeEmpty:_.routine.is(src.MakeEmpty)?src.MakeEmpty:void 0},methodMakeUndefinedOf:function methodMakeUndefinedOf(src){return _.routine.is(src.makeUndefined)?src.makeUndefined:_.routine.is(src.MakeUndefined)?src.MakeUndefined:void 0},declareBasic:declareBasic,tools:_,iteratorSymbol:iteratorSymbol,exportTypeNameGetterSymbol:exportTypeNameGetterSymbol,exportPrimitiveSymbol:exportPrimitiveSymbol,exportStringNjsSymbol:exportStringNjsSymbol,exportStringSymbol:exportStringSymbol,ascendSymbol:ascendSymbol,equalAreSymbol:equalAreSymbol,cloneShallowSymbol:cloneShallowSymbol,cloneDeepSymbol:cloneDeepSymbol,elementSetSymbol:elementSetSymbol};Object.assign(_.class,ClassExtension)}()});module.exports,module.include,module.include}(),function Constructible_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Constructible.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Constructible_s_naked(){!function _l1_Constructible_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){if(_.primitive.is(src))return false;let proto=Object.getPrototypeOf(src);return!(null===proto||!Reflect.has(proto,"constructor")||proto.constructor===Object||_.aux.is(src)||_.vector.is(src)||_.set.is(src)||_.hashMap.is(src))}function like(src){return _.constructibleIs(src)}_.constructible=_.constructible||Object.create(null);let ToolsExtension={constructibleIs:is,constructibleLike:like};let Extension={is:is,like:like};Object.assign(_,ToolsExtension),Object.assign(_.constructible,Extension)}()});module.exports,module.include,module.include}(),function Container_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Container.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Container_s_naked(){!function _l1_Container_s_(){"use strict";_global_;const _=_global_.wTools;const _functor_functor=_.props._functor_functor;function is(src){return!!_.countable.like(src)||!!_.aux.is(src)}function like(src){return _.container.is(src)}function cloneShallow(container){return _.assert(1===arguments.length),cloneShallow.functor.call(this,container)()}function make(container,...args){return _.assert(1===arguments.length||2===arguments.length),make.functor.call(this,container)(...args)}function makeEmpty(container){return _.assert(1===arguments.length),makeEmpty.functor.call(this,container)()}function makeUndefined(container,...args){return _.assert(1===arguments.length||2===arguments.length),makeUndefined.functor.call(this,container)(...args)}function namespaceForIterating(src){return _.assert(1===arguments.length),_.primitive.is(src)?_.blank:_.hashMap.like(src)?_.hashMap:_.set.like(src)?_.set:_.longIs(src)?_.long:_.countableIs(src)?_.countable:_.auxIs(src)?_.aux:_.blank}cloneShallow.functor=_functor_functor("cloneShallow"),make.functor=_functor_functor("make"),makeEmpty.functor=_functor_functor("makeEmpty"),makeUndefined.functor=_functor_functor("makeUndefined");class Container{static[Symbol.hasInstance](instance){return is(instance)}}const Self=new Proxy(Container,{construct(original,args){return Container.make(...args)}});Self.original=Container;let ContainerExtension={NamespaceName:"container",NamespaceNames:["container"],NamespaceQname:"wTools/container",TypeName:"Container",TypeNames:["Container"],InstanceConstructor:null,tools:_,is:is,like:like,cloneShallow:cloneShallow,make:make,makeEmpty:makeEmpty,makeUndefined:makeUndefined,namespaceForIterating:namespaceForIterating,namespaceForExporting:function namespaceForExporting(src){return _.primitive.is(src)?_.primitive:_.date.is(src)?_.date:_.regexp.is(src)?_.regexp:_.set.like(src)?_.set:_.hashMap.like(src)?_.hashMap:_.routine.is(src)?_.routine:_.buffer.like(src)?_.buffer:_.long.like(src)?_.long:_.vector.like(src)?_.vector:_.countable.like(src)?_.countable:_.aux.like(src)?_.aux:_.object.like(src)?_.object:null},namespaceOf:namespaceForIterating,namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};_.container=Self,Object.assign(Self,ContainerExtension);let ToolsExtension={containerIs:is.bind(_.container),containerLike:like.bind(_.container)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function ContainerAdapter_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/ContainerAdapter.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ContainerAdapter_s_naked(){!function _l1_ContainerAdapter_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!src&&!!_.containerAdapter.Abstract&&src instanceof _.containerAdapter.Abstract}function like(src){return this.is(src)}class ContainerAdapterNamespace{static[Symbol.hasInstance](instance){return is(instance)}}const Self=new Proxy(ContainerAdapterNamespace,{construct(original,args){return ContainerAdapterNamespace.make(...args)}});Self.original=ContainerAdapterNamespace,_.assert(void 0===_.containerAdapter),_.containerAdapter=Self;let ContainerAdapterExtension={is:is,like:like,isContainer:function isContainer(src){return!!_.set.like(src)||!!_.long.like(src)||!!_.containerAdapter.is(src)},setLike:function setLike(src){return!!src&&(!!_.set.like(src)||!(!_.containerAdapter||!_.containerAdapter.Set)&&src instanceof _.containerAdapter.Set)},longLike:function longLike(src){return!!src&&(!!_.long.like(src)||!(!_.containerAdapter||!_.containerAdapter.Array)&&src instanceof _.containerAdapter.Array)}};Object.assign(_.containerAdapter,ContainerAdapterExtension);let ToolsExtension={is:is.bind(_.containerAdapter),like:like.bind(_.containerAdapter)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Countable_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Countable.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Countable_s_naked(){!function _l1_Countable_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!_.arrayIs(src)||!_.primitive.is(src)&&void 0!==_.class.methodIteratorOf(src)}function like(src){return _.countable.is(src)}_.countable=_.countable||Object.create(null);var ToolsExtension={countableIs:is.bind(_.countable),countableLike:like.bind(_.countable)};Object.assign(_,ToolsExtension);var CountableExtension={NamespaceName:"countable",NamespaceNames:["countable"],NamespaceQname:"wTools/countable",MoreGeneralNamespaceName:"countable",MostGeneralNamespaceName:"countable",TypeName:"Countable",TypeNames:["Countable"],InstanceConstructor:null,tools:_,is:is,like:like,isResizable:function isResizable(src){return!!_.array.is(src)},IsResizable:function IsResizable(){return _.assert(0===arguments.length),this.default.IsResizable()},_makeEmpty:function _makeEmpty(src){return 0===arguments.length||null===src||_.long.is(src)?_.long._makeEmpty(...arguments):_.object.makeEmpty(...arguments)},makeEmpty:function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length?(_.assert(this.like(src)||_.routineIs(src)),this._makeEmpty(src)):this._makeEmpty()},_makeUndefined:function _makeUndefined(src,length){return _.long.is(src)?_.long._makeUndefined(...arguments):_.object.makeUndefined(...arguments)},makeUndefined:function makeUndefined(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routineIs(src)),_.assert(_.numberIs(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.numberIs(src)||this.like(src)||_.routineIs(src)),this._makeUndefined(...arguments)},_makeZeroed:function _makeZeroed(src,length){return _.long.is(src)?_.long._makeZeroed(...arguments):_.object.make(...arguments)},makeZeroed:function makeZeroed(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(null===src||_.long.is(src)||_.routineIs(src)),_.assert(_.numberIs(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.numberIs(src)||this.like(src)||_.routineIs(src)),this._makeZeroed(...arguments)},_make:function _make(src,length){return _.long.is(src)?_.long._make(...arguments):_.object.make(...arguments)},make:function make(src,length){return _.assert(arguments.length<=2),2===arguments.length?(_.assert(null===src||_.countable.is(src)||_.routineIs(src)),_.assert(_.numberIs(length)||_.countable.is(length))):1===arguments.length&&_.assert(null===src||_.numberIs(src)||this.like(src)||_.routineIs(src)),this._make(...arguments)},_cloneShallow:function _cloneShallow(src){return _.long.is(src)?_.long._cloneShallow(src):_.object.cloneShallow(src)},cloneShallow:function cloneShallow(srcArray){return _.assert(this.like(srcArray)),_.assert(1===arguments.length),this._cloneShallow(srcArray)},from:function from(src){return _.assert(1===arguments.length,"Expects single argument"),this.is(src)?src:null===src?this.make(null):this.make(null,src)},namespaceOf:function namespaceOf(src){if(!this.is(src))return null;return _.long.namespaceOf(src)||this},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.countable,CountableExtension)}()});module.exports,module.include,module.include}(),function Ct_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Ct.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Ct_s_naked(){!function _l1_Ct_s_(){"use strict";_global_;const _=_global_.wTools;_.ct=_.ct||Object.create(null),Object.assign(_.ct,{})}()});module.exports,module.include,module.include}(),function Date_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Date.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Date_s_naked(){!function _l1_Date_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return"[object Date]"===Object.prototype.toString.call(src)}function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!_.date.is(src1)&&!!_.date.is(src2)&&_.date._identicalShallow(src1,src2)}function exportStringDiagnosticShallow(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.date.is(src)),src.toISOString()}_.date=_.date||Object.create(null);let ToolsExtension={dateIs:is,datesAreIdentical:identicalShallow};let Extension={is:is,identicalShallow:identicalShallow,_identicalShallow:function _identicalShallow(src1,src2){return(src1=src1.getTime())===src2.getTime()},areIdentical:identicalShallow,equivalentShallow:identicalShallow,exportString:exportStringDiagnosticShallow,exportStringCodeShallow:function exportStringCodeShallow(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.date.is(src)),`new Date( '${src.toISOString()}' )`},exportStringDiagnosticShallow:exportStringDiagnosticShallow};Object.assign(_,ToolsExtension),Object.assign(_.date,Extension)}()});module.exports,module.include,module.include}(),function Entity_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Entity.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Entity_s_naked(){!function _l1_Entity_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return true}function like(src){return _.entity.is(src)}function strTypeWithTraits(src){if(_.assert(1===arguments.length,"Expects single argument"),_.aux.is(src)){if(_.mapIsPure(src))return end("Map.pure");if(_.mapIsPolluted(src))return end("Map.polluted");if(_.aux.isPure(src)&&_.aux.isPrototyped(src))return end("Aux.pure.prototyped");if(_.aux.isPolluted(src)&&_.aux.isPrototyped(src))return end("Aux.polluted.prototyped");_.assert(0,"undexpected")}if(_.primitive.is(src))return end(_.entity.strTypeSecondary(src));let proto=Object.getPrototypeOf(src);return proto&&proto.constructor&&proto.constructor!==Object&&proto.constructor.name?end(proto.constructor.name):end(_.entity.strTypeSecondary(src));function end(result){let translated=_.entity.TranslatedTypeMap[result];return translated&&(result=translated),_.entity.StandardTypeSet.has(result)||(_.countableIs(src)&&(result+=".countable"),_.constructibleIs(src)&&(result+=".constructible")),result}}function namespaceForIterating(src){return _.assert(1===arguments.length),void 0===src?_.blank:_.primitive.is(src)?_.itself:_.hashMap.like(src)?_.hashMap:_.set.like(src)?_.set:_.long.is(src)?_.long:_.buffer.like(src)?_.buffer:_.countable.is(src)?_.object:_.aux.is(src)?_.aux:_.object.is(src)?_.object:_.props}_.entity=_.entity||Object.create(null);let StandardTypeSet=new Set(["U64x","U32x","U16x","U8x","U8xClamped","I64x","I32x","I16x","I8x","F64x","F32x","BufferNode","BufferRaw","BufferRawShared","HashMap","HashMapWeak","ArgumentsArray","Array","Set","Routine","Global"]);let EntityExtension={NamespaceName:"entity",NamespaceNames:["entity"],NamespaceQname:"wTools/entity",TypeName:"Entity",TypeNames:["Entity"],InstanceConstructor:null,tools:_,TranslatedTypeMap:{BigUint64Array:"U64x",Uint32Array:"U32x",Uint16Array:"U16x",Uint8Array:"U8x",Uint8ClampedArray:"U8xClamped",BigInt64Array:"I64x",Int32Array:"I32x",Int16Array:"I16x",Int8Array:"I8x",Float64Array:"F64x",Float32Array:"F32x",Buffer:"BufferNode",ArrayBuffer:"BufferRaw",SharedArrayBuffer:"BufferRawShared",Map:"HashMap",WeakMap:"HashMapWeak",Function:"Routine",Arguments:"ArgumentsArray"},StandardTypeSet:StandardTypeSet,is:is,like:like,cloneShallow:_.container.cloneShallow,make:_.container.make,makeEmpty:_.container.makeEmpty,makeUndefined:_.container.makeUndefined,strPrimitive:function strPrimitive(src){if(_.assert(1===arguments.length,"Expects exactly one argument"),null!==src&&void 0!==src)return _.primitive.is(src)?String(src):void 0},strTypeSecondary:function strTypeSecondary(src){let name=Object.prototype.toString.call(src);let result=/\[(\w+) (\w+)\]/.exec(name);return _.assert(!!result,"unknown type",name),result[2]},strType:strTypeWithTraits,strTypeWithTraits:strTypeWithTraits,strTypeWithoutTraits:function strTypeWithoutTraits(src){if(_.assert(1===arguments.length,"Expects single argument"),_.aux.is(src))return _.mapIs(src)?"Map":"Aux";if(_.primitive.is(src))return end(_.entity.strTypeSecondary(src));let proto=Object.getPrototypeOf(src);return proto&&proto.constructor&&proto.constructor!==Object&&proto.constructor.name?end(proto.constructor.name):end(_.entity.strTypeSecondary(src));function end(result){let translated=_.entity.TranslatedTypeMap[result];return translated&&(result=translated),result}},namespaceForIterating:namespaceForIterating,namespaceForExporting:_.container.namespaceForExporting,namespaceOf:namespaceForIterating,namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.entity,EntityExtension);let ToolsExtension={entityIs:is.bind(_.entity),entityLike:like.bind(_.entity),strType:strTypeWithTraits};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Escape_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Escape.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Escape_s_naked(){!function _l1_Escape_s_(){"use strict";_global_;const _=_global_.wTools;_.escape=_.escape||Object.create(null),Object.assign(_.escape,{})}()});module.exports,module.include,module.include}(),function Event_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Event.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Event_s_naked(){!function _l1_Event_s_(){"use strict";_global_;const _=_global_.wTools;_.event=_.event||Object.create(null),Object.assign(_.event,{})}()});module.exports,module.include,module.include}(),function Functional_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Functional.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Functional_s_naked(){!function _l1_Functional_s_(){"use strict";_global_;const _=_global_.wTools;_global_.wTools,Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Functor_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Functor.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Functor_s_naked(){!function _l1_Functor_s_(){"use strict";_global_;const _=_global_.wTools;function vectorize_head(routine,args){let o=args[0];return 2===args.length?o={routine:args[0],select:args[1]}:(_.routine.is(o)||_.strIs(o))&&(o={routine:args[0]}),_.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.routine.is(o.routine)||_.strIs(o.routine)||_.strsAreAll(o.routine),()=>"Expects routine {-o.routine-}, but got "+o.routine),_.assert(1===args.length||2===args.length),_.assert(o.select>=1||_.strIs(o.select)||_.argumentsArray.like(o.select),()=>"Expects {-o.select-} as number >= 1, string or array, but got "+o.select),o}function vectorize_body(o){_.routine.assertOptions(vectorize_body,arguments),_.argumentsArray.like(o.routine)&&1===o.routine.length&&(o.routine=o.routine[0]);let routine=o.routine;let propertyCondition=o.propertyCondition;o.bypassingFilteredOut;let bypassingEmpty=o.bypassingEmpty;let vectorizingArray=o.vectorizingArray;let vectorizingMapVals=o.vectorizingMapVals;let vectorizingMapKeys=o.vectorizingMapKeys;let vectorizingContainerAdapter=o.vectorizingContainerAdapter;let unwrapingContainerAdapter=o.unwrapingContainerAdapter;let head=null;let select=null===o.select?1:o.select;let selectAll=Infinity===o.select;let multiply=select>1?function multiplyReally(args){let length,keys;args=[...args],selectAll&&(select=args.length),_.assert(args.length===select,()=>"Expects "+select+" arguments, but got "+args.length);for(let d=0;d<select;d++){if(vectorizingArray&&_.argumentsArray.like(args[d])){length=args[d].length;break}if(vectorizingArray&&_.set.like(args[d])){length=args[d].size;break}if(vectorizingContainerAdapter&&_.containerAdapter.is(args[d])){length=args[d].length;break}if(vectorizingMapVals&&_.aux.is(args[d])){keys=_.props.onlyOwnKeys(args[d]);break}}if(void 0!==length)for(let d=0;d<select;d++){if(vectorizingMapVals)_.assert(!_.mapIs(args[d]),()=>"Arguments should have only arrays or only maps, but not both. Incorrect argument : "+args[d]);else if(vectorizingMapKeys&&_.mapIs(args[d]))continue;args[d]=_.multiple(args[d],length)}else if(void 0!==keys)for(let d=0;d<select;d++)if(_.mapIs(args[d]))_.assert(_.arraySet.identical(_.props.onlyOwnKeys(args[d]),keys),()=>"Maps should have same keys : "+keys);else{vectorizingArray&&_.assert(!_.argumentsArray.like(args[d]),()=>"Arguments should have only arrays or only maps, but not both. Incorrect argument : "+args[d]);let arg=Object.create(null);_.mapSetWithKeys(arg,keys,args[d]),args[d]=arg}return args}:multiplyNo;routine=function routineNormalize(routine){return _.strIs(routine)?function methodCall(){return _.assert(_.routine.is(this[routine]),()=>"Context "+_.entity.exportStringDiagnosticShallow(this)+" does not have routine "+routine),this[routine].apply(this,arguments)}:_.argumentsArray.like(routine)?(_.assert(2===routine.length),function methodCall(){let c=this[routine[0]];return _.assert(_.routine.is(c[routine[1]]),()=>"Context "+_.entity.exportStringDiagnosticShallow(c)+" does not have routine "+routine),c[routine[1]].apply(c,arguments)}):routine}(routine),_.assert(_.routine.is(routine),()=>"Expects routine {-o.routine-}, but got "+routine);let resultRoutine=vectorizeArray;return _.number.is(select)?vectorizingArray||vectorizingMapVals||vectorizingMapKeys?propertyCondition?resultRoutine=function vectorizeWithFilters(src){_.assert(0,"not tested"),_.assert(1===arguments.length,"Expects single argument");let args=multiply(arguments);if(vectorizingArray&&_.argumentsArray.like(src))throw args=[...args],_.err("not tested");if(vectorizingMapVals&&_.mapIs(src))throw args=[...args],Object.create(null),_.err("not tested");return routine.call(this,src)}:vectorizingMapKeys?vectorizingMapVals?(_.assert(1===select,"Only single argument is allowed if {-o.vectorizingMapKeys-} and {-o.vectorizingMapVals-} are enabled."),resultRoutine=function vectorizeMapWithKeysOrArray(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let srcs=args[0];if(_.assert(args.length===select,()=>"Expects "+select+" arguments but got : "+args.length),vectorizingMapKeys&&vectorizingMapVals&&_.mapIs(srcs)){let result=Object.create(null);for(let s in srcs){let val=routine.call(this,srcs[s]);result[routine.call(this,s)]=val}return result}if(vectorizingArray&&_.argumentsArray.like(srcs)){let result=[];for(let s=0;s<srcs.length;s++)result[s]=routine.call(this,srcs[s]);return result}return routine.apply(this,arguments)}):resultRoutine=function vectorizeKeysOrArray(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let src=args[0];let args2,result,map,mapIndex,arr;if(_.assert(args.length===select,()=>"Expects "+select+" arguments but got : "+args.length),vectorizingMapKeys)for(let d=0;d<select;d++)vectorizingArray&&_.argumentsArray.like(args[d])?arr=args[d]:_.mapIs(args[d])&&(_.assert(void 0===map,()=>"Arguments should have only single map. Incorrect argument : "+args[d]),map=args[d],mapIndex=d);if(map){if(result=Object.create(null),args2=[...args],vectorizingArray&&_.argumentsArray.like(arr))for(let i=0;i<arr.length;i++){for(let m=0;m<select;m++)args2[m]=args[m][i];for(let k in map){args2[mapIndex]=k,result[routine.apply(this,args2)]=map[k]}}else for(let k in map){args2[mapIndex]=k,result[routine.apply(this,args2)]=map[k]}return result}if(vectorizingArray&&_.argumentsArray.like(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)((e,r)=>{for(let m=0;m<select;m++)args2[m]=args[m][r];append(routine.apply(this,args2))}),result}return routine.apply(this,arguments)}:resultRoutine=!vectorizingArray||vectorizingMapVals?function vectorizeMapOrArray(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let src=args[0];if(vectorizingArray&&_.argumentsArray.like(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)((e,r)=>{for(let m=0;m<select;m++)args2[m]=args[m][r];append(routine.apply(this,args2))}),result}if(vectorizingMapVals&&_.mapIs(src)){let args2=[...args];let result=Object.create(null);for(let r in src){for(let m=0;m<select;m++)args2[m]=args[m][r];result[r]=routine.apply(this,args2)}return result}return routine.apply(this,arguments)}:multiply===multiplyNo?vectorizeArray:function vectorizeArrayMultiplying(){if(bypassingEmpty&&!arguments.length)return[];let args=multiply(arguments);let src=args[0];if(_.argumentsArray.like(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)((e,r)=>{for(let m=0;m<select;m++)args2[m]=args[m][r];append(routine.apply(this,args2))}),result}return routine.apply(this,args)}:resultRoutine=routine:(_.assert(multiply===multiplyNo),routine.head&&(head=routine.head,routine=routine.body),propertyCondition?_.assert(0,"not implemented"):vectorizingArray||!vectorizingMapVals?resultRoutine=_.strIs(select)?vectorizeForOptionsMap:function vectorizeForOptionsMapForKeys(){let result=[];if(bypassingEmpty&&!arguments.length)return result;for(let i=0;i<o.select.length;i++)select=o.select[i],result[i]=vectorizeForOptionsMap.apply(this,arguments);return result}:_.assert(0,"not implemented")),resultRoutine.vectorized=o,_.routine.extend(resultRoutine,routine),resultRoutine;function multiplyNo(args){return args}function vectorizeArray(){if(bypassingEmpty&&!arguments.length)return[];let args=arguments;let src=args[0];if(_.arrayIs(src)){let args2=[...args];let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)(e=>{args2[0]=e,append(routine.apply(this,args2))}),result}if(_.set.like(src)){let args2=[...args];let result=new Set;for(let e of src)args2[0]=e,result.add(routine.apply(this,args2));return result}if(vectorizingContainerAdapter&&_.containerAdapter.is(src)){let args2=[...args];let result=src.filter(e=>{return args2[0]=e,routine.apply(this,args2)});return unwrapingContainerAdapter?result.original:result}return routine.apply(this,args)}function vectorizeForOptionsMap(srcMap){if(bypassingEmpty&&!arguments.length)return[];let src=srcMap[select];let args=[...arguments];if(_.assert(1===arguments.length,"Expects single argument"),_.argumentsArray.like(src)){head&&(args=head(routine,args),_.assert(_.arrayLikeResizable(args)));let result=_.long.makeEmpty(src);let append=_.long.appender(result);return _.long.eacher(src)(e=>{args[0]=_.props.extend(null,srcMap),args[0][select]=e,append(routine.apply(this,args))}),result}if(_.set.like(src)){head&&(args=head(routine,args),_.assert(_.arrayLikeResizable(args)));let result=new Set;for(let e of src)args[0]=_.props.extend(null,srcMap),args[0][select]=e,result.add(routine.apply(this,args));return result}return vectorizingContainerAdapter&&_.containerAdapter.is(src)?(head&&(args=head(routine,args),_.assert(_.arrayLikeResizable(args))),result=src.filter(e=>{return args[0]=_.props.extend(null,srcMap),args[0][select]=e,routine.apply(this,args)}),unwrapingContainerAdapter?result.original:result):routine.apply(this,arguments)}}function vectorize(){let o=vectorize.head.call(this,vectorize,arguments);return vectorize.body.call(this,o)}function vectorizeAll_body(o){_.routine.assertOptions(vectorize,arguments);let routine1=_.vectorize.body.call(this,o);return _.routine.extend(all,o.routine),all;function all(){let result=routine1.apply(this,arguments);return _.all(result)}}function vectorizeAll(){let o=vectorizeAll.head.call(this,vectorizeAll,arguments);return vectorizeAll.body.call(this,o)}function vectorizeAny_body(o){_.routine.assertOptions(vectorize,arguments);let routine1=_.vectorize.body.call(this,o);return _.routine.extend(any,o.routine),any;function any(){let result=routine1.apply(this,arguments);return!!_.any(result)}}function vectorizeAny(){let o=vectorizeAny.head.call(this,vectorizeAny,arguments);return vectorizeAny.body.call(this,o)}function vectorizeNone_body(o){_.routine.assertOptions(vectorize,arguments);let routine1=_.vectorize.body.call(this,o);return _.routine.extend(none,o.routine),none;function none(){let result=routine1.apply(this,arguments);return _.none(result)}}function vectorizeNone(){let o=vectorizeNone.head.call(this,vectorizeNone,arguments);return vectorizeNone.body.call(this,o)}function vectorizeAccess(vector){_.assert(_.longIs(vector)),_.assert(1===arguments.length);let proxy=new Proxy(vector,{get:function get(back,key,context){if("$"===key)return vector;let routineIs=vector.some(scalar=>_.routine.is(scalar[key]));return routineIs||!_.all(vector,scalar=>void 0===scalar[key])?(vector.map(scalar=>{_.assert(void 0!==scalar[key],`One or several element(s) of vector does not have ${String(key)}`)}),routineIs?function(){let args=arguments;let revectorizing=false;let result=vector.map(scalar=>{let r=scalar[key].apply(scalar,args);return r!==scalar&&(revectorizing=true),r});return revectorizing?vectorizeAccess(result):proxy}:vectorizeAccess(vector.map(scalar=>{return scalar[key]}))):void 0},set:function set(){arguments[0];let key=arguments[1];let val=arguments[2];return arguments[3],vector.map(scalar=>{_.assert(void 0!==scalar[key],`One or several element(s) of vector does not have ${key}`)}),vector.map(scalar=>{scalar[key]=val}),true}});return proxy}_.functor=_.functor||Object.create(null),vectorize_body.defaults={routine:null,propertyCondition:null,bypassingFilteredOut:1,bypassingEmpty:0,vectorizingArray:1,vectorizingMapVals:0,vectorizingMapKeys:0,vectorizingContainerAdapter:0,unwrapingContainerAdapter:0,select:1},vectorize.head=vectorize_head,vectorize.body=vectorize_body,vectorize.defaults={...vectorize_body.defaults},vectorizeAll_body.defaults={...vectorize_body.defaults},vectorizeAll.head=vectorize_head,vectorizeAll.body=vectorizeAll_body,vectorizeAll.defaults={...vectorizeAll_body.defaults},vectorizeAny_body.defaults={...vectorize_body.defaults},vectorizeAny.head=vectorize_head,vectorizeAny.body=vectorizeAny_body,vectorizeAny.defaults={...vectorizeAny_body.defaults},vectorizeNone_body.defaults={...vectorize_body.defaults},vectorizeNone.head=vectorize_head,vectorizeNone.body=vectorizeNone_body,vectorizeNone.defaults={...vectorizeNone_body.defaults};let ToolsExtension={routineVectorize_functor:vectorize,vectorize:vectorize,vectorizeAll:vectorizeAll,vectorizeAny:vectorizeAny,vectorizeNone:vectorizeNone,vectorizeAccess:vectorizeAccess};Object.assign(_,ToolsExtension);let FunctorExtension={vectorize:vectorize,vectorizeAll:vectorizeAll,vectorizeAny:vectorizeAny,vectorizeNone:vectorizeNone,vectorizeAccess:vectorizeAccess};Object.assign(_.functor,FunctorExtension)}()});module.exports,module.include,module.include}(),function Fuzzy_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Fuzzy.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Fuzzy_s_naked(){!function _l1_Fuzzy_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return true===src||false===src||src===_.maybe}function like(src){return src===_.maybe||true===src||false===src||0===src||1===src}function likeFalse(src){return!!_.fuzzy.like(src)&&!src}function likeTrue(src){return!!_.fuzzy.like(src)&&src!==_.maybe&&!!src}_.fuzzy=_.fuzzy||Object.create(null);let ToolsExtension={fuzzyIs:is,fuzzyLike:like,fuzzyLikeFalse:likeFalse,fuzzyLikeTrue:likeTrue};let Extension={is:is,like:like,likeFalse:likeFalse,likeTrue:likeTrue};Object.assign(_,ToolsExtension),Object.assign(_.fuzzy,Extension)}()});module.exports,module.include,module.include}(),function Global_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Global.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Global_s_naked(){!function _l1_Global_s_(){"use strict";_global_;const _=_global_.wTools;const __=_realGlobal_.wTools;_.global=_.global||Object.create(null);var Extension={is:function is(src){return _.assert(1===arguments.length,"Expects single argument"),!_.primitive.is(src)&&!!_.prototype.has(src,_global_)},isReal:function isReal(src){return _.assert(1===arguments.length,"Expects single argument"),src===_realGlobal_},isDerivative:function isDerivative(src){return _.assert(1===arguments.length,"Expects single argument"),!(!_.global.is(src)||_.global.isReal(src))},get:__.global.get,new:__.global.new,open:__.global.open,close:__.global.close,openForChildren:__.global.openForChildren,closeForChildren:__.global.closeForChildren,setup:__.global.setup,_stack:__.global._stack};Object.assign(_.global,Extension)}()});module.exports,module.include,module.include}(),function HashMap_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/HashMap.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function HashMap_s_naked(){!function _l1_HashMap_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!src&&(src instanceof HashMap||src instanceof HashMapWeak)}function like(src){return _.hashMap.is(src)}function isEmpty(){return!!this.like(src)&&!src.size}function isPopulated(){return!!this.like(src)&&!!src.size}function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length&&_.assert(this.like(src)),new HashMap}function makeUndefined(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(this.like(src)),_.assert(_.number.is(length))):1===arguments.length&&_.assert(_.number.is(src)||this.like(src)),new HashMap}function make(src,length){return _.assert(this.like(src)),_.assert(arguments.length<=2),_.assert(1===arguments.length||_.hashMap.is(src)||_.auxIs(src)),_.assert(arguments.length<2||0===length),this._make(src,length)}function cloneShallow(src){return _.assert(this.like(src)),_.assert(1===arguments.length),this._cloneShallow(src)}function from(src){return _.assert(1===arguments.length),this.is(src)?src:_.aux.is(src)?this.fromProps(null,src):void _.assert(0,`Not clear how to convert ${_.strType(src)} to HashMap`)}_.hashMap=_.hashMap||Object.create(null);let ToolsExtension={hashMapIs:is.bind(_.hashMap),hashMapIsEmpty:isEmpty.bind(_.hashMap),hashMapIsPopulated:isPopulated.bind(_.hashMap),hashMapLike:like.bind(_.hashMap),hashMapMakeEmpty:makeEmpty.bind(_.hashMap),hashMapMakeUndefined:makeUndefined.bind(_.hashMap),hashMapMake:make.bind(_.hashMap),hashMapCloneShallow:cloneShallow.bind(_.hashMap),hashMapFrom:from.bind(_.hashMap)};Object.assign(_,ToolsExtension);let Extension={NamespaceName:"hashMap",NamespaceNames:["hashMap"],NamespaceQname:"wTools/hashMap",MoreGeneralNamespaceName:"hashMap",MostGeneralNamespaceName:"countable",TypeName:"HashMap",SecondTypeName:"Map",InstanceConstructor:HashMap,tools:_,is:is,like:like,isEmpty:isEmpty,isPopulated:isPopulated,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:function _makeEmpty(src){return new HashMap},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src,length){return new HashMap},makeUndefined:makeUndefined,_make:function _make(src,length){let result=new HashMap;if(src&&0!==length)if(_.hashMap.is(src))for(let[key,val]of src)result.set(key,val);else if(_.aux.is(src))for(let key of src)result.set(key,src[key]);else _.assert(0);return result},make:make,_cloneShallow:function _cloneShallow(src){let result=new HashMap;for(let[key,val]of src)result.set(key,val);return result},cloneShallow:cloneShallow,fromProps:function fromProps(dstMap,srcMap){1===arguments.length&&(srcMap=arguments[0],dstMap=null),_.assert(1===arguments.length||2===arguments.length),_.assert(!_.primitive.is(srcMap)),_.assert(null===dstMap||_.hashMap.is(dstMap)),null===dstMap&&(dstMap=new HashMap);for(let k in srcMap)dstMap.set(k,srcMap[k]);return dstMap},from:from,_keys:function _keys(src){return[...src.keys()]},keys:function keys(src){return _.assert(this.like(src)),this._keys(src)},_vals:function _vals(src){return[...src.values()]},vals:function vals(src){return _.assert(this.like(src)),this._vals(src)},_pairs:function _pairs(src){return[...src.entries()]},pairs:function pairs(src){return _.assert(this.like(src)),this._pairs(src)},namespaceOf:_.blank.namespaceOf,namespaceWithDefaultOf:_.blank.namespaceWithDefaultOf,_functor_functor:_.blank._functor_functor};Object.assign(_.hashMap,Extension)}()});module.exports,module.include,module.include}(),function Interval_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Interval.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Interval_s_naked(){!function _l1_Interval_s_(){"use strict";_global_;const _=_global_.wTools;function intervalIsValid(range){return _.assert(1===arguments.length),!!_.intervalIs(range)&&!!_.intIs(range[0])&&!!_.intIs(range[1])}_global_.wTools;let ToolsExtension={intervalIs:function intervalIs(range){return _.assert(1===arguments.length),!!_.number.s.areAll(range)&&2===range.length},intervalIsValid:intervalIsValid,intervalDefined:intervalIsValid};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Intervalc_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Intervalc.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervalc_s_naked(){!function _l1_Intervalc_s_(){"use strict";_global_;const _=_global_.wTools;_.cinterval=_.cinterval||Object.create(null),Object.assign(_.cinterval,{})}()});module.exports,module.include,module.include}(),function Intervall_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Intervall.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervall_s_naked(){!function _l1_Intervall_s_(){"use strict";_global_;const _=_global_.wTools;_.linterval=_.linterval||Object.create(null),Object.assign(_.linterval,{})}()});module.exports,module.include,module.include}(),function Intervalo_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Intervalo.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervalo_s_naked(){!function _l1_Intervalo_s_(){"use strict";_global_;const _=_global_.wTools;_.ointerval=_.ointerval||Object.create(null),Object.assign(_.ointerval,{})}()});module.exports,module.include,module.include}(),function Introspector_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Introspector.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Introspector_s_naked(){!function _l1_Introspector_s_(){"use strict";_global_;const _=_global_.wTools;_.introspector=_.introspector||Object.create(null);let Location={original:null,filePath:null,routineName:null,routineAlias:null,internal:null,abstraction:null,line:null,col:null,filePathLineCol:null,routineFilePathLineCol:null,fileName:null,fileNameLineCol:null};function location(o){if(_.number.is(o)?o={level:o}:_.strIs(o)?o={stack:o,level:0}:_.error.is(o)?o={error:o,level:0}:void 0===o&&(o={stack:_.introspector.stack([1,Infinity])}),location.defaults)for(let e in o)if(void 0===location.defaults[e])throw Error("Unknown option "+e);if(location.defaults)for(let e in location.defaults)void 0===o[e]&&(o[e]=location.defaults[e]);if(!(0===arguments.length||1===arguments.length))throw Error("Expects single argument or none");if(!_.mapIs(o))throw Error("Expects options map");if(o.level||(o.level=0),o.location||(o.location=Object.create(null)),o.error){let location2=o.error.location||Object.create(null);var args0=[location2.filePath,o.location.filePath,o.error.filename,o.error.fileName];o.location.filePath=_.longLeftDefined(args0).element;var args1=[location2.line,o.location.line,o.error.line,o.error.linenumber,o.error.lineNumber,o.error.lineNo,o.error.lineno];o.location.line=_.longLeftDefined(args1).element;var args2=[location2.col,o.location.col,o.error.col,o.error.colnumber,o.error.colNumber,o.error.colNo,o.error.colno];o.location.col=_.longLeftDefined(args2).element}if(o.stack||(o.error?o.stack=_.introspector.stack(o.error,void 0):(o.stack=_.introspector.stack(),o.level+=1)),null===o.stack||void 0===o.stack)return o.location;_.assert(_.strIs(o.stack)||_.arrayIs(o.stack));let stack=o.stack;_.strIs(stack)&&(stack=stack.split("\n"));let stackFrame=stack[o.level];return _.introspector.locationFromStackFrame({stackFrame:stackFrame,location:o.location})}function location_(o){if(_.number.is(o)?o={level:o}:_.strIs(o)?o={stack:o,level:0}:_.error.is(o)?o={error:o,level:0}:void 0===o&&(o={stack:_.introspector.stack([1,Infinity])}),location_.defaults)for(let e in o)if(void 0===location_.defaults[e])throw Error("Unknown option "+e);if(location_.defaults)for(let e in location_.defaults)void 0===o[e]&&(o[e]=location_.defaults[e]);if(!(0===arguments.length||1===arguments.length))throw Error("Expects single argument or none");if(!_.mapIs(o))throw Error("Expects options map");if(o.level||(o.level=0),o.location||(o.location=Object.create(null)),o.error){let location2=o.error.location||Object.create(null);var args0=[location2.filePath,o.location.filePath,o.error.filename,o.error.fileName];o.location.filePath=_.longLeftDefined(args0).element;var args1=[location2.line,o.location.line,o.error.line,o.error.linenumber,o.error.lineNumber,o.error.lineNo,o.error.lineno];o.location.line=_.longLeftDefined(args1).element;var args2=[location2.col,o.location.col,o.error.col,o.error.colnumber,o.error.colNumber,o.error.colNo,o.error.colno];o.location.col=_.longLeftDefined(args2).element}if(o.stack||(o.error?o.stack=_.introspector.stack(o.error,void 0):(o.stack=_.introspector.stack(),o.level+=1)),null===o.stack||void 0===o.stack)return o.location;_.assert(_.strIs(o.stack)||_.arrayIs(o.stack));let stack=o.stack;_.strIs(stack)&&(stack=stack.split("\n"));let stackFrame=stack[o.level];return o.location.original=stackFrame,_.introspector.locationNormalize(o.location),o.location}function locationFromStackFrame(o){if(_.strIs(o)&&(o={stackFrame:o}),!(1===arguments.length))throw Error("Expects single argument");if(!_.mapIs(o))throw Error("Expects options map");if(locationFromStackFrame.defaults)for(let e in o)if(void 0===locationFromStackFrame.defaults[e])throw Error("Unknown option : "+e);if(locationFromStackFrame.defaults)for(let e in locationFromStackFrame.defaults)void 0===o[e]&&(o[e]=locationFromStackFrame.defaults[e]);if(!_.strIs(o.stackFrame))throw Error(`Expects string {- stackFrame -}, but fot ${_.entity.strType(o.stackFrame)}`);if(o.location&&!_.mapIs(o.location))throw Error("Expects map option::location");return o.location||(o.location=Object.create(null)),o.location.original=o.stackFrame,_.introspector.locationNormalize(o.location),o.location}function locationNormalize(o){if(!(1===arguments.length))throw Error("Expects single argument");if(!_.mapIs(o))throw Error("Expects options map");if(locationNormalize.defaults)for(let e in o)if(void 0===locationNormalize.defaults[e])throw Error("Unknown option "+e);if(locationNormalize.defaults)for(let e in locationNormalize.defaults)void 0===o[e]&&(o[e]=locationNormalize.defaults[e]);let hadPath=!!o.filePath;if(o.filePath||(o.filePath=pathFromStack()),function pathCanonize(){o.filePath&&_.path&&_.path.canonize&&(o.filePath=_.path.canonize(o.filePath))}(),function routineFromStack(){let routineName;if(o.routineName)return o.routineName;if(!o.original)return o.routineName;if(routineName=o.original,_.strIs(routineName)){routineName=routineName.replace(/at eval \(eval at/,"");let executed=/^\s*(?:at\s+)?([\w.<>]+)\s*.+/.exec(routineName);executed&&(routineName=executed[1]||""),routineName=routineName.replace(/<anonymous>/gm,"{-anonymous-}"),_.strEnds(routineName,".")&&(routineName+="{-anonymous-}")}else routineName="{-anonymous-}";o.routineName=routineName,o.routineName}(),function routineAliasFromStack(){let routineAlias;if(o.routineAlias)return o.routineAlias;if(!o.original)return o.routineAlias;routineAlias=null;let executed=/\[as ([^\]]*)\]/.exec(o.original);executed&&(routineAlias=executed[1]||null),routineAlias&&(routineAlias=routineAlias.replace(/<anonymous>/gm,"{-anonymous-}")),o.routineAlias=routineAlias,o.routineAlias}(),function internalForm(){_.number.defined(o.internal)||(o.internal=0,o.filePath&&(o.internal<2&&_.strBegins(o.filePath,"internal/")&&(o.internal=2),o.internal<2&&_.strBegins(o.filePath,"node:internal/")&&(o.internal=2)))}(),function abstractionForm(){_.number.defined(o.abstraction)||(o.abstraction=0,o.routineName&&(o.abstraction<2&&(_.strBegins(o.routineName,"__")||-1!==o.routineName.indexOf(".__"))&&(o.abstraction=2),o.abstraction<1&&(_.strBegins(o.routineName,"_")||-1!==o.routineName.indexOf("._"))&&(o.abstraction=1)),o.routineAlias&&(o.abstraction<2&&(_.strBegins(o.routineAlias,"__")||-1!==o.routineAlias.indexOf(".__"))&&(o.abstraction=2),o.abstraction<1&&(_.strBegins(o.routineAlias,"_")||-1!==o.routineAlias.indexOf("._"))&&(o.abstraction=1)))}(),_.number.defined(o.line)&&_.number.defined(o.col)||(o.filePath=lineColFromPath(o.filePath)),!_.number.is(o.line)&&hadPath){let path=pathFromStack();path&&lineColFromPath(path)}return function end(){let path=o.filePath;if(o.filePathLineCol=path||"",_.number.defined(o.line)&&(o.filePathLineCol+=":"+o.line,_.number.defined(o.col)&&(o.filePathLineCol+=":"+o.col)),o.routineName&&(o.routineFilePathLineCol=o.routineName+" @ "+o.filePathLineCol),path){let fileName=path;_.assert(_.routine.is(fileName.lastIndexOf));let i1=fileName.lastIndexOf("/");let i2=fileName.lastIndexOf("\\");let i=Math.max(i1,i2);-1!==i&&(fileName=fileName.substr(i+1)),o.fileName=fileName}return o.fileNameLineCol=o.fileName||"",_.number.defined(o.line)&&(o.fileNameLineCol+=":"+o.line,_.number.defined(o.col)&&(o.fileNameLineCol+=":"+o.col)),o}();function pathFromStack(){let path=o.original;if(_.strIs(path)){path=(path=(path=(path=(path=path.replace(/^\s+/,"")).replace(/^\w+@/,"")).replace(/^at/,"")).replace(/^\s+/,"")).replace(/\s+$/,"");var parsed=/^.*\(([^)]*)\).*$/.exec(path);return parsed&&(path=parsed[1]),path}}function lineColFromPath(path){if(path){let lineNumber,colNumber;let parsed=/(.+?):(\d+)(?::(\d+))?[^:/]*$/.exec(path);parsed&&(path=parsed[1],lineNumber=parsed[2],colNumber=parsed[3]),lineNumber=numberFromToInt(lineNumber),colNumber=numberFromToInt(colNumber),_.number.defined(o.line)||_.number.defined(lineNumber)&&(o.line=lineNumber),_.number.defined(o.col)||_.number.defined(colNumber)&&(o.col=colNumber)}else o.line&&(o.line=numberFromToInt(o.line)),o.col&&(o.col=numberFromToInt(o.col));return _.number.defined(o.line)||(o.line=null),_.number.defined(o.col)||(o.col=null),path}function numberFromToInt(src){return _.strIs(src)?parseInt(src):Math.floor(Number(src))}}function locationToStack(o){if(!(1===arguments.length))throw Error("Expects single argument");if(!_.mapIs(o))throw Error("Expects options map");return _.introspector.locationNormalize(o),o.filePathLineCol?o.routineName?`at ${o.routineName} (${o.filePathLineCol})`:`at (${o.filePathLineCol})`:null}location.defaults={level:0,stack:null,error:null,location:null},location_.defaults={level:0,stack:null,error:null,location:null},locationFromStackFrame.defaults={stackFrame:null,location:null},locationNormalize.defaults={...Location},locationToStack.defaults={...Location};let Extnesion={Location:Location,location:location,location_:location_,locationFromStackFrame:locationFromStackFrame,locationNormalize:locationNormalize,locationToStack:locationToStack,stack:function stack(stack,range){if(1===arguments.length&&(_.error.is(stack)||_.strIs(stack)||(range=arguments[0],stack=void 0)),void 0!==stack&&null!==stack||(stack=new Error,void 0===range?range=[1,Infinity]:(_.number.is(range[0])&&(range[0]+=1),_.number.is(range[1])&&range[1]>=0&&(range[1]+=1))),void 0===range&&(range=[0,Infinity]),0!==arguments.length&&1!==arguments.length&&2!==arguments.length){debugger;throw Error("stack : expects one or two or none arguments")}if(!_.intervalIs(range)){debugger;throw Error("stack : expects range but, got "+_.entity.strType(range))}let first=range[0];let last=range[1];let errIs=0;if(_.error.is(stack)&&(stack=_.error.originalStack(stack),1),!stack)return"";if(_.arrayIs(stack)||_.strIs(stack)){for(_.arrayIs(stack)||(stack=stack.split("\n"));stack.length;){let splice=0;if(splice|=false===_.strHas(stack[0],/(^| )at /)&&-1===stack[0].indexOf("@"),splice|=-1!==stack[0].indexOf("(vm.js:"),splice|=-1!==stack[0].indexOf("(module.js:"),!(splice|=-1!==stack[0].indexOf("(internal/module.js:")))break;stack.splice(0,1)}if(stack[0]&&-1===stack[0].indexOf("at ")&&-1===stack[0].indexOf("@")){console.error("stack : failed to parse stack");debugger}return stack=(stack=stack.map(line=>line.trim())).filter(line=>line),first=void 0===first?0:first,last=void 0===last?stack.length:last,first<0&&(first=stack.length+first),last<0&&(last=stack.length+last+1),0===first&&last===stack.length||(stack=stack.slice(first||0,last)),String(stack.join("\n"))}},stackRelative:function stackRelative(stack,delta){return _.assert(void 0===delta||_.number.is(delta)),_.assert(void 0===stack||null===stack||_.bool.is(stack)||_.number.is(stack)||_.strIs(stack)),_.assert(0===arguments.length||1===arguments.length||2===arguments.length),_.strIs(stack)?stack:false===stack?"":(void 0===stack||null===stack||true===stack?stack=1:_.number.is(stack)&&(stack+=1),delta&&(stack+=delta),_.number.is(stack)&&(stack=_.introspector.stack([stack,Infinity])),_.assert(_.strIs(stack)),stack)},stackRemoveLeft:function stackRemoveLeft(stack,include,exclude){if(3!==arguments.length)throw Error("Expects three arguments");if(!_.regexpIs(include)&&null!==include)throw Error("Expects regexp either null as the second argument");if(!_.regexpIs(exclude)&&null!==exclude)throw Error("Expects regexp either null as the third argument");if(!_.strIs(stack))return stack;for(let s=(stack=stack.split("\n")).length-1;s>=0;s--){let line=stack[s];include&&include.test(line)?stack.splice(s,1):exclude&&exclude.test(line)&&stack.splice(s,1)}return stack.join("\n")},stackCondense:function stackCondense(stack){if(1!==arguments.length)throw Error("Expects single arguments");if(!_.strIs(stack)){debugger;throw Error("Expects string")}for(let s=(stack=stack.split("\n")).length-1;s>=0;s--){let line=stack[s];s>0&&/(\W|^)__\w+/.test(line)?stack.splice(s,1):(_.strHas(line,".test.")&&(line+=" *"),stack[s]=line)}return stack.join("\n")},stackFilter:function stackFilter(stack,onEach){let result=[];return _.routine.is(stack)&&(onEach=stack,stack=void 0),_.strIs(stack)||(stack=_.introspector.stack(stack,void 0)),_.assert(_.strIs(stack)),_.assert(_.routine.is(onEach)),_.assert(1===arguments.length||2===arguments.length),(stack=stack.split("\n")).forEach((stackFrame,k)=>{let location=_.introspector.locationFromStackFrame(stackFrame);let r=onEach(location,k);void 0!==r&&(_.strIs(r)?result.push(r):(_.assert(_.object.isBasic(r)),_.assert(_.strIs(r.original)),result.push(r.original)))}),result.join("\n")},code:function code(){}};Object.assign(_.introspector,Extnesion)}()});module.exports,module.include,module.include}(),function Itself_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Itself.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Itself_s_naked(){!function _l1_Itself_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return true}
function like(src){return true}_.itself=_.itself||Object.create(null),_.assert(!!_.blank.make,"Expects routine _.blank.make");let ToolsExtension={itselfIs:is.bind(_.itself),itselfLike:like.bind(_.itself)};Object.assign(_,ToolsExtension);let ItselfExtension={NamespaceName:"itself",NamespaceNames:["itself"],NamespaceQname:"wTools/itself",MoreGeneralNamespaceName:"itself",MostGeneralNamespaceName:"itself",TypeName:"Itself",TypeNames:["Itself"],InstanceConstructor:null,tools:_,is:is,like:like,IsResizable:function IsResizable(){return _.assert(0===arguments.length),false},_makeEmpty:_.blank._makeEmpty,makeEmpty:_.blank.makeEmpty,_makeUndefined:_.blank._makeUndefined,makeUndefined:_.blank.makeUndefined,_make:_.blank._make,make:_.blank.make,_cloneShallow:_.blank._cloneShallow,cloneShallow:_.blank.cloneShallow,from:_.blank.from,namespaceOf:_.blank.namespaceOf,namespaceWithDefaultOf:_.blank.namespaceWithDefaultOf,_functor_functor:_.blank._functor_functor};Object.assign(_.itself,ItselfExtension)}()});module.exports,module.include,module.include}(),function Logger_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Logger.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Logger_s_naked(){!function _l1_Logger_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return _.assert(1===arguments.length,"Expects single argument"),!!_.Logger&&src instanceof _.Logger}function like(src){return _.assert(1===arguments.length,"Expects single argument"),!!_.printer.is(src)||!!_.consoleIs(src)||src===_global_.logger}_.logger=_.logger||Object.create(null);let ToolsExtension={consoleIs:function consoleIs(src){if(_.assert(1===arguments.length,"Expects single argument"),console.Console&&src&&src instanceof console.Console)return true;if(src!==console)return false;let result=Object.prototype.toString.call(src);return"[object Console]"===result||"[object Object]"===result},loggerIs:is,loggerLike:like};Object.assign(_,ToolsExtension);let LoggerExtension={is:is,like:like,fromStrictly:function fromStrictly(src){let result=src;return _.assert(null===result||_.boolIs(result)||_.numberIs(result)||_.logger.is(result)),null===result?result=new _.Logger({output:_global_.logger,verbosity:1}):_.boolIs(result)?result=new _.Logger({output:_global_.logger,verbosity:result?1:0}):_.numberIs(result)?result=new _.Logger({output:_global_.logger,verbosity:result}):_.logger.is(result)||_.assert(0),result},maybe:function maybe(src){let result=src;return _.assert(null===result||_.boolIs(result)||_.numberIs(result)||_.logger.like(result)),null===result?result=new _.Logger({output:_global_.logger,verbosity:1}):_.boolIs(result)?result=result?new _.Logger({output:_global_.logger,verbosity:1}):0:_.numberIs(result)?result=result>0?new _.Logger({output:_global_.logger,verbosity:result}):0:_.logger.like(result)||_.assert(0),result},relativeMaybe:function relativeMaybe(src,delta){let result=src;return _.assert(null===result||_.boolIs(result)||_.numberIs(result)||_.logger.is(result)),_.assert(void 0===delta||_.numberDefined(delta)||_.logger.like(delta)),_.logger.like(delta)?delta:(delta=delta||0,null===result?result=new _.Logger({output:_global_.logger,verbosity:1+delta}):_.boolIs(result)?result=result?new _.Logger({output:_global_.logger,verbosity:1+delta}):delta>0?new _.Logger({output:_global_.logger,verbosity:delta}):0:_.numberIs(result)?result=(result+=delta)>0?new _.Logger({output:_global_.logger,verbosity:result}):0:_.logger.is(result)?0!==delta&&(result=new _.Logger({output:result,verbosity:result.verbosity+delta})):_.assert(0),result)},absoluteMaybe:function absoluteMaybe(src,verbosity){let result=src;if(_.assert(null===result||_.boolIs(result)||_.numberIs(result)||_.logger.is(result)),_.assert(void 0===verbosity||null===verbosity||_.boolIs(verbosity)||_.numberDefined(verbosity)||_.logger.like(verbosity)),_.logger.like(verbosity))return verbosity;if(null!==verbosity&&void 0!==verbosity){if(0===verbosity||false===verbosity)return _.logger.is(src)?(src.verbosity=0,src):0;_.assert(_.numberIs(verbosity)||_.boolIs(verbosity))}return null===result?result=new _.Logger({output:_global_.logger,verbosity:verbosityGet()}):_.boolIs(result)?result=new _.Logger({output:_global_.logger,verbosity:verbosityGet()}):_.numberIs(result)?result=new _.Logger({output:_global_.logger,verbosity:verbosityGet()}):_.logger.is(result)?_.numberIs(verbosity)&&(result.verbosity=verbosity):_.assert(0),result;function verbosityGet(){return void 0===verbosity||null===verbosity||true===verbosity?1:false===verbosity?0:(_.assert(_.numberIs(verbosity)),verbosity)}},verbosityFrom:function verbosityFrom(src){let result=src;return _.assert(_.boolIs(result)||_.numberIs(result)),_.assert(1===arguments.length),_.boolIs(result)&&(result=result?1:0),result},verbosityRelative:function verbosityRelative(src,delta){let result=src;return _.assert(_.boolIs(result)||_.numberIs(result)),_.assert(void 0===delta||_.numberDefined(delta)),delta=delta||0,_.boolIs(result)?result=result?1+delta:delta:_.numberIs(result)&&(result+=delta),result}};Object.assign(_.logger,LoggerExtension)}()});module.exports,module.include,module.include}(),function Logic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Logic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Logic_s_naked(){!function _l1_Logic_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return true===src||false===src||src===_.maybe||!!src&&src instanceof _.logic.node.Abstract}function like(src){return this.is(src)}function isNode(src){return src instanceof _.logic.node.Abstract}_.logic=_.logic||Object.create(null);let LogicExtension={is:is,like:like,isNode:isNode};Object.assign(_.logic,LogicExtension);let ToolsExtension={logicIs:is.bind(_.logic),logicLike:like.bind(_.logic),logicIsNode:isNode.bind(_.logic)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function LogicNode_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/LogicNode.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function LogicNode_s_naked(){!function _l1_LogicNode_s_(){"use strict";_global_;const _=_global_.wTools;_.logic=_.logic||Object.create(null),_.logic.node=_.logic.node||Object.create(null),Object.assign(_.logic.node,{})}()});module.exports,module.include,module.include}(),function Map_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Map.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Map_s_naked(){!function _l1_Map_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null===proto||proto===Object.prototype&&(!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src))}function isPure(src){return!!src&&null===Object.getPrototypeOf(src)}function isPolluted(src){if(!src)return false;let proto=Object.getPrototypeOf(src);return null!==proto&&proto===Object.prototype&&(!src[Symbol.iterator]||"[object Arguments]"!==Object.prototype.toString.call(src))}function like(src){return _.map.is(src)}function isEmpty(src){return!!this.like(src)&&0===this.keys(src).length}function isPopulated(src){return!!this.like(src)&&this.keys(src).length>0}function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length&&_.assert(this.like(src)),this._makeEmpty(src)}function makeUndefined(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(this.like(src)),_.assert(_.number.is(length))):1===arguments.length&&_.assert(_.number.is(src)||this.like(src)),this._makeUndefined(src)}function make(src,length){return _.assert(0===arguments.length||null===src||!_.primitive.is(src)),_.assert(void 0===length||0===length),_.assert(arguments.length<=2),this._make(...arguments)}function _keys(o){let result=[];_.routine.options(_keys,o);let srcMap=o.srcMap;let selectFilter=o.selectFilter;if(_.assert(this===_.map),_.assert(1===arguments.length,"Expects single argument"),_.assert(null===selectFilter||_.routine.is(selectFilter)),_.assert(this.is(srcMap)),o.onlyEnumerable){let result1=[];if(o.onlyOwn)for(let k in srcMap)Object.hasOwnProperty.call(srcMap,k)&&result1.push(k);else for(let k in srcMap)result1.push(k);filter(srcMap,result1)}else if(o.onlyOwn)filter(srcMap,Object.getOwnPropertyNames(srcMap));else{let proto=srcMap;result=[];do{filter(proto,Object.getOwnPropertyNames(proto)),proto=Object.getPrototypeOf(proto)}while(proto)}return result;function filter(srcMap,keys){if(selectFilter)for(let k=0;k<keys.length;k++){let e=selectFilter(srcMap,keys[k]);void 0!==e&&(element=e,-1===(dst=result).indexOf(element)&&dst.push(element))}else!function arrayAppendArrayOnce(dst,src){src.forEach(element=>{-1===dst.indexOf(element)&&dst.push(element)})}(result,keys);var dst,element}}function keys(srcMap,o){return _.assert(this===_.map),_.assert(1===arguments.length||2===arguments.length),o=_.routine.options(keys,o||null),_.assert(this.is(srcMap)),o.srcMap=srcMap,this._keys(o)}function allKeys(srcMap,o){return _.assert(this===_.map),_.assert(1===arguments.length||2===arguments.length),o=_.routine.options(allKeys,o||null),_.assert(this.is(srcMap)),o.srcMap=srcMap,this._keys(o)}function _vals(o){_.routine.options(_vals,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(null===o.selectFilter||_.routine.is(o.selectFilter)),_.assert(null===o.selectFilter),_.assert(this===_.map);let result=this._keys(o);for(let k=0;k<result.length;k++)result[k]=o.srcMap[result[k]];return result}function vals(srcMap,o){return _.assert(1===arguments.length||2===arguments.length),o=_.routine.options(vals,o||null),_.assert(this.is(srcMap)),_.assert(this===_.map),o.srcMap=srcMap,this._vals(o)}function allVals(srcMap,o){_.assert(1===arguments.length||2===arguments.length),o=_.routine.options(allVals,o||null),_.assert(this.is(srcMap)),_.assert(this===_.map),o.srcMap=srcMap,o.onlyOwn=0,o.onlyEnumerable=0;let result=this._vals(o);debugger;return result}function _pairs(o){if(_.routine.options(_pairs,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(null===o.selectFilter||_.routine.is(o.selectFilter)),_.assert(this.like(o.srcMap)),_.assert(this===_.map),o.selectFilter,o.selectFilter)debugger;return o.selectFilter||(o.selectFilter=function selectFilter(srcMap,k){return[k,srcMap[k]]}),this._keys(o)}function pairs(srcMap,o){return _.assert(this===_.map),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(pairs,o||null)).srcMap=srcMap,this._pairs(o)}function allPairs(srcMap,o){_.assert(this===_.map),_.assert(1===arguments.length||2===arguments.length),(o=_.routine.options(allPairs,o||null)).srcMap=srcMap,o.onlyOwn=0,o.onlyEnumerable=0;let result=this._pairs(o);debugger;return result}_.map=_.map||Object.create(null),_.assert(!!_.props.extend,"Expects routine _.props.exportString"),_keys.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},keys.defaults={onlyOwn:0,onlyEnumerable:1},allKeys.defaults={onlyOwn:0,onlyEnumerable:0},_vals.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},vals.defaults={onlyOwn:0,onlyEnumerable:1},allVals.defaults={},_pairs.defaults={srcMap:null,onlyOwn:0,onlyEnumerable:1,selectFilter:null},pairs.defaults={onlyOwn:0,onlyEnumerable:1},allPairs.defaults={};let ToolsExtension={mapIs:is.bind(_.map),mapIsPure:isPure.bind(_.map),mapIsPolluted:isPolluted.bind(_.map),mapIsEmpty:isEmpty.bind(_.map),mapIsPopulated:isPopulated.bind(_.map),mapLike:like.bind(_.map),mapMakeEmpty:makeEmpty.bind(_.map),mapMakeUndefined:makeUndefined.bind(_.map),mapMake:make.bind(_.map),mapCloneShallow:_.props.cloneShallow.bind(_.map),mapFrom:_.props.from.bind(_.map),mapExtend:_.props.extend.bind(_.map),mapSupplement:_.props.supplement.bind(_.map)};Object.assign(_,ToolsExtension);let ExtensionMap={NamespaceName:"map",NamespaceNames:["map"],NamespaceQname:"wTools/map",MoreGeneralNamespaceName:"aux",MostGeneralNamespaceName:"props",TypeName:"Map",TypeNames:["Map"],InstanceConstructor:null,tools:_,is:is,isPure:isPure,isPolluted:isPolluted,like:like,isEmpty:isEmpty,isPopulated:isPopulated,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:function _makeEmpty(src){return Object.create(null)},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src){return Object.create(null)},makeUndefined:makeUndefined,_make:function _make(src){let dst=Object.create(null);return src&&this.extendUniversal(dst,src),dst},make:make,_cloneShallow:function _cloneShallow(src){let dst=Object.create(null);return Object.assign(dst,src),dst},cloneShallow:_.props.cloneShallow,from:_.props.from,_keys:_keys,keys:keys,allKeys:allKeys,_vals:_vals,vals:vals,allVals:allVals,_pairs:_pairs,pairs:pairs,allPairs:allPairs,_extendWithHashmap:_.props._extendWithHashmap,_extendWithSet:_.props._extendWithSet,_extendWithCountable:_.props._extendWithCountable,_extendWithProps:_.props._extendWithProps,_extendUniversal:_.props._extendUniversal,extendUniversal:_.props.extendUniversal,extend:_.props.extend,_supplementWithHashmap:_.props._supplementWithHashmap,_supplementWithSet:_.props._supplementWithSet,_supplementWithCountable:_.props._supplementWithCountable,_supplementWithProps:_.props._supplementWithProps,_supplementUniversal:_.props._supplementUniversal,supplementUniversal:_.props.supplementUniversal,supplement:_.props.supplement,namespaceOf:function namespaceOf(src){return _.map.is(src)?_.map:null},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.map,ExtensionMap)}()});module.exports,module.include,module.include}(),function Module_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Module.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let __dirname=_dirPath_;let module=_starter_._sourceMake(_filePath_,_dirPath_,function Module_s_naked(){!function _l1_Module_s_(){"use strict";_global_;const _=_global_.wTools;const __=_realGlobal_.wTools;_.module=_.module||Object.create(null),__.module=__.module||Object.create(null);const _toolsPath=__dirname+"/../../../../node_modules/Tools";const _toolsDir=__dirname+"/../../../../wtools";var ModuleExtension={toolsPathGet:function toolsPathGet(){return _toolsPath},toolsDirGet:function toolsDirGet(){return _toolsDir}};Object.assign(_.module,ModuleExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Number_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Number.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Number_s_naked(){!function _l1_Numbers_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return"number"==typeof src}function isNotNan(src){return _.number.is(src)&&!isNaN(src)}function numberIsFinite(src){return!!_.number.is(src)&&isFinite(src)}function isInfinite(src){return!!_.number.is(src)&&(Infinity===src||-Infinity===src)}function intIs(src){return!(!_.number.is(src)||!_.number.isFinite(src))&&Math.floor(src)===src}function areAll(src){if(_.assert(1===arguments.length),_.bufferTypedIs(src))return true;if(_.argumentsArray.like(src)&&!_.arrayIsEmpty(src)){for(let s=0;s<src.length;s++)if(!_.number.is(src[s]))return false;return true}return false}function areFinite(src){if(_.assert(1===arguments.length,"Expects exactly one argument"),!_.number.s.areAll(src))return false;if(_.longIs(src))for(let s=0;s<src.length;s++)if(!_.number.isFinite(src[s]))return false;return true}function arePositive(src){if(_.assert(1===arguments.length,"Expects exactly one argument"),!_.number.s.areAll(src))return false;if(_.longIs(src))for(let s=0;s<src.length;s++)if(src[s]<0||!_.number.isNotNan(src[s]))return false;return true}function areInt(src){if(_.assert(1===arguments.length,"Expects exactly one argument"),!_.number.s.areAll(src))return false;if(_.longIs(src))for(let s=0;s<src.length;s++)if(!_.intIs(src[s]))return false;return true}_.number=_.number||Object.create(null),_.numbers=_.number.s=_.numbers||_.number.s||Object.create(null);let NumberExtension={is:is,like:function like(src){return _.number.is(src)||_.bigInt.is(src)},isNotNan:isNotNan,isFinite:numberIsFinite,defined:numberIsFinite,isInfinite:isInfinite,intIs:intIs};Object.assign(_.number,NumberExtension);let NumbersExtension={areAll:areAll,areFinite:areFinite,arePositive:arePositive,areInt:areInt};Object.assign(_.numbers,NumbersExtension);let ToolsExtension={numberIs:is,numberIsNotNan:isNotNan,numberIsFinite:numberIsFinite,numberDefined:numberIsFinite,numberIsInfinite:isInfinite,intIs:intIs,numbersAreAll:areAll,numbersAreFinite:areFinite,numbersArePositive:arePositive,numbersAreInt:areInt};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Object_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Object.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Object_s_naked(){!function _l1_Object_s_(){"use strict";_global_;const _=_global_.wTools;function isBasic(src){return"[object Object]"===Object.prototype.toString.call(src)}function is(src){return"[object Object]"===Object.prototype.toString.call(src)||!_.primitive.is(src)&&!_.long.is(src)&&!_.set.is(src)&&!_.hashMap.is(src)&&!_.routine.isTrivial(src)}function like(src){return _.object.is(src)}function likeStandard(src){return!(_.primitive.is(src)||_.vector.is(src)||_.routine.isTrivial(src)||_.set.is(src)||_.hashMap.is(src)||!_.date.is(src)&&!_.regexpIs(src)&&!_.bufferAnyIs(src))}function isEmpty(src){return!!this.like(src)&&0===this.keys(src).length}function isPopulated(src){return!!this.like(src)&&this.keys(src).length>0}function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length&&_.assert(this.like(src)),this._makeEmpty(src)}function makeUndefined(src,length){return _.assert(1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(this.like(src)),_.assert(_.number.is(length))):1===arguments.length&&_.assert(this.like(src)),this._makeUndefined(src)}function make(src,length){return _.assert(this.like(src)),_.assert(arguments.length>=1),_.assert(!_.aux.is(src)||1===arguments.length||2===arguments.length&&1===length),this._make(...arguments)}_.object=_.object||Object.create(null);let ToolsExtension={objectIs:is.bind(_.object),objectIsBasic:isBasic.bind(_.object),objectIsEmpty:isEmpty.bind(_.object),objectIsPopulated:isPopulated.bind(_.object),objectLike:like.bind(_.object),objectLikeStandard:likeStandard.bind(_.object),objectMakeEmpty:makeEmpty.bind(_.object),objectMakeUndefined:makeUndefined.bind(_.object),objectMake:make.bind(_.object),objectCloneShallow:_.props.cloneShallow.bind(_.object),objectFrom:_.props.from.bind(_.object)};Object.assign(_,ToolsExtension);let ObjectExtension={NamespaceName:"object",NamespaceNames:["object"],NamespaceQname:"wTools/object",MoreGeneralNamespaceName:"props",MostGeneralNamespaceName:"props",TypeName:"Object",TypeNames:["Object"],InstanceConstructor:null,tools:_,is:is,isBasic:isBasic,like:like,likeStandard:likeStandard,isEmpty:isEmpty,isPopulated:isPopulated,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:function _makeEmpty(src){if(src){let method=_.class.methodMakeEmptyOf(src);if(method)return method.call(src)}return new src.constructor},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src){if(src){let method=_.class.methodMakeUndefinedOf(src);if(method)return method.call(src)}return new src.constructor},makeUndefined:makeUndefined,_make:function _make(src,length){return 1===arguments.length||2===arguments.length&&1===length?this._cloneShallow(src):_.aux.is(src)?_.aux._cloneShallow(src):2===arguments.length?new src.constructor(length):new src.constructor(src)},make:make,_cloneShallow:function _cloneShallow(src){let method=_.class.methodCloneShallowOf(src);return method?method.call(src):_.aux.is(src)?_.aux._cloneShallow(src):new src.constructor(src)},cloneShallow:_.props.cloneShallow,from:_.props.from,_keys:_.props._keys,keys:_.props.keys,onlyOwnKeys:_.props.onlyOwnKeys,onlyEnumerableKeys:_.props.onlyEnumerableKeys,allKeys:_.props.allKeys,_vals:_.props._vals,vals:_.props.vals,onlyOwnVals:_.props.onlyOwnVals,onlyEnumerableVals:_.props.onlyEnumerableVals,allVals:_.props.allVals,_pairs:_.props._pairs,pairs:_.props.pairs,onlyOwnPairs:_.props.onlyOwnPairs,onlyEnumerablePairs:_.props.onlyEnumerablePairs,allPairs:_.props.allPairs,_extendWithHashmap:_.props._extendWithHashmap,_extendWithSet:_.props._extendWithSet,_extendWithCountable:_.props._extendWithCountable,_extendWithProps:_.props._extendWithProps,_extendUniversal:_.props._extendUniversal,extendUniversal:_.props.extendUniversal,extend:_.props.extend,_supplementWithHashmap:_.props._supplementWithHashmap,_supplementWithSet:_.props._supplementWithSet,_supplementWithCountable:_.props._supplementWithCountable,_supplementWithProps:_.props._supplementWithProps,_supplementUniversal:_.props._supplementUniversal,supplementUniversal:_.props.supplementUniversal,supplement:_.props.supplement,namespaceOf:function namespaceOf(src){return _.object.is(src)?_.object:null},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.object,ObjectExtension)}()});module.exports,module.include,module.include}(),function Pair_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Pair.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Pair_s_naked(){!function _l1_Pair_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!_.longIs(src)&&2===src.length}class Pair{static[Symbol.hasInstance](instance){return is(instance)}}const Self=new Proxy(Pair,{construct(original,args){return Pair.make(...args)}});Self.original=Pair;var Extension={is:is,make:function make(src){let result;if(_.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length)result=new Array(...arguments);else if(1===arguments.length)if(_.routine.is(src))result=src===Array?new src(void 0,void 0):new src(2);else if(2===arguments[0].length)result=_.entity.cloneShallow(arguments[0]);else{if(0!==arguments[0].length)throw _.err("Length of pair should be 2");result=_.entity.makeUndefined(arguments[0],2)}else 0===arguments.length?result=new Array(void 0,void 0):_.assert(0,`Expects 0..2 arguments, but got ${arguments.length}`);return _.assert(this.is(result),"Faild to make a new Pair"),result}};Object.assign(Self,Extension),_.assert(void 0===_.pair),_.pair=Self}()});module.exports,module.include,module.include}(),function Path_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Path.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Path_s_naked(){!function _l1_Path_s_(){"use strict";_global_;const _=_global_.wTools;_.path=_.path||Object.create(null),Object.assign(_.path,{})}()});module.exports,module.include,module.include}(),function Primitive_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Primitive.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Primitive_s_naked(){!function _l1_Primitive_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){if(!src)return true;let t=Object.prototype.toString.call(src);return _.primitive._is(src,t)}function like(src){return _.primitive.is(src)}function _primitiveIs_functor(){const is=new Set;return is.add("[object Symbol]"),is.add("[object Number]"),is.add("[object BigInt]"),is.add("[object Boolean]"),is.add("[object String]"),function _primitiveIs(src,typeStr){return is.has(typeStr)}}_.primitive=_.primitive||Object.create(null);let _is=_primitiveIs_functor();_is.functor=_primitiveIs_functor;let PrimitiveExtension={NamespaceName:"primitive",NamespaceNames:["primitive"],NamespaceQname:"wTools/primitive",MoreGeneralNamespaceName:"primitive",MostGeneralNamespaceName:"primitive",TypeName:"Primitive",TypeNames:["Primitive"],InstanceConstructor:null,tools:_,is:is,_is:_is,like:like,_makeEmpty:_.blank._makeEmpty,makeEmpty:_.blank.makeEmpty,_makeUndefined:_.blank._makeUndefined,makeUndefined:_.blank.makeUndefined,_make:_.blank._make,make:_.blank.make,_cloneShallow:_.blank._cloneShallow,cloneShallow:_.blank.cloneShallow,from:_.blank.from,namespaceOf:function namespaceOf(src){debugger;return _.str.is(src)?_.str:_.number.is(src)?_.number:_.symbol.is(src)?_.symbol:null},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.primitive,PrimitiveExtension);let ToolsExtension={primitiveIs:is.bind(_.primitive),primitiveLike:like.bind(_.primitive)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Printer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Printer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Printer_s_naked(){!function _l1_Printer_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return _.assert(1===arguments.length,"Expects single argument"),!!src&&!_.routine.is(src)&&!!Object.getPrototypeOf(src)&&"Printer"===src.MetaType}function like(src){return _.assert(1===arguments.length,"Expects single argument"),!!_.printer.is(src)||!!_.consoleIs(src)||src===_global_.logger}_.printer=_.printer||Object.create(null);let ToolsExtension={printerIs:is,printerLike:like};let Extension={is:is,like:like};Object.assign(_.printer,Extension),Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Process_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Process.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Process_s_naked(){!function _l1_Process_s_(){"use strict";_global_;const _=_global_.wTools;_.process=_.process||Object.create(null),Object.assign(_.process,{})}()});module.exports,module.include,module.include}(),function PropertyTransformer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/PropertyTransformer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function PropertyTransformer_s_naked(){!function _l1_PropertyTransformer_s_(){"use strict";_global_;const _=_global_.wTools;_.props=_.props||Object.create(null),_.props.mapper=_.props.mapper||Object.create(null),_.props.condition=_.props.condition||Object.create(null),Object.assign(_.props,{})}()});module.exports,module.include,module.include}(),function Prototype_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Prototype.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Prototype_s_naked(){!function _l1_Prototype_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.prototype=_.prototype||Object.create(null);function has(superPrototype,subPrototype){return _.assert(2===arguments.length,"Expects two arguments"),_.prototype.isPrototypeFor(subPrototype,superPrototype)}function is(src){return _.assert(1===arguments.length,"Expects single argument"),!_.primitive.is(src)&&!_.routine.is(src)&&Object.hasOwnProperty.call(src,"constructor")}var Extension={of:function _of(object){return Object.getPrototypeOf(object)},each:function each(proto,onEach){let result=[];for(_.assert(_.routine.is(onEach)||!onEach),_.assert(!_.primitive.is(proto)||null===proto),_.assert(1===arguments.length||2===arguments.length);proto;)onEach&&onEach.call(this,proto),result.push(proto),proto=Object.getPrototypeOf(proto);return result},isPrototypeFor:function isPrototypeFor(superPrototype,subPrototype){return _.assert(2===arguments.length,"Expects two arguments, probably you meant routine prototypeOf"),!!superPrototype&&!!subPrototype&&(superPrototype===subPrototype||Object.isPrototypeOf.call(superPrototype,subPrototype))},havingProperty:function havingProperty(srcPrototype,name){_.assert(!_.primitive.is(srcPrototype)),_.assert(_.strIs(name));do{let has=true;if(Object.hasOwnProperty.call(srcPrototype,name)||(has=false),has)return srcPrototype;srcPrototype=Object.getPrototypeOf(srcPrototype)}while(srcPrototype!==Object.prototype&&srcPrototype);return null},hasPrototype:has,has:has,is:is,set:function set(dst,src){return Object.setPrototypeOf(dst,src),dst}};var ToolsExtension={prototypeIs:is};Object.assign(Self,Extension),Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Regexp_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Regexp.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Regexp_s_naked(){!function _l1_Regexp_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return"[object RegExp]"===Object.prototype.toString.call(src)}function objectIs(src){return!!_.RegexpObject&&src instanceof _.RegexpObject}function like(src){return src instanceof RegExp||"[object String]"===Object.prototype.toString.call(src)}function likeAll(src){if(_.assert(1===arguments.length),_.argumentsArray.like(src)){for(let s=0;s<src.length;s++)if(!_.regexp.like(src[s]))return false;return true}return _.regexp.like(src)}function escape(src){return _.assert(_.strIs(src)),_.assert(1===arguments.length,"Expects single argument"),src.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")}_.regexp=_.regexp||Object.create(null),_.regexps=_.regexp.s=_.regexps||_.regexp.s||Object.create(null);let ToolsExtension={regexpIs:is,regexpObjectIs:objectIs,regexpLike:like,regexpsLikeAll:likeAll,regexpEscape:escape};Object.assign(_,ToolsExtension);let RegexpExtension={is:is,isOld:function isOld(src){return"[object RegExp]"===Object.prototype.toString.call(src)},isUsingInstanceOf:function isUsingInstanceOf(src){return src instanceof RegExp},objectIs:objectIs,like:like,likeOld:function likeOld(src){return!(!_.regexp.is(src)&&!_.strIs(src))},likeUsingisUsingInstanceOf:function likeUsingisUsingInstanceOf(src){return!(!_.regexp.isUsingInstanceOf(src)&&!_.strIs(src))},likeUnfolded:function likeUnfolded(src){return src instanceof RegExp||"[object String]"===Object.prototype.toString.call(src)},escape:escape};Object.assign(_.regexp,RegexpExtension);let RegexpExtensions={likeAll:likeAll};Object.assign(_.regexp.s,RegexpExtensions)}()});module.exports,module.include,module.include}(),function Routine_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Routine.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Routine_s_naked(){!function _l1_Routine_s_(){"use strict";_global_;const _=_global_.wTools;function __mapButKeys(srcMap,butMap){let result=[];for(let s in srcMap)s in butMap||result.push(s);return result}function __mapUndefinedKeys(srcMap){let result=[];for(let s in srcMap)void 0===srcMap[s]&&result.push(s);return result}function __keysQuote(keys){let result=`"${keys[0]}"`;for(let i=1;i<keys.length;i++)result+=`, "${keys[i]}"`;return result.trim()}function __primitiveLike(src){return!!_.primitive.is(src)||!!_.regexpIs(src)||!!_.routineIs(src)}function __strType(src){return _.strType?_.strType(src):String(src)}function __mapSupplementWithoutUndefined(dstMap,srcMap){for(let k in srcMap)void 0===dstMap[k]&&(dstMap[k]=srcMap[k])}function __mapSupplementWithUndefined(dstMap,srcMap){for(let k in srcMap)Object.hasOwnProperty.call(dstMap,k)||(dstMap[k]=srcMap[k])}function __mapSupplementWithUndefinedTollerant(dstMap,srcMap){for(let k in srcMap)Object.hasOwnProperty.call(dstMap,k)||(dstMap[k]=srcMap[k])}function __arrayFlatten(src){let result=[];if(null===src)return result;if(_.argumentsArray.like(src))for(let i=0;i<src.length;i++){let e=src[i];_.array.is(e)||_.argumentsArray.is(e)?result.push(...e):result.push(e)}else result.push(src);return result}function is(src){let typeStr=Object.prototype.toString.call(src);return _.routine._is(src,typeStr)}function _is(src,typeStr){return"[object Function]"===typeStr||"[object AsyncFunction]"===typeStr}function like(src){let typeStr=Object.prototype.toString.call(src);return _.routine._like(src,typeStr)}function _like(src,typeStr){return"[object Function]"===typeStr||"[object AsyncFunction]"===typeStr||"[object GeneratorFunction]"===typeStr||"[object AsyncGeneratorFunction]"===typeStr}function routineIsTrivial_functor(){const syncPrototype=Object.getPrototypeOf(Function);const asyncPrototype=Object.getPrototypeOf(async function _async(){});return function routineIsTrivial(src){if(!src)return false;let prototype=Object.getPrototypeOf(src);return prototype===syncPrototype||prototype===asyncPrototype}}_.routine=_.routine||Object.create(null),_.routines=_.routine.s=_.routines||_.routine.s||Object.create(null),_.routine.chainer=_.routine.chainer||Object.create(null),_.routine.tail=_.routine.tail||Object.create(null),__mapSupplementWithoutUndefined.meta=Object.create(null),__mapSupplementWithoutUndefined.meta.locals={__primitiveLike:__primitiveLike,__strType:__strType},__mapSupplementWithUndefined.meta=Object.create(null),__mapSupplementWithUndefined.meta.locals={__primitiveLike:__primitiveLike,__strType:__strType},__mapSupplementWithUndefinedTollerant.meta=Object.create(null),__mapSupplementWithUndefinedTollerant.meta.locals={};let isTrivial=routineIsTrivial_functor();function isSync(src){return"[object Function]"===Object.prototype.toString.call(src)}function isAsync(src){return"[object AsyncFunction]"===Object.prototype.toString.call(src)}function isGenerator(src){let typeStr=Object.prototype.toString.call(src);return"[object GeneratorFunction]"===typeStr||"[object AsyncGeneratorFunction]"===typeStr}function isSyncGenerator(src){return"[object GeneratorFunction]"===Object.prototype.toString.call(src)}function isAsyncGenerator(src){return"[object AsyncGeneratorFunction]"===Object.prototype.toString.call(src)}function are(src){if(_.assert(1===arguments.length,"Expects single argument"),_.argumentsArray.like(src)){for(let s=0;s<src.length;s++)if(!_.routine.is(src[s]))return false;return true}return _.routine.is(src)}function withName(src){return!!_.routine.like(src)&&!!src.name}function _join(o){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.bool.is(o.sealing)),_.assert(_.bool.is(o.extending)),_.assert(_.routine.is(o.routine),"Expects routine"),_.assert(_.longIs(o.args)||void 0===o.args);let routine=o.routine;let args=o.args;let context=o.context;let result=function act(){if(void 0!==context&&void 0!==args){if(true===o.sealing){let name=routine.name||"__sealedContextAndArguments";return _.assert(_.strIs(name)),{[name]:function(){return routine.apply(context,args)}}[name]}{let a=[context];return a.push(...args),Function.prototype.bind.apply(routine,a)}}if(void 0!==context&&void 0===args){if(true===o.sealing){let name=routine.name||"__sealedContext";return{[name]:function(){return routine.call(context)}}[name]}return Function.prototype.bind.call(routine,context)}if(void 0===context&&void 0!==args){if(true===o.sealing){let name=routine.name||"__sealedArguments";return _.assert(_.strIs(name)),{[name]:function(){return routine.apply(this,args)}}[name]}{let name=routine.name||"__joinedArguments";return{[name]:function(){let args2=[...args,...arguments];return routine.apply(this,args2)}}[name]}}if(void 0===context&&void 0===args)return routine;_.assert(0)}();if(o.extending){_.props.extend(result,routine);let o2={value:routine,enumerable:false};if(Object.defineProperty(result,"originalRoutine",o2),void 0!==context){let o3={value:context,enumerable:false};Object.defineProperty(result,"boundContext",o3)}if(void 0!==args){let o3={value:args,enumerable:false};Object.defineProperty(result,"boundArguments",o3)}}return result}function constructorJoin(routine,args){return _.assert(1===arguments.length||2===arguments.length),_.routine._join({routine:routine,context:routine,args:args||[],sealing:false,extending:false})}function join(context,routine,args){return _.assert(arguments.length<=3,"Expects 3 or less arguments"),_.routine._join({routine:routine,context:context,args:args,sealing:false,extending:true})}function join(context,routine,args){return _.assert(arguments.length<=3,"Expects 3 or less arguments"),_.routine._join({routine:routine,context:context,args:args,sealing:false,extending:true})}function seal(context,routine,args){return _.assert(arguments.length<=3,"Expects 3 or less arguments"),_.routine._join({routine:routine,context:context,args:args,sealing:true,extending:true})}function optionsWithoutUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=0===options.length?Object.create(null):options[0]),null!==options&&void 0!==options||(options=Object.create(null)),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),__mapSupplementWithoutUndefined(options,defaults),options}function assertOptionsWithoutUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=options[0]),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),options}function optionsWithUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=0===options.length?Object.create(null):options[0]),null===options&&(options=Object.create(null)),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),__mapSupplementWithUndefined(options,defaults),options}function optionsWithUndefinedTollerant(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=0===options.length?Object.create(null):options[0]),null===options&&(options=Object.create(null)),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),__mapSupplementWithUndefinedTollerant(options,defaults),options}function assertOptionsWithUndefined(routine,options){_.argumentsArray.like(options)&&(_.assert(0===options.length||1===options.length,`Expects single options map, but got ${options.length} arguments`),options=options[0]),routine.name;let defaults=routine.defaults;return _.assert(_.aux.is(defaults),`Expects map of defaults, but got ${_.strType(defaults)}`),options}function _verifyDefaults(defaults){for(let k in defaults)_.assert(__primitiveLike(defaults[k]),()=>`Defaults map should have only primitive elements, but option::${k} is ${__strType(defaults[k])}`)}function _amend(o){let dst=o.dst;let srcs=o.srcs;let srcIsVector=_.vectorIs(srcs);let extended=false;let _dstAmend;if(_.routine.assertOptions(_amend,o),_.assert(1===arguments.length),_.assert(_.routine.is(dst)||null===dst),_.assert(null===srcs||void 0===srcs||_.aux.is(srcs)||_.routine.is(srcs)||_.vector.is(srcs)),_.assert("extending"===o.amending,"not implemented"),_.assert("cloning"===o.strategy||"replacing"===o.strategy||"inheriting"===o.strategy,()=>`Unknown strategy ${o.strategy}`),null===dst&&(dst=function _dstMake(srcs){let dstMap=Object.create(null);if(srcIsVector)for(let src of srcs)null!==src&&_.props.extend(dstMap,src);else null!==srcs&&_.props.extend(dstMap,srcs);return dst=dstMap.body?_.routine.unite({head:dstMap.head||null,body:dstMap.body||null,tail:dstMap.tail||null,name:dstMap.name||null,strategy:o.strategy}):function dstFrom(routine){return function routineClone(routine){_.assert(_.routine.is(routine));let name=routine.name;const routine2={[name]:function(){return routine.apply(this,arguments)}}[name];let o2={value:routine,enumerable:false};return Object.defineProperty(routine2,"originalRoutine",o2),routine2}(routine)}(srcIsVector?srcs[0]:srcs),_.assert(_.routineIs(dst)),dst}(srcs)),"cloning"===o.strategy?_dstAmend=function _dstAmendCloning(dst,src){_.assert(!!dst),_.assert(_.aux.is(src)||_.routine.is(src));for(let s in src){let property=src[s];if(dst[s]===property)continue;let d=Object.getOwnPropertyDescriptor(dst,s);d&&!d.writable||(extended=true,_.object.isBasic(property)?(_.assert(!_.props.own(dst,s)||_.object.isBasic(dst[s])),dst[s]?_.props.extend(dst[s],property):dst[s]=property=_.props.extend(null,property)):dst[s]=property)}}:"replacing"===o.strategy?_dstAmend=function _dstAmendReplacing(dst,src){_.assert(!!dst),_.assert(_.aux.is(src)||_.routine.is(src));for(let s in src){let property=src[s];if(dst[s]===property)continue;let d=Object.getOwnPropertyDescriptor(dst,s);d&&!d.writable||(extended=true,dst[s]=property)}}:"inheriting"===o.strategy?_dstAmend=function _dstAmendInheriting(dst,src){_.assert(!!dst),_.assert(_.aux.is(src)||_.routine.is(src));for(let s in src){let property=src[s];if(dst[s]===property)continue;let d=Object.getOwnPropertyDescriptor(dst,s);d&&!d.writable||(extended=true,_.object.isBasic(property)&&(property=Object.create(property),dst[s]&&_.props.supplement(property,dst[s])),dst[s]=property)}}:_.assert(0,"not implemented"),srcIsVector)for(let src of srcs)_dstAmend(dst,src);else _dstAmend(dst,srcs);return extended&&dst.body&&(dst.body=function bodyFrom(){const body=dst.body;let body2=body;_.assert(void 0===body.head,"Body should not have own head"),_.assert(void 0===body.tail,"Body should not have own tail"),_.assert(void 0===body.body,"Body should not have own body");{let srcs;(srcs=srcIsVector?o.srcs.map(src=>propertiesBut(src)):[propertiesBut(o.srcs)]).unshift(body),body2=_.routine._amend({dst:"replacing"===o.strategy?body2:null,srcs:srcs,strategy:o.strategy,amending:o.amending}),_.assert(void 0===body2.head,"Body should not have own head"),_.assert(void 0===body2.tail,"Body should not have own tail"),_.assert(void 0===body2.body,"Body should not have own body")}return body2}(dst.body)),dst;function propertiesBut(src){if(!src)return src;let result=_.props.extend(null,src);return delete result.head,delete result.body,delete result.taul,result}}function extendCloning(dst,...srcs){return _.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.routine._amend({dst:dst,srcs:[...srcs],strategy:"cloning",amending:"extending"})}function defaults(dst,src,defaults){return 2===arguments.length?(defaults=arguments[1],_.assert(_.aux.is(defaults)),_.routine.extend(dst,{defaults:defaults})):(_.assert(3===arguments.length),_.assert(_.aux.is(defaults)),_.routine.extend(dst,src,{defaults:defaults}))}function unite_head(routine,args){let o=args[0];return void 0!==args[1]&&(o=3===args.length?{head:args[0],body:args[1],tail:args[2]}:{head:args[0],body:args.length>1?args[1]:null}),_.routine.optionsWithoutUndefined(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length),_.assert(null===o.head||_.numberIs(o.head)||_.routine.is(o.head)||_.routine.s.are(o.head),"Expects either routine, routines or number of arguments {-o.head-}"),_.assert(_.routine.is(o.body),"Expects routine {-o.body-}"),_.assert(null===o.tail||_.routine.is(o.tail),()=>`Expects routine {-o.tail-}, but got ${_.entity.strType(o.tail)}`),_.assert(void 0!==o.body.defaults,"Body should have defaults"),o}function unite_body(o){if(_.longIs(o.head)){let _head=_.routine.s.compose(o.head,function(){arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(4===arguments.length),_.assert(!_.unrollIs(result)),_.assert(_.object.isBasic(result)),_.unroll.from([unitedRoutine,[result]])});_.assert(_.routine.is(_head)),o.head=function head(){let result=_head.apply(this,arguments);return result[result.length-1]},o.head.composed=_head.composed}else _.number.is(o.head)&&(o.head=function headWithNargs_functor(nargs,body){return _.assert(!!o.body.defaults),function headWithDefaults(routine,args){_.assert(args.length<=nargs+1),_.assert(2===arguments.length);let o=_.routine.options(routine,args[nargs]||Object.create(null));return _.unroll.from([...Array.prototype.slice.call(args,0,nargs),o])}}(o.head,o.body));let body;null===o.head&&(o.body.defaults?o.head=function headWithDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),_.routine.options(routine,o||Object.create(null))}:o.head=function headWithoutDefaults(routine,args){let o=args[0];return _.assert(2===arguments.length),_.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),_.assert(0===args.length||void 0===o||null===o||_.auxIs(o)),o||null}),o.name||(_.assert(_.strDefined(o.body.name),"Body routine should have name"),o.name=o.body.name,o.name.indexOf("_body")===o.name.length-5&&o.name.length>5&&(o.name=o.name.substring(0,o.name.length-5))),body="replacing"===o.strategy?o.body:_.routine._amend({dst:null,srcs:o.body,strategy:o.strategy,amending:"extending"});let unitedRoutine=function _unite_functor(){const name=arguments[0];const head=arguments[1];const body=arguments[2];const tail=arguments[3];let r;return _.assert(null===head||_.routineIs(head)),_.assert(null===body||_.routineIs(body)),_.assert(null===tail||_.routineIs(tail)),(r=null===tail?{[name]:function(){let o=head.call(this,unitedRoutine,arguments);return _.assert(!_.argumentsArray.is(o),"does not expect arguments array"),_.unrollIs(o)?body.apply(this,o):body.call(this,o)}}:null===head?{[name]:function(){let result;let o=arguments[0];return _.assert(1===arguments.length,"Expects single argument {-o-}."),_.unrollIs(o)?result=body.apply(this,o):_.mapIs(o)?result=body.call(this,o):_.assert(0,"Unexpected type of {-o-}, expects options map or unroll."),tail.call(this,result,o)}}:{[name]:function(){let result;let o=head.call(this,unitedRoutine,arguments);_.assert(!_.argumentsArray.is(o),"does not expect arguments array"),result=_.unrollIs(o)?body.apply(this,o):body.call(this,o);debugger;return tail.call(this,result,o)}})[name]}(o.name,o.head,body,o.tail);return _.assert(_.strDefined(unitedRoutine.name),"Looks like your interpreter does not support dynamic naming of functions. Please use ES2015 or later interpreter."),_.routine._amend({dst:unitedRoutine,srcs:body,strategy:"replacing",amending:"extending"}),unitedRoutine.head=o.head,unitedRoutine.body=body,o.tail&&(unitedRoutine.tail=o.tail),_.assert(unitedRoutine.defaults===body.defaults,"Something wrong, united routined should have same instance of defaults its body has"),unitedRoutine}function uniteCloning(){let o=uniteCloning.head.call(this,uniteCloning,arguments);return uniteCloning.body.call(this,o)}function uniteInheriting(){let o=uniteInheriting.head.call(this,uniteInheriting,arguments);return uniteInheriting.body.call(this,o)}function uniteReplacing(){let o=uniteReplacing.head.call(this,uniteReplacing,arguments);return uniteReplacing.body.call(this,o)}function _compose_old_head(routine,args){let o=args[0];return _.mapIs(o)||(o={bodies:args[0]}),void 0!==args[1]&&(o.chainer=args[1]),o.bodies=__arrayFlatten(o.bodies),o.bodies=o.bodies.filter(e=>null!==e),_.routine.options(routine,o),_.assert(_.routine.s.are(o.bodies)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length||2===args.length),_.assert(1===args.length||!_.object.isBasic(args[0])),_.assert(_.arrayIs(o.bodies)||_.routine.is(o.bodies)),_.assert(_.routine.is(args[1])||void 0===args[1]||null===args[1]),_.assert(null===o.chainer||_.routine.is(o.chainer)),_.assert(null===o.tail||_.routine.is(o.tail)),o}function _compose_old_body(o){null===o.chainer&&(o.chainer=_.routine.chainer.default);let bodies=[];for(let s=0;s<o.bodies.length;s++){let src=o.bodies[s];_.assert(_.routine.is(src)),src.composed?src.composed.chainer===o.chainer&&src.composed.tail===o.tail?bodies.push(...src.composed.elements):bodies.push(...src):bodies.push(src)}o.bodies=bodies;let tail=o.tail;let chainer=o.chainer;let act;return _.assert(_.routine.is(chainer)),_.assert(null===tail||_.routine.is(tail)),act=0===bodies.length?function empty(){return[]}:function composition(){let result=[];let args=_.unroll.from(arguments);for(let k=0;k<bodies.length;k++){let r=bodies[k].apply(this,args);if(_.assert(!_.argumentsArray.is(r)),void 0!==r&&_.unrollAppend(result,r),args=chainer(args,r,o,k),_.assert(void 0!==args&&false!==args),args===_.dont)break;args=_.unroll.from(args)}return result},o.act=act,act.composed=o,tail?(_.routine.extend(compositionSupervise,act),compositionSupervise):act;function compositionSupervise(){return tail.call(this,arguments,o)}}function compose_old(){let o=_.routine.s.compose_old.head(compose_old,arguments);return _.routine.s.compose_old.body(o)}function _compose_head(routine,args){let o=args[0];return _.mapIs(o)||(o={bodies:args[0]}),void 0!==args[1]&&(o.chainer=args[1]),o.bodies=__arrayFlatten(o.bodies),o.bodies=o.bodies.filter(e=>null!==e),_.routine.options(routine,o),_.assert(_.routine.s.are(o.bodies)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length||2===args.length),_.assert(1===args.length||!_.object.isBasic(args[0])),_.assert(_.arrayIs(o.bodies)||_.routine.is(o.bodies)),_.assert(_.routine.is(args[1])||void 0===args[1]||null===args[1]),_.assert(null===o.chainer||_.routine.is(o.chainer)),_.assert(null===o.tail||_.routine.is(o.tail)),o}function _compose_body(o){null===o.chainer&&(o.chainer=_.routine.chainer.default);let bodies=[];for(let s=0;s<o.bodies.length;s++){let body=o.bodies[s];_.assert(_.routine.is(body)),body.composed?body.composed.chainer===o.chainer&&body.composed.tail===o.tail?bodies.push(...body.composed.elements):bodies.push(...body):bodies.push(body)}o.bodies=bodies;let tail=o.tail;let chainer=o.chainer;return _.assert(_.routine.is(chainer)),_.assert(null===tail||_.routine.is(tail)),0===bodies.length?o.act=function compositionEmpty(){return[]}:1===bodies.length?o.act=function compositionOfSingle(){let result=[];let args=_.unroll.from(arguments);let r=bodies[0].apply(this,args);return _.assert(!_.argumentsArray.is(r)),void 0!==r&&_.unrollAppend(result,r),result}:o.act=function composition(){let result=[];let args=_.unroll.from(arguments);for(let k=0;k<bodies.length;k++){let r=bodies[k].apply(this,args);if(_.assert(!_.argumentsArray.is(r)),void 0!==r&&_.unrollAppend(result,r),(args=chainer(args,r,o,k))===_.dont)break;_.assert(_.unroll.is(args))}return result},o.act.composed=o,tail?(_.routine.extendReplacing(routineWithTail,o.act),routineWithTail):o.act;function routineWithTail(){return tail.call(this,arguments,o)}}function compose(){let o=_.routine.s.compose.head(compose,arguments);return _.routine.s.compose.body(o)}isTrivial.functor=routineIsTrivial_functor,optionsWithoutUndefined.meta=Object.create(null),optionsWithoutUndefined.meta.locals={__mapButKeys:__mapButKeys,__mapUndefinedKeys:__mapUndefinedKeys,__keysQuote:__keysQuote,__mapSupplementWithoutUndefined:__mapSupplementWithoutUndefined},assertOptionsWithoutUndefined.meta=Object.create(null),assertOptionsWithoutUndefined.meta.locals={__mapButKeys:__mapButKeys,__mapUndefinedKeys:__mapUndefinedKeys,__keysQuote:__keysQuote,__primitiveLike:__primitiveLike,__strType:__strType},optionsWithUndefined.meta=Object.create(null),optionsWithUndefined.meta.locals={__keysQuote:__keysQuote,__mapSupplementWithUndefined:__mapSupplementWithUndefined},optionsWithUndefinedTollerant.meta=Object.create(null),optionsWithUndefinedTollerant.meta.locals={__keysQuote:__keysQuote,__mapSupplementWithUndefinedTollerant:__mapSupplementWithUndefinedTollerant},assertOptionsWithUndefined.meta=Object.create(null),assertOptionsWithUndefined.meta.locals={__keysQuote:__keysQuote,__primitiveLike:__primitiveLike,__strType:__strType},_verifyDefaults.meta=Object.create(null),_verifyDefaults.meta.locals={__primitiveLike:__primitiveLike,__strType:__strType},_amend.defaults={dst:null,srcs:null,strategy:"cloning",amending:"extending"},unite_body.defaults={head:null,body:null,tail:null,name:null,strategy:null},uniteCloning.head=unite_head,uniteCloning.body=unite_body,uniteCloning.defaults={...unite_body.defaults,strategy:"cloning"},uniteInheriting.head=unite_head,uniteInheriting.body=unite_body,uniteInheriting.defaults={...unite_body.defaults,strategy:"inheriting"},uniteReplacing.head=unite_head,uniteReplacing.body=unite_body,uniteReplacing.defaults={...unite_body.defaults,strategy:"replacing"},_compose_old_head.locals={__arrayFlatten:__arrayFlatten},_compose_old_body.defaults={bodies:null,chainer:null,tail:null},compose_old.head=_compose_old_head,compose_old.body=_compose_old_body,compose_old.defaults=Object.assign(Object.create(null),compose_old.body.defaults),_compose_head.locals={__arrayFlatten:__arrayFlatten},_compose_body.defaults={chainer:null,bodies:null,tail:null},compose.head=_compose_head,compose.body=_compose_body,compose.defaults=_compose_body.defaults;let ChainerExtension={default:function defaultChainer(){let args=arguments[0];let result=arguments[1];return arguments[2],arguments[3],result===_.dont?result:args}};Object.assign(_.routine.chainer,ChainerExtension);let RoutineExtension={NamespaceName:"routine",NamespaceNames:["routine"],NamespaceQname:"wTools/routine",TypeName:"Routine",TypeNames:["Routine","Function"],InstanceConstructor:null,tools:_,is:is,_is:_is,like:like,_like:_like,isTrivial:isTrivial,isSync:isSync,isAsync:isAsync,isGenerator:isGenerator,isSyncGenerator:isSyncGenerator,isAsyncGenerator:isAsyncGenerator,withName:withName,_join:_join,constructorJoin:constructorJoin,join:join,seal:seal,optionsWithoutUndefined:optionsWithoutUndefined,assertOptionsWithoutUndefined:assertOptionsWithoutUndefined,optionsWithUndefined:optionsWithUndefined,optionsWithUndefinedTollerant:optionsWithUndefinedTollerant,assertOptionsWithUndefined:assertOptionsWithUndefined,options:optionsWithUndefined,assertOptions:assertOptionsWithUndefined,options_:optionsWithUndefined,optionsTollerant:optionsWithUndefinedTollerant,assertOptions_:assertOptionsWithUndefined,_verifyDefaults:_verifyDefaults,_amend:_amend,extend:extendCloning,extendCloning:extendCloning,extendInheriting:function extendInheriting(dst,...srcs){return _.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.routine._amend({dst:dst,srcs:[...srcs],strategy:"inheriting",amending:"extending"})},extendReplacing:function extendReplacing(dst,...srcs){return _.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.routine._amend({dst:dst,srcs:[...srcs],strategy:"replacing",amending:"extending"})},defaults:defaults,unite:uniteReplacing,uniteCloning:uniteCloning,uniteCloning_replaceByUnite:uniteCloning,uniteInheriting:uniteInheriting,uniteReplacing:uniteReplacing};Object.assign(_.routine,RoutineExtension);let RoutinesExtension={are:are,compose_old:compose_old,compose:compose};Object.assign(_.routines,RoutinesExtension);let ToolsExtension={routineIs:is.bind(_.routine),_routineIs:_is.bind(_.routine),routineLike:like.bind(_.routine),_routineLike:_like.bind(_.routine),routineIsTrivial:isTrivial.bind(_.routine),routineIsSync:isSync.bind(_.routine),routineIsAsync:isAsync.bind(_.routine),routinesAre:are.bind(_.routine),routineWithName:withName.bind(_.routine),routineIsGenerator:isGenerator.bind(_.routine),routineIsSyncGenerator:isSyncGenerator.bind(_.routine),routineIsAsyncGenerator:isAsyncGenerator.bind(_.routine),_routineJoin:_join.bind(_.routine),constructorJoin:constructorJoin.bind(_.routine),routineJoin:join.bind(_.routine),routineSeal:seal.bind(_.routine),routineExtend:extendCloning.bind(_.routine),routineDefaults:defaults.bind(_.routine),routinesCompose:compose.bind(_.routines)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Seeker_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Seeker.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Seeker_s_naked(){!function _l1_Seeker_s_(){"use strict";_global_;const _=_global_.wTools;_.seeker=_.seeker||Object.create(null),Object.assign(_.seeker,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Set_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Set.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Set_s_naked(){!function _l1_Set_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!src&&(src instanceof Set||src instanceof WeakSet)}function like(src){return _.set.is(src)}function isEmpty(){return!src.size}function isPopulated(){return!!src.size}function makeEmpty(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length&&_.assert(this.like(src)),this._makeEmpty(src)}function makeUndefined(src,length){return _.assert(0===arguments.length||1===arguments.length||2===arguments.length),2===arguments.length?(_.assert(this.like(src)),_.assert(_.number.is(length))):1===arguments.length&&_.assert(_.number.is(src)||this.like(src)),new Set}function make(src,length){return _.assert(0===arguments.length||null===src||_.countable.is(src)||0===src),_.assert(arguments.length<2||0===length),_.assert(arguments.length<=2),this._make(...arguments)}function cloneShallow(src){return _.assert(_.countable.is(src)),_.assert(1===arguments.length),this._cloneShallow(src)}function from(src){return _.assert(1===arguments.length,"Expects single argument"),this.is(src)?src:(_.containerAdapter.is(src)&&(src=src.toArray().original),this.make(src))}function as(src){return _.assert(void 0!==src),null===src?new Set:_.set.is(src)?src:_.countable.like(src)?new Set([...src]):new Set([src])}_.set=_.set||Object.create(null),_.sets=_.set.s=_.sets||_.set.s||Object.create(null);let SetExtension={NamespaceName:"set",NamespaceNames:["set"],NamespaceQname:"wTools/set",MoreGeneralNamespaceName:"set",MostGeneralNamespaceName:"countable",TypeName:"Set",TypeNames:["Set"],InstanceConstructor:Set,tools:_,is:is,like:like,isEmpty:isEmpty,isPopulated:isPopulated,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:function _makeEmpty(src){return new Set},makeEmpty:makeEmpty,_makeUndefined:function _makeUndefined(src,length){return new Set},makeUndefined:makeUndefined,_make:function _make(src,length){return 0===length?new Set:_.number.is(src)?new Set:new Set([...src])},make:make,_cloneShallow:function _cloneShallow(src){return new Set([...src])},cloneShallow:cloneShallow,from:from,as:as,_keys:function _keys(src){return[...src.keys()]},keys:function keys(src){return _.assert(this.like(src)),this._keys(src)},_vals:function _vals(src){return[...src.values()]},vals:function vals(src){return _.assert(this.like(src)),this._vals(src)},_pairs:function _pairs(src){return[...src.entries()]},pairs:function pairs(src){return _.assert(this.like(src)),this._pairs(src)},namespaceOf:_.blank.namespaceOf,namespaceWithDefaultOf:_.blank.namespaceWithDefaultOf,_functor_functor:_.blank._functor_functor};Object.assign(_.set,SetExtension);let ToolsExtension={setIs:is.bind(_.set),setIsEmpty:isEmpty.bind(_.set),setIsPopulated:isPopulated.bind(_.set),setLike:like.bind(_.set),setMakeEmpty:makeEmpty.bind(_.set),setMakeUndefined:makeUndefined.bind(_.set),setMake:make.bind(_.set),setCloneShallow:cloneShallow.bind(_.set),setFrom:from.bind(_.set),setAs:as.bind(_.set)};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Sorted_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Sorted.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Sorted_s_naked(){!function _l1_Sorted_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.sorted=_.sorted||Object.create(null);Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Str_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Str.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Str_s_naked(){!function _l1_Str_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return"[object String]"===Object.prototype.toString.call(src)}function defined(src){return!!src&&"[object String]"===Object.prototype.toString.call(src)}function has(src,ins){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),()=>`Expects string, got ${_.entity.strType(src)}`),_.assert(_.regexpLike(ins),()=>`Expects string-like, got ${_.entity.strType(ins)}`),_.strIs(ins)?-1!==src.indexOf(ins):ins.test(src)}function short_(o){2===arguments.length?o={src:arguments[0],widthLimit:arguments[1]}:1===arguments.length&&_.strIs(o)&&(o={src:arguments[0]}),_.routine.options(short_,o),_.assert(_.strIs(o.src)),_.assert(_.number.is(o.widthLimit)),_.assert(o.widthLimit>=0,"Option::o.widthLimit must be greater or equal to zero"),_.assert(_.number.is(o.heightLimit)&&o.heightLimit>=0,"If provided option::o.heightLimit must be greater or equal to zero"),_.assert(null===o.delimeter||_.strIs(o.delimeter)||_.bool.likeTrue(o.delimeter)),_.assert(1===arguments.length||2===arguments.length),o.delimeter||(o.delimeter=""),o.heightDelimeter||(o.heightDelimeter=""),0===o.widthLimit&&(o.widthLimit=Infinity),0===o.heightLimit&&(o.heightLimit=Infinity),_.bool.likeTrue(o.delimeter)&&(o.delimeter="..."),o.onLength||(o.onLength=(src=>src.length));let src=o.src;let isOneLine=-1===o.src.indexOf("\n");if(isOneLine&&o.onLength(o.src)<o.widthLimit)return o.changed=false,o.result=o.src,o;let options=Object.create(null);if(options.limit=o.widthLimit,options.delimeter=o.delimeter,options.onLength=o.onLength,options.cutting=o.cutting,isOneLine)return options.src=src,_.strShortWidth(options),o.result=options.result,o.changed=options.changed,o;{let splitted=o.src.split("\n");let options2=Object.create(null);options2.src=splitted,options2.limit=o.heightLimit,options2.delimeter=o.heightDelimeter,options2.cutting=o.heightCutting,_._strShortHeight(options2),options.src=options2.result,_._strShortWidth(options);let result=options.result.join("\n");return result===o.src?o.changed=false:result!==o.src&&(o.changed=true),o.result=result,o}}function shortWidth(o){2===arguments.length?o={src:arguments[0],limit:arguments[1]}:1===arguments.length&&_.strIs(o)&&(o={src:arguments[0]}),_.routine.options(shortWidth,o),_.assert(_.strIs(o.src)),_.assert(_.number.is(o.limit)),_.assert(o.limit>=0,"Option::o.limit must be greater or equal to zero"),_.assert(null===o.delimeter||_.strIs(o.delimeter)||_.bool.likeTrue(o.delimeter)),_.assert(1===arguments.length||2===arguments.length);let originalSrc=o.src;o.delimeter||(o.delimeter=""),0===o.limit&&(o.limit=Infinity),_.bool.likeTrue(o.delimeter)&&(o.delimeter="..."),o.onLength||(o.onLength=(src=>src.length));let splitted=o.src.split("\n");return o.src=splitted,_._strShortWidth(o),o.src=originalSrc,o.result=o.result.join("\n"),o}function _shortWidth(o){_.assert(_.arrayIs(o.src)),_.routine.options(_shortWidth,o);let begin="";let end="";let fixLength=o.onLength(o.delimeter);o.changed=false;let result=o.src.map(el=>{let delimeter=o.delimeter;if((fixLength=o.onLength(o.delimeter))===o.limit)return o.changed=true,o.delimeter;if(o.onLength(el)+fixLength<=o.limit)return el;if(o.onLength(delimeter)>o.limit&&(el=delimeter,
delimeter="",fixLength=0),o.changed=true,"left"===o.cutting)return delimeter+function cutLeft(src){let startIndex=0;let endIndex=src.length-1;let endLength=o.onLength(src);let middleIndex=src.length-o.limit-1;for(;endLength+fixLength>o.limit;)[begin,end]=splitInTwo(src,middleIndex+1),endLength=o.onLength(end),startIndex=middleIndex,middleIndex=Math.floor((startIndex+endIndex)/2);for(;o.onLength(end)+fixLength<=o.limit;)end=begin[begin.length-1]+end,begin=begin.slice(0,-1);return end.slice(1)}(el);if("right"===o.cutting)return function cutRight(src){let endIndex=src.length-1;let beginLength=o.onLength(src);let middleIndex=o.limit;for(;beginLength+fixLength>o.limit;)[begin,end]=splitInTwo(src,middleIndex),beginLength=o.onLength(begin),endIndex=middleIndex,middleIndex=Math.floor((0+endIndex)/2);for(;o.onLength(begin)+fixLength<=o.limit;)begin+=end[0],end=end.slice(1);return begin.slice(0,-1)}(el)+delimeter;{let[begin,end]=function cutMiddle(src){let originalStr=src;let chunkSize,middleIndexLeft,middleIndexRight;for(o.limit%2==0?(middleIndexLeft=o.limit/2-1,middleIndexRight=-o.limit/2+src.length):(middleIndexLeft=Math.floor(o.limit/2),middleIndexRight=Math.ceil(-o.limit/2)+src.length);o.onLength(src)+fixLength>o.limit;){if(src.length<=5){let index=Math.floor(src.length/2);begin=src.slice(0,index),end=src.slice(index+1)}else begin=src.slice(0,middleIndexLeft+1),end=src.slice(middleIndexRight);src=begin+end,middleIndexLeft=chunkSize=Math.floor(src.length/3),middleIndexRight=2*chunkSize}for(;o.onLength(begin+end)+fixLength<o.limit;)o.onLength(begin)>o.onLength(end)?end=originalStr.slice(-end.length-1):begin=originalStr.slice(0,begin.length+1);let beginInitial=o.onLength(begin);let endInitial=o.onLength(end);for(;o.onLength(begin)===beginInitial;)begin=originalStr.slice(0,begin.length+1);for(;o.onLength(end)===endInitial;)end=originalStr.slice(-end.length-1);return[begin.slice(0,-1),end.slice(1)]}(el);return begin+delimeter+end}});return o.result=result,o;function splitInTwo(src,middle){return[src.slice(0,middle),src.slice(middle)]}}function shortHeight(o){2===arguments.length?o={src:arguments[0],limit:arguments[1]}:1===arguments.length&&_.strIs(o)&&(o={src:arguments[0]}),_.routine.options(shortHeight,o),_.assert(_.strIs(o.src)),_.assert(_.number.is(o.limit)&&o.limit>=0,"option::o.limit must be greater or equal to zero"),_.assert(1===arguments.length||2===arguments.length);let originalSrc=o.src;let splitted=o.src.split("\n");return o.delimeter||(o.delimeter=""),o.src=splitted,_._strShortHeight(o),o.src=originalSrc,o.result=o.result.join("\n"),o}function _shortHeight(o){_.assert(_.arrayIs(o.src)),_.routine.options(shortHeight,o),o.changed=false;let delimeterLength=""===o.delimeter?0:1;if(delimeterLength===o.limit)return o.changed=true,o.result=[o.delimeter],o;let result=function cut(src){if(src.length+delimeterLength>o.limit)if(o.changed=true,"left"===o.cutting)src=src.slice(-(o.limit-delimeterLength)),""!==o.delimeter&&src.unshift(o.delimeter);else if("right"===o.cutting)src=src.slice(0,o.limit-delimeterLength),""!==o.delimeter&&src.push(o.delimeter);else{let[left,right]=function handleHeightCuttingCenter(src){let indexLeft,indexRight;let limit=o.limit-delimeterLength;if(1===limit)return[src.slice(0,1)];return limit%2==0?indexRight=-(indexLeft=limit/2):indexRight=1-(indexLeft=Math.floor(limit/2)+1),[src.slice(0,indexLeft),src.slice(indexRight)]}(src);let result=[];result.push(...left),""!==o.delimeter&&result.push(o.delimeter),void 0!==right&&result.push(...right),src=result}return src}(o.src.slice());return o.result=result,o}function concat(srcs,o){o=_.routine.options(concat,o||Object.create(null)),_.assert(1===arguments.length||2===arguments.length),_.assert(this.strConcat===concat),null===o.onToStr&&(o.onToStr=function onToStr(src,op){return _.entity.exportString(src,op.optionsForToStr)}),o.optionsForToStr=_.props.supplement(o.optionsForToStr,{stringWrapper:""}),o.optionsForToStr.format=o.optionsForToStr.format||"string.diagnostic",_.routine.is(srcs)&&(srcs=srcs()),_.argumentsArray.like(srcs)||(srcs=[srcs]);let result="";if(!srcs.length)return result;let concatenatePairWithLineDelimeter=o.onPairWithDelimeter?o.onPairWithDelimeter:function concatenateSimple(src1,src2){return src1+src2};let a=0;for(;!result&&a<srcs.length;)result=o.onToStr(srcs[a],o),++a;for(;a<srcs.length;a++){let src=srcs[a];src=o.onToStr(src,o),result=result.replace(/[^\S\n]\s*$/,""),result=_.strEnds(result,o.lineDelimter)||_.strBegins(src,o.lineDelimter)?concatenatePairWithLineDelimeter(result,src,o):`${result} ${src.replace(/^\s+/,"")}`}return(o.linePrefix||o.linePostfix)&&(result=result.split(o.lineDelimter),result=o.linePrefix+result.join(o.linePostfix+o.lineDelimter+o.linePrefix)+o.linePostfix),result}function _beginOf(src,begin){if(_.strIs(begin)){if(0===src.lastIndexOf(begin,0))return begin}else if(_.regexpIs(begin)){let matched=begin.exec(src);if(matched&&0===matched.index)return matched[0]}else _.assert(0,"Expects string-like ( string or regexp )")}function _endOf(src,end){if(_.strIs(end)){if(-1!==src.indexOf(end,src.length-end.length))return end}else if(_.regexpIs(end)){let matched=RegExp(end.toString().slice(1,-1)+"$").exec(src);if(matched&&matched.index+matched[0].length===src.length)return matched[0]}else _.assert(0,"Expects string-like ( string or regexp )")}function begins(src,begin){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(begin)||_.regexpIs(begin)||_.longIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(begin))return!(void 0===_._strBeginOf(src,begin));for(let b=0,blen=begin.length;b<blen;b++)if(void 0!==_._strBeginOf(src,begin[b]))return true;return false}function ends(src,end){if(_.assert(_.strIs(src),()=>`Expects argument::src of type::string, but got ${_.entity.strType(src)}`),_.assert(_.strIs(end)||_.regexpIs(end)||_.longIs(end),"Expects string/regexp or array of strings/regexps {-end-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(end))return!(void 0===_._strEndOf(src,end));for(let b=0,blen=end.length;b<blen;b++)if(void 0!==_._strEndOf(src,end[b]))return true;return false}function beginOf(src,begin){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(begin)||_.regexpIs(begin)||_.longIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(begin))return _._strBeginOf(src,begin);for(let b=0,blen=begin.length;b<blen;b++){let result=_._strBeginOf(src,begin[b]);if(void 0!==result)return result}}function endOf(src,end){if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(end)||_.regexpIs(end)||_.longIs(end),"Expects string/regexp or array of strings/regexps {-end-}"),_.assert(2===arguments.length,"Expects exactly two arguments"),!_.longIs(end))return _._strEndOf(src,end);for(let b=0,blen=end.length;b<blen;b++){let result=_._strEndOf(src,end[b]);if(void 0!==result)return result}}function removeBegin(src,begin){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(begin)||_.regexpIs(begin),"Expects string/regexp {-begin-}");let result=src;let beginOf=_._strBeginOf(result,begin);return void 0!==beginOf&&(result=result.substr(beginOf.length,result.length)),result}function removeEnd(src,end){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(_.strIs(end)||_.regexpIs(end),"Expects string/regexp {-end-}");let result=src;let endOf=_._strEndOf(result,end);return void 0!==endOf&&(result=result.substr(0,result.length-endOf.length)),result}function remove(srcStr,insStr){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(srcStr),"Expects string {-src-}"),_.assert(_.strIs(insStr)||_.regexpIs(insStr),"Expects string/regexp {-begin-}");let result=srcStr;return result.replace(insStr,"")}_.str=_.str||Object.create(null),_.str.lines=_.str.lines||Object.create(null),short_.defaults={src:null,widthLimit:40,heightLimit:0,delimeter:null,heightDelimeter:null,onLength:null,cutting:"center",heightCutting:"center"},shortWidth.defaults={src:null,limit:40,onLength:null,cutting:"center",delimeter:null},_shortWidth.defaults={src:null,limit:40,delimeter:null,onLength:null,cutting:"center"},shortHeight.defaults={src:null,limit:null,cutting:"center",delimeter:null},_shortHeight.defaults={src:null,limit:null,cutting:"center",prefix:null,postfix:null,infix:null},concat.defaults={linePrefix:"",linePostfix:"",lineDelimter:"\n",optionsForToStr:null,onToStr:null,onPairWithDelimeter:null};let StrExtension={is:is,like:function like(src){return!!_.str.is(src)||!!_.regexp.is(src)},defined:defined,has:has,short_:short_,_shortWidth:_shortWidth,shortHeight:shortHeight,_shortHeight:_shortHeight,concat:concat,_beginOf:_beginOf,_endOf:_endOf,begins:begins,ends:ends,beginOf:beginOf,endOf:endOf,removeBegin:removeBegin,removeEnd:removeEnd,remove:remove};Object.assign(_.str,StrExtension);let ToolsExtension={strIs:is,strsAreAll:function strsAreAll(src){if(_.assert(1===arguments.length),_.argumentsArray.like(src)){for(let s=0;s<src.length;s++)if(!_.strIs(src[s]))return false;return true}return _.strIs(src)},strDefined:defined,strsDefined:function strsDefined(src){if(_.argumentsArray.like(src)){for(let s=0;s<src.length;s++)if(!_.strDefined(src[s]))return false;return true}return false},strHas:has,strstrShort_:short_,strShort_:short_,strShortWidth:shortWidth,_strShortWidth:_shortWidth,strShortHeight:shortHeight,_strShortHeight:_shortHeight,strConcat:concat,_strBeginOf:_beginOf,_strEndOf:_endOf,strBegins:begins,strEnds:ends,strBeginOf:beginOf,strEndOf:endOf,strRemoveBegin:removeBegin,strRemoveEnd:removeEnd,strRemove:remove};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Stringer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Stringer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Stringer_s_naked(){!function _l1_Stringer_s_(){"use strict";_global_;const _=_global_.wTools;_.stringer=_.stringer||Object.create(null),Object.assign(_.stringer,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function StrLines_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/StrLines.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function StrLines_s_naked(){!function _l1_Str_s_(){"use strict";_global_;const _=_global_.wTools;function split(src,eol){return _.arrayIs(src)?src:(_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length||2===arguments.length),void 0===eol&&(eol=_.str.lines.Eol.default),src.split(eol))}function join(src,eol){_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length||2===arguments.length),void 0===eol&&(eol=_.str.lines.Eol.default);let result=src;return _.arrayIs(src)&&(result=src.join(eol)),result}function strip(src){if(arguments.length>1){let result=_.unroll.make(null);for(let a=0;a<arguments.length;a++)result[a]=_.str.lines.strip(arguments[a]);return result}_.assert(_.strIs(src)||_.arrayIs(src)),_.assert(1===arguments.length);let lines=_.strLinesSplit(src);return lines=lines.map(line=>line.trim()).filter(line=>line),_.strIs(src)&&(lines=_.str.lines.join(lines)),lines}function atLeft(src,index,eol){let result;if(_.assert(_.number.is(index)),index<0)return(result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[0,-1],result;let o2=Object.create(null);return o2.src=src,o2.eol=eol,o2.onEach=function onEach(it){(result=it).line=src.slice(it.charInterval[0],it.charInterval[1]-it.nl.length+1)},o2.interval=[index,index],o2.withLine=false,this.eachLeft(o2),result||((result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[src.length,src.length-1]),delete result.eol,delete result.onEach,delete result.interval,delete result.withLine,result}function _eachLeft(o){void 0===o.eol?o.eol=_.str.lines.Eol.default:_.str.is(o.eol)||(o.eol=[...o.eol]);const lastIndex=o.interval?o.interval[1]:Infinity;const src=o.src;let foundTokenIndex;let foundOffset;let handleEach;return o.charInterval=[-1,-1],o.lineIndex=-1,o.interval&&o.interval[1]<0?(o.charInterval[0]=0,o):(o.nl="",handleEach=o.interval?o.withLine?function handleWithIntervalWithLine(){o.interval&&o.interval[0]>o.lineIndex||(o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o))}:function handleWithIntervalWithoutLine(){o.interval&&o.interval[0]>o.lineIndex||o.onEach(o)}:o.withLine?function handleWithoutIntervalWithLine(){o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o)}:function handleWithoutIntervalWithoutLine(){o.onEach(o)},_.str.is(o.eol)?single():function multiple(){foundTokenIndex=-1,foundOffset=src.length;let first=function indexInit(){let first=[];for(let i=o.eol.length-1;i>=0;i--){let offset=src.indexOf(o.eol[i]);-1!==offset?(first.unshift(offset),foundOffset>=offset&&(foundOffset=offset,foundTokenIndex=i)):(o.eol.splice(i,1),foundTokenIndex-=1)}return first}();if(1===first.length)return o.eol=o.eol[foundTokenIndex],single();if(0===first.length)return o.lineIndex=0,o.charInterval[0]=0,o.charInterval[1]=src.length-1,void handleEach();for(;o.lineIndex!==lastIndex;){if(o.charInterval[0]=Math.max(o.charInterval[0],o.charInterval[1])+1,o.charInterval[1]=indexOf(first),o.lineIndex+=1,o.charInterval[1]===o.src.length){o.charInterval[1]=src.length-1,o.nl="",handleEach();break}o.nl=o.eol[foundTokenIndex],o.charInterval[1]+=o.nl.length-1,handleEach()}}(),(!o.interval||o.lineIndex<o.interval[1])&&(o.lineIndex+=1,o.charInterval[0]=src.length,_.assert(o.charInterval[1]===src.length-1),o.withLine&&(o.line="")),o);function single(){for(o.nl=o.eol;o.lineIndex!==lastIndex;){if(o.charInterval[0]=Math.max(o.charInterval[0],o.charInterval[1])+1,o.charInterval[1]=src.indexOf(o.eol,o.charInterval[0]),o.lineIndex+=1,-1===o.charInterval[1]){o.charInterval[1]=src.length-1,o.nl="",handleEach();break}o.charInterval[1]+=o.nl.length-1,handleEach()}}function indexOf(first){if(first[foundTokenIndex]>=o.charInterval[0])return first[foundTokenIndex];foundOffset=src.length;for(let i=first.length-1;i>=0;i--){let offset=first[i];if(offset<o.charInterval[0])if(-1===(offset=src.indexOf(o.eol[i],first[i]+1))){if(tokenDelete(first,i),0===first.length)return src.length}else first[i]=offset,foundOffset>=offset&&(foundOffset=offset,foundTokenIndex=i);else foundOffset>=offset&&(foundOffset=offset,foundTokenIndex=i)}return first[foundTokenIndex]}function tokenDelete(first,i){o.eol.splice(i,1),first.splice(i,1),foundTokenIndex>i&&(foundTokenIndex-=1)}}function eachLeft(o){return _.map.is(o)?_.assert(1===arguments.length):(_.assert(2===arguments.length||3===arguments.length),o=3===arguments.length?{src:arguments[0],interval:arguments[1],onEach:arguments[2]}:{src:arguments[0],onEach:arguments[1]}),void 0===o.withLine&&(o.withLine=true),_.assert(_.routine.is(o.onEach)),_.assert(_.str.is(o.src)),this._eachLeft(o)}function _eachRight(o){void 0===o.eol?o.eol=_.str.lines.Eol.default:_.str.is(o.eol)||(o.eol=[...o.eol]);const lastIndex=o.interval?o.interval[1]:Infinity;const src=o.src;let foundTokenIndex;let foundOffset;let nnl="";let handleEach;return handleEach=o.interval?o.withLine?function handleWithIntervalWithLine(){o.interval&&o.interval[0]>o.lineIndex||(o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o))}:function handleWithIntervalWithoutLine(){o.interval&&o.interval[0]>o.lineIndex||o.onEach(o)}:o.withLine?function handleWithoutIntervalWithLine(){o.line=src.slice(o.charInterval[0],o.charInterval[1]-o.nl.length+1),o.onEach(o)}:function handleWithoutIntervalWithoutLine(){o.onEach(o)},o.charInterval=[o.src.length,o.src.length],o.lineIndex=-1,o.interval&&o.interval[1]<0?(o.charInterval[1]=o.src.length-1,o):(o.nl="",_.str.is(o.eol)?single():function multiple(){foundTokenIndex=-1,foundOffset=0;let first=function indexInit(){let first=[];for(let i=o.eol.length-1;i>=0;i--){let offset=src.lastIndexOf(o.eol[i]);-1!==offset?(offset+=o.eol[i].length,first.unshift(offset),foundOffset<=offset&&(foundOffset=offset,foundTokenIndex=i)):(o.eol.splice(i,1),foundTokenIndex-=1)}return first}();if(1===first.length)return o.eol=o.eol[foundTokenIndex],single();if(0===first.length)return o.lineIndex=0,o.charInterval[0]=0,o.charInterval[1]=src.length-1,void handleEach();for(;o.lineIndex!==lastIndex;){if(o.lineIndex+=1,o.nl=nnl,o.charInterval[1]=o.charInterval[0]-1,o.charInterval[0]=indexOf(first),-1===o.charInterval[0]){o.charInterval[0]=0,handleEach();break}nnl=o.eol[foundTokenIndex],handleEach()}}(),(!o.interval||o.lineIndex<o.interval[1])&&(o.lineIndex+=1,o.charInterval[1]=-1,_.assert(0===o.charInterval[0]),o.withLine&&(o.line="")),o);function single(){for(;o.lineIndex!==lastIndex;){o.lineIndex+=1,o.nl=nnl,o.charInterval[1]=o.charInterval[0]-1;let right=o.charInterval[1]-o.nl.length;if(right>=0||0===o.lineIndex?o.charInterval[0]=src.lastIndexOf(o.eol,right):o.charInterval[0]=-1,-1===o.charInterval[0]){o.charInterval[0]=0,handleEach();break}nnl=o.eol,o.charInterval[0]+=nnl.length,handleEach()}}function indexOf(first){let left=o.charInterval[0]-nnl.length-1;if(first[foundTokenIndex]<=left)return first[foundTokenIndex];foundOffset=-1;for(let i=first.length-1;i>=0;i--){let offset=first[i];if(offset>left)if(-1===(offset=left>=0?src.lastIndexOf(o.eol[i],left):-1)){if(tokenDelete(first,i),0===first.length)return-1}else offset+=o.eol[i].length,first[i]=offset,foundOffset<=offset&&(foundOffset=offset,foundTokenIndex=i);else foundOffset<=offset&&(foundOffset=offset,foundTokenIndex=i)}return first[foundTokenIndex]}function tokenDelete(first,i){o.eol.splice(i,1),first.splice(i,1),foundTokenIndex>i&&(foundTokenIndex-=1)}}_.str=_.str||Object.create(null),_.str.lines=_.str.lines||Object.create(null),_eachLeft.defaults={src:null,eol:null,interval:null,withLine:true},_eachRight.defaults={..._eachLeft.defaults};let StrLinesExtension={Eol:{any:["\r\n","\n\r","\n"],posix:"\n",windows:"\r\n",mac:"\n\r",default:"\n"},split:split,join:join,strip:strip,atLeft:atLeft,atRight:function atRight(src,index,eol){let result;if(_.assert(_.number.is(index)),index<0)return(result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[src.length,src.length-1],result;let o2=Object.create(null);return o2.src=src,o2.eol=eol,o2.onEach=function onEach(it){(result=it).line=src.slice(it.charInterval[0],it.charInterval[1]-it.nl.length+1)},o2.interval=[index,index],o2.withLine=false,this.eachRight(o2),result||((result=Object.create(null)).src=src,result.lineIndex=index,result.charInterval=[0,-1]),delete result.eol,delete result.onEach,delete result.interval,delete result.withLine,result},at:atLeft,_eachLeft:_eachLeft,eachLeft:eachLeft,_eachRight:_eachRight,eachRight:function eachRight(o){return _.map.is(o)?_.assert(1===arguments.length):(_.assert(2===arguments.length||3===arguments.length),o=3===arguments.length?{src:arguments[0],interval:arguments[1],onEach:arguments[2]}:{src:arguments[0],onEach:arguments[1]}),void 0===o.withLine&&(o.withLine=true),_.assert(_.routine.is(o.onEach)),_.assert(_.str.is(o.src)),this._eachRight(o)},each:eachLeft};Object.assign(_.str.lines,StrLinesExtension);let ToolsExtension={strLinesSplit:split,strLinesJoin:join,strLinesStrip:strip};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Symbol_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Symbol.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Symbol_s_naked(){!function _l1_Symbol_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.symbol=_.symbol||Object.create(null);function is(src){return"[object Symbol]"===Object.prototype.toString.call(src)}function exportStringDiagnosticShallow(src){_.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.symbol.is(src));let text=src.toString().slice(7,-1);return`{- Symbol${text?" "+text+" ":" "}-}`}let ToolsExtension={symbolIs:is};let Extension={is:is,exportString:exportStringDiagnosticShallow,exportStringCodeShallow:function exportStringCodeShallow(src){_.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.symbol.is(src));let text=src.toString().slice(7,-1);return`Symbol.for(${text?" '"+text+"' )":")"}`},exportStringDiagnosticShallow:exportStringDiagnosticShallow,def:Symbol.for("def"),null:Symbol.for("null"),undefined:Symbol.for("undefined"),void:Symbol.for("void"),nothing:Symbol.for("nothing"),anything:Symbol.for("anything"),maybe:Symbol.for("maybe"),unknown:Symbol.for("unknown"),dont:Symbol.for("dont"),self:Symbol.for("self"),optional:Symbol.for("optional"),unroll:Symbol.for("unroll"),prototype:Symbol.for("prototype"),constructor:Symbol.for("constructor")};Object.assign(_,ToolsExtension),Object.assign(Self,Extension)}()});module.exports,module.include,module.include}(),function Time_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Time.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Time_s_naked(){!function _l1_Time_s_(){"use strict";_global_;const _=_global_.wTools;function timerIs(src){return!!src&&_.strIs(src.type)&&!!src.time&&!!src.cancel}function competitorIs(src){return!!src&&!!_.mapIs(src)&&void 0!==src.competitorRoutine}_.time=_.time||Object.create(null);let _TimeInfinity=Math.pow(2,31)-1;function _now_functor(){return"undefined"!=typeof performance&&void 0!==performance.now?_.routine.join(performance,performance.now):Date.now?_.routine.join(Date,Date.now):function(){return Date().getTime()}}const soon="undefined"==typeof process?function(h){return setTimeout(h,0)}:process.nextTick;let TimeExtension={timerIs:timerIs,competitorIs:competitorIs,timerInBegin:function timerInBegin(timer){return _.assert(_.timerIs(timer)),0===timer.state},timerInCancelBegun:function timerInCancelBegun(timer){return _.assert(_.timerIs(timer)),-1===timer.state},timerInCancelEnded:function timerInCancelEnded(timer){return _.assert(_.timerIs(timer)),-2===timer.state},timerIsCanceled:function timerIsCanceled(timer){return _.assert(_.timerIs(timer)),-1===timer.state||-2===timer.state},timerInEndBegun:function timerInEndBegun(timer){return _.assert(_.timerIs(timer)),1===timer.state},timerInEndEnded:function timerInEndEnded(timer){return _.assert(_.timerIs(timer)),2===timer.state},_begin:function _begin(delay,onTime,onCancel){let native;delay>=_TimeInfinity&&(delay=_TimeInfinity),_.assert(1===arguments.length||2===arguments.length||3===arguments.length),native=delay>0?setTimeout(time,delay):soon(timeNonCancelable)||null;let timer=Object.create(null);return timer.onTime=onTime,timer.onCancel=onCancel,timer._time=function _time(){if(1!==timer.state&&-1!==timer.state){_.assert(timer.state>-2,"Cannot change state of timer."),_.assert(timer.state<2,"Timer can be executed only one time."),timer.state=1;try{onTime&&(timer.result=onTime(timer))}finally{_.assert(1===timer.state),timer.state=2}}},timer._cancel=function _cancel(){if(1!==timer.state&&-1!==timer.state){_.assert(timer.state<2,"Cannot change state of timer."),_.assert(timer.state>-2,"Timer can be canceled only one time."),timer.state=-1,clearTimeout(timer.native);try{onCancel&&(timer.result=onCancel(timer))}finally{_.assert(-1===timer.state),timer.state=-2}}},timer.time=null===native?timeNonCancelable:time,timer.cancel=function cancel(){return timer._cancel()},timer.state=0,timer.type="delay",timer.native=native,timer;function timeNonCancelable(){if(0===timer.state)return time.call(this,arguments)}function time(){return timer._time(),clearTimeout(timer.native),timer}},_finally:function _finally(delay,onTime){return _.assert(2===arguments.length),_.time._begin(delay,onTime,onTime)},_periodic:function _periodic(delay,onTime,onCancel){_.assert(2===arguments.length||3===arguments.length,"Expects exactly two or three arguments");let native=setInterval(time,delay);let timer=Object.create(null);return timer.onTime=onTime,timer.onCancel=onCancel,timer._time=function _time(){_.assert(-1!==timer.state&&-2!==timer.state,"Illegal call, timer is canceled. Please, use new timer."),timer.state=1;try{onTime&&(timer.result=onTime(timer))}finally{void 0===timer.result||timer.result===_.dont?timer.cancel():timer.state=2}},timer._cancel=function _cancel(){_.assert(-1!==timer.state&&-2!==timer.state,"Illegal call, timer is canceled."),timer.state=-1,clearInterval(timer.native);try{onCancel&&(timer.result=onCancel(timer))}finally{timer.state=-2}},timer.time=time,timer.cancel=function cancel(){return timer._cancel()},timer.state=0,timer.type="periodic",timer.native=native,timer;function time(){return timer._time()}},_cancel:function _cancel(timer){return _.assert(_.timerIs(timer)),timer.cancel(),timer},begin:function begin(){let delay=arguments[0];let procedure=arguments[1];let onTime=arguments[2];let onCancel=arguments[3];return _.procedureIs(procedure)||(onTime=void 0===arguments[1]?null:arguments[1],onCancel=void 0===arguments[2]?null:arguments[2]),_.assert(2===arguments.length||3===arguments.length||4===arguments.length),_.assert(_.number.is(delay)),_.assert(_.routine.is(onTime)||void 0===onTime||null===onTime),_.assert(_.routine.is(onCancel)||void 0===onCancel||null===onCancel),this._begin(delay,onTime,onCancel)},finally:function finally_(delay,procedure,onTime){return 2===arguments.length&&(_.procedureIs(procedure)||(onTime=void 0===arguments[1]?null:arguments[1])),_.assert(2===arguments.length||3===arguments.length),_.assert(_.number.is(delay)),_.assert(_.routine.is(onTime)||void 0===onTime||null===onTime),this._finally(delay,onTime)},periodic:function periodic(){let delay=arguments[0];let procedure=arguments[1];let onTime=arguments[2];let onCancel=arguments[3];return _.procedureIs(procedure)||(onTime=void 0===arguments[1]?null:arguments[1],onCancel=void 0===arguments[2]?null:arguments[2]),_.assert(2===arguments.length||3===arguments.length||4===arguments.length),_.assert(_.number.is(delay)),_.assert(_.routine.is(onTime)),_.assert(_.routine.is(onCancel)||void 0===onCancel||null===onCancel),this._periodic(delay,onTime,onCancel)},cancel:function cancel(timer){return _.time._cancel(...arguments)},_now_functor:_now_functor,now:_now_functor(),soon:soon};Object.assign(_.time,TimeExtension);let ToolsExtension={timerIs:timerIs,competitorIs:competitorIs};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Type_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Type.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Type_s_naked(){!function _l1_Type_s_(){"use strict";_global_;const _=_global_.wTools;function instanceIs(src){if(_.assert(1===arguments.length,"Expects single argument"),_.primitive.is(src))return false;if(Object.hasOwnProperty.call(src,"constructor"))return false;if(!Reflect.has(src,"constructor"))return false;let prototype=Object.getPrototypeOf(src);return _.assert(void 0!==prototype),null!==prototype&&prototype!==Object.prototype&&!_.routine.is(prototype)}_global_.wTools;let ToolsExtension={undefinedIs:function undefinedIs(src){return void 0===src},nullIs:function nullIs(src){return null===src},nothingIs:function nothingIs(src){return null===src||void 0===src||src===_.nothing},definedIs:function definedIs(src){return void 0!==src&&null!==src&&!Number.isNaN(src)&&src!==_.nothing},consequenceIs:function consequenceIs(src){if(!src)return false;let prototype=Object.getPrototypeOf(src);return!!prototype&&"Consequence"===prototype.shortName},consequenceLike:function consequenceLike(src){return!!_.consequenceIs(src)||!!_.promiseIs(src)},promiseIs:function promiseIs(src){return!!src&&src instanceof Promise},promiseLike:function promiseLike(src){return!!src&&_.routine.is(src.then)&&_.routine.is(src.catch)&&src.constructor&&"wConsequence"!==src.constructor.name},typeOf:function typeOf(src,constructor){return _.assert(1===arguments.length||2===arguments.length),2===arguments.length?_.typeOf(src)===constructor:null===src||void 0===src?null:_.number.is(src)||_.bool.is(src)||_.strIs(src)?src.constructor:src.constructor?(_.assert(_.routine.is(src.constructor)&&src instanceof src.constructor),src.constructor):null},constructorIs:function constructorIs(cls){return _.assert(1===arguments.length,"Expects single argument"),_.routine.is(cls)&&!instanceIs(cls)},instanceIs:instanceIs,workerIs:function workerIs(src){return _.assert(0===arguments.length||1===arguments.length),1===arguments.length?"undefined"!=typeof WorkerGlobalScope&&src instanceof WorkerGlobalScope||"undefined"!=typeof Worker&&src instanceof Worker:"undefined"!=typeof WorkerGlobalScope},streamIs:function streamIs(src){return _.assert(1===arguments.length,"Expects single argument"),_.object.isBasic(src)&&_.routine.is(src.pipe)},processIs:function processIs(src){_.assert(1===arguments.length,"Expects single argument");let type=_.entity.strTypeSecondary(src);return"ChildProcess"===type||"process"===type},procedureIs:function procedureIs(src){return _.assert(1===arguments.length,"Expects single argument"),!!src&&!!_.Procedure&&src instanceof _.Procedure},definitionIs:function definitionIs(src){return _.assert(1===arguments.length,"Expects single argument"),!!src&&!!_.Definition&&src instanceof _.Definition},traitIs:function traitIs(trait){return!!_.definitionIs(trait)&&"trait"===trait.defGroup},blueprintIsDefinitive:function blueprintIsDefinitive(blueprint){return!!blueprint&&!!_.blueprint.isDefinitive&&_.blueprint.isDefinitive(blueprint)},blueprintIsRuntime:function blueprintIsRuntime(blueprint){return!!blueprint&&!!_.blueprint.isRuntime&&_.blueprint.isRuntime(blueprint)}};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Units_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Units.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Units_s_naked(){!function _l1_Units_s_(){"use strict";_global_;const _=_global_.wTools;_.units=_.units||Object.create(null),Object.assign(_.units,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Unroll_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Unroll.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Unroll_s_naked(){!function _l1_Unroll_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!_.arrayIs(src)&&!!src[unrollSymbol]}function isEmpty(src){return!!_.unroll.is(src)&&0===src.length}function isPopulated(src){return!!_.unroll.is(src)&&src.length>0}function like(src){return _.unroll.is(src)}function prepend(dstArray){return _.assert(arguments.length>=1),_.assert(_.longIs(dstArray)||null===dstArray,"Expects long or unroll"),function _prepend(dstArray,srcArray){for(let a=srcArray.length-1;a>=0;a--)_.unrollIs(srcArray[a])?_prepend(dstArray,srcArray[a]):(_.arrayIs(srcArray[a])&&_.unroll.normalize(srcArray[a]),dstArray.unshift(srcArray[a]));return dstArray}(dstArray=dstArray||[],Array.prototype.slice.call(arguments,1)),dstArray}function append(dstArray){return _.assert(arguments.length>=1),_.assert(_.longIs(dstArray)||null===dstArray,"Expects long or unroll"),function _append(dstArray,srcArray){_.assert(2===arguments.length);for(let a=0,len=srcArray.length;a<len;a++)_.unrollIs(srcArray[a])?_append(dstArray,srcArray[a]):(_.arrayIs(srcArray[a])&&_.unroll.normalize(srcArray[a]),dstArray.push(srcArray[a]));return dstArray}(dstArray=dstArray||[],Array.prototype.slice.call(arguments,1)),dstArray}function remove(dstArray){return _.assert(arguments.length>=2),_.assert(_.longIs(dstArray)||null===dstArray,"Expects long or unroll"),function _remove(dstArray,srcArray){_.assert(2===arguments.length);for(let a=0,len=srcArray.length;a<len;a++)if(_.unrollIs(srcArray[a]))_remove(dstArray,srcArray[a]);else for(_.arrayIs(srcArray[a])&&_.unroll.normalize(srcArray[a]);dstArray.indexOf(srcArray[a])>=0;)dstArray.splice(dstArray.indexOf(srcArray[a]),1);return dstArray}(dstArray=dstArray||[],Array.prototype.slice.call(arguments,1)),dstArray}_.unroll=_.unroll||Object.create(null);let unrollSymbol=Symbol.for("unroll");let ToolsExtension={unrollIs:is.bind(_.unroll),unrollIsEmpty:isEmpty.bind(_.unroll),unrollIsPopulated:isPopulated.bind(_.unroll),unrollLike:like.bind(_.unroll),unrollMakeEmpty:_.argumentsArray.makeEmpty.bind(_.unroll),unrollMakeUndefined:_.argumentsArray.makeUndefined.bind(_.unroll),unrollMake:_.argumentsArray.make.bind(_.unroll),unrollCloneShallow:_.argumentsArray.cloneShallow.bind(_.unroll),unrollFrom:_.argumentsArray.from.bind(_.unroll),unrollPrepend:prepend.bind(_.unroll),unrollAppend:append.bind(_.unroll),unrollRemove:remove.bind(_.unroll)};Object.assign(_,ToolsExtension);let UnrollExtension={NamespaceName:"unroll",NamespaceNames:["unroll"],NamespaceQname:"wTools/unroll",MoreGeneralNamespaceName:"long",MostGeneralNamespaceName:"countable",TypeName:"Unroll",TypeNames:["Unroll"],InstanceConstructor:null,tools:_,symbol:unrollSymbol,is:is,isEmpty:isEmpty,isPopulated:isPopulated,like:like,IsResizable:function IsResizable(){return _.assert(0===arguments.length),true},_makeEmpty:_.argumentsArray._makeEmpty,makeEmpty:_.argumentsArray.makeEmpty,_makeUndefined:_.argumentsArray._makeUndefined,makeUndefined:_.argumentsArray.makeUndefined,_makeZeroed:_.argumentsArray._makeZeroed,makeZeroed:_.argumentsArray.makeZeroed,_makeFilling:_.argumentsArray._makeFilling,makeFilling:_.argumentsArray.makeFilling,_make:function _make(src,length){let result=_.array._make(...arguments);return result[unrollSymbol]=true,(null!==src&&void 0!==src&&!_.unroll.is(src)||null!==src&&void 0!==src&&!_.unroll.is(src))&&(result=_.unroll.normalize(result)),result},make:_.argumentsArray.make,_cloneShallow:function _cloneShallow(src){let result=_.array._cloneShallow(...arguments);return result[unrollSymbol]=true,_.unroll.is(src)||(result=_.unroll.normalize(result)),result},cloneShallow:_.argumentsArray.cloneShallow,from:_.argumentsArray.from,_as:function _as(src){return _.unrollIs(src)?src:_.countable.is(src)?_.unroll._make(...arguments):void 0===src?_.unroll._make([]):_.unroll._make([src])},as:function as(src){return _.assert(1===arguments.length),_.unroll._as(...arguments)},normalize:function normalize(dstArray){_.assert(1===arguments.length),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`);for(let a=0;a<dstArray.length;a++)if(_.unrollIs(dstArray[a])){let args=[a,1];args.push.apply(args,dstArray[a]),dstArray.splice.apply(dstArray,args),a+=args.length-3}else _.arrayIs(dstArray[a])&&_.unroll.normalize(dstArray[a]);return dstArray},prepend:prepend,append:append,remove:remove,namespaceOf:_.blank.namespaceOf,namespaceWithDefaultOf:_.blank.namespaceWithDefaultOf,_functor_functor:_.blank._functor_functor};Object.assign(_.unroll,UnrollExtension),_.long._namespaceRegister(_.unroll)}()});module.exports,module.include,module.include}(),function Vector_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Vector.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Vector_s_naked(){!function _l1_Vector_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!_.arrayIs(src)||!_.primitive.is(src)&&!(!_.class.methodIteratorOf(src)||!_.number.is(src.length)||_.mapIs(src))}function like(src){return _.vector.is(src)}_.vector=_.vector||Object.create(null),_.assert(!!_.long.make,"Expects routine _.long.make");var ToolsExtension={vectorIs:is.bind(_.vector),vectorLike:like.bind(_.vector)};Object.assign(_,ToolsExtension);var VectorExtension={NamespaceName:"vector",NamespaceNames:["vector"],NamespaceQname:"wTools/vector",MoreGeneralNamespaceName:"countable",MostGeneralNamespaceName:"countable",TypeName:"Vector",TypeNames:["Vector"],InstanceConstructor:null,tools:_,is:is,like:like,IsResizable:function IsResizable(){return _.assert(0===arguments.length),this.default.IsResizable()},_makeEmpty:_.countable._makeEmpty,makeEmpty:_.countable.makeEmpty,_makeUndefined:_.countable._makeUndefined,makeUndefined:_.countable.makeUndefined,_makeZeroed:_.countable._makeZeroed,makeZeroed:_.countable.makeZeroed,_make:_.countable._make,make:_.countable.make,_cloneShallow:_.countable._cloneShallow,cloneShallow:_.countable.cloneShallow,from:_.countable.from,namespaceOf:function namespaceOf(src){if(!this.is(src))return null;return _.long.namespaceOf(src)||this},namespaceWithDefaultOf:_.props.namespaceWithDefaultOf,_functor_functor:_.props._functor_functor};Object.assign(_.vector,VectorExtension)}()});module.exports,module.include,module.include}(),function Wrap_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/Wrap.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Wrap_s_naked(){!function _l1_Wrap_s_(){"use strict";_global_;const _=_global_.wTools;_.wrap=_.wrap||Object.create(null),Object.assign(_.wrap,{})}()});module.exports,module.include,module.include}(),function zErr_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1/zErr.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function zErr_s_naked(){!function _l1_1Err_s_(){"use strict";const _global=_global_;const _=_global_.wTools;function is(src){return src instanceof Error||"[object Error]"===Object.prototype.toString.call(src)}function _sectionsJoin(o){o.message=o.message||"";for(let s in o.sections){let section=o.sections[s];let head=section.head||"";let body=(str=section.body,"    ",_.strLinesIndentation?"    "+_.strLinesIndentation(str,"    "):str);body.trim().length&&(o.message+=` = ${head}\n${body}\n\n`)}var str;return o.message}function _messageForm(o){if(o.message=o.message||"",!_.strIs(o.originalMessage))throw"Expects string {- o.originalMessage -}";return o.brief?o.message+=o.originalMessage:o.message=_.error._sectionsJoin(o),o.error&&function nonenumerable(propName,value){try{let o2={enumerable:false,configurable:true,writable:true,value:value};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("message",o.message),o.message}function sectionAdd(o){return 2===arguments.length&&((o=arguments[1]).error=arguments[0]),_.routine.options(sectionAdd,o),null===o.head&&(o.head=o.name.substring(0,1).toUpperCase()+o.name.substring(1)),_.assert(_.strDefined(o.name)),_.assert(_.strDefined(o.head)),_.assert(_.strDefined(o.body)),_.assert(!!o.error),_.error.isFormed(o.error)?(o.sections=o.error.sections,_.error._sectionAdd(o),o.brief=o.error.brief,o.message="",o.originalMessage=o.error.originalMessage,_.error._messageForm(o),o.error):(o.error=_._err({args:[o.error],sections:{[o.name]:{head:o.head,body:o.body}}}),o.error)}function _sectionAdd(o){let section=Object.create(null);return section.name=o.name,section.head=o.head,section.body=o.body,o.sections[o.name]=section,section}function _sectionExposedAdd(o){const exportString=_.entity.exportString?_.entity.exportString.bind(_.entity):String;let i=0;let body="";for(let k in o.exposed)i>0&&(body+="\n"),body+=`${k} : ${exportString(o.exposed[k])}`,i+=1;_.error._sectionAdd({sections:o.sections,name:"exposed",head:"Exposed",body:body})}function _make(o){const logger=_global_.logger||_global_.console;if(1!==arguments.length)throw Error("Expects single argument : options map");if(!_.mapIs(o))throw Error("Expects single argument : options map");for(let k in o)if(void 0===_make.defaults[k])throw Error(`Unknown option::${k}`);for(let k in _.error._make.defaults)void 0===o[k]&&(o[k]=_.error._make.defaults[k]);if(!_.error.is(o.error))throw Error("Expects option.error:Error");if(!_.strIs(o.originalMessage))throw Error("Expects option.originalMessage:String");if(!_.strIs(o.combinedStack))throw Error("Expects option.combinedStack:String");if(!_.strIs(o.throwCallsStack))throw Error("Expects option.throwCallsStack:String");if(!_.strIs(o.throwsStack))throw Error("Expects option.throwsStack:String");if(!o.throwLocation)throw Error("Expects option.throwLocation:Location");return function attributesForm(){null!==o.attended&&void 0!==o.attended||(o.attended=o.error.attended),o.attended=!!o.attended,(null===o.logged||void 0===o.logged)&&(o.logged=o.error.logged),o.logged=!!o.logged,(null===o.brief||void 0===o.brief)&&(o.brief=o.error.brief),o.brief=!!o.brief,(null===o.reason||void 0===o.reason)&&(o.reason=o.error.reason),o.sections=o.sections||Object.create(null),o.error.section&&_.props.supplement(o.sections,o.error.section),o.id=o.error.id,o.id||(_.error._errorCounter+=1,o.id=_.error._errorCounter)}(),function exposedForm(){var has=false;for(let k in o.error){has=true;break}if(has)if(o.exposed)for(let k in o.error)Reflect.has(o.exposed,k)||(o.exposed[k]=o.error[k]);else{o.exposed=Object.create(null);for(let k in o.error)o.exposed[k]=o.error[k]}}(),function sectionsForm(){sectionAdd("message",`Message of ${o.error.name||"error"}#${o.id}`,o.originalMessage),sectionAdd("combinedStack",o.stackCondensing?"Beautified calls stack":"Calls stack",o.combinedStack),sectionAdd("throwsStack","Throws stack",o.throwsStack),o.sourceCode&&(_.strIs(o.sourceCode)?sectionAdd("sourceCode","Source code",o.sourceCode):_.routine.is(o.sourceCode.read)?sectionAdd("sourceCode",`Source code from ${o.sourceCode.path}`,o.sourceCode.read):_.strIs(o.sourceCode.code)?sectionAdd("sourceCode",`Source code from ${o.sourceCode.path}`,o.sourceCode.code):console.error("Unknown format of {- o.sourceCode -}")),o.exposed&&Object.keys(o.exposed).length>0&&_.error._sectionExposedAdd(o);for(let s in o.sections){let section=o.sections[s];_.strIs(section.head)||(logger.error(`Each section of an error should have head, but head of section::${s} is ${_.entity.strType(section.head)}`),delete o.sections[s]),_.strIs(section.body)||(logger.error(`Each section of an error should have body, but body of section::${s} is ${_.entity.strType(section.body)}`),delete o.sections[s])}}(),_.error._messageForm(o),function form(){if(nonenumerable("originalMessage",o.originalMessage),function logging(propName){try{let o2={enumerable:false,configurable:true,get:function get(){return 3!==(new Error).stack.split("\n").length&&(_.error.logged(this),_.error.attend(this)),this.message},set:function set(src){return this.message=src,src}};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("stack"),nonenumerable("reason",o.reason),nonenumerable("combinedStack",o.combinedStack),nonenumerable("throwCallsStack",o.throwCallsStack),nonenumerable("asyncCallsStack",o.asyncCallsStack),nonenumerable("throwsStack",o.throwsStack),nonenumerable("catchCounter",o.error.catchCounter?o.error.catchCounter+1:1),nonenumerable("attended",o.attended),nonenumerable("logged",o.logged),nonenumerable("brief",o.brief),void 0!==o.throwLocation.line&&nonenumerable("lineNumber",o.throwLocation.line),void 0===o.error.throwLocation&&nonenumerable("location",o.throwLocation),nonenumerable("sourceCode",o.sourceCode||null),nonenumerable("id",o.id),nonenumerable("toString",function(){return this.stack}),nonenumerable("sections",o.sections),function getter(propName,get){try{let o2={enumerable:false,configurable:true,get:get};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}("name",function(){return this.constructor.name}),o.error[Symbol.for("nodejs.util.inspect.custom")]=o.error.toString,o.concealed)for(let k in o.concealed)nonenumerable(k,o.concealed[k])}(),o.error;function sectionAdd(name,head,body){_.error._sectionAdd({name:name,head:head,body:body,sections:o.sections})}function nonenumerable(propName,value){try{let o2={enumerable:false,configurable:true,writable:true,value:value};Object.defineProperty(o.error,propName,o2)}catch(err2){console.error(err2)}}}function _err(o){const exportString=_.entity.exportString?_.entity.exportString.bind(_.entity):String;let error;if(1!==arguments.length)throw Error("_err : Expects single argument : options map");if(!_.mapIs(o))throw Error("_err : Expects single argument : options map");if(!_.longIs(o.args))throw Error("_err : Expects Long option::args");for(let e in o)if(void 0===_err.defaults[e]){debugger;throw Error(`Unknown option::${e}`)}for(let e in _err.defaults)void 0===o[e]&&(o[e]=_err.defaults[e]);if(_.error._errorMaking)throw Error("Recursive dead lock because of error inside of routine _err()!");_.error._errorMaking=true,void 0!==o.level&&null!==o.level||(o.level=null),o.message||(o.message="");let fallBackMessage="";let errors=[];let combinedStack="";try{!function argumentsPreprocessArguments(){for(let a=0;a<o.args.length;a++){let arg=o.args[a];if(!_.error.is(arg)&&_.routine.is(arg)){if(0===arg.length)try{arg=o.args[a]=arg()}catch(err){let original=arg;arg=o.args[a]="Error throwen by callback for formatting of error string",console.error(String(err)),_.strLinesSelect?console.error(_.strLinesSelect({src:original.toString(),line:0,nearestLines:5,numbering:1})):console.error(original.toString())}if(_.unrollIs(arg)){debugger;o.args=[...Array.prototype.slice.call(o.args,0,a),...arg,...Array.prototype.slice.call(o.args,a+1,o.args.length)],a-=1;continue}}}}(),function argumentsPreprocessErrors(){for(let a=0;a<o.args.length;a++){let arg=o.args[a];if(_.error.is(arg))errProcess(arg),o.args[a]=_.error.originalMessage(arg);else if(_.strIs(arg)&&_.error._inStr(arg)){let err=_.error.fromStr(arg);errProcess(err),o.args[a]=_.error.originalMessage(err)}}}(),function locationForm(){if(!error)for(let a=0;a<o.args.length;a++){let arg=o.args[a];if(!_.primitive.is(arg)&&_.object.like(arg))try{o.throwLocation=_.introspector.location({error:arg,location:o.throwLocation})}catch(err2){console.error(err2)}}o.throwLocation=o.throwLocation||Object.create(null),o.catchLocation=o.catchLocation||Object.create(null)}(),function stackAndErrorForm(){error?(o.throwCallsStack||o.throwLocation&&(o.throwCallsStack=_.introspector.locationToStack(o.throwLocation)),o.throwCallsStack||(o.throwCallsStack=_.error.originalStack(error)),o.throwCallsStack||(o.throwCallsStack=_.introspector.stack([(o.level||0)+1,Infinity])),!o.catchCallsStack&&o.catchLocation&&(o.catchCallsStack=_.introspector.locationToStack(o.catchLocation)),o.catchCallsStack||(o.catchCallsStack=_.introspector.stack(o.catchCallsStack,[(o.level||0)+1,Infinity])),!o.throwCallsStack&&o.catchCallsStack&&(o.throwCallsStack=o.catchCallsStack),o.throwCallsStack||(o.throwCallsStack=_.introspector.stack(error,[(o.level||0)+1,Infinity])),o.level=0):(error=new Error(o.message+"\n"),o.throwCallsStack?(error.stack=o.throwCallsStack,o.catchCallsStack=_.introspector.stack(o.catchCallsStack,[o.level+1,Infinity]),o.level=0):(o.catchCallsStack?o.throwCallsStack=error.stack=o.catchCallsStack:(void 0!==o.level&&null!==o.level||(o.level=1),o.level+=1,o.throwCallsStack=error.stack=_.introspector.stack(error.stack,[o.level,Infinity])),o.level=0,o.catchCallsStack||(o.catchCallsStack=o.throwCallsStack))),_.assert(0===o.level),(o.stackRemovingBeginIncluding||o.stackRemovingBeginExcluding)&&o.throwCallsStack&&(o.throwCallsStack=_.introspector.stackRemoveLeft(o.throwCallsStack,o.stackRemovingBeginIncluding||null,o.stackRemovingBeginExcluding||null)),o.throwCallsStack||(o.throwCallsStack=error.stack=o.fallBackStack),combinedStack=o.throwCallsStack,_.assert(void 0===error.asyncCallsStack||null===error.asyncCallsStack||""===error.asyncCallsStack||_.arrayIs(error.asyncCallsStack)),error.asyncCallsStack&&error.asyncCallsStack.length&&(o.asyncCallsStack=o.asyncCallsStack||[],o.asyncCallsStack.push(...error.asyncCallsStack)),null!==o.asyncCallsStack&&void 0!==o.asyncCallsStack||_.Procedure&&_.Procedure.ActiveProcedure&&(o.asyncCallsStack=[_.Procedure.ActiveProcedure.stack()]),_.assert(null===o.asyncCallsStack||_.arrayIs(o.asyncCallsStack)),o.asyncCallsStack&&o.asyncCallsStack.length&&(combinedStack+="\n\n"+o.asyncCallsStack.join("\n\n")),_.assert(_.strIs(combinedStack)),o.stackCondensing&&(combinedStack=_.introspector.stackCondense(combinedStack))}(),function attributesForm(){try{o.catchLocation=_.introspector.location({stack:o.catchCallsStack,location:o.catchLocation})}catch(err2){console.error(err2)}try{o.throwLocation=_.introspector.location({error:error,stack:o.throwCallsStack,location:o.throwLocation})}catch(err2){console.error(err2)}}(),function catchesForm(){o.throws&&(_.assert(_.arrayIs(o.throws)),o.throws.forEach(c=>{c=_.introspector.locationFromStackFrame(c).routineFilePathLineCol,o.throwsStack?o.throwsStack+=`\nthrown at ${c}`:o.throwsStack=`thrown at ${c}`})),_.assert(_.number.is(o.catchLocation.abstraction)),o.catchLocation.abstraction&&1!==o.catchLocation.abstraction||(o.throwsStack?o.throwsStack+=`\nthrown at ${o.catchLocation.routineFilePathLineCol}`:o.throwsStack=`thrown at ${o.catchLocation.routineFilePathLineCol}`)}(),function sourceCodeForm(){if(o.usingSourceCode&&!o.sourceCode&&void 0===error.sourceCode){let c=_.introspector.code({location:o.throwLocation,sourceCode:o.sourceCode,asMap:1});c&&c.code&&c.code.length<400&&(o.sourceCode=c)}}(),function originalMessageForm(){let result=[];if(o.message)return;for(let a=0;a<o.args.length;a++){let arg=o.args[a];let str;str=arg&&!_.primitive.is(arg)?_.routine.is(arg.toStr)?arg.toStr():_.error.is(arg)&&_.strIs(arg.originalMessage)?arg.originalMessage:_.error.is(arg)?_.strIs(arg.message)?arg.message:exportString(arg):exportString(arg,{levels:2}):void 0===arg?"\n"+String(arg)+"\n":String(arg),result[a]=str}let o2={onToStr:eachMessageFormat,onPairWithDelimeter:strConcatenateCounting};o.message=_.strConcat(result,o2),o.message=o.message||fallBackMessage||"UnknownError",o.message=o.message.replace(/^\s*/,""),o.message=o.message.replace(/\x20*$/gm,""),o.message=o.message.replace(/\s*$/,"")}(),error=_.error._make({error:error,throwLocation:o.throwLocation,sections:o.sections,concealed:o.concealed,exposed:o.exposed,attended:o.attended,logged:o.logged,brief:o.brief,stackCondensing:o.stackCondensing,originalMessage:o.message,combinedStack:combinedStack,throwCallsStack:o.throwCallsStack,throwsStack:o.throwsStack,asyncCallsStack:o.asyncCallsStack,sourceCode:o.sourceCode,reason:o.reason})}catch(err2){_.error._errorMaking=false,console.log(err2.message),console.log(err2.stack)}return _.error._errorMaking=false,error;function errProcess(arg){error||(error=arg,o.sourceCode||(o.sourceCode=arg.sourceCode||null),null===o.attended&&(o.attended=arg.attended||false),null===o.logged&&(o.logged=arg.logged||false)),arg.throwCallsStack&&(o.throwCallsStack||(o.throwCallsStack=arg.throwCallsStack)),arg.throwsStack&&(o.throwsStack?o.throwsStack+="\n"+arg.throwsStack:o.throwsStack=arg.throwsStack),arg.constructor&&(fallBackMessage=fallBackMessage||arg.constructor.name),errors.push(arg)}function eachMessageFormat(str){let strBeginsWithRegular=_.strBegins(str,/\S/);let strEndsWithRegular=_.strEnds(str,/\S/);if(!strBeginsWithRegular){let notSpaceLikeSymbol=/\S/.exec(str);if(null===notSpaceLikeSymbol)str=str.replace(/\x20+/g,""),strEndsWithRegular=true;else{let before=str.substring(0,notSpaceLikeSymbol.index);let spaces=/(?<=\n)\x20+$/.exec(before);before=before.replace(/\x20+/g,""),str=(before+=spaces?spaces[0]:"")+str.substring(notSpaceLikeSymbol.index)}}if(str&&!strEndsWithRegular){let notSpaceLikeSymbol=/\S\s*$/.exec(str);let after=str.substring(notSpaceLikeSymbol.index+1);let spaces=/^\x20+(?=\n)/.exec(after);after=after.replace(/\x20+/g,""),after+=spaces?spaces[0]:"",str=str.substring(0,notSpaceLikeSymbol.index+1)+after}return str}function strConcatenateCounting(src1,src2){let result;if(_.strEnds(src1,"\n")&&_.strBegins(src2,"\n")){let right=/\n+$/.exec(src1);let left=/^\n+/.exec(src2);result=src1.substring(0,right.index),result+=right[0].length>left[0].length?right[0]:left[0],result+=src2.substring(left[0].length)}else result=src1+src2;return result}}function err(){return _._err({args:arguments,level:2})}function brief(){return _._err({args:arguments,level:2,brief:1})}function unbrief(){return _._err({args:arguments,level:2,brief:0})}function process(err){return 1===arguments.length&&_.error.isFormed(err)||(err=_.err(...arguments)),_.process&&_.process.entryPointInfo&&_.error.sectionAdd(err,{name:"process",body:_.process.entryPointInfo()}),err}function unprocess(){return 1===arguments.length&&_.error.isFormed(err)||(err=_.err(...arguments)),_.error.sectionRemove(err,"process"),err}function attend(err,value){return _.assert(1===arguments.length||2===arguments.length),void 0===value&&(value=true),_.error.concealedSet(err,{attended:value})}function logged(err,value){return _.assert(1===arguments.length||2===arguments.length),void 0===value&&(value=true),_.error.concealedSet(err,{logged:value})}function suspend(err,owner,value){if(_.assert(3===arguments.length),_.assert(!!owner),err.suspended&&err.suspended!==owner)return _.error.concealedSet(err,{});let value2=err.suspended;void 0===value&&(value=true);let result=_.error.concealedSet(err,{suspended:!!value&&owner});return value2&&!value&&err.wary&&_.error._handleUncaughtAsync(err),result}function wary(err,value){return _.assert(1===arguments.length||2===arguments.length),void 0===value&&(value=true),_.error.concealedSet(err,{wary:value})}function restack(err,level){if(!(1===arguments.length||2===arguments.length))throw Error("Expects single argument or none");if(void 0===level&&(level=1),!_.number.defined(level))throw Error("Expects defined number");let err2=_._err({args:[],level:level+1});return _.err(err2,err)}function once(err){if(!(err=_._err({args:arguments,level:2})).logged)return _.error.attend(err),err}function _log(err,logger){if(logger=logger||_global.logger||_global.console,_.routine.is(err.toString)){let str=err.toString();_.color&&_.color.strFormat&&(str=_.color.strFormat(str,"negative")),logger.error(str)}else logger.error("Error does not have toString"),logger.error(err);return _.error.logged(err),_.error.attend(err),err}function log(){let err=_._err({args:arguments,level:2});return _.error._log(err)}function logOnce(err){return(err=_._err({args:arguments,level:2})).logged?err:_.error._log(err)}_global_.wTools,_.error=_.error||Object.create(null),_sectionsJoin.defaults={sections:null,message:""},_messageForm.defaults={error:null,sections:null,brief:false,message:""},sectionAdd.defaults={error:null,name:null,head:null,body:null},_sectionAdd.defaults={sections:null,name:null,head:null,body:null},_sectionExposedAdd.defaults={sections:null,exposed:null},_make.defaults={error:null,id:null,throwLocation:null,sections:null,concealed:null,exposed:null,attended:null,logged:null,brief:null,stackCondensing:null,originalMessage:null,combinedStack:"",throwCallsStack:"",throwsStack:"",asyncCallsStack:"",sourceCode:null,reason:null},_err.defaults={args:null,sections:null,concealed:null,exposed:null,level:1,message:null,reason:null,sourceCode:null,stackRemovingBeginIncluding:0,stackRemovingBeginExcluding:0,usingSourceCode:1,stackCondensing:1,attended:null,logged:null,brief:null,throwLocation:null,catchLocation:null,asyncCallsStack:null,throwCallsStack:null,catchCallsStack:null,fallBackStack:null,throwsStack:"",throws:null};let stackSymbol=Symbol.for("stack");let ToolsExtension={errIs:is,_errMake:_make,_err:_err,err:err,errBrief:brief,errUnbrief:unbrief,errProcess:process,errUnprocess:unprocess,errAttend:attend,errLogged:logged,errSuspend:suspend,errWary:wary,errRestack:restack,errOnce:once,_errLog:_log,errLog:log,errLogOnce:logOnce};Object.assign(_,ToolsExtension);let ErrorExtension={is:is,isFormed:function isFormed(src){return!!_.error.is(src)&&void 0!==src.originalMessage},isAttended:function isAttended(src){return!!_.error.is(src)&&!!src.attended},isBrief:function isBrief(src){return!!_.error.is(src)&&!!src.brief},isLogged:function isLogged(src){return false!==_.error.is(src)&&!!src.logged},isSuspended:function isSuspended(src){return false!==_.error.is(src)&&!!src.suspended},isWary:function isWary(src){return false!==_.error.is(src)&&!!src.wary},_sectionsJoin:_sectionsJoin,_messageForm:_messageForm,sectionRemove:function sectionRemove(error,name){_.assert(2===arguments.length),_.assert(!!error),_.assert(_.strDefined(name)),_.error.isFormed(error)||(error=_.err(error)),delete eror.sections[name];let o2=Object.create(null);return o2.error=error,o2.sections=error.sections,o2.brief=error.brief,o2.message="",o2.originalMessage=error.originalMessage,_.error._messageForm(o2),error},sectionAdd:sectionAdd,_sectionAdd:_sectionAdd,_sectionExposedAdd:_sectionExposedAdd,exposedSet:function exposedSet(args,props){_.assert(2===arguments.length),_.assert(_.mapIs(props)),_.longIs(args)||(args=[args]);let err=args[0];if(_.symbol.is(err))return _.assert(1===args.length),err;1===args.length&&_.error.isFormed(err)||(err=_._err({args:args,level:2}));try{for(let f in props)err[f]=props[f]}catch(err){}return err},concealedSet:function concealedSet(args,props){_.assert(2===arguments.length),_.assert(_.mapIs(props)),_.longIs(args)||(args=[args]);let err=args[0];if(_.symbol.is(err))return _.assert(1===args.length),err;1===args.length&&_.error.isFormed(err)||(err=_._err({args:args,level:2}));try{for(let f in props){let o={enumerable:false,configurable:true,writable:true,value:props[f]};Object.defineProperty(err,f,o)}}catch(err){}return err},_inStr:function _inStr(errStr){return _.assert(_.strIs(errStr)),!!_.strHas(errStr,/\=\s+Message of/m)&&!!_.strHas(errStr,/(^|\n)\s*=\s+Beautified calls stack/m)},_make:_make,_err:_err,err:err,brief:brief,unbrief:unbrief,process:process,unprocess:unprocess,fromStr:function fromStr(errStr){try{errStr=_.str.lines.strip(errStr);let sectionBeginRegexp=/[=]\s+(.*?)\s*\n/gm;let splits=_.strSplitFast({src:errStr,delimeter:sectionBeginRegexp});let sectionName;let throwCallsStack="";let throwsStack="";let stackCondensing=true;let messages=[];for(let s=0;s<splits.length;s++){let split=splits[s];let sectionNameParsed=sectionBeginRegexp.exec(split+"\n");sectionNameParsed?sectionName=sectionNameParsed[1]:sectionName?!sectionName||_.strBegins(sectionName,"Message of")?messages.push(split):_.strBegins(sectionName,"Beautified calls stack")?throwCallsStack=split:_.strBegins(sectionName,"Throws stack")&&(throwsStack=split):messages.push(split)}let error=new Error;let throwLocation=_.introspector.locationFromStackFrame(throwCallsStack||error.stack);let originalMessage=messages.join("\n");return _.error._make({error:error,throwLocation:throwLocation,stackCondensing:stackCondensing,originalMessage:originalMessage,combinedStack:throwCallsStack,throwCallsStack:throwCallsStack,throwsStack:throwsStack})}catch(err2){return console.error(err2),Error(errStr)}},attend:attend,logged:logged,suspend:suspend,wary:wary,reason:function reason(err,value){if(1===arguments.length)return err.reason;if(2===arguments.length)return _.error.concealedSet(err,{reason:value}),err.reason;throw Error("Expects one or two argument")},restack:restack,once:once,originalMessage:function originalMessage(err){if(1!==arguments.length)throw Error("error.originalMessage : Expects single argument");if(_.strIs(err))return err;if(!err)return;if(err.originalMessage)return err.originalMessage;let message=err.message;return message||""===message||(message=err.msg),message||""===message||(message=err.name),message},originalStack:function originalStack(err){if(1!==arguments.length)throw Error("error.originalStack : Expects single argument");if(!_.error.is(err))throw Error("error.originalStack : Expects error");return err.throwCallsStack?err.throwCallsStack:err.combinedStack?err.combinedStack:err[stackSymbol]?err[stackSymbol]:err.stack?_.introspector.stack(err.stack):null},_log:_log,log:log,logOnce:logOnce,_Setup:function _Setup(){Error.stackTraceLimit=Infinity},breakpointOnDebugger:0,breakpointOnAssertEnabled:false,_errorCounter:0,_errorMaking:false};Object.assign(_.error,ErrorExtension),_.error._Setup()}()});module.exports,module.include,module.include}(),function _1LogicNode_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/1LogicNode.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _1LogicNode_s_naked(){!function _l3_1LogicNode_s_(){"use strict";_global_;const _=_global_.wTools;function cloneShallow(){return _.assert(!(this instanceof cloneShallow)),this}function cloneDeep(){debugger;return _.assert(!(this instanceof cloneDeep)),this}function iterator(){let iterator=Object.create(null);return iterator.next=function next(){let result=Object.create(null);let instance=this.instance;return result.done=this.index===instance.elements.length,result.done?result:(result.value=instance.elements[this.index],this.index+=1,result)},iterator.index=0,iterator.instance=this,iterator}function exportString(){return`{- ${this.type} with ${String(this.elements.length)} elements -}`}function exportStructure(){}function lengthGet(){return this.elements.length}function exec(o){return(o=_.routine.options(exec,arguments)).onEach=o.onEach||function defaultOnEach(e,it){return e},this._exec(o)}function DeclareAbstract(fo){fo.class=function LogicAbstractNode(elements){if(1!==arguments.length)throw new Error("Expects exactly 1 argument");return this.elements=elements,Object.freeze(this),this},_.class.declareBasic({constructor:fo.class,iterator:iterator,equalAre:function equalAre_functor(fo){let cls=fo.class;return function equalAre(it){if(_.assert(1===arguments.length),!it.src)return it.stop(false);if(!it.src2)return it.stop(false);if(!(it.src instanceof cls))return it.stop(false);if(!(it.src2 instanceof cls))return it.stop(false);debugger;if(!it.src.type!==it.src2.type)return it.stop(false);if(it.src.elements.length!==it.src2.elements.length)return it.stop(false);for(let i=0;i<it.src.elements.length;i++){debugger;xxx,it.equal(it.src,it.src2)}}}(fo),exportString:exportString,cloneShallow:cloneShallow,cloneDeep:cloneDeep});const prototype=fo.class.prototype;return prop("constructor",constructor),prop("type","abstract"),prop("exec",exec),prop("exportStructure",exportStructure),Object.defineProperty(fo.class,"length",{get:lengthGet,enumerable:false,configurable:false}),fo;function prop(k,v){Object.defineProperty(prototype,k,{value:v,enumerable:false,configurable:false})}}function Declare(fo){fo.parent=fo.parent||_.logic.node.Abstract;const type=fo.type;const parent=fo.parent;fo.class={[fo.name]:function(val){return parent.apply(this,arguments)}}[fo.name];const prototype=fo.class.prototype=Object.create(parent.prototype);return prop("constructor",fo.class),prop("type",type),Object.setPrototypeOf(fo.class,parent),_.props.extend(prototype,Methods[type]),fo;function prop(k,v){Object.defineProperty(prototype,k,{value:v,enumerable:false,configurable:false})}}exec.defaults={onEach:null},DeclareAbstract.defaults={},Declare.defaults={name:null,parent:null};let Methods={or:{_exec:function _orExec(it){let result=false;return this.elements.some(e=>{if(_.logic.isNode(e)&&(e=e._exec(it)),e=it.onEach(e,it))return result=e,true}),result}},and:{_exec:function _andExec(it){let result=true;return this.elements.every(e=>{return _.logic.isNode(e)&&(e=e._exec(it)),!!(e=it.onEach(e,it))||(result=e,false)}),result}},xor:{_exec:function _xorExec(it){let result=false;return this.elements.forEach(e=>{_.logic.isNode(e)&&(e=e._exec(it)),(e=it.onEach(e,it))&&(result=!result)}),result}},xand:{_exec:function _xandExec(it){let result=true;return this.elements.forEach(e=>{_.logic.isNode(e)&&(e=e._exec(it)),(e=it.onEach(e,it))&&(result=!result)}),result}},if:{_exec:function _ifExec(it){for(let i=0,l=this.elements.length-1;i<l;i++){let e=this.elements[i];if(_.logic.isNode(e)&&(e=e._exec(it)),!(e=it.onEach(e,it)))return true}if(this.elements.length>0){let e=this.elements[this.elements.length-1];return _.logic.isNode(e)&&(e=e._exec(it)),e=it.onEach(e,it)}return true}},first:{_exec:function _firstExec(it){let e=this.elements[0];return _.logic.isNode(e)&&(e=e._exec(it)),it.onEach(e,it)}},second:{_exec:function _secondExec(it){let e=this.elements[1];return _.logic.isNode(e)&&(e=e._exec(it)),it.onEach(e,it)}},not:{_exec:function _notExec(it){let e=this.elements[0];return _.logic.isNode(e)&&(e=e._exec(it)),!(e=it.onEach(e,it))}}};var Extension={DeclareAbstract:DeclareAbstract,Declare:Declare};Object.assign(_.logic.node,Extension),_.logic.node.Abstract=_.logic.node.DeclareAbstract({}).class,_.logic.node.Or=_.logic.node.Declare({type:"or",name:"LogicOr"}).class,
_.logic.node.And=_.logic.node.Declare({type:"and",name:"LogicAnd"}).class,_.logic.node.Xor=_.logic.node.Declare({type:"xor",name:"LogicXor"}).class,_.logic.node.Xand=_.logic.node.Declare({type:"xand",name:"LogicXand"}).class,_.logic.node.First=_.logic.node.Declare({type:"first",name:"LogicFirst"}).class,_.logic.node.Second=_.logic.node.Declare({type:"second",name:"LogicSecond"}).class,_.logic.node.Not=_.logic.node.Declare({type:"not",name:"LogicNot"}).class,_.logic.node.If=_.logic.node.Declare({type:"if",name:"LogicIf"}).class}()});module.exports,module.include,module.include}(),function _1Wrap_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/1Wrap.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _1Wrap_s_naked(){!function _l3_1Wrap_s_(){"use strict";_global_;const _=_global_.wTools;function is(src){return!!src&&src instanceof this.class}function make(src){if(1!==arguments.length)throw new Error("Expects exactly one argument");return new this.class(src)}function from(src){if(1!==arguments.length)throw new Error("Expects exactly one argument");return this.is(src)?src:this.make(src)}function cloneShallow(){return _.assert(!(this instanceof cloneShallow)),this}function cloneDeep(){debugger;return _.assert(!(this instanceof cloneDeep)),this}function iterator(){let iterator=Object.create(null);return iterator.next=function next(){let result=Object.create(null);return result.done=1===this.index,result.done?result:(result.value=this.instance.val,this.index+=1,result)},iterator.index=0,iterator.instance=this,iterator}function exportString(){return _.symbol.is(this.val)?`{- ${this.constructor.name} {- Symbol ${Symbol.keyFor(this.val)} -} -}`:`{- ${this.constructor.name} ${String(this.val)} -}`}function declare(fo){return fo.class={[fo.name]:function(val){if(1!==arguments.length)throw new Error("Expects exactly 1 argument");return this.val=val,Object.freeze(this),this}}[fo.name],_.class.declareBasic({constructor:fo.class,iterator:iterator,equalAre:function equalAre_functor(fo){let cls=fo.class;return function equalAre(it){return _.assert(1===arguments.length),it.src&&it.src2&&it.src instanceof cls&&it.src2 instanceof cls?it.src.val===it.src2.val?it.stop(true):it.src.val instanceof cls&&it.src2.val instanceof cls?void 0:it.stop(false):it.stop(false)}}(fo),exportString:exportString,cloneShallow:cloneShallow,cloneDeep:cloneDeep}),_.assert(void 0===fo.namespace),_.assert(fo.class.name===fo.name),fo.namespace={is:is,make:make,from:from,class:fo.class},fo}declare.defaults={name:null};var Extension={declare:declare};Object.assign(_.wrap,Extension)}()});module.exports,module.include,module.include}(),function _2Props_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/2Props.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _2Props_s_naked(){!function _l3_2Property_s_(){"use strict";_global_;const _=_global_.wTools;const prototypeSymbol=Symbol.for("prototype");const constructorSymbol=Symbol.for("constructor");function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._identicalShallow(src1,src2)}function equivalentShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._equivalentShallow(src1,src2)}function _exportStringDiagnosticShallow(src,o){return`{- ${_.entity.strType(src)} with ${this._lengthOf(src)} elements -}`}function exportStringDiagnosticShallow(src,o){return _.assert(this.like(src)),_.assert(1===arguments.length||2===arguments.length),_.assert(void 0===o||_.object.isBasic(o)),this._exportStringDiagnosticShallow(...arguments)}function _elementWithKey(src,key){return _.strIs(key)&&_.props.has(src,key)?[src[key],key,true]:[void 0,key,false]}function elementWithKey(src,key){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithKey(src,key)}function _elementWithKeySet(dst,key,val){return dst[key]=val,[key,true]}function elementWithKeySet(dst,key,val){return _.assert(3===arguments.length),_.assert(this.is(dst)),this._elementWithKeySet(dst,key,val)}function _elementWithKeyDel(dst,key){return!!this._hasKey(dst,key)&&(delete dst[key],true)}function elementWithKeyDel(dst,key){return _.assert(2===arguments.length),_.assert(this.is(dst)),this._elementWithKeyDel(dst,key)}function _eachLeft(src,onEach){let c=0;for(let k in src)onEach(src[k],k,c,src),c+=1}function eachLeft(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._eachLeft(src,onEach)}function _whileLeft(src,onEach){let c=0;let lastk;for(let k in src){let val=src[k];let r=onEach(val,k,c,src);if(_.assert(true===r||false===r),false===r)return[val,k,c,false];lastk=k,c+=1}return 0===c?[void 0,void 0,-1,true]:[src[lastk],lastk,c-1,true]}function whileLeft(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._whileLeft(src,onEach)}function aptLeft(src,onEach){return _.assert(1===arguments.length||2===arguments.length),_.assert(this.is(src)),this._aptLeft(src,onEach)}function aptRight(src,onEach){return _.assert(1===arguments.length||2===arguments.length),_.assert(this.is(src)),this._aptRight(src,onEach)}function filterWithoutEscapeLeft(dst,src,onEach){return this._filterAct(...arguments,true,"eachLeft",val=>val)}function filterWithEscapeLeft(dst,src,onEach){return this._filterAct(...arguments,true,"eachLeft",val=>_.escape.right(val))}function mapWithoutEscapeLeft(dst,src,onEach){return this._mapAct(...arguments,true,"eachLeft",val=>val)}function mapWithEscapeLeft(dst,src,onEach){return this._mapAct(...arguments,true,"eachLeft",val=>_.escape.right(val))}_.assert(void 0===_.props.implicit),_.assert(void 0===_.props.Implicit),_.props.implicit=_.wrap.declare({name:"Implicit"}).namespace,_.props.Implicit=_.props.implicit.class,_.assert(_.mapIs(_.props.implicit)),_.assert(_.routineIs(_.props.Implicit)),_.props.implicit.prototype=new _.props.Implicit(prototypeSymbol),_.props.implicit.constructor=new _.props.Implicit(constructorSymbol);let Extension={_identicalShallow:function _identicalShallow(src1,src2){if(this.keys(src1).length!==this.keys(src2).length)return false;for(let s in src1)if(src1[s]!==src2[s])return false;return true},identicalShallow:identicalShallow,identical:identicalShallow,_equivalentShallow:function _equivalentShallow(src1,src2){if(this.keys(src1).length!==this.keys(src2).length)return false;for(let s in src1)if(src1[s]!==src2[s])return false;return true},equivalentShallow:equivalentShallow,equivalent:equivalentShallow,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:exportStringDiagnosticShallow,exportString:exportStringDiagnosticShallow,keyIsImplicit:function keyIsImplicit(key){return!!_.props.implicit.is(key)&&(key.val===prototypeSymbol||key.val===constructorSymbol)},_onlyImplicitWithKey:function _onlyImplicitWithKey(src,key){if(_.props.implicit.is(key)){if(key.val===prototypeSymbol){if(void 0===src||null===src)return;return Object.getPrototypeOf(src)}if(key.val===constructorSymbol){if(void 0===src||null===src)return;let prototype=Object.getPrototypeOf(src);return prototype?prototype.constructor:prototype}}},onlyImplicitWithKey:function onlyImplicitWithKey(src,key){return _.assert(this===_.props),_.assert(2===arguments.length),this._onlyImplicitWithKey(src,key)},_onlyImplicitWithKeyTuple:function _onlyImplicitWithKeyTuple(container,key){let r=_.props._onlyImplicitWithKey(container,key);return[r,key,void 0!==r]},onlyImplicit:function onlyImplicit(src){let result=new HashMap;if(_.assert(this===_.props),_.assert(1===arguments.length),void 0===src||null===src)return result;var prototype=Object.getPrototypeOf(src);return prototype&&result.set(_.props.implicit.prototype,prototype),result},_lengthOf:function _lengthOf(src){return this.keys(src).length},lengthOf:function lengthOf(src){return _.assert(1===arguments.length),_.assert(this.like(src)),this._lengthOf(src)},_hasKey:function _hasKey(src,key){return!_.primitive.is(src)&&!!Reflect.has(src,key)},hasKey:function hasKey(src,key){return _.assert(this.like(src)),this._hasKey(src,key)},_hasCardinal:function _hasCardinal(src,cardinal){return!(cardinal<0)&&cardinal<this._lengthOf(src)},hasCardinal:function hasCardinal(src,cardinal){return _.assert(this.like(src)),this._hasCardinal(src,cardinal)},_keyWithCardinal:function _keyWithCardinal(src,cardinal){if(cardinal<0)return[void 0,false];let keys=this.keys(src);return cardinal<keys.length?[keys[cardinal],true]:[void 0,false]},keyWithCardinal:function keyWithCardinal(src,cardinal){return _.assert(this.like(src)),this._keyWithCardinal(src,cardinal)},_cardinalWithKey:function _cardinalWithKey(src,key){return key in src?this.keys(src).indexOf(key):-1},cardinalWithKey:function cardinalWithKey(src,key){return _.assert(this.like(src)),this._cardinalWithKey(src,key)},_elementGet:_elementWithKey,elementGet:elementWithKey,_elementWithKey:_elementWithKey,elementWithKey:elementWithKey,_elementWithImplicit:function _elementWithImplicit(src,key){return _.props.keyIsImplicit(key)?_.props._onlyImplicitWithKeyTuple(src,key):this._elementWithKey(src,key)},elementWithImplicit:function elementWithImplicit(src,key){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithImplicit(src,key)},_elementWithCardinal:function _elementWithCardinal(src,cardinal){if(!_.numberIs(cardinal)||cardinal<0)return[void 0,cardinal,false];let keys=this.keys(src);let key2=keys[cardinal];return keys.length<=cardinal?[void 0,cardinal,false]:[src[key2],key2,true]},elementWithCardinal:function elementWithCardinal(src,cardinal){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithCardinal(src,cardinal)},_elementSet:_elementWithKeySet,elementSet:elementWithKeySet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){let was=this._elementWithCardinal(dst,cardinal);return true===was[2]?(dst[was[1]]=val,[was[1],true]):[cardinal,false]},elementWithCardinalSet:function elementWithCardinalSet(dst,cardinal,val){return _.assert(3===arguments.length),_.assert(this.is(dst)),this._elementWithCardinalSet(dst,cardinal,val)},_elementDel:_elementWithKeyDel,elementDel:elementWithKeyDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){let has=this._keyWithCardinal(dst,cardinal);return!!has[1]&&(delete dst[has[0]],true)},elementWithCardinalDel:function elementWithCardinalDel(dst,cardinal){return _.assert(2===arguments.length),_.assert(this.is(dst)),this._elementWithCardinalDel(dst,cardinal)},_empty:function _empty(dst){for(let k in dst)delete dst[k];return dst},empty:function empty(dst){return _.assert(1===arguments.length,"Expects single argument"),_.assert(this.like(dst)),this._empty(dst)},_each:_eachLeft,each:eachLeft,_eachLeft:_eachLeft,eachLeft:eachLeft,_eachRight:function _eachRight(src,onEach){let keys=this.keys(src);for(let c=keys.length-1;c>=0;c--){let k=keys[c];onEach(src[k],k,c,src)}},eachRight:function eachRight(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._eachRight(src,onEach)},_while:_whileLeft,while:whileLeft,_whileLeft:_whileLeft,whileLeft:whileLeft,_whileRight:function _whileRight(src,onEach){let keys=this.keys(src);if(0===keys.length)return[void 0,void 0,-1,true];for(let c=keys.length-1;c>=0;c--){let k=keys[c];let val=src[k];let r=onEach(val,k,c,src);if(_.assert(true===r||false===r),false===r)return[val,k,c,false]}var k=keys[0];return[src[k],k,0,true]},whileRight:function whileRight(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._whileRight(src,onEach)},_aptLeft:function _aptLeft(src,onEach){let result,result2;return result2=onEach?this._whileLeft(src,function(val,k,c,src2){let r=onEach(...arguments);return void 0===r||(result=[r,k,c,true],false)}):this._whileLeft(src,function(val,k,c,src2){return result=[val,k,c,true],false}),void 0===result?(result2[3]=false,result2):result},aptLeft:aptLeft,first:aptLeft,_aptRight:function _aptRight(src,onEach){let result,result2;return result2=onEach?this._whileRight(src,function(val,k,c,src2){let r=onEach(...arguments);return void 0===r||(result=[r,k,c,true],false)}):this._whileRight(src,function(val,k,c,src2){return result=[val,k,c,true],false}),void 0===result?(result2[3]=false,result2):result},aptRight:aptRight,last:aptRight,_filterAct0:function _filterAct0(){const self=this;const dst=arguments[0];const src=arguments[1];const onEach=arguments[2];const each=arguments[3];const escape=arguments[4];return each(src,dst===src?function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);if(void 0===val2)self._elementDel(dst,k);else{if(val3===val)return;self._elementSet(dst,k,val3)}}:function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);void 0!==val2&&self._elementSet(dst,k,val3)}),dst},_filterAct:function _filterAct(){let dst=arguments[0];let src=arguments[1];let onEach=arguments[2];arguments[3];let eachRoutineName=arguments[4];let escape=arguments[5];let general=this.tools[this.MostGeneralNamespaceName];return null===dst?dst=this.makeUndefined(src):dst===_.self&&(dst=src),this._filterAct0(dst,src,onEach,general[eachRoutineName].bind(general),escape),dst},filterWithoutEscapeLeft:filterWithoutEscapeLeft,filterWithoutEscapeRight:function filterWithoutEscapeRight(dst,src,onEach){return this._filterAct(...arguments,false,"eachRight",val=>val)},filterWithoutEscape:filterWithoutEscapeLeft,filterWithEscapeLeft:filterWithEscapeLeft,filterWithEscapeRight:function filterWithEscapeRight(dst,src,onEach){return this._filterAct(...arguments,false,"eachRight",val=>_.escape.right(val))},filterWithEscape:filterWithEscapeLeft,filter:filterWithoutEscapeLeft,_mapAct0:function _mapAct0(){const self=this;const dst=arguments[0];const src=arguments[1];const onEach=arguments[2];const each=arguments[3];const escape=arguments[4];return each(src,dst===src?function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);val3!==val&&void 0!==val2&&self._elementSet(dst,k,val3)}:function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);void 0===val2?self._elementSet(dst,k,val):self._elementSet(dst,k,val3)}),dst},_mapAct:function _mapAct(){let dst=arguments[0];let src=arguments[1];let onEach=arguments[2];arguments[3];let eachRoutineName=arguments[4];let escape=arguments[5];let general=this.tools[this.MostGeneralNamespaceName];return null===dst?dst=(this.namespaceOf(src)||this.default||this).makeUndefined(src):dst===_.self&&(dst=src),this._mapAct0(dst,src,onEach,general[eachRoutineName].bind(general),escape),dst},mapWithoutEscapeLeft:mapWithoutEscapeLeft,mapWithoutEscapeRight:function mapWithoutEscapeRight(dst,src,onEach){return this._mapAct(...arguments,false,"eachRight",val=>val)},mapWithoutEscape:mapWithoutEscapeLeft,mapWithEscapeLeft:mapWithEscapeLeft,mapWithEscapeRight:function mapWithEscapeRight(dst,src,onEach){return this._mapAct(...arguments,false,"eachRight",val=>_.escape.right(val))},mapWithEscape:mapWithEscapeLeft,map:mapWithoutEscapeLeft};Object.assign(_.props,Extension)}()});module.exports,module.include,module.include}(),function _3Blank_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/3Blank.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _3Blank_s_naked(){!function _l1_3Blank_s_(){"use strict";_global_;const _=_global_.wTools;function _identicalShallow(src1,src2){return src1===src2}function _exportStringDiagnosticShallow(src){return`{- ${_.entity.strType(src)} -}`}function _elementWithKey(src,key){return[void 0,key,false]}function _elementWithKeySet(dst,key,val){return[key,false]}function _elementWithKeyDel(dst,key){return _.assert(0,`Cant delete element of ${this.NamespaceName}`),false}function _eachLeft(src,onEach){}function _whileLeft(src,onEach){return[void 0,void 0,-1,true]}_.blank=_.blank||Object.create(null);let BlankExtension={_identicalShallow:_identicalShallow,identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:_identicalShallow,equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:function _lengthOf(src){return 0},lengthOf:_.props.lengthOf,_hasKey:function _hasKey(src,key){return false},hasKey:_.props.hasKey,_hasCardinal:function _hasCardinal(src,cardinal){return false},hasCardinal:_.props.hasCardinal,_keyWithCardinal:function _keyWithCardinal(src,cardinal){return[void 0,false]},keyWithCardinal:_.props.keyWithCardinal,_cardinalWithKey:function _cardinalWithKey(key){return-1},cardinalWithKey:_.props.cardinalWithKey,_elementGet:_elementWithKey,elementGet:_.props.elementGet,_elementWithKey:_elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:function _elementWithCardinal(src,cardinal){return[void 0,cardinal,false]},elementWithCardinal:_.props.elementWithCardinal,_elementSet:_elementWithKeySet,elementSet:_.props.elementSet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){return[cardinal,false]},elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_elementWithKeyDel,elementDel:_.props.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){return _.assert(0,`Cant delete element of ${this.NamespaceName}`),false},elementWithCardinalDel:_.props.elementWithCardinalDel,_empty:function _empty(dst){return _.assert(0,`Cant empty ${this.NamespaceName}`),dst},empty:_.props.empty,_each:_eachLeft,each:_.props.each,_eachLeft:_eachLeft,eachLeft:_.props.eachLeft,_eachRight:function _eachRight(src,onEach){},eachRight:_.props.eachRight,_while:_whileLeft,while:_.props.while,_whileLeft:_whileLeft,whileLeft:_.props.whileLeft,_whileRight:function _whileRight(src,onEach){return[void 0,void 0,-1,true]},whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct0:_.props._filterAct0,_filterAct:_.props._filterAct,filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct0:_.props._mapAct0,_mapAct:_.props._mapAct,mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.blank,BlankExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function _3Long_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/3Long.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _3Long_s_naked(){!function _l3_Long_s_(){"use strict";_global_;const _=_global_.wTools;function _identicalShallow(src1,src2){let result=true;if(src1.length!==src2.length)return false;for(let s=0;s<src1.length;s++)if(false==(result=src1[s]===src2[s]))return false;return result}function _exportStringDiagnosticShallow(src){return _.unroll.is(src)?`{- ${_.entity.strType(src)}.unroll with ${this._lengthOf(src)} elements -}`:`{- ${_.entity.strType(src)} with ${this._lengthOf(src)} elements -}`}function _elementWithKey(src,key){return key<0||src.length<=key||!_.numberIs(key)?[void 0,key,false]:[src[key],key,true]}function elementWithKey(src,key){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithKey(src,key)}function _elementWithKeySet(dst,key,val){if(_.long.isResizable(dst)){if(key<0||!_.numberIs(key))return[key,false]}else if(key<0||dst.length<=key||!_.numberIs(key))return[key,false];return dst[key]=val,[key,true]}function elementWithKeySet(dst,key,val){return _.assert(3===arguments.length),_.assert(this.is(dst)),this._elementWithKeySet(dst,key,val)}function _elementWithKeyDel(dst,key){return!!this._hasKey(dst,key)&&(dst.splice(key,1),true)}function _eachLeft(src,onEach){for(let k=0;k<src.length;k++)onEach(src[k],k,k,src)}function eachLeft(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._eachLeft(src,onEach)}function _whileLeft(src,onEach){for(let k=0;k<src.length;k++){let r=onEach(src[k],k,k,src);if(_.assert(true===r||false===r),false===r)return[src[k],k,k,false]}let k=src.length-1;return src.length>0?[src[k],k,k,true]:[void 0,k,k,true]}function whileLeft(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._whileLeft(src,onEach)}_.container._functor_functor,_.long=_.long||Object.create(null),Object.assign(_,{});let LongExtension={appender:function appender(src){return _.assert(_.longLike(src)),"append"in src&&_.routine.is(src.append)?function appendWithAppend(val){src.append(val)}:"push"in src&&_.routine.is(src.push)?function appendWithPush(val){src.push(val)}:"add"in src&&_.routine.is(src.add)?function appendWithAdd(val){src.add(val)}:void 0},prepender:function prepender(src){return _.assert(_.longLike(src)),"prepend"in src&&_.routine.is(src.prepend)?function prependWithAppend(val){src.prepend(val)}:"push"in src&&_.routine.is(src.push)?function prependWithPush(val){src.unshift(val)}:"add"in src&&_.routine.is(src.add)?function prependWithAdd(val){src.add(val)}:void 0},eacher:function eacher(src){return _.assert(_.longLike(src)),_.class.methodIteratorOf(src)?function eachOf(onEach){let k=0;for(let val of src)onEach(val,k,src),k+=1;return k}:function eachLength(onEach){let k=0;for(;k<src.length;){let val=src[k];args2[0]=val,onEach(val,k,src),k+=1}return k}},_identicalShallow:_identicalShallow,identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:_identicalShallow,equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:function _lengthOf(src){return src.length},lengthOf:function lengthOf(src){return _.assert(1===arguments.length),_.assert(this.like(src)),this._lengthOf(src)},_hasKey:function _hasKey(src,key){return!(key<0)&&key<src.length},hasKey:function hasKey(src,key){return _.assert(this.like(src)),this._hasKey(src,key)},_hasCardinal:function _hasCardinal(src,cardinal){return!(cardinal<0)&&cardinal<src.length},hasCardinal:function hasCardinal(src,cardinal){return _.assert(this.like(src)),this._hasCardinal(src,cardinal)},_keyWithCardinal:function _keyWithCardinal(src,cardinal){return cardinal<0||src.length<=cardinal?[void 0,false]:[cardinal,true]},keyWithCardinal:function keyWithCardinal(src,cardinal){return _.assert(this.like(src)),this._keyWithCardinal(src,cardinal)},_cardinalWithKey:function _cardinalWithKey(src,key){return key<0||src.length<=key?-1:key},cardinalWithKey:function cardinalWithKey(src,key){return _.assert(this.like(src)),this._cardinalWithKey(src,key)},_elementGet:_elementWithKey,elementGet:elementWithKey,_elementWithKey:_elementWithKey,elementWithKey:elementWithKey,_elementWithImplicit:function _elementWithImplicit(src,key){return _.props.keyIsImplicit(key)?_.props._onlyImplicitWithKeyTuple(src,key):this._elementWithKey(src,key)},elementWithImplicit:function elementWithImplicit(src,key){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithImplicit(src,key)},_elementWithCardinal:function _elementWithCardinal(src,cardinal){return cardinal<0||src.length<=cardinal||!_.numberIs(cardinal)?[void 0,cardinal,false]:[src[cardinal],cardinal,true]},elementWithCardinal:function elementWithCardinal(src,cardinal){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithCardinal(src,cardinal)},_elementSet:_elementWithKeySet,elementSet:elementWithKeySet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){return cardinal<0||dst.length<=cardinal||!_.numberIs(cardinal)?[cardinal,false]:(dst[cardinal]=val,[cardinal,true])},elementWithCardinalSet:function elementWithCardinalSet(dst,cardinal,val){return _.assert(3===arguments.length),_.assert(this.is(dst)),this._elementWithCardinalSet(dst,cardinal,val)},_elementAppend:function _elementAppend(dst,val){return dst.push(val),dst.length-1},elementAppend:function elementAppend(dst,val){return _.assert(2===arguments.length),_.assert(this.is(dst)),_.assert(this.isResizable(dst)),this._elementAppend(dst,val)},_elementPrepend:function _elementPrepend(dst,val){return dst.unshift(val),0},elementPrepend:function elementPrepend(dst,val){return _.assert(2===arguments.length),_.assert(this.is(dst)),_.assert(this.isResizable(dst)),this._elementPrepend(dst,val)},_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:function elementWithKeyDel(dst,key){return _.assert(2===arguments.length),_.assert(this.is(dst)),_.assert(this.isResizable(dst)),this._elementWithKeyDel(dst,key)},_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){return!!this._hasKey(dst,cardinal)&&(dst.splice(cardinal,1),true)},elementWithCardinalDel:function elementWithCardinalDel(dst,cardinal){return _.assert(2===arguments.length),_.assert(this.is(dst)),_.assert(this.isResizable(dst)),this._elementWithCardinalDel(dst,cardinal,val)},_elementDel:_elementWithKeyDel,elementDel:_elementWithKeyDel,_empty:function _empty(dst){return dst.splice(0,dst.length),dst},empty:function empty(dst){return _.assert(1===arguments.length,"Expects single argument"),_.assert(this.like(dst)),_.assert(this.isResizable(dst)),this._empty(dst)},_each:_eachLeft,each:eachLeft,_eachLeft:_eachLeft,eachLeft:eachLeft,_eachRight:function _eachRight(src,onEach){for(let k=src.length-1;k>=0;k--)onEach(src[k],k,k,src)},eachRight:function eachRight(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._eachRight(src,onEach)},_while:_whileLeft,while:whileLeft,_whileLeft:_whileLeft,whileLeft:whileLeft,_whileRight:function _whileRight(src,onEach){for(let k=src.length-1;k>=0;k--){let r=onEach(src[k],k,k,src);if(_.assert(true===r||false===r),false===r)return[src[k],k,k,false]}return src.length>0?[src[0],0,0,true]:[void 0,-1,-1,true]},whileRight:function whileRight(src,onEach){_.assert(2===arguments.length),_.assert(this.is(src)),this._whileRight(src,onEach)},_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct:function _filterAct(...args){let dst=arguments[0];const src=arguments[1];const onEach=arguments[2];const isLeft=arguments[3];const eachRoutineName=arguments[4];const escape=arguments[5];const srcNamesapce=this.tools[this.MostGeneralNamespaceName].namespaceOf(src);let dstNamespace;const each=srcNamesapce[eachRoutineName];let isSelf;let dstIsResizable;let srcSample=null;return null===dst?(isSelf=false,(dstNamespace=this.namespaceOf(src)||this.default||this).IsResizable()?dstNamespace.is(src)&&!_.countable.isResizable(src)?(srcSample=src,dstIsResizable=false):(dst=dstNamespace.makeEmpty(src),dstIsResizable=true):dstIsResizable=false):dst===_.self?(isSelf=true,dst=src,dstNamespace=this.namespaceWithDefaultOf(dst),dstIsResizable=_.countable.isResizable(dst)):(dstNamespace=this.namespaceWithDefaultOf(dst),dstIsResizable=_.countable.isResizable(dst),isSelf=dst===src,dstIsResizable&&(isSelf||dstNamespace._empty(dst))),dstIsResizable?isSelf?isLeft?function resizableSelfLeft(){let l=dstNamespace._lengthOf(src);for(let k=0;k<l;k++){let val=src[k];let val2=onEach(val,k,k,src,dst);if(void 0===val2){dstNamespace._elementDel(dst,k),k-=1,l-=1;continue}let val3=escape(val2);val3!==val&&dstNamespace._elementSet(dst,k,val3)}}():function resizableSelfRight(){each.call(srcNamesapce,src,function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);if(void 0===val2)dstNamespace._elementDel(dst,k);else{if(val3===val)return;dstNamespace._elementSet(dst,k,val3)}})}():function resizableNonEq(){const append=isLeft?dstNamespace._elementAppend:dstNamespace._elementPrepend;each.call(srcNamesapce,src,function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);void 0!==val2&&append.call(dstNamespace,dst,val3)})}():null===dst?function nonResizableNull(){let dst2=[];isLeft?each.call(srcNamesapce,src,function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst2);let val3=escape(val2);void 0!==val2&&dst2.push(val3)}):each.call(srcNamesapce,src,function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst2);let val3=escape(val2);void 0!==val2&&dst2.unshift(val3)}),dst=dstNamespace.make(srcSample,dst2)}():function nonResizableNonNull(){each.call(srcNamesapce,src,function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);void 0!==val2&&dstNamespace._elementSet(dst,k,val3)})}(),dst},filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct:function _mapAct(...args){const self=this;let dst=arguments[0];const src=arguments[1];const onEach=arguments[2];arguments[3];const eachRoutineName=arguments[4];const escape=arguments[5];const srcNamesapce=this.tools[this.MostGeneralNamespaceName].namespaceOf(src);const each=srcNamesapce[eachRoutineName];let isSelf;let dstIsResizable;let dstNamespace;return null===dst?(isSelf=false,dstNamespace=self.namespaceOf(src)||self.default||self,dst=dstNamespace.makeUndefined(src),dstIsResizable=self.IsResizable()):dst===_.self?(isSelf=true,dst=src,dstNamespace=self.namespaceWithDefaultOf(dst),dstIsResizable=_.countable.isResizable(dst)):(dstNamespace=self.namespaceWithDefaultOf(dst),dstIsResizable=_.countable.isResizable(dst),isSelf=dst===src,dstIsResizable&&(isSelf||(dst.length=srcNamesapce._lengthOf(src)))),dst===src?each.call(srcNamesapce,src,function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);val3!==val&&void 0!==val2&&self._elementSet(dst,k,val3)}):each.call(srcNamesapce,src,function(val,k,c,src2){let val2=onEach(val,k,c,src2,dst);let val3=escape(val2);void 0===val2?self._elementSet(dst,k,val):self._elementSet(dst,k,val3)}),dst},mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.long,LongExtension)}()});module.exports,module.include,module.include}(),function _3Path_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/3Path.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _3Path_s_naked(){!function _l3_Path_s_(){"use strict";const _global=_global_;const _=_global_.wTools;const Self=_.path;function _normalize(o){if(_.routine.assertOptions(_normalize,arguments),_.assert(_.strIs(o.src),"Expects string"),!o.src.length)return"";let result=o.src;result=this.refine(result),o.tolerant&&(result=result.replace(this._delUpDupRegexp,this.upToken));let endsWithUp=false;let beginsWithHere=false;for(result!==this.upToken&&!_.strEnds(result,this.upToken+this.upToken)&&_.strEnds(result,this.upToken)&&(endsWithUp=true,result=_.strRemoveEnd(result,this.upToken));!_.strBegins(result,this.hereUpToken+this.upToken)&&_.strBegins(result,this.hereUpToken);)beginsWithHere=true,result=_.strRemoveBegin(result,this.hereUpToken);if(-1!==result.indexOf(this.hereToken)){for(;this._delHereRegexp.test(result);)result=result.replace(this._delHereRegexp,function(match,postSlash){return postSlash||""});""===result&&(result=this.upToken)}if(-1!==result.indexOf(this.downToken))for(;this._delDownRegexp.test(result);)result=result.replace(this._delDownRegexp,function(){arguments[0];let notBegin=arguments[1];arguments[2];let preSlash=arguments[3];let postSlash=arguments[4];return""===preSlash?notBegin:notBegin?notBegin+(postSlash||""):notBegin+preSlash});return result.length||(result="."),o.detrailing&&(result===this.upToken||_.strEnds(result,this.upToken+this.upToken)||(result=_.strRemoveEnd(result,this.upToken))),!o.detrailing&&endsWithUp&&result!==this.rootToken&&(result+=this.upToken),!o.undoting&&beginsWithHere&&(result=this._dot(result)),result}function dir_head(routine,args){let o=args[0];return _.strIs(o)&&(o=2===args.length?{filePath:args[0],depth:args[1]}:{filePath:args[0]}),_.routine.options(routine,o),_.assert(1===args.length||2===args.length),_.assert(2===arguments.length),_.assert(_.intIs(o.depth)),_.assert(_.strDefined(o.filePath),"Expects not empty string {- o.filePath -}"),o}function dir_body(o){let isTrailed=this.isTrailed(o.filePath);if(_.routine.assertOptions(dir_body,arguments),o.first?o.filePath=this.normalize(o.filePath):o.filePath=this.canonize(o.filePath),0===o.depth)return o.filePath;if(o.depth>1){for(let i=o.depth-1;i>=0;i--)if(o.filePath===this.rootToken||o.filePath===this.hereToken||o.filePath===this.downToken||o.filePath===this.hereToken+this.upToken||o.filePath===this.downToken+this.upToken||o.filePath.match(/\W{3}$/)&&"/.."===o.filePath.match(/\W{3}$/)[0]||o.filePath.match(/\W{4}$/)&&"/../"===o.filePath.match(/\W{4}$/)[0])"/"===o.filePath[o.filePath.length-1]?o.filePath=o.filePath+this.downToken+(o.first?this.upToken:""):o.filePath=o.filePath+this.upToken+this.downToken+(o.first?this.upToken:"");else if("/"===o.filePath[o.filePath.length-1])o.filePath=o.filePath.substring(0,o.filePath.length-1),o.filePath=o.filePath.substring(0,o.filePath.lastIndexOf("/")+(o.first?1:0)),0===o.filePath.length&&(o.filePath=".");else{let indexOfSubstr=0!==o.filePath.lastIndexOf("/")||o.first?o.filePath.lastIndexOf("/"):1;o.filePath=o.filePath.substring(0,indexOfSubstr+(o.first?1:0)),0===o.filePath.length&&(o.filePath=".")}return o.first||(o.filePath=_.path.canonize(o.filePath)),o.filePath}if(_.assert(o.depth>0),o.first&&isTrailed)return o.filePath;if(o.filePath===this.rootToken)return o.filePath+this.downToken+(o.first?this.upToken:"");if(_.strEnds(o.filePath,this.upToken+this.downToken)||o.filePath===this.downToken)return o.filePath+this.upToken+this.downToken+(o.first?this.upToken:"");let i=o.filePath.lastIndexOf(this.upToken);if(0===i)return this.rootToken;if(-1===i)return o.first?o.filePath===this.hereToken?this.downToken+this.upToken:this.hereToken+this.upToken:o.filePath===this.hereToken?this.downToken+(isTrailed?this.upToken:""):this.hereToken+(isTrailed?this.upToken:"");let result;return result=o.first?o.filePath.substr(0,i+this.upToken.length):o.filePath.substr(0,i),o.first||isTrailed&&(result=_.strAppendOnce(result,this.upToken)),_.assert(!!result.length),result}_normalize.defaults={src:null,tolerant:false,detrailing:false,undoting:false},dir_body.defaults={filePath:null,first:0,depth:1};let dir=_.routine.uniteCloning(dir_head,dir_body);dir.defaults.first=0;let dirFirst=_.routine.uniteCloning(dir_head,dir_body);function name_head(routine,args){let o=args[0];return _.strIs(o)&&(o={path:o}),_.routine.options_(routine,o),_.assert(1===args.length),_.assert(2===arguments.length),_.assert(_.strIs(o.path),"Expects string {-o.path-}"),o}function name_body(o){_.strIs(o)&&(o={path:o}),_.routine.assertOptions(name_body,arguments),o.path=this.canonize(o.path);let i=o.path.lastIndexOf("/");if(-1!==i&&(o.path=o.path.substr(i+1)),!o.full){let i=o.path.lastIndexOf(".");-1!==i&&(o.path=o.path.substr(0,i))}return o.path}dirFirst.defaults.first=1,_.assert(!dir.defaults.first),name_body.defaults={path:null,full:0};let name=_.routine.uniteCloning(name_head,name_body);name.defaults.full=0;let fullName=_.routine.uniteCloning(name_head,name_body);fullName.defaults.full=1;let Parameters={rootToken:"/",upToken:"/",hereToken:".",downToken:"..",hereUpToken:null,downUpToken:null,escapeTokens:["@","#","!","?"],_delHereRegexp:null,_delDownRegexp:null,_delUpDupRegexp:null,_pathIsGlobRegexp:null};let Extension={Init:function Init(){_.assert(_.strIs(this.rootToken)),_.assert(_.strIs(this.upToken)),_.assert(_.strIs(this.hereToken)),_.assert(_.strIs(this.downToken)),this.downUpToken||(this.downUpToken=this.downToken+this.upToken),this.hereUpToken||(this.hereUpToken=this.hereToken+this.upToken),_.regexpEscape(this.rootToken);let up=_.regexpEscape(this.upToken);let down=_.regexpEscape(this.downToken);let here=_.regexpEscape(this.hereToken);let upOrEnd=`(?:${up}|$)`;let splitOrUp=`(?:(?:${up}${up})|((${`(?:^|${up})`})${`(?!${down}(?:${up}|$))`}${`(?:(?!${up}).)+`}${up}))`;this._delDownRegexp=new RegExp(`((?:.|^))${splitOrUp}${down}(${upOrEnd})`,""),this._delHereRegexp=new RegExp(up+here+"("+up+"|$)"),this._delUpDupRegexp=/\/{2,}/g},CloneExtending:function CloneExtending(o){_.assert(1===arguments.length);let result=Object.create(this);return _.props.extend(result,Parameters,o),result.Init(),result},is:function is(path){return _.assert(1===arguments.length,"Expects single argument"),_.strIs(path)},isRefined:function isRefined(path){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(path),"Expects string {-path-}, but got",_.entity.strType(path)),(":"!==path[1]||"\\"!==path[2])&&!/\\/g.test(path)},isNormalized:function isNormalized(filePath){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string");let normalizedPath=this.normalize(filePath);let trailedPath=this.trail(normalizedPath);return normalizedPath===filePath||trailedPath===filePath},isAbsolute:function isAbsolute(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string {-filePath-}, but got",_.entity.strType(filePath)),filePath=this.refine(filePath),_.strBegins(filePath,this.upToken)},isRelative:function isRelative(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string {-filePath-}, but got",_.entity.strType(filePath)),!this.isAbsolute(filePath)},isGlobal:function isGlobal(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string"),_.strHas(filePath,"://")},isRoot:function isRoot(filePath){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(filePath),"Expects string {-filePath-}, but got",_.entity.strType(filePath)),filePath===this.rootToken||!this.isRelative(filePath)&&this.normalize(filePath)===this.rootToken},_isDotted:function _isDotted(srcPath){return _.assert(1===arguments.length,"Expects single argument"),srcPath===this.hereToken||srcPath===this.downToken||!!_.strBegins(srcPath,this.hereToken+this.upToken)||!!_.strBegins(srcPath,this.downToken+this.upToken)},isDotted:function isDotted(srcPath){return _.assert(1===arguments.length,"Expects single argument"),!!this._isDotted(srcPath)||!!_.strBegins(srcPath,this.hereToken+"\\")||!!_.strBegins(srcPath,this.downToken+"\\")},isTrailed:function isTrailed(srcPath){return _.assert(1===arguments.length,"Expects single argument"),srcPath!==this.rootToken&&_.strEnds(srcPath,this.upToken)},begins:function begins(srcPath,beginPath){return _.assert(2===arguments.length,"Expects two arguments"),_.assert(_.strIs(srcPath),"Expects string {-srcPath-}, but got",_.entity.strType(srcPath)),_.assert(_.strIs(beginPath),"Expects string {-beginPath-}, but got",_.entity.strType(beginPath)),srcPath===beginPath||_.strBegins(srcPath,this.trail(beginPath))},ends:function ends(srcPath,endPath){if(_.assert(2===arguments.length,"Expects two arguments"),endPath=this.undot(endPath),!_.strEnds(srcPath,endPath))return false;let begin=_.strRemoveEnd(srcPath,endPath);return!(""!==begin&&!_.strEnds(begin,this.upToken)&&!_.strEnds(begin,this.hereToken))},refine:function refine(src){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src));let result=src;return":"===result[1]&&("\\"===result[2]||"/"===result[2]?result=result.length>3?"/"+result[0]+"/"+result.substring(3):"/"+result[0]:2===result.length&&(result="/"+result[0])),result.replace(/\\/g,"/")},_normalize:_normalize,normalize:function normalize(src){let result=this._normalize({src:src,tolerant:false,detrailing:false,undoting:false});return _.assert(_.strIs(src),"Expects string"),_.assert(1===arguments.length,"Expects single argument"),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},normalizeTolerant:function normalizeTolerant(src){_.assert(_.strIs(src),"Expects string");let result=this._normalize({src:src,tolerant:true,detrailing:false,undoting:false});return _.assert(1===arguments.length,"Expects single argument"),_.assert(result===this.upToken||_.strEnds(result,this.upToken)||!_.strEnds(result,this.upToken+this.upToken)),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},canonize:function canonize(src){let result=this._normalize({src:src,tolerant:false,detrailing:true,undoting:true});return _.assert(_.strIs(src),"Expects string"),_.assert(1===arguments.length,"Expects single argument"),_.assert(result===this.upToken||_.strEnds(result,this.upToken+this.upToken)||!_.strEnds(result,this.upToken)),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},canonizeTolerant:function canonizeTolerant(src){_.assert(_.strIs(src),"Expects string");let result=this._normalize({src:src,tolerant:true,detrailing:true,undoting:true});return _.assert(1===arguments.length,"Expects single argument"),_.assert(result===this.upToken||_.strEnds(result,this.upToken)||!_.strEnds(result,this.upToken+this.upToken)),_.assert(-1===result.lastIndexOf(this.upToken+this.hereToken+this.upToken)),_.assert(!_.strEnds(result,this.upToken+this.hereToken)),result},_nativizeMinimalWindows:function _nativizeMinimalWindows(filePath){let result=filePath;return"\\"===(result=result.replace(/\//g,"\\"))[0]&&(2!==result.length&&":"!==result[2]&&"\\"!==result[2]||(result=result[1]+":"+result.substring(2))),2===result.length&&":"===result[1]&&(result+="\\"),result},_nativizeWindows:function _nativizeWindows(filePath){_.assert(_.strIs(filePath),"Expects string");let result=filePath;return _.assert(_.routine.is(this.unescape)),result=this.unescape(result),this._nativizeMinimalWindows(result)},_nativizeMinimalPosix:function _nativizeMinimalPosix(filePath){return filePath},_nativizePosix:function _nativizePosix(filePath){let result=filePath;return _.assert(_.strIs(filePath),"Expects string"),_.assert(_.routine.is(this.unescape)),this.unescape(result)},_nativizeEscapingWindows:function _nativizeEscapingWindows(filePath){let unescapeResult=this._unescape(filePath);let result=this._nativizeMinimalWindows(unescapeResult.unescaped);return unescapeResult.wasEscaped&&(result=filePath.replace(unescapeResult.unescaped,result)),result},_nativizeEscapingPosix:function _nativizeEscapingPosix(filePath){let result=filePath;return _.assert(_.strIs(filePath),"Expects string"),result},nativize:function nativize(){return _global.process&&"win32"===_global.process.platform?this.nativize=this._nativizeWindows:this.nativize=this._nativizePosix,this.nativize.apply(this,arguments)},nativizeMinimal:function nativizeMinimal(){return _global.process&&"win32"===_global.process.platform?this.nativizeMinimal=this._nativizeMinimalWindows:this.nativizeMinimal=this._nativizeMinimalPosix,this.nativizeMinimal.apply(this,arguments)},nativizeEscaping:function nativizeEscaping(){return _global.process&&"win32"===_global.process.platform?this.nativizeEscaping=this._nativizeEscapingWindows:this.nativizeEscaping=this._nativizeEscapingPosix,this.nativizeEscaping.apply(this,arguments)},_unescape:function _unescape(filePath){let splits=filePath.split(this.upToken);let result=Object.create(null);return result.wasEscaped=false,splits=splits.map(split=>{{let i=0;for(;'"'===split[i];)i+=1;if(i>0){let c=i;c%2==1&&(result.wasEscaped=true);let c2=Math.floor((c+1)/2);split=split.substring(c2,split.length)}}{let i=split.length-1;for(;'"'===split[i];)i-=1;if(i<split.length-1){let c=split.length-i-1;c%2==1&&(result.wasEscaped=true);let c2=Math.floor((c+1)/2);split=split.substring(0,split.length-c2)}}return split}),result.unescaped=splits.join(this.upToken),result},unescape:function unescape(filePath){return this._unescape(filePath).unescaped},_split:function _split(path){return path.split(this.upToken)},split:function split(path){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(path),"Expects string"),this._split(this.refine(path))},_dot:function _dot(filePath){return this._isDotted(filePath)||(_.assert(!_.strBegins(filePath,this.upToken)),filePath=this.hereUpToken+filePath),filePath},dot:function dot(filePath){return _.assert(!_.strBegins(filePath,this.upToken)),_.assert(1===arguments.length),this.isDotted(filePath)||(_.assert(!_.strBegins(filePath,this.upToken)),filePath=this.hereUpToken+filePath),filePath},undot:function undot(filePath){return filePath===this.hereUpToken?filePath:_.strRemoveBegin(filePath,this.hereUpToken)},absolute:function absolute(filePath){return this.join(this.rootToken,filePath)},unabsolute:function unabsolute(filePath){return _.strRemoveBegin(filePath,this.rootToken)},trail:function trail(srcPath){return _.assert(this.is(srcPath)),_.assert(1===arguments.length),_.strEnds(srcPath,this.upToken)?srcPath:srcPath+this.upToken},detrail:function detrail(path){return _.assert(this.is(path)),_.assert(1===arguments.length),path!==this.rootToken?_.strRemoveEnd(path,this.upToken):path},dir:dir,dirFirst:dirFirst,name:name,fullName:fullName,Parameters:Parameters,fileProvider:null,path:Self,single:Self,s:null};Object.assign(Self,Parameters),Object.assign(Self,Extension),Self.Init()}()});module.exports,module.include,module.include}(),function ArgumentsArray_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/ArgumentsArray.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ArgumentsArray_s_naked(){!function _l3_ArgumentsArray_s_(){"use strict";_global_;const _=_global_.wTools;function _elementWithKeyDel(src,key){return _.assert(0,`${this.TypeName} has fixed length`),false}_.assert(!!_.long._aptLeft,"Expects routine props._aptLeft"),_.assert(!!_.long._elementWithKey,"Expects routine long._elementWithKey");var ArgumentsArrayExtension={_identicalShallow:_.long._identicalShallow,identicalShallow:_.long.identicalShallow,identical:_.long.identical,_equivalentShallow:_.long._equivalentShallow,equivalentShallow:_.long.equivalentShallow,equivalent:_.long.equivalent,_exportStringDiagnosticShallow:_.long._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.long.exportStringDiagnosticShallow,_exportStringCodeShallow:_.long._exportStringCodeShallow,exportStringCodeShallow:_.long.exportStringCodeShallow,exportString:_.long.exportString,_lengthOf:_.long._lengthOf,lengthOf:_.long.lengthOf,_hasKey:_.long._hasKey,hasKey:_.long._hasKey,_hasCardinal:_.long._hasKey,hasCardinal:_.long._hasKey,_keyWithCardinal:_.long._hasKey,keyWithCardinal:_.long._hasKey,_cardinalWithKey:_.long._cardinalWithKey,cardinalWithKey:_.long.cardinalWithKey,_elementGet:_.long._elementWithKey,elementGet:_.long.elementWithKey,_elementWithKey:_.long._elementWithKey,elementWithKey:_.long.elementWithKey,_elementWithImplicit:_.long._elementWithImplicit,elementWithImplicit:_.long.elementWithImplicit,_elementWithCardinal:_.long._elementWithCardinal,elementWithCardinal:_.long.elementWithCardinal,_elementSet:_.long._elementSet,elementSet:_.long.elementSet,_elementWithKeySet:_.long._elementWithKeySet,elementWithKeySet:_.long.elementWithKeySet,_elementWithCardinalSet:_.long._elementWithCardinalSet,elementWithCardinalSet:_.long.elementWithCardinalSet,_elementAppend:function _elementAppend(dst,val){return-1},elementAppend:function elementAppend(dst,val){_.assert(0,`${this.TypeName} has fixed length`)},_elementPrepend:function _elementPrepend(dst,val){return-1},elementPrepend:function elementPrepend(dst,val){_.assert(0,`${this.TypeName} has fixed length`)},_elementDel:_elementWithKeyDel,elementDel:_.long.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.long.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(src,cardinal){return _.assert(0,`${this.TypeName} has fixed length`),false},elementWithCardinalDel:_.long.elementWithCardinalDel,_empty:function _empty(dst){return _.assert(0,`${this.TypeName} has fixed length`),false},empty:_.long.empty,_each:_.long._each,each:_.long.each,_eachLeft:_.long._eachLeft,eachLeft:_.long.eachLeft,_eachRight:_.long._eachRight,eachRight:_.long.eachRight,_while:_.long._while,while:_.long.while,_whileLeft:_.long._whileLeft,whileLeft:_.long.whileLeft,_whileRight:_.long._whileRight,whileRight:_.long.whileRight,_aptLeft:_.long._aptLeft,aptLeft:_.long.aptLeft,first:_.long.first,_aptRight:_.long._aptRight,aptRight:_.long.aptRight,last:_.long.last,_filterAct:_.long._filterAct,filterWithoutEscapeLeft:_.long.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.long.filterWithoutEscapeRight,filterWithoutEscape:_.long.filterWithoutEscape,filterWithEscapeLeft:_.long.filterWithEscapeLeft,filterWithEscapeRight:_.long.filterWithEscapeRight,filterWithEscape:_.long.filterWithEscape,filter:_.long.filter,_mapAct:_.long._mapAct,mapWithoutEscapeLeft:_.long.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.long.mapWithoutEscapeRight,mapWithoutEscape:_.long.mapWithoutEscape,mapWithEscapeLeft:_.long.mapWithEscapeLeft,mapWithEscapeRight:_.long.mapWithEscapeRight,mapWithEscape:_.long.mapWithEscape,map:_.long.map};Object.assign(_.argumentsArray,ArgumentsArrayExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Array_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Array.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Array_s_naked(){!function _l3_Array_s_(){"use strict";_global_;const _=_global_.wTools;function arrayPrepended(dstArray,ins){return _.assert(2===arguments.length),_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),dstArray.unshift(ins),0}function arrayPrependedOnce(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),-1===_.longLeftIndex.apply(_,arguments)?(dstArray.unshift(ins),0):-1}function arrayPrependedElement(dstArray,ins){return _.assert(2===arguments.length),_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),dstArray.unshift(ins),ins}function arrayPrependedElementOnce(){let dstArray=arguments[0];let ins=arguments[1];if(arguments[2],arguments[3],_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),-1===_.longLeftIndex.apply(_,arguments))return dstArray.unshift(ins),dstArray[0]}function arrayPrependedArray(dstArray,insArray){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.array.is(dstArray),"arrayPrependedArray :","Expects array"),_.assert(_.longLike(insArray),"arrayPrependedArray :","Expects longLike");let result=insArray.length;return dstArray.unshift.apply(dstArray,insArray),result}function arrayPrependedArrayOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),_.assert(_.longLike(insArray));let result=0;if(dstArray===insArray&&2===arguments.length)return result;for(let i=insArray.length-1;i>=0;i--){let index=i;dstArray===insArray&&(index=i+result),-1===_.longLeftIndex(dstArray,insArray[index],evaluator1,evaluator2)&&(dstArray.unshift(insArray[index]),result+=1)}return result}function arrayPrependedArrays(dstArray,insArray){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.array.is(dstArray),"arrayPrependedArrays :","Expects array"),_.assert(_.longLike(insArray),"arrayPrependedArrays :","Expects longLike entity");let result=0;if(dstArray===insArray)return result=insArray.length,dstArray.unshift.apply(dstArray,insArray),result;for(let a=0,len=insArray.length;a<len;a++)_.longLike(insArray[a])?(result+=insArray[a].length,dstArray.unshift.apply(dstArray,insArray[a])):(dstArray.unshift(insArray[a]),result+=1);return result}function arrayPrependedArraysOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.array.is(dstArray),"arrayPrependedArraysOnce :","Expects array"),_.assert(_.longLike(insArray),"arrayPrependedArraysOnce :","Expects longLike entity");let result=0;if(dstArray===insArray&&2===arguments.length)return result;function _prependOnce(element){-1===_.longLeftIndex(dstArray,element,evaluator1,evaluator2)&&(dstArray.unshift(element),result+=1)}for(let ii=0,len=insArray.length;ii<len;ii++)if(_.longLike(insArray[ii])){let array=insArray[ii];array===dstArray&&(array=array.slice());for(let a=array.length-1;a>=0;a--)_prependOnce(array[a])}else _prependOnce(dstArray===insArray?insArray[ii+result]:insArray[ii]);return result}function arrayAppendedElement(dstArray,ins){return _.assert(2===arguments.length),_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),dstArray.push(ins),dstArray.length-1}function arrayAppendedElementOnce(dstArray,ins){return-1===_.longLeftIndex.apply(_,arguments)&&(dstArray.push(ins),dstArray[dstArray.length-1])}function arrayAppendedArray(dstArray,insArray){_.assert(2===arguments.length),_.assert(_.array.is(dstArray),"arrayPrependedArray :","Expects array"),_.assert(_.longLike(insArray),"arrayPrependedArray :","Expects longLike");let result=insArray.length;return dstArray.push.apply(dstArray,insArray),result}function arrayAppendedArrays(dstArray,insArray){_.assert(2===arguments.length,"Expects exactly two arguments"),_.longLike(insArray)||void 0===insArray||(insArray=[insArray]),_.assert(_.array.is(dstArray),"Expects array"),_.assert(_.longLike(insArray),"Expects longLike entity");let result=0;for(let a=0,len=insArray.length;a<len;a++)_.longLike(insArray[a])?(dstArray.push.apply(dstArray,insArray[a]),result+=insArray[a].length):(dstArray.push(insArray[a]),result+=1);return result}function _elementWithKeyDel(src,key){return!!this._hasKey(src,key)&&(src.splice(key,1),true)}function elementWithKeyDel(src,key){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithKeyDel(src,key)}_.assert(!!_.long._elementWithKey,"Expects routine argumentsArray._elementWithKey"),_.assert(!!_.long.exportString,"Expects routine _.long.exportString");let ToolsExtension={arrayPrepend:function arrayPrepend(dstArray,ins){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrepended.apply(this,arguments),dstArray},arrayPrependOnce:function arrayPrependOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrependedOnce.apply(this,arguments),dstArray},arrayPrependOnceStrictly:function arrayPrependOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=arrayPrepended.apply(this,[dstArray,ins]),dstArray},arrayPrepended:arrayPrepended,arrayPrependedOnce:arrayPrependedOnce,arrayPrependedOnceStrictly:function arrayPrependedOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],arrayPrepended.apply(this,[dstArray,ins])},arrayPrependElement:function arrayPrependElement(dstArray,ins){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrependedElement.apply(this,arguments),dstArray},arrayPrependElementOnce:function arrayPrependElementOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrependedElementOnce.apply(this,arguments),dstArray},arrayPrependElementOnceStrictly:function arrayPrependElementOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=arrayPrependedElement.apply(this,[dstArray,ins]),dstArray},arrayPrependedElement:arrayPrependedElement,arrayPrependedElementOnce:arrayPrependedElementOnce,arrayPrependedElementOnceStrictly:function arrayPrependedElementOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],arrayPrependedElement.apply(this,[dstArray,ins])},arrayPrependArray:function arrayPrependArray(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrependedArray.apply(this,arguments),dstArray},arrayPrependArrayOnce:function arrayPrependArrayOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrependedArrayOnce.apply(this,arguments),dstArray},arrayPrependArrayOnceStrictly:function arrayPrependArrayOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=arrayPrependedArray.apply(this,[dstArray,insArray]),dstArray},arrayPrependedArray:arrayPrependedArray,arrayPrependedArrayOnce:arrayPrependedArrayOnce,arrayPrependedArrayOnceStrictly:function arrayPrependedArrayOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];return arguments[2],arguments[3],arrayPrependedArray.apply(this,[dstArray,insArray])},arrayPrependArrays:function arrayPrependArrays(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrependedArrays.apply(this,arguments),dstArray},arrayPrependArraysOnce:function arrayPrependArraysOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayPrependedArraysOnce.apply(this,arguments),dstArray},arrayPrependArraysOnceStrictly:function arrayPrependArraysOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=arrayPrependedArrays.apply(this,[dstArray,insArray]),dstArray},arrayPrependedArrays:arrayPrependedArrays,arrayPrependedArraysOnce:arrayPrependedArraysOnce,arrayPrependedArraysOnceStrictly:function arrayPrependedArraysOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];return arguments[2],arguments[3],arrayPrependedArrays.apply(this,[dstArray,insArray])},arrayAppend:function arrayAppend(dstArray,ins){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayAppended.apply(this,arguments),dstArray},arrayAppendOnce:function arrayAppendOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayAppendedOnce.apply(this,arguments),dstArray},arrayAppendOnceStrictly:function arrayAppendOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=_.arrayAppended.apply(this,[dstArray,ins]),dstArray},arrayAppended:function arrayAppended(dstArray,ins){return _.assert(2===arguments.length),_.assert(_.array.is(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),dstArray.push(ins),dstArray.length-1},arrayAppendedOnce:function arrayAppendedOnce(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],-1===_.longLeftIndex.apply(_,arguments)?(dstArray.push(ins),dstArray.length-1):-1},arrayAppendedOnceStrictly:function arrayAppendedOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],_.arrayAppended.apply(this,[dstArray,ins])},arrayAppendElement:function arrayAppendElement(dstArray,ins){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayAppendedElement.apply(this,arguments),dstArray},arrayAppendElementOnce:function arrayAppendElementOnce(dstArray,ins){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayAppendedElementOnce.apply(this,arguments),dstArray},arrayAppendElementOnceStrictly:function arrayAppendElementOnceStrictly(dstArray,ins){let result;return null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=arrayAppendedElement.apply(this,[dstArray,ins]),dstArray},arrayAppendedElement:arrayAppendedElement,arrayAppendedElementOnce:arrayAppendedElementOnce,arrayAppendedElementOnceStrictly:function arrayAppendedElementOnceStrictly(dstArray,ins){return arrayAppendedElement.apply(this,[dstArray,ins])},arrayAppendArray:function arrayAppendArray(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayAppendedArray.apply(this,arguments),dstArray},arrayAppendArrayOnce:function arrayAppendArrayOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayAppendedArrayOnce.apply(this,arguments),dstArray},arrayAppendArrayOnceStrictly:function arrayAppendArrayOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=arrayAppendedArray.apply(this,[dstArray,insArray]),dstArray},arrayAppendedArray:arrayAppendedArray,arrayAppendedArrayOnce:function arrayAppendedArrayOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];_.assert(_.longLike(insArray)),_.assert(2<=arguments.length&&arguments.length<=4);let result=0;if(dstArray===insArray&&2===arguments.length)return result;for(let i=0,len=insArray.length;i<len;i++)-1===_.longLeftIndex(dstArray,insArray[i],evaluator1,evaluator2)&&(dstArray.push(insArray[i]),result+=1);return result},arrayAppendedArrayOnceStrictly:function arrayAppendedArrayOnceStrictly(dstArray,ins){return arrayAppendedElement.apply(this,[dstArray,ins])},arrayAppendArrays:function arrayAppendArrays(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),void 0===dstArray?(_.assert(2===arguments.length),insArray):(_.arrayAppendedArrays.apply(this,arguments),dstArray)},arrayAppendArraysOnce:function arrayAppendArraysOnce(){let dstArray=arguments[0];let insArray=arguments[1];if(arguments[2],arguments[3],null===dstArray)dstArray=[],arguments[0]=dstArray;else if(void 0===dstArray){if(!_.array.is(insArray))return _.assert(2<=arguments.length&&arguments.length<=4),insArray;dstArray=[],arguments[0]=dstArray}return _.arrayAppendedArraysOnce.apply(this,arguments),dstArray},arrayAppendArraysOnceStrictly:function arrayAppendArraysOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let result;return arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),result=arrayAppendedArrays.apply(this,[dstArray,insArray]),dstArray},arrayAppendedArrays:arrayAppendedArrays,arrayAppendedArraysOnce:function arrayAppendedArraysOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];if(_.assert(2<=arguments.length&&arguments.length<=4),void 0===dstArray)return insArray
;_.array.is(insArray)||void 0===insArray||(insArray=[insArray]),_.assert(_.array.is(dstArray),"Expects array"),_.assert(_.longLike(insArray),"Expects longLike entity");let result=0;if(dstArray===insArray&&2===arguments.length)return result;for(let a=0,len=insArray.length;a<len;a++)if(_.longLike(insArray[a])){let array=insArray[a];for(let i=0,alen=array.length;i<alen;i++)_appendOnce(array[i])}else _appendOnce(insArray[a]);return result;function _appendOnce(argument){-1===_.longLeftIndex(dstArray,argument,evaluator1,evaluator2)&&(dstArray.push(argument),result+=1)}},arrayAppendedArraysOnceStrictly:function arrayAppendedArraysOnceStrictly(dstArray,ins){return arrayAppendedArrays.apply(this,[dstArray,ins])},accuracy:1e-7,accuracySqrt:1e-4,accuracySqr:1e-14};Object.assign(_,ToolsExtension);let ArrayExtension={slice:function slice(srcArray,f,l){return _.assert(this.likeResizable(srcArray)),_.assert(1<=arguments.length&&arguments.length<=3),srcArray.slice(f,l)},_identicalShallow:_.long._identicalShallow,identicalShallow:_.long.identicalShallow,identical:_.long.identical,_equivalentShallow:_.long._equivalentShallow,equivalentShallow:_.long.equivalentShallow,equivalent:_.long.equivalent,_exportStringDiagnosticShallow:_.long._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.long.exportStringDiagnosticShallow,_exportStringCodeShallow:_.long._exportStringCodeShallow,exportStringCodeShallow:_.long.exportStringCodeShallow,exportString:_.long.exportString,_lengthOf:_.long._lengthOf,lengthOf:_.long.lengthOf,_hasKey:_.long._hasKey,hasKey:_.long._hasKey,_hasCardinal:_.long._hasKey,hasCardinal:_.long._hasKey,_keyWithCardinal:_.long._hasKey,keyWithCardinal:_.long._hasKey,_cardinalWithKey:_.long._cardinalWithKey,cardinalWithKey:_.long.cardinalWithKey,_elementGet:_.long._elementWithKey,elementGet:_.long.elementWithKey,_elementWithKey:_.long._elementWithKey,elementWithKey:_.long.elementWithKey,_elementWithImplicit:_.long._elementWithImplicit,elementWithImplicit:_.long.elementWithImplicit,_elementWithCardinal:_.long._elementWithCardinal,elementWithCardinal:_.long.elementWithCardinal,_elementSet:_.long._elementSet,elementSet:_.long.elementSet,_elementWithKeySet:_.long._elementWithKeySet,elementWithKeySet:_.long.elementWithKeySet,_elementWithCardinalSet:_.long._elementWithCardinalSet,elementWithCardinalSet:_.long.elementWithCardinalSet,_elementAppend:function _elementAppend(dst,val){return dst.push(val),dst.length-1},elementAppend:function elementAppend(dst,val){return _.assert(2===arguments.length),_.assert(this.is(dst)),this._elementAppend(dst,val)},_elementPrepend:function _elementPrepend(dst,val){return dst.unshift(val),0},elementPrepend:function elementPrepend(dst,val){return _.assert(2===arguments.length),_.assert(this.is(dst)),this._elementAppend(dst,val)},_elementDel:_elementWithKeyDel,elementDel:elementWithKeyDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(src,cardinal){return!!this._hasKey(src,cardinal)&&(src.splice(cardinal,1),true)},elementWithCardinalDel:function elementWithCardinalDel(src,cardinal){return _.assert(2===arguments.length),_.assert(this.is(src)),this._elementWithCardinalDel(src,cardinal,val)},_empty:function _empty(dst){return dst.splice(0,dst.length),dst},empty:function empty(dst){return _.assert(1===arguments.length,"Expects single argument"),_.assert(this.like(dst)),this._empty(dst)},_each:_.long._each,each:_.long.each,_eachLeft:_.long._eachLeft,eachLeft:_.long.eachLeft,_eachRight:_.long._eachRight,eachRight:_.long.eachRight,_while:_.long._while,while:_.long.while,_whileLeft:_.long._whileLeft,whileLeft:_.long.whileLeft,_whileRight:_.long._whileRight,whileRight:_.long.whileRight,_aptLeft:_.long._aptLeft,aptLeft:_.long.aptLeft,first:_.long.first,_aptRight:_.long._aptRight,aptRight:_.long.aptRight,last:_.long.last,_filterAct:_.long._filterAct,filterWithoutEscapeLeft:_.long.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.long.filterWithoutEscapeRight,filterWithoutEscape:_.long.filterWithoutEscape,filterWithEscapeLeft:_.long.filterWithEscapeLeft,filterWithEscapeRight:_.long.filterWithEscapeRight,filterWithEscape:_.long.filterWithEscape,filter:_.long.filter,_mapAct:_.long._mapAct,mapWithoutEscapeLeft:_.long.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.long.mapWithoutEscapeRight,mapWithoutEscape:_.long.mapWithoutEscape,mapWithEscapeLeft:_.long.mapWithEscapeLeft,mapWithEscapeRight:_.long.mapWithEscapeRight,mapWithEscape:_.long.mapWithEscape,map:_.long.map};Object.assign(_.array,ArrayExtension)}()});module.exports,module.include,module.include}(),function ArraySet_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/ArraySet.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ArraySet_s_naked(){!function _l3_ArraySet_s_(){"use strict";_global_;const _=_global_.wTools;_.arraySet=_.arraySet||Object.create(null),Object.assign(_,{}),Object.assign(_.arraySet,{})}()});module.exports,module.include,module.include}(),function Auxiliary_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Auxiliary.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Auxiliary_s_naked(){!function _l3_Auxiliary_s_(){"use strict";_global_;const _=_global_.wTools;function _identicalShallow(src1,src2){if(Object.keys(src1).length!==Object.keys(src2).length)return false;for(let s in src1)if(src1[s]!==src2[s])return false;return true}_.assert(!!_.props.exportString,"Expects routine _.props.exportString"),Object.assign(_,{});var AuxiliaryExtension={_identicalShallow:_identicalShallow,identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:_identicalShallow,equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,_exportStringDiagnosticShallow:_.props._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_.props._exportStringCodeShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:_.props._lengthOf,lengthOf:_.props.lengthOf,_hasKey:_.props._hasKey,hasKey:_.props._hasKey,_hasCardinal:_.props._hasKey,hasCardinal:_.props._hasKey,_keyWithCardinal:_.props._hasKey,keyWithCardinal:_.props._hasKey,_cardinalWithKey:_.props._cardinalWithKey,cardinalWithKey:_.props.cardinalWithKey,_elementGet:_.props._elementWithKey,elementGet:_.props.elementWithKey,_elementWithKey:_.props._elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:_.props._elementWithCardinal,elementWithCardinal:_.props.elementWithCardinal,_elementSet:_.props._elementSet,elementSet:_.props.elementSet,_elementWithKeySet:_.props._elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:_.props._elementWithCardinalSet,elementWithCardinalSet:_.props.elementWithCardinalSet,_empty:_.props._empty,empty:_.props.empty,_elementDel:_.props._elementDel,elementDel:_.props.elementDel,_elementWithKeyDel:_.props._elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:_.props._elementWithCardinalDel,elementWithCardinalDel:_.props.elementWithCardinalDel,_each:_.props._each,each:_.props.each,_eachLeft:_.props._eachLeft,eachLeft:_.props.eachLeft,_eachRight:_.props._eachRight,eachRight:_.props.eachRight,_while:_.props._while,while:_.props.while,_whileLeft:_.props._whileLeft,whileLeft:_.props.whileLeft,_whileRight:_.props._whileRight,whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct0:_.props._filterAct0,_filterAct:_.props._filterAct,filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct0:_.props._mapAct0,_mapAct:_.props._mapAct,mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.aux,AuxiliaryExtension)}()});module.exports,module.include,module.include}(),function Bool_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Bool.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Bool_s_naked(){!function _l3_Bool_s_(){"use strict";_global_;const _=_global_.wTools;function are(src){return _.assert(1===arguments.length),!!_.argumentsArray.like(src)&&src.filter(e=>_.bool.is(e))}function allAre(src){return _.assert(1===arguments.length),_.arrayIs(src)?_.all(src.filter(e=>_.bool.is(e))):_.bool.is(src)}function anyAre(src){return _.assert(1===arguments.length),_.arrayIs(src)?!!_.any(src.filter(e=>_.bool.is(e))):_.bool.is(src)}function noneAre(src){return _.assert(1===arguments.length),_.arrayIs(src)?_.none(src.filter(e=>_.bool.is(e))):_.bool.is(src)}function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._identicalShallow(src1,src2)}function equivalentShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._equivalentShallow(src1,src2)}let BoolExtension={_identicalShallow:function _identicalShallow(src1,src2){return src1===src2},identicalShallow:identicalShallow,identical:identicalShallow,_equivalentShallow:function _equivalentShallow(src1,src2){return!!(_.bool.likeTrue(src1)&&_.bool.likeTrue(src2)||_.bool.likeFalse(src1)&&_.bool.likeFalse(src2))},equivalentShallow:equivalentShallow,equivalent:equivalentShallow};Object.assign(_.bool,BoolExtension);let BoolsExtension={are:are,allAre:allAre,anyAre:anyAre,noneAre:noneAre};Object.assign(_.bools,BoolsExtension);let ToolsExtension={boolsAre:are,boolsAllAre:allAre,boolsAnyAre:anyAre,boolsNoneAre:noneAre};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Buffer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Buffer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Buffer_s_naked(){!function _l3_Buffer_s_(){"use strict";_global_;const _=_global_.wTools;function bufferCoerceFrom(o){if(_.assert(1===arguments.length),_.assert(_.routine.is(o.bufferConstructor),"Expects bufferConstructor"),null===o.src||_.number.is(o.src))return"Buffer"===o.bufferConstructor.name?o.bufferConstructor.alloc(o.src?o.src:0):"DataView"===o.bufferConstructor.name?new o.bufferConstructor(new U8x(o.src).buffer):new o.bufferConstructor(o.src);if(_.assert(_.bufferAnyIs(o.src)||_.long.is(o.src)||_.strIs(o.src)),_.strIs(o.src)&&(o.src=_.bufferBytesFrom(o.src)),o.src.constructor===o.bufferConstructor)return o.src;if(_.bufferViewIs(o.src)&&(o.src=o.src.buffer.slice(o.src.byteOffset,o.src.byteLength)),_.constructorIsBuffer(o.bufferConstructor))return new o.bufferConstructor(o.src);if("Buffer"===o.bufferConstructor.name)return o.bufferConstructor.from(o.src);if("DataView"===o.bufferConstructor.name)return new o.bufferConstructor(new U8x(o.src).buffer);if("ArrayBuffer"===o.bufferConstructor.name)return new U8x(o.src).buffer;if("SharedArrayBuffer"===o.bufferConstructor.name){let srcTyped=_.bufferRawIs(o.src)?new U8x(o.src):o.src;let result=new BufferRawShared(srcTyped.length);let resultTyped=new U8x(result);for(let i=0;i<srcTyped.length;i++)resultTyped[i]=srcTyped[i];return result}}function equivalentShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!_.buffer.like(src1)&&!!_.buffer.like(src2)&&_.buffer._equivalentShallow(src1,src2)}function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!_.buffer.like(src1)&&!!_.buffer.like(src2)&&_.buffer._identicalShallow(src1,src2)}function _elementWithKey(src,key){return _.long.is(src)||_.bufferNode.is(src)?_.long._elementWithKey(...arguments):_.itself._elementWithKey(...arguments)}function _elementWithKeySet(dst,key,val){return _.long.is(dst)||_.bufferNode.is(dst)?_.long._elementWithKeySet(...arguments):_.itself._elementWithKeySet(...arguments)}function _elementWithKeyDel(dst,key){throw _.err(`${this.TypeName} has fixed length`)}bufferCoerceFrom.defaults={src:null,bufferConstructor:null};let BufferExtension={_identicalShallow:function _identicalShallow(src1,src2){return Object.prototype.toString.call(src1)===Object.prototype.toString.call(src2)&&(_.bufferTypedIs(src1)?_.buffersTypedAreIdentical(src1,src2):_.bufferRawIs(src1)?_.buffersRawAreIdentical(src1,src2):_.bufferViewIs(src1)?_.buffersViewAreIdentical(src1,src2):!!_.bufferNodeIs(src1)&&_.buffersNodeAreIdentical(src1,src2))},identicalShallow:identicalShallow,identical:identicalShallow,_equivalentShallow:function _equivalentShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),_.bufferTypedIs(src1)?_.buffersTypedAreEquivalent(src1,src2,accuracy):_.bufferRawIs(src1)?_.buffersRawAreIdentical(src1,src2):_.bufferViewIs(src1)?_.buffersViewAreIdentical(src1,src2):!!_.bufferNodeIs(src1)&&_.buffersNodeAreIdentical(src1,src2)},equivalentShallow:equivalentShallow,equivalent:equivalentShallow,_exportStringDiagnosticShallow:function _exportStringDiagnosticShallow(src){return _.long.is(src)?_.long._exportStringDiagnosticShallow(src):_.object._exportStringDiagnosticShallow(src)},exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:function _exportStringCodeShallow(src){return _.long.is(src)?_.long._exportStringCodeShallow(src):_.object._exportStringCodeShallow(src)},exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:function _lengthOf(src){return _.long.is(src)||_.bufferNode.is(src)?src.length:_.itself._lengthOf(...arguments)},lengthOf:_.props.lengthOf,_hasKey:function _hasKey(src,key){return _.long.is(src)||_.bufferNode.is(src)?_.long._hasKey(...arguments):_.itself._hasKey(...arguments)},hasKey:_.props.hasKey,_hasCardinal:function _hasCardinal(src,cardinal){return _.long.is(src)||_.bufferNode.is(src)?_.long._hasCardinal(...arguments):_.itself._hasCardinal(...arguments)},hasCardinal:_.props.hasCardinal,_keyWithCardinal:function _keyWithCardinal(src,cardinal){return _.long.is(src)||_.bufferNode.is(src)?_.long._keyWithCardinal(...arguments):_.itself._keyWithCardinal(...arguments)},keyWithCardinal:_.props.keyWithCardinal,_empty:function _empty(dst){throw _.err(`${this.TypeName} has fixed length`)},empty:_.props.elementWithKeyDel,_elementGet:_elementWithKey,elementGet:_.props.elementGet,_elementWithKey:_elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:function _elementWithImplicit(src,key){return _.props.keyIsImplicit(key)?_.props._onlyImplicitWithKeyTuple(src,key):this._elementWithKey(src,key)},elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:function _elementWithCardinal(src,cardinal){return _.long.is(src)||_.bufferNode.is(src)?_.long._elementWithCardinal(...arguments):_.itself._elementWithCardinal(...arguments)},elementWithCardinal:_.props.elementWithCardinal,_elementSet:_elementWithKeySet,elementSet:_.props.elementSet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){return _.long.is(dst)||_.bufferNode.is(dst)?_.long._elementWithCardinalSet(...arguments):_.itself._elementWithCardinalSet(...arguments)},elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_elementWithKeyDel,elementDel:_.props.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){throw _.err(`${this.TypeName} has fixed length`)},elementWithCardinalDel:_.props.elementWithCardinalDel};Object.assign(_.buffer,BufferExtension);let ToolsExtension={constructorIsBuffer:function constructorIsBuffer(src){return!!src&&!!_.number.is(src.BYTES_PER_ELEMENT)&&!!_.strIs(src.name)&&-1!==src.name.indexOf("Array")},bufferCoerceFrom:bufferCoerceFrom,buffersTypedAreEquivalent:function buffersTypedAreEquivalent(src1,src2,accuracy){if(!_.long.is(src1))return false;if(!_.long.is(src2))return false;if(src1.length!==src2.length)return false;null!==accuracy&&void 0!==accuracy||(accuracy=_.accuracy);for(let i=0;i<src1.length;i++)if(Math.abs(src1[i]-src2[i])>accuracy)return false;return true},buffersTypedAreIdentical:function buffersTypedAreIdentical(src1,src2){if(!_.bufferTypedIs(src1))return false;if(!_.bufferTypedIs(src2))return false;if(Object.prototype.toString.call(src1)!==Object.prototype.toString.call(src2))return false;if(src1.length!==src2.length)return false;for(let i=0;i<src1.length;i++)if(!Object.is(src1[i],src2[i]))return false;return true},buffersRawAreIdentical:function buffersRawAreIdentical(src1,src2){if(!_.bufferRawIs(src1))return false;if(!_.bufferRawIs(src2))return false;if(src1.byteLength!==src2.byteLength)return false;src1=new U8x(src1),src2=new U8x(src2);for(let i=0;i<src1.length;i++)if(src1[i]!==src2[i])return false;return true},buffersViewAreIdentical:function buffersViewAreIdentical(src1,src2){if(!_.bufferViewIs(src1))return false;if(!_.bufferViewIs(src2))return false;if(src1.byteLength!==src2.byteLength)return false;for(let i=0;i<src1.byteLength;i++)if(src1.getUint8(i)!==src2.getUint8(i))return false;return true},buffersNodeAreIdentical:function buffersNodeAreIdentical(src1,src2){return!!_.bufferNodeIs(src1)&&!!_.bufferNodeIs(src2)&&src1.equals(src2)},buffersAreIdentical:identicalShallow,buffersIdenticalShallow:identicalShallow,buffersAreEquivalent:equivalentShallow,buffersEquivalentShallow:equivalentShallow};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function BuffersTyped_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/BuffersTyped.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BuffersTyped_s_naked(){!function _l1_BuffersTyped_s_(){"use strict";_global_;const _=_global_.wTools;function _functor(namespace){Object.assign(_,{});let BufferTypedExtension={_identicalShallow:_.long._identicalShallow,identicalShallow:_.long.identicalShallow,identical:_.long.identical,_equivalentShallow:_.long._equivalentShallow,equivalentShallow:_.long.equivalentShallow,equivalent:_.long.equivalent,_exportStringDiagnosticShallow:_.long._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.long.exportStringDiagnosticShallow,_exportStringCodeShallow:_.long._exportStringCodeShallow,exportStringCodeShallow:_.long.exportStringCodeShallow,exportString:_.long.exportString,_lengthOf:_.long._lengthOf,lengthOf:_.long.lengthOf,_hasKey:_.long._hasKey,hasKey:_.long._hasKey,_hasCardinal:_.long._hasKey,hasCardinal:_.long._hasKey,_keyWithCardinal:_.long._hasKey,keyWithCardinal:_.long._hasKey,_cardinalWithKey:_.long._cardinalWithKey,cardinalWithKey:_.long.cardinalWithKey,_elementGet:_.long._elementWithKey,elementGet:_.long.elementWithKey,_elementWithKey:_.long._elementWithKey,elementWithKey:_.long.elementWithKey,_elementWithImplicit:_.long._elementWithImplicit,elementWithImplicit:_.long.elementWithImplicit,_elementWithCardinal:_.long._elementWithCardinal,elementWithCardinal:_.long.elementWithCardinal,_elementSet:_.long._elementSet,elementSet:_.long.elementSet,_elementWithKeySet:_.long._elementWithKeySet,elementWithKeySet:_.long.elementWithKeySet,_elementWithCardinalSet:_.long._elementWithCardinalSet,elementWithCardinalSet:_.long.elementWithCardinalSet,_elementAppend:_.argumentsArray._elementAppend,elementAppend:_.argumentsArray.elementAppend,_elementPrepend:_.argumentsArray._elementPrepend,elementPrepend:_.argumentsArray.elementPrepend,_elementDel:_.argumentsArray._elementDel,elementDel:_.argumentsArray.elementDel,_elementWithKeyDel:_.argumentsArray._elementWithKeyDel,elementWithKeyDel:_.argumentsArray.elementWithKeyDel,_elementWithCardinalDel:_.argumentsArray._elementWithCardinalDel,elementWithCardinalDel:_.argumentsArray.elementWithCardinalDel,_empty:_.argumentsArray._empty,empty:_.argumentsArray.empty,_each:_.long._each,each:_.long.each,_eachLeft:_.long._eachLeft,eachLeft:_.long.eachLeft,_eachRight:_.long._eachRight,eachRight:_.long.eachRight,_while:_.long._while,while:_.long.while,_whileLeft:_.long._whileLeft,whileLeft:_.long.whileLeft,_whileRight:_.long._whileRight,whileRight:_.long.whileRight,_aptLeft:_.long._aptLeft,aptLeft:_.long.aptLeft,first:_.long.first,_aptRight:_.long._aptRight,aptRight:_.long.aptRight,last:_.long.last,_filterAct:_.long._filterAct,filterWithoutEscapeLeft:_.long.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.long.filterWithoutEscapeRight,filterWithoutEscape:_.long.filterWithoutEscape,filterWithEscapeLeft:_.long.filterWithEscapeLeft,filterWithEscapeRight:_.long.filterWithEscapeRight,filterWithEscape:_.long.filterWithEscape,filter:_.long.filter,_mapAct:_.long._mapAct,mapWithoutEscapeLeft:_.long.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.long.mapWithoutEscapeRight,mapWithoutEscape:_.long.mapWithoutEscape,mapWithEscapeLeft:_.long.mapWithEscapeLeft,mapWithEscapeRight:_.long.mapWithEscapeRight,mapWithEscape:_.long.mapWithEscape,map:_.long.map};Object.assign(namespace,BufferTypedExtension)}_.assert(!!_.fx),_.assert(!_.fx.filter),_.assert(!_.fx.map);for(let name in _.long.namespaces){let namespace=_.long.namespaces[name];namespace.IsTyped&&_functor(namespace)}_.assert(!!_.fx.filter),_.assert(!!_.fx.map)}()});module.exports,module.include,module.include}(),function BufferTyped_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/BufferTyped.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BufferTyped_s_naked(){!function _l3_BufferTyped_s_(){"use strict";_global_;const _=_global_.wTools;_.assert(!!_.long._aptLeft,"Expects routine props._aptLeft"),_.assert(!!_.long._elementWithKey,"Expects routine long._elementWithKey");var BufferTypedExtension={_identicalShallow:_.long._identicalShallow,identicalShallow:_.long.identicalShallow,identical:_.long.identical,_equivalentShallow:_.long._equivalentShallow,equivalentShallow:_.long.equivalentShallow,equivalent:_.long.equivalent,_exportStringDiagnosticShallow:_.long._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.long.exportStringDiagnosticShallow,_exportStringCodeShallow:_.long._exportStringCodeShallow,exportStringCodeShallow:_.long.exportStringCodeShallow,exportString:_.long.exportString,_lengthOf:_.long._lengthOf,lengthOf:_.long.lengthOf,_hasKey:_.long._hasKey,hasKey:_.long._hasKey,_hasCardinal:_.long._hasKey,hasCardinal:_.long._hasKey,_keyWithCardinal:_.long._hasKey,keyWithCardinal:_.long._hasKey,_cardinalWithKey:_.long._cardinalWithKey,cardinalWithKey:_.long.cardinalWithKey,_elementGet:_.long._elementWithKey,elementGet:_.long.elementWithKey,_elementWithKey:_.long._elementWithKey,elementWithKey:_.long.elementWithKey,_elementWithImplicit:_.long._elementWithImplicit,elementWithImplicit:_.long.elementWithImplicit,_elementWithCardinal:_.long._elementWithCardinal,elementWithCardinal:_.long.elementWithCardinal,_elementSet:_.long._elementSet,elementSet:_.long.elementSet,_elementWithKeySet:_.long._elementWithKeySet,elementWithKeySet:_.long.elementWithKeySet,_elementWithCardinalSet:_.long._elementWithCardinalSet,elementWithCardinalSet:_.long.elementWithCardinalSet,_elementAppend:_.argumentsArray._elementAppend,elementAppend:_.argumentsArray.elementAppend,_elementPrepend:_.argumentsArray._elementPrepend,elementPrepend:_.argumentsArray.elementPrepend,_elementDel:_.argumentsArray._elementDel,elementDel:_.argumentsArray.elementDel,_elementWithKeyDel:_.argumentsArray._elementWithKeyDel,elementWithKeyDel:_.argumentsArray.elementWithKeyDel,_elementWithCardinalDel:_.argumentsArray._elementWithCardinalDel,elementWithCardinalDel:_.argumentsArray.elementWithCardinalDel,_empty:_.argumentsArray._empty,empty:_.argumentsArray.empty,_each:_.long._each,each:_.long.each,_eachLeft:_.long._eachLeft,eachLeft:_.long.eachLeft,_eachRight:_.long._eachRight,eachRight:_.long.eachRight,_while:_.long._while,while:_.long.while,_whileLeft:_.long._whileLeft,whileLeft:_.long.whileLeft,_whileRight:_.long._whileRight,whileRight:_.long.whileRight,_aptLeft:_.long._aptLeft,aptLeft:_.long.aptLeft,first:_.long.first,_aptRight:_.long._aptRight,aptRight:_.long.aptRight,last:_.long.last,_filterAct:_.long._filterAct,filterWithoutEscapeLeft:_.long.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.long.filterWithoutEscapeRight,filterWithoutEscape:_.long.filterWithoutEscape,filterWithEscapeLeft:_.long.filterWithEscapeLeft,filterWithEscapeRight:_.long.filterWithEscapeRight,filterWithEscape:_.long.filterWithEscape,filter:_.long.filter,_mapAct:_.long._mapAct,mapWithoutEscapeLeft:_.long.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.long.mapWithoutEscapeRight,mapWithoutEscape:_.long.mapWithoutEscape,mapWithEscapeLeft:_.long.mapWithEscapeLeft,mapWithEscapeRight:_.long.mapWithEscapeRight,mapWithEscape:_.long.mapWithEscape,map:_.long.map};Object.assign(_.bufferTyped,BufferTypedExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Container_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Container.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Container_s_naked(){!function _l3_Container_s_(){"use strict";_global_;const _=_global_.wTools;const _functor_functor=_.container._functor_functor;function _exportStringDiagnosticShallow(src,o){let namespace=this.namespaceForExporting(src);return namespace?namespace.exportStringDiagnosticShallow(src):_.strShort_(String(src)).result}function exportStringDiagnosticShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringDiagnosticShallow(...arguments)}function keys(src){return _.assert(1===arguments.length),keys.functor.call(this,src)()}function vals(src){return _.assert(1===arguments.length),vals.functor.call(this,src)()}function pairs(src){return _.assert(1===arguments.length),pairs.functor.call(this,src)()}function lengthOf(src){return _.assert(1===arguments.length),lengthOf.functor.call(this,src)()}function hasKey(src,...args){return _.assert(2===arguments.length),hasKey.functor.call(this,src)(...args)}function hasCardinal(src,...args){return _.assert(2===arguments.length),hasCardinal.functor.call(this,src)(...args)}function keyWithCardinal(src,...args){return _.assert(2===arguments.length),keyWithCardinal.functor.call(this,src)(...args)}function cardinalWithKey(src,...args){return _.assert(2===arguments.length),cardinalWithKey.functor.call(this,src)(...args)}function elementWithCardinal(src,key){return _.assert(2===arguments.length),_.assert(_.numberIs(key)),!_.numberIs(key)||key<0?[void 0,key,false]:elementWithCardinal.functor.call(this,src)(key)}function elementWithKey(src,key){return _.assert(2===arguments.length),elementWithKey.functor.call(this,src)(key)}function elementWithImplicit(src,key){return _.assert(2===arguments.length),elementWithImplicit.functor.call(this,src)(key)}function elementWithCardinalSet(src,key,val){return _.assert(3===arguments.length),_.assert(_.numberIs(key)),elementWithCardinalSet.functor.call(this,src)(key,val)}function elementSet(src,key,val){return _.assert(3===arguments.length),elementSet.functor.call(this,src)(key,val)}function elementDel(src,key){return _.assert(2===arguments.length),elementDel.functor.call(this,src)(key)}function elementWithKeyDel(src,key){return _.assert(2===arguments.length),elementWithKeyDel.functor.call(this,src)(key)}function elementWithCardinalDel(src,key){return _.assert(2===arguments.length),elementWithCardinalDel.functor.call(this,src)(key)}function empty(src){return _.assert(1===arguments.length),empty.functor.call(this,src)()}function eachLeft(src,onEach){return _.assert(2===arguments.length),eachLeft.functor.call(this,src)(onEach)}function eachRight(src,onEach){return _.assert(2===arguments.length),eachRight.functor.call(this,src)(onEach)}function whileLeft(src,onEach){return _.assert(2===arguments.length),whileLeft.functor.call(this,src)(onEach)}function whileRight(src,onEach){return _.assert(2===arguments.length),whileRight.functor.call(this,src)(onEach)}function aptLeft(src,onEach){return _.assert(1===arguments.length||2===arguments.length),aptLeft.functor.call(this,src)(onEach)}function aptRight(src,onEach){return _.assert(1===arguments.length||2===arguments.length),aptRight.functor.call(this,src)(onEach)}function filterWithoutEscapeLeft(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),filterWithoutEscapeLeft.functor.call(this,src)(dst,...args)}function filterWithoutEscapeRight(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),filterWithoutEscapeRight.functor.call(this,src)(dst,...args)}function filterWithEscapeLeft(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),filterWithEscapeLeft.functor.call(this,src)(dst,...args)}function filterWithEscapeRight(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),filterWithEscapeRight.functor.call(this,src)(dst,...args)}function mapWithoutEscapeLeft(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),mapWithoutEscapeLeft.functor.call(this,src)(dst,...args)}function mapWithoutEscapeRight(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),mapWithoutEscapeRight.functor.call(this,src)(dst,...args)}function mapWithEscapeLeft(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),mapWithEscapeLeft.functor.call(this,src)(dst,...args)}function mapWithEscapeRight(dst,src,...args){return _.assert(2===arguments.length||3===arguments.length),mapWithEscapeRight.functor.call(this,src)(dst,...args)}keys.functor=_functor_functor("keys"),vals.functor=_functor_functor("vals"),pairs.functor=_functor_functor("pairs"),lengthOf.functor=_functor_functor("lengthOf"),hasKey.functor=_functor_functor("hasKey"),hasCardinal.functor=_functor_functor("hasCardinal"),keyWithCardinal.functor=_functor_functor("keyWithCardinal"),cardinalWithKey.functor=_functor_functor("cardinalWithKey"),elementWithCardinal.functor=_functor_functor("elementWithCardinal"),elementWithKey.functor=_functor_functor("elementWithKey"),elementWithImplicit.functor=_functor_functor("elementWithImplicit"),elementWithCardinalSet.functor=_functor_functor("elementWithCardinalSet"),elementSet.functor=_functor_functor("elementSet"),elementDel.functor=_functor_functor("elementDel"),elementWithKeyDel.functor=_functor_functor("elementWithKeyDel"),elementWithCardinalDel.functor=_functor_functor("elementWithCardinalDel"),empty.functor=_functor_functor("empty"),eachLeft.functor=_functor_functor("eachLeft"),eachRight.functor=_functor_functor("eachRight"),whileLeft.functor=_functor_functor("whileLeft"),whileRight.functor=_functor_functor("whileRight"),aptLeft.functor=_functor_functor("aptLeft"),aptRight.functor=_functor_functor("aptRight"),filterWithoutEscapeLeft.functor=_functor_functor("filterWithoutEscapeLeft",null,1),filterWithoutEscapeRight.functor=_functor_functor("filterWithoutEscapeRight",null,1),filterWithEscapeLeft.functor=_functor_functor("filterWithEscapeLeft",null,1),filterWithEscapeRight.functor=_functor_functor("filterWithEscapeRight",null,1),mapWithoutEscapeLeft.functor=_functor_functor("mapWithoutEscapeLeft",null,1),mapWithoutEscapeRight.functor=_functor_functor("mapWithoutEscapeRight",null,1),mapWithEscapeLeft.functor=_functor_functor("mapWithEscapeLeft",null,1),mapWithEscapeRight.functor=_functor_functor("mapWithEscapeRight",null,1);let ContainerExtension={_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:exportStringDiagnosticShallow,exportString:exportStringDiagnosticShallow,keys:keys,vals:vals,pairs:pairs,lengthOf:lengthOf,hasKey:hasKey,hasCardinal:hasCardinal,keyWithCardinal:keyWithCardinal,cardinalWithKey:cardinalWithKey,elementWithCardinal:elementWithCardinal,elementWithKey:elementWithKey,elementWithImplicit:elementWithImplicit,elementWithCardinalSet:elementWithCardinalSet,elementSet:elementSet,elementDel:elementDel,elementWithKeyDel:elementWithKeyDel,elementWithCardinalDel:elementWithCardinalDel,empty:empty,each:eachLeft,eachLeft:eachLeft,eachRight:eachRight,while:whileLeft,whileLeft:whileLeft,whileRight:whileRight,aptLeft:aptLeft,first:aptLeft,aptRight:aptRight,last:aptRight,filterWithoutEscapeLeft:filterWithoutEscapeLeft,filterWithoutEscapeRight:filterWithoutEscapeRight,filterWithoutEscape:filterWithoutEscapeLeft,filterWithEscapeLeft:filterWithEscapeLeft,filterWithEscapeRight:filterWithEscapeRight,filterWithEscape:filterWithEscapeLeft,filter:filterWithoutEscapeLeft,mapWithoutEscapeLeft:mapWithoutEscapeLeft,mapWithoutEscapeRight:mapWithoutEscapeRight,mapWithoutEscape:mapWithoutEscapeLeft,mapWithEscapeLeft:mapWithEscapeLeft,mapWithEscapeRight:mapWithEscapeRight,mapWithEscape:mapWithEscapeLeft,map:mapWithoutEscapeLeft};Object.assign(_.container,ContainerExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function ContainerAdapter_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/ContainerAdapter.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ContainerAdapter_s_naked(){!function _l3_ContainerAdapter_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.containerAdapter,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Countable_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Countable.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Countable_s_naked(){!function _l3_Countable_s_(){"use strict";_global_;const _=_global_.wTools;function _exportStringDiagnosticShallow(src,o){return _.unroll.is(src)?`{- ${_.entity.strType(src)}.unroll with ${this._lengthOf(src)} elements -}`:`{- ${_.entity.strType(src)} with ${this._lengthOf(src)} elements -}`}function _elementWithKey(src,key){if(_.long.is(src))return _.long._elementWithKey(...arguments);if(_.number.is(key)){if(key<0)return[void 0,key,false];debugger;const src2=[...src];return src2.length<=key?[void 0,key,false]:[src2[key],key,true]}return[void 0,key,false]}function _elementWithKeySet(dst,key,val){if(_.long.is(dst))return _.long._elementWithKeySet(...arguments);if(!_.number.is(key)||key<0)return[key,false];if(this._lengthOf(dst)<=key)return[key,false];let elementWithKeySet=_.class.methodElementWithKeySetOf(dst);if(elementWithKeySet)return elementWithKeySet.call(dst,key,val);let elementSet=_.class.methodElementSetOf(dst);if(elementSet)return[elementSet.call(dst,key,val),key,true];_.assert(0,'Countable does not have implemented neither method "elementWithKeySet" nor method "eSet"')}function _elementWithKeyDel(dst,key){if(_.array.is(dst))return _.array._elementWithKeyDel(dst,key);_.assert(0,'Countable does not have implemented method "_elementWithKeyDel"')}function _eachLeft(src,onEach){let k=0;for(let val of src)onEach(val,k,k,src),k+=1}function _whileLeft(src,onEach){let k=0;let laste;for(let val of src){let r=onEach(val,k,k,src);if(_.assert(true===r||false===r),false===r)return[val,k,false];laste=val,k+=1}return k>0?[laste,k-1,k-1,true]:[void 0,k-1,k-1,true]}Object.assign(_,{});var CountableExtension={_identicalShallow:function _identicalShallow(src1,src2){if(Object.prototype.toString.call(src1)!==Object.prototype.toString.call(src2))return false;if(!_.countable.is(src1))return false;if(!_.countable.is(src2))return false;if(_.longIs(src1))return _.long.identicalShallow(src1,src2);{let array1=[...src1];for(let val of src2)if(-1===array1.indexOf(val))return false;return true}},identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:function _equivalentShallow(src1,src2){let result=true;return _.longIs(src1)&&_.longIs(src2)?_.long.equivalentShallow(src1,src2):_.argumentsArray.like(src1)?check(src2,src1):_.argumentsArray.like(src2)?check(src1,src2):check(src2,[...src1]);function check(arrayLoop,arrayCheck){for(let val of arrayLoop)if(-1===Array.prototype.indexOf.call(arrayCheck,val))return false;return true}},equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:function _lengthOf(src){return _.vector.is(src)?src.length:[...src].length},lengthOf:_.props.lengthOf,_hasKey:function _hasKey(src,key){return!(key<0)&&key<this._lengthOf(src)},hasKey:_.props.hasKey,_hasCardinal:function _hasCardinal(src,cardinal){return!(cardinal<0)&&cardinal<this._lengthOf(src)},hasCardinal:_.props.hasCardinal,_keyWithCardinal:function _keyWithCardinal(src,cardinal){return cardinal<0||this._lengthOf(src)<=cardinal?[void 0,false]:[cardinal,true]},keyWithCardinal:_.props.keyWithCardinal,_cardinalWithKey:function _cardinalWithKey(src,key){return key<0||this._lengthOf(src)<=key?-1:key},cardinalWithKey:_.props.cardinalWithKey,_elementGet:_elementWithKey,elementGet:_.props.elementGet,_elementWithKey:_elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:function _elementWithCardinal(src,cardinal){if(_.long.is(src))return _.long._elementWithCardinal(...arguments);if(!_.number.is(cardinal)||cardinal<0)return[void 0,cardinal,false];const src2=[...src];return src2.length<=cardinal?[void 0,cardinal,false]:[src2[cardinal],cardinal,true]},elementWithCardinal:_.props.elementWithCardinal,_elementSet:_elementWithKeySet,elementSet:_.props.elementSet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){if(_.long.is(dst))return _.long._elementWithCardinalSet(...arguments);if(!_.number.is(cardinal)||cardinal<0)return[cardinal,false];if(this._lengthOf(dst)<=cardinal)return[cardinal,false];let was=this._elementWithCardinal(dst,cardinal);return was[2]&&this._elementWithKeySet(dst,was[1],val),[cardinal,false]},elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_elementWithKeyDel,elementDel:_.props.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){if(_.array.is(dst))return _.array._elementWithCardinalDel(dst,cardinal);_.assert(0,'Countable does not have implemented method "_elementWithCardinalDel"')},elementWithCardinalDel:_.props.elementWithCardinalDel,_empty:function _empty(dst){if(_.array.is(dst))return _.array._empty(dst);_.assert(0,'Countable does not have implemented method "_empty"')},empty:_.props.empty,_elementAppend:function _elementAppend(dst,val){if(_.array.is(dst))return dst.push(val),dst.length-1;_.assert(0,'Countable does not have implemented method "_elementAppend"')},elementAppend:_.long.elementAppend,_elementPrepend:function _elementPrepend(dst,val){if(_.array.is(dst))return dst.unshift(val),0;_.assert(0,'Countable does not have implemented method "_elementPrepend"')},elementPrepend:_.long.elementPrepend,_each:_eachLeft,each:_.props.each,_eachLeft:_eachLeft,eachLeft:_.props.eachLeft,_eachRight:function _eachRight(src,onEach){let src2=[...src];for(let k=src2.length-1;k>=0;k--)onEach(src2[k],k,k,src)},eachRight:_.props.eachRight,_while:_whileLeft,while:_.props.while,_whileLeft:_whileLeft,whileLeft:_.props.whileLeft,_whileRight:function _whileRight(src,onEach){let src2=[...src];for(let k=src2.length-1;k>=0;k--){let val=src2[k];let r=onEach(val,k,k,src);if(_.assert(true===r||false===r),false===r)return[val,k,k,false]}return src2.length>0?[src2[0],0,0,true]:[void 0,-1,-1,true]},whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct:_.long._filterAct,filterWithoutEscapeLeft:_.long.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.long.filterWithoutEscapeRight,filterWithoutEscape:_.long.filterWithoutEscape,filterWithEscapeLeft:_.long.filterWithEscapeLeft,filterWithEscapeRight:_.long.filterWithEscapeRight,filterWithEscape:_.long.filterWithEscape,filter:_.long.filter,_mapAct:_.long._mapAct,mapWithoutEscapeLeft:_.long.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.long.mapWithoutEscapeRight,mapWithoutEscape:_.long.mapWithoutEscape,mapWithEscapeLeft:_.long.mapWithEscapeLeft,mapWithEscapeRight:_.long.mapWithEscapeRight,mapWithEscape:_.long.mapWithEscape,map:_.long.map};Object.assign(_.countable,CountableExtension)}()});module.exports,module.include,module.include}(),function Diagnostic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Diagnostic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Diagnostic_s_naked(){!function _l3_Diagnostic_s_(){"use strict";_global_;const _=_global_.wTools;function objectMake(o){_.assert(1===arguments.length);let originalOptions=o=optionsAdjust(o);let constructor=o.pure?countableConstructorPure:countableConstructorPolluted;return _make(o);function _make(o){return o.new?o.pure?new countableConstructorPure(o):new countableConstructorPolluted(o):_objectMake(null,o)}function optionsAdjust(o){return _.aux.supplement(o,objectMake.defaults),null===o.countable&&(o.countable=true),null===o.vector&&(o.vector=!!_.number.is(o.length)),countableConstructorPure.prototype=Object.create(null),o.pure,o.withConstructor?(countableConstructorPure.prototype.constructor=countableConstructorPure,_.assert(countableConstructorPolluted.prototype.constructor===countableConstructorPolluted)):delete countableConstructorPolluted.prototype.constructor,_.assert(countableConstructorPolluted.prototype!==Object.prototype),_.assert(countableConstructorPolluted.prototype!==Function.prototype),o.countable&&(void 0!==o.elements&&null!==o.elements||(o.elements=[])),o.vector&&void 0===o.length&&(_.assert(_.long.is(o.elements)),o.length=o.elements.length),_.assert(!o.vector||!!o.countable),_.assert(!!o.vector==!!_.number.is(o.length)),o}function optionsMake(o){return o=o||Object.create(null),_.props.extend(o,{countable:originalOptions.countable,vector:originalOptions.vector})}function TypeNameGet(){return"Custom1"}function*_iterateGenerator(){yield 1,yield 2,yield 3}function _iterate(){let iterator=Object.create(null);return iterator.next=function next(){let result=Object.create(null);return result.done=this.index===this.instance.elements.length,result.done?result:(result.value=this.instance.elements[this.index],this.index+=1,result)},iterator.index=0,iterator.instance=this,iterator}function countableConstructorPure(o){return _.long.is(o)?o=optionsAdjust(optionsMake({elements:o})):o||(o=optionsAdjust(optionsMake())),_objectMake(this,o)}function countableConstructorPolluted(o){_.long.is(o)?o=optionsAdjust(optionsMake({elements:o})):o||(o=optionsAdjust(optionsMake()));let result=_objectMake(this,o);return o.withConstructor||(_.assert(Object.getPrototypeOf(result)!==Object.prototype),_.assert(Object.getPrototypeOf(result).constructor===Object.prototype.constructor)),result}function _objectMake(dst,o){return null===dst&&(dst=o.pure?Object.create(null):{}),_.props.extend(dst,o),o.countable&&(o.iteratorIsGenerator?dst[Symbol.iterator]=_iterateGenerator:dst[Symbol.iterator]=_iterate),o.withOwnConstructor&&(dst.constructor=constructor),o.basic||Object.defineProperty(constructor.prototype,Symbol.toStringTag,{enumerable:false,configurable:false,get:TypeNameGet}),Object.defineProperty(dst,"makeUndefined",{enumerable:false,configurable:true,writable:true,value:makeUndefined}),Object.defineProperty(dst,"eSet",{enumerable:false,configurable:true,writable:true,value:eSet}),dst}function eSet(key,val){_.assert(2===arguments.length),_.assert(_.number.is(key)),this.elements[key]=val}function makeUndefined(){debugger;if(_.object.is(this)){let o2=optionsMake();return null!==o2.elements&&void 0!==o2.elements||(_.number.is(this.length)&&(o2.elements=new Array(this.elements.length)),this.elements&&_.number.is(this.elements.length)&&(o2.elements=new Array(this.elements.length))),optionsAdjust(o2),_make(o2)}_.assert(0)}}objectMake.defaults={new:1,pure:0,basic:1,countable:null,iteratorIsGenerator:0,vector:null,withOwnConstructor:0,withConstructor:1,elements:null},Object.assign(_,{});let DiagnosticExtension={objectMake:objectMake};Object.assign(_.diagnostic,DiagnosticExtension)}()});module.exports,module.include,module.include}(),function Entity_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Entity.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Entity_s_naked(){!function _l3_Entity_s_(){"use strict";_global_;const _=_global_.wTools;const _functor_functor=_.container._functor_functor;function lengthOf(src){return _.assert(1===arguments.length),lengthOf.functor.call(this,src)()}_.entity=_.entity||Object.create(null),_.assert(!!_.container.cloneShallow,"Expects routine _.container.cloneShallow"),lengthOf.functor=_functor_functor("lengthOf");let EntityExtension={identicalShallow:function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),Object.prototype.toString.call(src1)===Object.prototype.toString.call(src2)&&(src1===src2||(_.hashMap.like(src1)?_.hashMap.identicalShallow(src1,src2):_.set.like(src1)?_.set.identicalShallow(src1,src2):_.bufferAnyIs(src1)?_.buffersIdenticalShallow(src1,src2):_.countable.is(src1)?_.countable.identicalShallow(src1,src2):_.object.like(src1)?_.date.is(src1)?_.date.identicalShallow(src1,src2):_.regexp.is(src1)?_.regexp.identicalShallow(src1,src2):!!_.aux.is(src1)&&_.aux.identicalShallow(src1,src2):!!_.primitiveIs(src1)&&_.primitive.identicalShallow(src1,src2)))},equivalentShallow:function equivalentShallow(src1,src2,options){let accuracy;return _.assert(2===arguments.length||3===arguments.length,"Expects 2 or 3 arguments"),_.assert(void 0===options||_.objectLike(options),"Expects map of options as third argument"),options&&(accuracy=options.accuracy||void 0),_.primitiveIs(src1)&&_.primitiveIs(src2)?_.primitive.equivalentShallow(src1,src2,accuracy):src1===src2||(_.bufferAnyIs(src1)&&_.bufferAnyIs(src2)?_.buffersEquivalentShallow(src1,src2):_.hashMap.like(src1)&&_.hashMap.like(src1)?_.hashMap.equivalentShallow(src1,src2):_.set.like(src1)&&_.set.like(src2)?_.set.equivalentShallow(src1,src2):_.countable.is(src1)&&_.countable.is(src2)?_.countable.equivalentShallow(src1,src2):Object.prototype.toString.call(src1)===Object.prototype.toString.call(src2)&&!!_.object.like(src1)&&(_.date.is(src1)?_.date.equivalentShallow(src1,src2):_.regexp.is(src1)?_.regexp.equivalentShallow(src1,src2):!!_.aux.is(src1)&&_.aux.equivalentShallow(src1,src2)))},equal:function equal(){let src1=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];return _.assert(2<=arguments.length&&arguments.length<=4),onEvaluate1?2===onEvaluate1.length?(_.assert(!onEvaluate2),onEvaluate1(src1,src2)):(onEvaluate2||(onEvaluate2=onEvaluate1),_.assert(1===onEvaluate1.length),_.assert(1===onEvaluate2.length),onEvaluate1(src1)===onEvaluate2(src2)):(_.assert(!onEvaluate2),Object.is(src1,src2))},_exportStringDiagnosticShallow:_.container._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.container.exportStringDiagnosticShallow,_exportStringCodeShallow:_.container._exportStringCodeShallow,exportStringCodeShallow:_.container.exportStringCodeShallow,exportString:_.container.exportString,empty:_.container.empty,lengthOf:lengthOf,elementWithCardinal:_.container.elementWithCardinal,elementWithKey:_.container.elementWithKey,elementWithImplicit:_.container.elementWithImplicit,elementWithCardinalSet:_.container.elementWithCardinalSet,elementSet:_.container.elementSet,elementDel:_.container.elementDel,elementWithKeyDel:_.container.elementWithKeyDel,elementWithCardinalDel:_.container.elementWithCardinalDel,empty:_.container.empty,each:_.container.each,eachLeft:_.container.eachLeft,eachRight:_.container.eachRight,while:_.container.while,whileLeft:_.container.whileLeft,whileRight:_.container.whileRight,aptLeft:_.container.aptLeft,first:_.container.first,aptRight:_.container.aptRight,last:_.container.last};Object.assign(_.entity,EntityExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Escape_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Escape.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Escape_s_naked(){!function _l3_Escape_s_(){"use strict";_global_;const _=_global_.wTools;function rightWithNothing(src){if(_.assert(1===arguments.length),_.escape.is(src))return src.val;if(src!==_.undefined){if(src===_.null)return null;if(src!==_.nothing)return src}}_.escape.escaped=_.escape.escaped||Object.create(null);let fo=_.wrap.declare({name:"Escape"});_.assert(void 0===_.Escape),_.assert(_.routineIs(fo.class)),_.assert("Escape"===fo.class.name),_.Escape=fo.class,_.assert(_.mapIs(fo.namespace)),Object.assign(_.escape,fo.namespace);var Extension={isEscapable:function isEscapable(src){return!!_.escape._EscapeMap.has(src)||!!_.escape.is(src)},left:function left(src){return _.assert(1===arguments.length),_.escape._EscapeMap.has(src)?_.escape._EscapeMap.get(src):_.escape.is(src)?new _.Escape(src):src},rightWithNothing:rightWithNothing,rightWithoutNothing:function rightWithoutNothing(src){return _.assert(1===arguments.length),_.escape.is(src)?src.val:src!==_.undefined?src===_.null?null:src:void 0},right:rightWithNothing,wrap:function wrap(src){return _.assert(1===arguments.length),_.assert(!_.escape.is(src)),new _.Escape(src)},unwrap:function unwrap(src){return _.assert(1===arguments.length),_.escape.is(src)?src.val:src}};Object.assign(_.escape,Extension),_.escape.escaped.nothing=_.escape.wrap(_.nothing),_.escape.escaped.null=_.escape.wrap(_.null),_.escape.escaped.undefined=_.escape.wrap(_.undefined),_.escape._EscapeMap=new HashMap,_.escape._EscapeMap.set(_.nothing,_.escape.escaped.nothing),_.escape._EscapeMap.set(_.null,_.escape.escaped.null),_.escape._EscapeMap.set(_.undefined,_.escape.escaped.undefined),_.escape._EscapeMap.set(void 0,_.undefined),_.escape._EscapeMap.set(null,_.null)}()});module.exports,module.include,module.include}(),function Event_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Event.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Event_s_naked(){!function _l3_Event_s_(){"use strict";_global_;const _=_global_.wTools;function Name(name){return this instanceof Name?(_.assert(1===arguments.length),_.assert(_.strIs(name)),this.value=name,this):_.event.nameIs(name)?name:new Name(...arguments)}function Chain(){if(!_.event.chainIs(this))return _.event.chainIs(arguments[0])?(_.assert(1===arguments.length,"Expects single Chain or set of event names"),arguments[0]):new Chain(...arguments);let result=_.array.make(arguments.length);_.assert(arguments.length>=1,"Expects events names");for(let i=0;i<arguments.length;i++)result[i]=_.event.Name(arguments[i]);return this.chain=result,this}function _on(edispatcher,o){_.routine.options(_on,o),_.assert(_.mapIs(o.callbackMap)),_.assert(_.object.isBasic(edispatcher)),_.assert(_.object.isBasic(edispatcher.events)),_.map.assertHasOnly(o.callbackMap,edispatcher.events,"Unknown kind of event"),_.assert(2===arguments.length);const once=!!o.once;let descriptors=Object.create(null);let append;append=o.first?_.arrayPrepend:_.arrayAppend;for(let c in o.callbackMap){let callback=o.callbackMap[c];descriptors[c]=descriptorMake(),_.longIs(callback)&&(callback=_.event._chainToCallback([c,...callback])),_.assert(_.routine.is(callback)),callback=callbackOn_functor.call(descriptors[c],callback,c),descriptors[c].off=off_functor.call(descriptors[c],edispatcher,{callbackMap:{[c]:callback}}),append(edispatcher.events[c],callback)}return descriptors;function callbackOn_functor(callback,name){let self=this;function callbackOn(){let result;return self.enabled&&(result=callback.apply(this,arguments),true===once&&_.event.off(edispatcher,{callbackMap:{[name]:callbackOn}})),result}return callbackOn.native=callback,callbackOn.native.once=once,callbackOn}function descriptorMake(){let descriptor=Object.create(null);return descriptor.off=null,descriptor.enabled=true,descriptor.first=o.first,descriptor.callbackMap=o.callbackMap,descriptor}function off_functor(edispatcher,o){return function(){return _.assert(0===arguments.length,"Expects no arguments."),_.event.off(edispatcher,o)}}}function off(edispatcher,o){_.routine.options(off,o),_.assert(_.mapIs(o.callbackMap)),_.assert(_.object.isBasic(edispatcher)),_.assert(_.object.isBasic(edispatcher.events)),_.map.assertHasOnly(o.callbackMap,edispatcher.events,"Unknown kind of event"),_.assert(2===arguments.length);for(let c in o.callbackMap)null===o.callbackMap[c]?_.array.empty(edispatcher.events[c]):_.arrayRemoveOnceStrictly(edispatcher.events[c],o.callbackMap[c],callbackEqualize);return o;function callbackEqualize(callback,handler){return handler===callback||handler===callback.native}}function eventHasHandler(edispatcher,o){return _.routine.options(eventHasHandler,o),_.assert(_.strIs(o.eventName)),_.assert(_.routine.is(o.eventHandler)),_.assert(_.mapIs(edispatcher)),_.assert(_.mapIs(edispatcher.events)),_.assert(2===arguments.length),_.longHas(edispatcher.events[o.eventName],o.eventHandler,function handlerEqualize(callback,handler){return handler===callback||handler===callback.native})}function eventGive(edispatcher,o){let was;_.assert(2===arguments.length),_.assert(!!edispatcher.events[o.event],`Unknown event ${o.event}`),_.assert(_.long.is(o.args),"Expects arguments {-o.args-}");let visited=[];do{was=visited.length;let events=edispatcher.events[o.event].slice();_.each(events,callback=>{if(!_.longHas(visited,callback)){visited.push(callback);try{callback.apply(edispatcher,o.args)}catch(err){o.onError(err,o)}}})}while(was!==visited.length)}Name.prototype=Object.create(null),Chain.prototype=Object.create(null),_on.defaults={callbackMap:null,first:false,once:false},off.defaults={callbackMap:null},eventHasHandler.defaults={eventName:null,eventHandler:null},eventGive.defaults={event:null,args:null,onError:null};let Extension={_chainGenerate:function _chainGenerate(args){let chain=[];_.assert(1===arguments.length),_.assert(_.longIs(args));for(let a=0;a<args.length-2;a++)chainMake(a);return chain.push([_.event.nameValueFrom(args[args.length-2]),args[args.length-1]]),_.assert(_.routine.is(args[args.length-1])),chain;function chainMake(a){let e1=_.event.nameValueFrom(args[a]);chain.push([e1,function on(){let self=this;let next=chain[a+1];if(_.routine.is(self.on))self.on(next[0],next[1]),self.eventHasHandler(e1,on)&&self.off(e1,on);else{let o=_.event.onHead(_.event.on,next);o.once=on.once,_.event._on(self,o),on.once||_.event.eventHasHandler(self,{eventName:e1,eventHandler:on})&&_.event.off(self,{callbackMap:{[e1]:on}})}}])}},_chainToCallback:function _chainToCallback(args){return _.event._chainGenerate(args)[0][1]},_chainValidate:function _chainValidate(chain){for(let i=0;i<chain.length-1;i++)_.assert(_.event.nameIs(chain[i]));return _.assert(_.routine.is(chain[chain.length-1])),true},_callbackMapValidate:function _callbackMapValidate(callbackMap){_.assert(_.mapIs(callbackMap));for(let k in callbackMap){let callback=callbackMap[k];_.assert(_.routine.is(callback)||_.longIs(callback)),_.routine.is(callback)||_.event._chainValidate(callback)}},nameValueFrom:function nameValueFrom(name){return _.strIs(name)?name:(_.assert(_.event.nameIs(name)),name.value)},nameIs:function nameIs(name){return name instanceof _.event.Name},chainIs:function chainIs(src){return src instanceof _.event.Chain},Name:Name,Chain:Chain,onHead:function onHead(routine,args){let o;if(_.assert(_.longIs(args)),_.assert(2===arguments.length),2===args.length)if(_.assert(_.routine.is(args[1])),(o=Object.create(null)).callbackMap=Object.create(null),_.event.chainIs(args[0])){let chain=args[0].chain;o.callbackMap[chain[0].value]=_.longOnly_(null,chain,[1,chain.length-1]),o.callbackMap[chain[0].value].push(args[1])}else _.strIs(args[0])?o.callbackMap[args[0]]=args[1]:_.event.nameIs(args[0])?o.callbackMap[args[0].value]=args[1]:_.assert(0,"Expects Chain with names or single name of event.");else 1===args.length?o=args[0]:_.assert(0,"Expects single options map {-o-} or events Chain and callback as arguments.");return o},_on:_on,on:function on(edispatcher,o){return o.once=false,_.event._on(edispatcher,o)},once:function once(edispatcher,o){return o.once=true,_.event._on(edispatcher,o)},offHead:function offHead(routine,args){_.assert(_.longIs(args)),_.assert(2===arguments.length),_.assert(1===args.length||2===args.length);let o=args[0];return 2===args.length?o={callbackMap:{[args[0]]:args[1]}}:_.strIs(args[0])&&(o={callbackMap:{[args[0]]:null}}),_.assert(_.mapIs(o)),o},off:off,eventHasHandlerHead:function eventHasHandlerHead(routine,args){let o;return _.assert(_.longIs(args)),_.assert(2===arguments.length),_.assert(1===args.length||2===args.length),args.length>1?((o=Object.create(null)).eventName=args[0],o.eventHandler=args[1]):o=args[0],_.assert(_.mapIs(o)),o},eventHasHandler:eventHasHandler,eventGiveHead:function eventGiveHead(edispatcher,routine,args){let o=args[0];return _.assert(3===arguments.length,"Expects exactly three arguments."),_.assert(args.length>0),_.assert(_.aux.is(edispatcher.events),"Expects events dispatcher."),_.strIs(o)&&(o={event:o}),_.assert(_.aux.is(o),"Expects string or options map in {-o.args[ 1 ]-}."),null!==o.onError&&void 0!==o.onError||(o.onError=function onError(err,o){throw _.err(`Error on handing event ${o.event}\n`,err)}),_.map.assertHasOnly(o,routine.defaults),o.args?_.assert(1===args.length):o.args=args,o},eventGive:eventGive};Object.assign(_.event,Extension)}()});module.exports,module.include,module.include}(),function HashMap_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/HashMap.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function HashMap_s_naked(){!function _l3_HashMap_s_(){"use strict";_global_;const _=_global_.wTools;function _identicalShallow(src1,src2){if(src1.size!==src2.size)return false;for(let[key,val]of src1){if(false===src2.has(key))return false;let val2=src2.get(key);if(!Object.is(val2,val))return false}return true}function _exportStringDiagnosticShallow(src){return`{- ${_.entity.strType(src)} with ${_.entity.lengthOf(src)} elements -}`}function _elementWithKey(src,key){return src.has(key)?[src.get(key),key,true]:[void 0,key,false]}function _elementWithKeySet(dst,key,val){return dst.set(key,val),[key,true]}function _elementWithKeyDel(dst,key){return!!this._hasKey(dst,key)&&(dst.delete(key),true)}function _eachLeft(src,onEach){let c=0;for(let[k,val]of src)onEach(val,k,c,src),c+=1}function _whileLeft(src,onEach){if(0===src.size)return[void 0,void 0,-1,true];let c=0;let lastk;for(let[k,val]of src){let r=onEach(val,k,c,src);if(_.assert(true===r||false===r),false===r)return[val,k,c,false];lastk=k,c+=1}return[src.get(lastk),lastk,c-1,true]}Object.assign(_,{});let Extension={_identicalShallow:_identicalShallow,identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:_identicalShallow,equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:function _lengthOf(src){return src.size},lengthOf:_.props.lengthOf,_hasKey:function _hasKey(src,key){return src.has(key)},hasKey:_.props.hasKey,_hasCardinal:function _hasCardinal(src,cardinal){return!(cardinal<0)&&cardinal<src.size},hasCardinal:_.props.hasCardinal,_keyWithCardinal:function _keyWithCardinal(src,cardinal){return cardinal<0||src.size<=cardinal?[void 0,false]:[this.keys[cardinal],true]},keyWithCardinal:_.props.keyWithCardinal,_cardinalWithKey:function _cardinalWithKey(src,key){return src.has(key)?this.keys(src).indexOf(key):-1},cardinalWithKey:_.props.cardinalWithKey,_elementGet:_elementWithKey,elementGet:_.props.elementGet,_elementWithKey:_elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:function _elementWithCardinal(src,cardinal){if(cardinal<0||src.size<=cardinal||!_.numberIs(cardinal))return[void 0,cardinal,false];let entry=[...src][cardinal];return[entry[1],entry[0],true]},elementWithCardinal:_.props.elementWithCardinal,_elementSet:_elementWithKeySet,elementSet:_.props.elementSet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){let was=this._elementWithCardinal(dst,cardinal);return true===was[2]?(dst.set(was[1],val),[was[1],true]):[cardinal,false]},elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_elementWithKeyDel,elementDel:_.props.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){let has=this._keyWithCardinal(dst,cardinal);return!!has[1]&&(dst.delete(has[0]),true)},elementWithCardinalDel:_.props.elementWithCardinalDel,_empty:function _empty(dst){return dst.clear(),dst},empty:_.props.empty,_each:_eachLeft,each:_.props.each,_eachLeft:_eachLeft,eachLeft:_.props.eachLeft,_eachRight:function _eachRight(src,onEach){let keys=[...src.keys()];for(let c=keys.length-1;c>=0;c--){let k=keys[c];onEach(src.get(k),k,c,src)}},eachRight:_.props.eachRight,_while:_whileLeft,while:_.props.while,_whileLeft:_whileLeft,whileLeft:_.props.whileLeft,_whileRight:function _whileRight(src,onEach){if(0===src.size)return[void 0,void 0,-1,true];let keys=[...src.keys()];for(let c=keys.length-1;c>=0;c--){let k=keys[c];let val=src.get(k);let r=onEach(val,k,c,src);if(_.assert(true===r||false===r),false===r)return[val,k,c,false]}var k=keys[0];return[src.get(k),k,0,true]},whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct0:_.props._filterAct0,_filterAct:_.props._filterAct,filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct0:_.props._mapAct0,_mapAct:_.props._mapAct,mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.hashMap,Extension)}()});module.exports,module.include,module.include}(),function Itself_s(){
let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Itself.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Itself_s_naked(){!function _l3_Itself_s_(){"use strict";_global_;const _=_global_.wTools;function _elementWithKey(src,key){return 0===key?[src,key,true]:[void 0,key,false]}function _elementWithKeySet(dst,key,val){return[key,false]}function _elementWithKeyDel(dst,key){return false}function _eachLeft(src,onEach){onEach(src,null,0,src)}function _whileLeft(src,onEach){let r=onEach(src,null,0,src);return _.assert(true===r||false===r),false===r?[src,null,0,false]:[src,null,0,true]}_.assert(!!_.blank.identical,"Expects routine blank.identical"),_.assert(!!_.blank.exportString,"Expects routine _.blank.exportString");let ItselfExtension={_identicalShallow:_.blank._identicalShallow,identicalShallow:_.blank.identicalShallow,identical:_.blank.identical,_equivalentShallow:_.blank._equivalentShallow,equivalentShallow:_.blank.equivalentShallow,equivalent:_.blank.equivalent,_exportStringDiagnosticShallow:_.blank._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.blank.exportStringDiagnosticShallow,_exportStringCodeShallow:_.blank._exportStringCodeShallow,exportStringCodeShallow:_.blank.exportStringCodeShallow,exportString:_.blank.exportString,_lengthOf:function _lengthOf(src){return 1},lengthOf:_.props.lengthOf,_hasKey:function _hasKey(src,key){return 0===cardinal},hasKey:_.props.hasKey,_hasCardinal:function _hasCardinal(src,cardinal){return 0===cardinal},hasCardinal:_.props.hasCardinal,_keyWithCardinal:function _keyWithCardinal(src,cardinal){return 0===cardinal?[0,true]:[void 0,false]},keyWithCardinal:_.props.keyWithCardinal,_cardinalWithKey:function _cardinalWithKey(key){return 0===key?0:-1},cardinalWithKey:_.props.cardinalWithKey,_elementGet:_elementWithKey,elementGet:_.props.elementGet,_elementWithKey:_elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:function _elementWithCardinal(src,cardinal){return 0===cardinal?[src,cardinal,true]:[void 0,cardinal,false]},elementWithCardinal:_.props.elementWithCardinal,_elementSet:_elementWithKeySet,elementSet:_.props.elementSet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){return 0===cardinal?[cardinal,true]:[cardinal,false]},elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_elementWithKeyDel,elementDel:_.props.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){return false},elementWithCardinalDel:_.props.elementWithCardinalDel,_empty:function _empty(dst){return dst},empty:_.props.empty,_each:_eachLeft,each:_.props.each,_eachLeft:_eachLeft,eachLeft:_.props.eachLeft,_eachRight:function _eachRight(src,onEach){onEach(src,null,0,src)},eachRight:_.props.eachRight,_while:_whileLeft,while:_.props.while,_whileLeft:_whileLeft,whileLeft:_.props.whileLeft,_whileRight:function _whileRight(src,onEach){let r=onEach(src,null,0,src);return _.assert(true===r||false===r),false===r?[src,null,0,false]:[src,null,0,true]},whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct0:_.props._filterAct0,_filterAct:_.props._filterAct,filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct0:_.props._mapAct0,_mapAct:_.props._mapAct,mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.itself,ItselfExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Logic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Logic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Logic_s_naked(){!function _l3_Logic_s_(){"use strict";_global_;const _=_global_.wTools;function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._identicalShallow(src1,src2)}function equivalentShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._equivalentShallow(src1,src2)}let LogicExtension={_identicalShallow:function _identicalShallow(src1,src2){return src1===src2},identicalShallow:identicalShallow,identical:identicalShallow,_equivalentShallow:function _equivalentShallow(src1,src2){return src1===src2},equivalentShallow:equivalentShallow,equivalent:equivalentShallow,and:function and(elements){return new _.logic.node.And(...arguments)},or:function or(elements){return new _.logic.node.Or(...arguments)},xor:function xor(elements){return new _.logic.node.Xor(...arguments)},xand:function xand(elements){return new _.logic.node.Xand(...arguments)},first:function first(elements){return new _.logic.node.First(...arguments)},second:function second(elements){return new _.logic.node.Second(...arguments)},not:function not(elements){return new _.logic.node.Not(...arguments)},if:function _if(elements){return _.logic.node.If(...arguments)},exec:function exec(logic,...args){return logic.exec(...args)}};Object.assign(_.logic,LogicExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Map_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Map.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Map_s_naked(){!function _l3_Map_s_(){"use strict";_global_;const _=_global_.wTools;function _identicalShallow(src1,src2){if(Object.keys(src1).length!==Object.keys(src2).length)return false;for(let s in src1)if(src1[s]!==src2[s])return false;return true}function containShallow(src,ins){if(_.assert(2===arguments.length,"Expects exactly two arguments"),!this.like(src))return false;if(!this.like(ins))return false;for(let s in ins)if(s in src&&src[s]!==ins[s])return false;return true}_.assert(!!_.props._elementWithKey,"Expects routine _.props._elementWithKey"),_.assert(!!_.props.exportString,"Expects routine _.props.exportString"),Object.assign(_,{});let ExtensionMap={_identicalShallow:_identicalShallow,identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:_identicalShallow,equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,containShallow:containShallow,contain:containShallow,_exportStringDiagnosticShallow:_.props._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_.props._exportStringCodeShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:_.props._lengthOf,lengthOf:_.props.lengthOf,_hasKey:_.props._hasKey,hasKey:_.props._hasKey,_hasCardinal:_.props._hasKey,hasCardinal:_.props._hasKey,_keyWithCardinal:_.props._hasKey,keyWithCardinal:_.props._hasKey,_cardinalWithKey:_.props._cardinalWithKey,cardinalWithKey:_.props.cardinalWithKey,_elementGet:_.props._elementWithKey,elementGet:_.props.elementWithKey,_elementWithKey:_.props._elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:_.props._elementWithCardinal,elementWithCardinal:_.props.elementWithCardinal,_elementSet:_.props._elementSet,elementSet:_.props.elementSet,_elementWithKeySet:_.props._elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:_.props._elementWithCardinalSet,elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_.props._elementDel,elementDel:_.props.elementDel,_elementWithKeyDel:_.props._elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:_.props._elementWithCardinalDel,elementWithCardinalDel:_.props.elementWithCardinalDel,_empty:_.props._empty,empty:_.props.empty,_each:_.props._each,each:_.props.each,_eachLeft:_.props._eachLeft,eachLeft:_.props.eachLeft,_eachRight:_.props._eachRight,eachRight:_.props.eachRight,_while:_.props._while,while:_.props.while,_whileLeft:_.props._whileLeft,whileLeft:_.props.whileLeft,_whileRight:_.props._whileRight,whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct0:_.props._filterAct0,_filterAct:_.props._filterAct,filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct0:_.props._mapAct0,_mapAct:_.props._mapAct,mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.map,ExtensionMap)}()});module.exports,module.include,module.include}(),function Module_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Module.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let __dirname=_dirPath_;let module=_starter_._sourceMake(_filePath_,_dirPath_,function Module_s_naked(){!function _l3_Module_s_(){"use strict";_global_;const _=_global_.wTools;const _toolsPath=_.path.canonize(__dirname+"/../../../../node_modules/Tools");const _toolsDir=_.path.canonize(__dirname+"/../../../../wtools");var ModuleExtension={toolsPathGet:function toolsPathGet(){return _toolsPath},toolsDirGet:function toolsDirGet(){return _toolsDir}};Object.assign(_.module,ModuleExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Number_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Number.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Number_s_naked(){!function _l1_Numbers_s_(){"use strict";_global_;const _=_global_.wTools;function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.is(src1)&&!!this.is(src2)&&this._identicalShallow(...arguments)}function identicalShallowStrictly(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.is(src1)&&!!this.is(src2)&&this._identicalShallowStrictly(...arguments)}function equivalentShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._equivalentShallow(...arguments)}Object.assign(_,{});let NumberExtension={_identicalShallow:function _identicalShallow(a,b){return!!_.number.s.areAll([a,b])&&(Object.is(a,b)||a===b)},identicalShallow:identicalShallow,identical:identicalShallow,_identicalShallowStrictly:function _identicalShallowStrictly(a,b){return _.assert(2===arguments.length,"Expects exactly two arguments"),!!_.number.s.areAll([a,b])&&Object.is(a,b)},identicalShallowStrictly:identicalShallowStrictly,identicalStrictly:identicalShallowStrictly,_equivalentShallow:function _equivalentShallow(a,b,accuracy){let result;_.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),void 0!==accuracy&&_.assert((_.number.is(accuracy)||_.bigInt.is(accuracy))&&accuracy>=0&&Infinity!==accuracy,"Accuracy has to be a finite Number >= 0");let bigIntIsA=_.bigInt.is(a);let bigIntIsB=_.bigInt.is(b);let numberIsA=_.number.is(a);let numberIsB=_.number.is(b);return!(!numberIsA&&!bigIntIsA)&&!(!numberIsB&&!bigIntIsB)&&(!!(numberIsA&&numberIsB&&Object.is(a,b))||(void 0===accuracy&&(accuracy=_.accuracy),bigIntIsA&&bigIntIsB?abs(a-b)<=accuracy:(bigIntIsA&&([a,b,result]=bigintCompare(a,b)),void 0!==result?result:(bigIntIsB&&([b,a,result]=bigintCompare(b,a)),void 0!==result?result:numberIsA&&numberIsB?Math.abs(a-b)<=accuracy:abs(a-b)<=accuracy))));function bigintCompare(a,b){if(_.intIs(b))b=BigInt(b);else if(a>=Number.MIN_SAFE_INTEGER&&a<=Number.MAX_SAFE_INTEGER)a=Number(a);else{if(accuracy>=Number.MIN_SAFE_INTEGER&&accuracy<=Number.MAX_SAFE_INTEGER){let decimal=b%1;return[a,b=BigInt(Math.floor(b)),abs(a-b)<=accuracy+decimal]}b=BigInt(Math.round(b))}return[a,b,void 0]}function abs(value){return function sign(value){return value>BigInt(0)?BigInt(1):value<BigInt(0)?BigInt(-1):BigInt(0)}(value)===BigInt(-1)?-value:value}},equivalentShallow:equivalentShallow,equivalent:equivalentShallow};Object.assign(_.number,NumberExtension),Object.assign(_.number.s,{})}()});module.exports,module.include,module.include}(),function Object_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Object.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Object_s_naked(){!function _l3_Object_s_(){"use strict";_global_;const _=_global_.wTools;function _identicalShallow(src1,src2){if(_.aux.is(src1)&&_.aux.is(src2))return _.aux._identicalShallow(src1,src2);if(_.countable.is(src1)&&_.countable.is(src2))return _.countable._identicalShallow(src1,src2);let equal=_.class.methodEqualOf(src1)||_.class.methodEqualOf(src2);return equal?equal(src1,src2,{}):src1===src2}function _exportStringDiagnosticShallow(src){let result="";let method=_.class.methodExportStringOf(src);return method?(result=method.call(src,{verbosity:1}),result=_.strShort_(result).result):result=_.countable.is(src)?_.countable.exportStringDiagnosticShallow(src):`{- ${_.entity.strType(src)} -}`,result}function _elementWithKey(src,key){return _.countable.is(src)&&_.number.is(key)?_.countable._elementWithKey(src,key):_.props._elementWithKey(src,key)}function _elementWithKeySet(dst,key,val){return _.countable.is(src)&&_.number.is(key)?_.countable._elementWithKeySet(dst,key,val):_.props._elementWithKeySet(dst,key,val)}function _elementWithKeyDel(dst,key){return _.countable.is(src)&&_.number.is(key)?_.countable._elementWithKeyDel(dst,key):_.props._elementWithKeyDel(dst,key)}function _eachLeft(src,onEach){return _.countable.is(src)?_.countable._eachLeft(src,onEach):_.props._eachLeft(src,onEach)}function _whileLeft(src,onEach){return _.countable.is(src)?_.countable._whileLeft(src,onEach):_.props._whileLeft(src,onEach)}_.assert(!!_.props._elementWithKey,"Expects routine _.props._elementWithKey"),_.assert(!!_.props.keys,"Expects routine _.props.keys"),Object.assign(_,{});let ObjectExtension={_identicalShallow:_identicalShallow,identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:_identicalShallow,equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:function _lengthOf(src){return _.countable.is(src)?_.countable._lengthOf(src):_.props._lengthOf(src)},lengthOf:_.props.lengthOf,_hasKey:function _hasKey(src,key){return _.countable.is(src)&&_.number.is(key)?_.countable._hasKey(src,key):_.props._hasKey(src,key)},hasKey:_.props.hasKey,_hasCardinal:function _hasCardinal(src,cardinal){return _.countable.is(src)?_.countable._hasCardinal(src,cardinal):_.props._hasCardinal(src,cardinal)},hasCardinal:_.props.hasCardinal,_keyWithCardinal:function _keyWithCardinal(src,cardinal){return _.countable.is(src)?_.countable._keyWithCardinal(src,cardinal):_.props._keyWithCardinal(src,cardinal)},keyWithCardinal:_.props.keyWithCardinal,_cardinalWithKey:function _cardinalWithKey(src,key){return _.countable.is(src)?_.countable._cardinalWithKey(src,key):_.props._cardinalWithKey(src,key)},cardinalWithKey:_.props.cardinalWithKey,_elementGet:_elementWithKey,elementGet:_.props.elementGet,_elementWithKey:_elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:function _elementWithCardinal(src,cardinal){return _.countable.is(src)?_.countable._elementWithCardinal(src,cardinal):_.props._elementWithCardinal(src,cardinal)},elementWithCardinal:_.props.elementWithCardinal,_elementSet:_elementWithKeySet,elementSet:_.props.elementSet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){return _.countable.is(dst)?_.countable._elementWithCardinalSet(dst,cardinal,val):_.props._elementWithCardinalSet(dst,cardinal,val)},elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_elementWithKeyDel,elementDel:_.props.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){return _.countable.is(dst)?_.countable._elementWithCardinalDel(dst,cardinal):_.props._elementWithCardinalDel(dst,cardinal)},elementWithCardinalDel:_.props.elementWithCardinalDel,_empty:function _empty(dst){return _.countable.is(dst)?_.countable._empty(dst):_.props._empty(dst)},empty:_.props.empty,_each:_eachLeft,each:_.props.each,_eachLeft:_eachLeft,eachLeft:_.props.eachLeft,_eachRight:function _eachRight(src,onEach){return _.countable.is(src)?_.countable._eachRight(src,onEach):_.props._eachRight(src,onEach)},eachRight:_.props.eachRight,_while:_whileLeft,while:_.props.while,_whileLeft:_whileLeft,whileLeft:_.props.whileLeft,_whileRight:function _whileRight(src,onEach){return _.countable.is(src)?_.countable._whileRight(src,onEach):_.props._whileRight(src,onEach)},whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct0:function _filterAct0(dst,src,...args){return _.countable.is(src)?_.countable._filterAct0(dst,src,...args):_.props._filterAct0(dst,src,...args)},_filterAct:_.props._filterAct,filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct0:function _mapAct0(dst,src,...args){return _.countable.is(src)?_.countable._mapAct0(dst,src,...args):_.props._mapAct0(dst,src,...args)},_mapAct:_.props._mapAct,mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.object,ObjectExtension)}()});module.exports,module.include,module.include}(),function Primitive_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Primitive.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Primitive_s_naked(){!function _l3_Primitive_s_(){"use strict";_global_;const _=_global_.wTools;function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._identicalShallow(...arguments)}function equivalentShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!this.like(src1)&&!!this.like(src2)&&this._equivalentShallow(...arguments)}function exportStringDiagnosticShallow(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.primitive.is(src)),_.symbol.is(src)?_.symbol.exportStringDiagnosticShallow(src):_.bigInt.is(src)?_.bigInt.exportStringDiagnosticShallow(src):String(src)}Object.assign(_,{});let PrimitiveExtension={_identicalShallow:function _identicalShallow(src1,src2){return!!_.primitive.is(src1)&&!!_.primitive.is(src2)&&Object.is(src1,src2)},identicalShallow:identicalShallow,identical:identicalShallow,_equivalentShallow:function _equivalentShallow(src1,src2,accuracy){return _.strsAreAll([src1,src2])?_.str.equivalentShallow(src1,src2):_.bool.like(src1)&&_.bool.like(src2)?_.bool.equivalentShallow(src1,src2):(_.number.is(src1)||_.bigInt.is(src1))&&(_.number.is(src2)||_.bigInt.is(src2))?_.number.equivalentShallow(src1,src2,accuracy):Object.is(src1,src2)},equivalentShallow:equivalentShallow,equivalent:equivalentShallow,exportStringCodeShallow:function exportStringCodeShallow(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.primitive.is(src)),_.symbol.is(src)?_.symbol.exportStringCodeShallow(src):_.bigInt.is(src)?_.bigInt.exportStringCodeShallow(src):_.strIs(src)?`'${src}'`:String(src)},exportStringDiagnosticShallow:exportStringDiagnosticShallow,exportString:exportStringDiagnosticShallow};Object.assign(_.primitive,PrimitiveExtension)}()});module.exports,module.include,module.include}(),function Process_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Process.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Process_s_naked(){!function _l3_Process_s_(){"use strict";const _global=_global_;const _=_global_.wTools;function on(o){return o=_.event.onHead(_.event.on,arguments),_.event.on(this._edispatcher,o)}function once(o){return o=_.event.onHead(_.event.once,arguments),_.event.once(this._edispatcher,o)}function off(o){return o=_.event.offHead(_.event.off,arguments),_.event.off(this._edispatcher,o)}function eventHasHandler(o){return o=_.event.eventHasHandlerHead(_.event.eventHasHandler,arguments),_.event.eventHasHandler(this._edispatcher,o)}function eventGive(){let o=_.event.eventGiveHead(this._edispatcher,eventGive,arguments);return _.event.eventGive(this._edispatcher,o)}on.defaults={callbackMap:null},once.defaults={callbackMap:null},off.defaults={callbackMap:null},eventHasHandler.defaults={eventName:null,eventHandler:null},eventGive.defaults={..._.event.eventGive.defaults,origination:null,err:null};let Inspector=null;let Extension={_edispatcher:{events:{available:[],uncaughtError:[]}},on:on,once:once,off:off,eventHasHandler:eventHasHandler,eventGive:eventGive,isDebugged:function isDebugged(){if(_.assert(0===arguments.length,"Expects no arguments"),"undefined"==typeof process)return false;if(null===Inspector)try{Inspector=require("inspector")}catch(err){Inspector=false}if(Inspector)return _.strIs(Inspector.url());if(!process.execArgv.length)return false;let execArgvString=process.execArgv.join();return _.strHasAny(execArgvString,["--inspect","--inspect-brk","--debug-brk"])},insideTestContainer:function insideTestContainer(){return!!_global_.process&&"CI"in _global_.process.env},entryPointStructure:function entryPointStructure(){let result=Object.create(null);return void 0!==_global.process&&(_global.process.argv&&(result.execPath=_global.process.argv.join(" ")),_.routine.is(_global.process.cwd)&&(result.currentPath=_global.process.cwd())),result},entryPointInfo:function entryPointInfo(){let data=_.process.entryPointStructure();let result="";return data.currentPath&&(result=join("Current path",data.currentPath)),data.execPath&&(result=join("Exec path",data.execPath)),result;function join(left,right){return result&&(result+="\n"),result+=left+" : "+right}}};Object.assign(_.process,Extension)}()});module.exports;let require=module.include;module.include}(),function Regexp_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Regexp.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Regexp_s_naked(){!function _l3_Regexp_s_(){"use strict";_global_;const _=_global_.wTools;function identicalShallow(src1,src2,o){return _.assert(2===arguments.length||3===arguments.length),!(!_.regexp.is(src1)||!_.regexp.is(src2))&&_.regexp._identicalShallow(src1,src2)}function equivalentShallow(src1,src2){return _.assert(2===arguments.length||3===arguments.length),!(!_.regexp.like(src1)||!_.regexp.like(src2))&&_.regexp._equivalentShallow(src1,src2)}function exportStringDiagnosticShallow(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.regexp.is(src)),`/${src.source}/${src.flags}`}let ToolsExtension={regexpIdentical:identicalShallow,regexpEquivalent:equivalentShallow};Object.assign(_,ToolsExtension);let RegexpExtension={_identicalShallow:function _identicalShallow(src1,src2){return src1.source===src2.source&&src1.flags===src2.flags},identicalShallow:identicalShallow,identical:identicalShallow,_equivalentShallow:function _equivalentShallow(src1,src2){let strIs1=_.strIs(src1);let strIs2=_.strIs(src2);if(_.assert(2===arguments.length,"Expects exactly two arguments"),!strIs1&&strIs2)return _.regexp._equivalentShallow(src2,src1);if(_.assert(_.regexpLike(src1),"Expects string-like ( string or regexp )"),_.assert(_.regexpLike(src1),"Expects string-like ( string or regexp )"),strIs1&&strIs2)return src1===src2;if(strIs1){_.assert(!!src2.exec);let matched=src2.exec(src1);return!!matched&&matched[0].length===src1.length}return _.regexp.identical(src1,src2)},equivalentShallow:equivalentShallow,equivalent:equivalentShallow,exportString:exportStringDiagnosticShallow,exportStringDiagnosticShallow:exportStringDiagnosticShallow,exportStringCodeShallow:exportStringDiagnosticShallow};Object.assign(_.regexp,RegexpExtension),Object.assign(_.regexp.s,{})}()});module.exports,module.include,module.include}(),function Routine_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Routine.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Routine_s_naked(){!function _l3_Routine_s_(){"use strict";_global_;const _=_global_.wTools;function exportStringDiagnosticShallow(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.routine.is(src)),src.name?`{- routine ${src.name} -}`:"{- routine.anonymous -}"}let RoutineExtension={er:function er(routine,erhead){return routine.er?routine.er:(routine.er=_.routine.erMake(...arguments),routine)},erMake:function erMake(routine,erhead){erhead=erhead||routine.erhead||routine.head;let head=routine.head;let body=routine.body;let defaults=routine.defaults;return _.assert(1===arguments.length||2===arguments.length),_.assert(_.routine.is(routine)),_.assert(_.routine.is(erhead)),_.assert(_.routine.is(head)),_.assert(_.routine.is(body)),_.assert(_.object.isBasic(defaults)),function erMake(){let self=this;let op=erhead.call(self,routine,arguments);return _.assert(_.mapIs(op)),_.map.assertHasOnly(op,defaults),er.defaults=_.props.supplement(op,defaults),er;function er(){let result;let op2=head.call(self,er,arguments);return _.unrollIs(op2)?result=body.apply(self,op2):_.mapIs(op2)&&(result=body.call(self,op2)),result}}},exportString:exportStringDiagnosticShallow,exportStringDiagnosticShallow:exportStringDiagnosticShallow,exportStringCodeShallow:exportStringDiagnosticShallow};Object.assign(_.routine,RoutineExtension)}()});module.exports,module.include,module.include}(),function Seeker_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Seeker.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Seeker_s_naked(){!function _l3_Seeker_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Set_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Set.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Set_s_naked(){!function _l3_Set_s_(){"use strict";_global_;const _=_global_.wTools;function toArray(src){return _.assert(1===arguments.length),_.assert(_.set.like(src)),[...src]}function setsToArrays(srcs){_.assert(1===arguments.length),_.assert(_.longIs(srcs));let result=[];for(let s=0,l=srcs.length;s<l;s++)result[s]=_.set.toArray(srcs[s]);return result}function _exportStringDiagnosticShallow(src,o){return`{- ${_.entity.strType(src)} with ${_.entity.lengthOf(src)} elements -}`}function _identicalShallow(src1,src2){if(src1.size!==src2.size)return false;for(let el of src1)if(!src2.has(el))return false;return true}function _elementWithKey(src,key){return src.has(key)?[key,key,true]:[void 0,key,false]}function _elementWithKeySet(dst,key,val){return dst.add(val),[val,true]}function _elementWithKeyDel(dst,key){return!!this._hasKey(dst,key)&&(dst.delete(key),true)}function _eachLeft(src,onEach){let c=0;for(let e of src)onEach(e,e,c,src),c+=1}function _whileLeft(src,onEach){if(0===src.size)return[void 0,void 0,-1,true];let c=0;let laste;for(let e of src){let r=onEach(e,e,c,src);if(_.assert(true===r||false===r),false===r)return[e,e,c,false];laste=e,c+=1}return[laste,laste,src.size-1,true]}let SetExtension={toArray:toArray,_identicalShallow:_identicalShallow,identicalShallow:_.props.identicalShallow,identical:_.props.identical,_equivalentShallow:_identicalShallow,equivalentShallow:_.props.equivalentShallow,equivalent:_.props.equivalent,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.props.exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:_.props.exportStringCodeShallow,exportString:_.props.exportString,_lengthOf:function _lengthOf(src){return src.size},lengthOf:_.props.lengthOf,_hasKey:function _hasKey(src,key){return src.has(key)},hasKey:_.props.hasKey,_hasCardinal:function _hasCardinal(src,cardinal){return!(cardinal<0)&&cardinal<src.size},hasCardinal:_.props.hasCardinal,_keyWithCardinal:function _keyWithCardinal(src,cardinal){return cardinal<0||src.size<=cardinal?[void 0,false]:[[...src][cardinal],true]},keyWithCardinal:_.props.keyWithCardinal,_cardinalWithKey:function _cardinalWithKey(src,key){return[...src].indexOf(key)},cardinalWithKey:_.props.cardinalWithKey,_elementGet:_elementWithKey,elementGet:_.props.elementGet,_elementWithKey:_elementWithKey,elementWithKey:_.props.elementWithKey,_elementWithImplicit:_.props._elementWithImplicit,elementWithImplicit:_.props.elementWithImplicit,_elementWithCardinal:function _elementWithCardinal(src,key){return(key<0||src.size<=key||!_.numberIs(key))&&(src.size<=key||!_.number.is(key))?[void 0,key,false]:[[...src][key],key,true]},elementWithCardinal:_.props.elementWithCardinal,_elementSet:_elementWithKeySet,elementSet:_.props.elementSet,_elementWithKeySet:_elementWithKeySet,elementWithKeySet:_.props.elementWithKeySet,_elementWithCardinalSet:function _elementWithCardinalSet(dst,cardinal,val){let was=this._elementWithCardinal(dst,cardinal);return true===was[2]?(dst.delete(was[0]),dst.add(val),[val,true]):[cardinal,false]},elementWithCardinalSet:_.props.elementWithCardinalSet,_elementDel:_elementWithKeyDel,elementDel:_.props.elementDel,_elementWithKeyDel:_elementWithKeyDel,elementWithKeyDel:_.props.elementWithKeyDel,_elementWithCardinalDel:function _elementWithCardinalDel(dst,cardinal){let has=this._keyWithCardinal(dst,cardinal);return!!has[1]&&(dst.delete(has[0]),true)},elementWithCardinalDel:_.props.elementWithCardinalDel,_empty:function _empty(dst){return dst.clear(),dst},empty:_.props.empty,_each:_eachLeft,each:_.props.each,_eachLeft:_eachLeft,eachLeft:_.props.eachLeft,_eachRight:function _eachRight(src,onEach){for(let k=[...src].length-1;k>=0;k--){let e=src[k];onEach(e,e,k,src)}},eachRight:_.props.eachRight,_while:_whileLeft,while:_.props.while,_whileLeft:_whileLeft,whileLeft:_.props.whileLeft,_whileRight:function _whileRight(src,onEach){if(0===src.size)return[void 0,void 0,-1,true];var src2=[...src];for(let k=src2.length-1;k>=0;k--){let r=onEach(e=src2[k],e,k,src);if(_.assert(true===r||false===r),false===r)return[e,e,k,false]}var e;return[e=src2[0],e,0,true]},whileRight:_.props.whileRight,_aptLeft:_.props._aptLeft,aptLeft:_.props.aptLeft,first:_.props.first,_aptRight:_.props._aptRight,aptRight:_.props.aptRight,last:_.props.last,_filterAct0:_.props._filterAct0,_filterAct:_.props._filterAct,filterWithoutEscapeLeft:_.props.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.props.filterWithoutEscapeRight,filterWithoutEscape:_.props.filterWithoutEscape,filterWithEscapeLeft:_.props.filterWithEscapeLeft,filterWithEscapeRight:_.props.filterWithEscapeRight,filterWithEscape:_.props.filterWithEscape,filter:_.props.filter,_mapAct0:_.props._mapAct0,_mapAct:_.props._mapAct,mapWithoutEscapeLeft:_.props.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.props.mapWithoutEscapeRight,mapWithoutEscape:_.props.mapWithoutEscape,mapWithEscapeLeft:_.props.mapWithEscapeLeft,mapWithEscapeRight:_.props.mapWithEscapeRight,mapWithEscape:_.props.mapWithEscape,map:_.props.map};Object.assign(_.set,SetExtension);let SetsExtension={toArrays:setsToArrays};Object.assign(_.sets,SetsExtension);let ToolsExtension={setToArray:toArray,setsToArrays:setsToArrays};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Str_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Str.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Str_s_naked(){!function _l3_Str_s_(){"use strict";_global_;const _=_global_.wTools;function exportStringDiagnosticShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringDiagnosticShallow(...arguments)}function identicalShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!this.is(src1)&&!!this.is(src2)&&this._identicalShallow(...arguments)}function equivalentShallow(src1,src2,accuracy){return _.assert(2===arguments.length||3===arguments.length),!!_.regexp.like(src1)&&!!_.regexp.like(src2)&&_.str._equivalentShallow(...arguments)}function prependOnce(src,begin){return _.assert(_.strIs(src)&&_.strIs(begin),"Expects {-src-} and {-begin-} as strings"),0===src.lastIndexOf(begin,0)?src:begin+src}function appendOnce(src,end){return _.assert(_.strIs(src)&&_.strIs(end),"Expects {-src-} and {-end-} as strings"),-1===src.indexOf(end,src.length-end.length)?src+end:src}let StrExtension={_exportStringDiagnosticShallow:function _exportStringDiagnosticShallow(src,o){return src},exportStringDiagnosticShallow:exportStringDiagnosticShallow,_exportStringCodeShallow:function _exportStringCodeShallow(src,o){return`'${src}'`},exportStringCodeShallow:function exportStringCodeShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringCodeShallow(...arguments)},exportString:exportStringDiagnosticShallow,_identicalShallow:function _identicalShallow(src1,src2){return src1===src2},identicalShallow:identicalShallow,identical:identicalShallow,_equivalentShallow:function _equivalentShallow(src1,src2){let strIs1=_.strIs(src1);let strIs2=_.strIs(src2);if(!strIs1&&strIs2)return this._equivalentShallow(src2,src1);if(strIs1&&strIs2)return src1===src2||_.str.lines.strip(src1)===_.str.lines.strip(src2);if(strIs1){_.assert(!!src2.exec);let matched=src2.exec(src1);return!!matched&&matched[0].length===src1.length}return _.regexpIdentical(src1,src2)},equivalentShallow:equivalentShallow,equivalent:equivalentShallow,prependOnce:prependOnce,appendOnce:appendOnce};Object.assign(_.str,StrExtension);let ToolsExtension={strPrependOnce:prependOnce,strAppendOnce:appendOnce};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Stringer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Stringer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Stringer_s_naked(){!function _l3_Stringer_s_(){"use strict";_global_;const _=_global_.wTools;_.stringer=_.stringer||Object.create(null),Object.assign(_.stringer,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Time_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Time.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Time_s_naked(){!function _l3_Time_s_(){"use strict";_global_;const _=_global_.wTools;let TimeExtension={_sleep:function _sleep(delay){_.assert(_.intIs(delay)&&delay>=0,"Specify valid value {-delay-}.");let now=_.time.now();for(;_.time.now()-now<delay;)Math.random()},sleep:function sleep(delay){_.assert(1===arguments.length),_.time._sleep.apply(this,arguments)},from:function from(time){if(_.assert(1===arguments.length),_.number.is(time))return time;if(_.date.is(time))return time.getTime();if(_.strIs(time)){if(time=Date.parse(time),!isNaN(time))return time;_.assert(0,"Wrong time format")}_.assert(0,"Not clear how to coerce to time",_.entity.strType(time))}};Object.assign(_.time,TimeExtension)}()});module.exports,module.include,module.include}(),function Unroll_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Unroll.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Unroll_s_naked(){!function _l3_Unroll_s_(){"use strict";_global_;const _=_global_.wTools;function _exportStringDiagnosticShallow(src){return`{- ${_.entity.strType(src)}.unroll with ${this._lengthOf(src)} elements -}`}_.assert(!!_.long._elementWithKey,"Expects routine array._elementWithKey"),Symbol.for("unroll"),Object.assign(_,{});let UnrollExtension={_identicalShallow:_.long._identicalShallow,identicalShallow:_.long.identicalShallow,identical:_.long.identical,_equivalentShallow:_.long._equivalentShallow,equivalentShallow:_.long.equivalentShallow,equivalent:_.long.equivalent,_exportStringDiagnosticShallow:_exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.long.exportStringDiagnosticShallow,_exportStringCodeShallow:_exportStringDiagnosticShallow,exportStringCodeShallow:_.long.exportStringCodeShallow,exportString:_.long.exportString,_lengthOf:_.long._lengthOf,lengthOf:_.long.lengthOf,_hasKey:_.long._hasKey,hasKey:_.long._hasKey,_hasCardinal:_.long._hasKey,hasCardinal:_.long._hasKey,_keyWithCardinal:_.long._hasKey,keyWithCardinal:_.long._hasKey,_cardinalWithKey:_.long._cardinalWithKey,cardinalWithKey:_.long.cardinalWithKey,_elementGet:_.long._elementWithKey,elementGet:_.long.elementWithKey,_elementWithKey:_.long._elementWithKey,elementWithKey:_.long.elementWithKey,_elementWithImplicit:_.long._elementWithImplicit,elementWithImplicit:_.long.elementWithImplicit,_elementWithCardinal:_.long._elementWithCardinal,elementWithCardinal:_.long.elementWithCardinal,_elementSet:_.long._elementSet,elementSet:_.long.elementSet,_elementWithKeySet:_.long._elementWithKeySet,elementWithKeySet:_.long.elementWithKeySet,_elementWithCardinalSet:_.long._elementWithCardinalSet,elementWithCardinalSet:_.long.elementWithCardinalSet,_elementAppend:_.array._elementAppend,elementAppend:_.array.elementAppend,_elementPrepend:_.array._elementPrepend,elementPrepend:_.array.elementPrepend,_elementDel:_.array._elementDel,elementDel:_.array.elementDel,_elementWithKeyDel:_.array._elementWithKeyDel,elementWithKeyDel:_.array.elementWithKeyDel,_elementWithCardinalDel:_.array._elementWithCardinalDel,elementWithCardinalDel:_.array.elementWithCardinalDel,_empty:_.array._empty,empty:_.array.empty,_each:_.long._each,each:_.long.each,_eachLeft:_.long._eachLeft,eachLeft:_.long.eachLeft,_eachRight:_.long._eachRight,eachRight:_.long.eachRight,_while:_.long._while,while:_.long.while,_whileLeft:_.long._whileLeft,whileLeft:_.long.whileLeft,_whileRight:_.long._whileRight,whileRight:_.long.whileRight,_aptLeft:_.long._aptLeft,aptLeft:_.long.aptLeft,first:_.long.first,_aptRight:_.long._aptRight,aptRight:_.long.aptRight,last:_.long.last,_filterAct:_.long._filterAct,filterWithoutEscapeLeft:_.long.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.long.filterWithoutEscapeRight,filterWithoutEscape:_.long.filterWithoutEscape,filterWithEscapeLeft:_.long.filterWithEscapeLeft,filterWithEscapeRight:_.long.filterWithEscapeRight,filterWithEscape:_.long.filterWithEscape,filter:_.long.filter,_mapAct:_.long._mapAct,mapWithoutEscapeLeft:_.long.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.long.mapWithoutEscapeRight,mapWithoutEscape:_.long.mapWithoutEscape,mapWithEscapeLeft:_.long.mapWithEscapeLeft,mapWithEscapeRight:_.long.mapWithEscapeRight,mapWithEscape:_.long.mapWithEscape,map:_.long.map};Object.assign(_.unroll,UnrollExtension)}()});module.exports,module.include,module.include}(),function Vector_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/Vector.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Vector_s_naked(){!function _l3_Vector_s_(){"use strict";_global_;const _=_global_.wTools;function adapterIs(src){return"[object VectorAdapter]"===Object.prototype.toString.call(src)}function constructorIsVectorAdapter(src){return!!src&&"_vectorBuffer"in src.prototype}_.assert(!!_.countable._elementWithKey,"Expects routine countable._elementWithKey");var ToolsExtension={vectorAdapterIs:adapterIs,vadIs:adapterIs,constructorIsVectorAdapter:constructorIsVectorAdapter,constructorIsVad:constructorIsVectorAdapter};Object.assign(_,ToolsExtension);var VectorExtension={adapterIs:adapterIs,constructorIsVectorAdapter:constructorIsVectorAdapter,_identicalShallow:_.countable.identicalShallow,identicalShallow:_.countable.identicalShallow,identical:_.countable.identical,_equivalentShallow:_.countable.identicalShallow,equivalentShallow:_.countable.equivalentShallow,equivalent:_.countable.equivalent,_exportStringDiagnosticShallow:_.countable._exportStringDiagnosticShallow,exportStringDiagnosticShallow:_.countable.exportStringDiagnosticShallow,_exportStringCodeShallow:_.countable._exportStringCodeShallow,exportStringCodeShallow:_.countable.exportStringCodeShallow,exportString:_.countable.exportString,_lengthOf:_.countable._lengthOf,lengthOf:_.countable.lengthOf,_hasKey:_.countable._hasKey,hasKey:_.countable._hasKey,_hasCardinal:_.countable._hasKey,hasCardinal:_.countable._hasKey,_keyWithCardinal:_.countable._hasKey,keyWithCardinal:_.countable._hasKey,_cardinalWithKey:_.countable._cardinalWithKey,cardinalWithKey:_.countable.cardinalWithKey,_elementGet:_.countable._elementWithKey,elementGet:_.countable.elementWithKey,_elementWithKey:_.countable._elementWithKey,elementWithKey:_.countable.elementWithKey,_elementWithImplicit:_.countable._elementWithImplicit,elementWithImplicit:_.countable.elementWithImplicit,_elementWithCardinal:_.countable._elementWithCardinal,elementWithCardinal:_.countable.elementWithCardinal,_elementSet:_.countable._elementSet,elementSet:_.countable.elementSet,_elementWithKeySet:_.countable._elementWithKeySet,elementWithKeySet:_.countable.elementWithKeySet,_elementWithCardinalSet:_.countable._elementWithCardinalSet,elementWithCardinalSet:_.countable.elementWithCardinalSet,_elementDel:_.countable._elementDel,elementDel:_.countable.elementDel,_elementWithKeyDel:_.countable._elementWithKeyDel,elementWithKeyDel:_.countable.elementWithKeyDel,_elementWithCardinalDel:_.countable._elementWithCardinalDel,elementWithCardinalDel:_.countable.elementWithCardinalDel,_empty:_.countable._empty,empty:_.countable.empty,_elementAppend:_.countable._elementAppend,elementAppend:_.countable.elementAppend,_elementPrepend:_.countable._elementPrepend,elementPrepend:_.countable.elementPrepend,_each:_.countable._each,each:_.countable.each,_eachLeft:_.countable._eachLeft,eachLeft:_.countable.eachLeft,_eachRight:_.countable._eachRight,eachRight:_.countable.eachRight,_while:_.countable._while,while:_.countable.while,_whileLeft:_.countable._whileLeft,whileLeft:_.countable.whileLeft,_whileRight:_.countable._whileRight,whileRight:_.countable.whileRight,_aptLeft:_.countable._aptLeft,aptLeft:_.countable.aptLeft,first:_.countable.first,_aptRight:_.countable._aptRight,aptRight:_.countable.aptRight,last:_.countable.last,_filterAct:_.countable._filterAct,filterWithoutEscapeLeft:_.countable.filterWithoutEscapeLeft,filterWithoutEscapeRight:_.countable.filterWithoutEscapeRight,filterWithoutEscape:_.countable.filterWithoutEscape,filterWithEscapeLeft:_.countable.filterWithEscapeLeft,filterWithEscapeRight:_.countable.filterWithEscapeRight,filterWithEscape:_.countable.filterWithEscape,filter:_.countable.filter,_mapAct:_.countable._mapAct,mapWithoutEscapeLeft:_.countable.mapWithoutEscapeLeft,mapWithoutEscapeRight:_.countable.mapWithoutEscapeRight,mapWithoutEscape:_.countable.mapWithoutEscape,mapWithEscapeLeft:_.countable.mapWithEscapeLeft,mapWithEscapeRight:_.countable.mapWithEscapeRight,mapWithEscape:_.countable.mapWithEscape,map:_.countable.map};Object.assign(_.vector,VectorExtension)}()});module.exports,module.include,module.include}(),function zErr_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3/zErr.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l3");let module=_starter_._sourceMake(_filePath_,_dirPath_,function zErr_s_naked(){!function _l3_Err_s_(){"use strict";const _global=_global_;const _=_global_.wTools;function _handleUncaught2(o){const __=_global_.globals&&_globals_.testing.wTools;const process0=function processNamespaceGet(){let result;return!result&&_.process&&_.process.exitReason&&(result=_.process),!result&&_realGlobal_&&_realGlobal_.wTools&&_realGlobal_.wTools.process&&_realGlobal_.wTools.process.exitReason&&(result=_realGlobal_.wTools.process),!result&&_realGlobal_._globals_.testing&&__&&__.process&&__.process.exitReason&&(result=__.process),result||(result=_.process),result}();function exitError(err,rewriting){let set=false;debugger;if(process0&&process0.exit)try{process0.exitCode(-1),process0.exitReason()||process0.exitReason(err),set=true}catch(err2){debugger;console.log(err2)}if(!set)try{_global.process&&(process.exitCode||(process.exitCode=-1),set=true)}catch(err2){}}!function optionsRefine(){o.origination||(o.origination="uncaught error"),o.prefix=`--------------- ${o.origination} ---------------\x3e\n`,o.postfix=`--------------- ${o.origination} ---------------<\n`,o.logger=_global.logger||_global.console}(),o.err=function errRefine(err){try{return _.error.process(err)}catch(err2){return console.error(err2),err}}(o.err),function processUncaughtErrorEvent(){try{process0&&process0.eventGive&&process0.eventGive({event:"uncaughtError",origination:o.origination,err:o.err});for(let g in _realGlobal_._globals_){const _global=_realGlobal_._globals_[g];_global.wTools&&_global.wTools.process&&_global.wTools.process.eventGive&&_global.wTools.process!==process0&&_global.wTools.process.eventGive({event:"uncaughtError",origination:o.origination,err:o.err})}}catch(err2){debugger;console.log(err2),exitError(err2)}}(),_.error.isAttended(o.err)||(function consoleUnbar(){let Logger=function loggerClassGet(){let result;return!result&&_.Logger&&_.Logger.ConsoleBar&&(result=_.Logger),!result&&_realGlobal_&&_realGlobal_.wTools&&_realGlobal_.wTools.Logger&&_realGlobal_.wTools.Logger.ConsoleBar&&(result=_realGlobal_.wTools.Logger),!result&&__&&__.Logger&&__.Logger.ConsoleBar&&(result=__.Logger),result}();try{Logger&&Logger.ConsoleBar&&Logger.ConsoleIsBarred(console)&&Logger.ConsoleBar({on:0})}catch(err2){debugger;console.error(err2)}}(),console.error(o.prefix),function errLogFields(){if(!o.err.originalMessage&&_.object.like&&_.object.like(o.err))try{let props=Object.create(null);for(let k in o.err)props[k]=o.err[k];o.logger.error(_.entity.exportString(props));debugger}catch(err2){debugger;console.error(err2)}}(),function errLog(){try{_.error&&_.error._log?_.error._log(o.err,o.logger):console.error(o.err)}catch(err2){debugger;console.error(err2),console.error(o.err)}}(),console.error(o.postfix),function processExit(){if(exitError(o.err),process0&&process0.exit)try{process0.exit()}catch(err2){debugger;console.log(err2),exitError(o.err)}try{_global.process&&process.exit()}catch(err2){}}())}_handleUncaught2.defaults={err:null,origination:null};let Extension={_handleUncaught2:_handleUncaught2,_handleUncaughtAsync:function _handleUncaughtAsync(err){if(_.error.isAttended(err))return err;if(!err)debugger;return _.error.wary(err,1),_.error.isSuspended(err)?err:(_.time._finally(_.error.uncaughtDelayTime,function uncaught(){if(!_.error.isAttended(err)&&!_.error.isSuspended(err)){if(!err)debugger;_.error._handleUncaught2({err:err,origination:"uncaught asynchronous error"})}}),err)},_setupUncaughtErrorHandler9:function _setupUncaughtErrorHandler9(){if(!_realGlobal_._setupUncaughtErrorHandlerDone){debugger;throw Error("setup0 should be called first")}_realGlobal_._setupUncaughtErrorHandlerDone>1||(_realGlobal_._setupUncaughtErrorHandlerDone=2,_global.process&&_.routine.is(_global.process.on)?_.error._handleUncaughtHead=function _errHeadNode(args){return[{err:args[0],args:args}]}:Object.hasOwnProperty.call(_global,"onerror")&&(_.error._handleUncaughtHead=function _errHeadBrowser(args){let[message,sourcePath,lineno,colno,error]=args;let err=error||message;return _._err&&(err=_._err({args:[error||message],level:1,fallBackStack:"at handleError @ "+sourcePath+":"+lineno,throwLocation:{filePath:sourcePath,line:lineno,col:colno}})),[{err:err,args:args}]}))},error_functor:function error_functor(name,onErrorMake){if(_.assert(void 0===_._err.defaults[name]),_.strIs(onErrorMake)||_.arrayIs(onErrorMake)){let prepend=onErrorMake;onErrorMake=function onErrorMake(){debugger;return _.arrayAppendArrays([],[prepend,arguments])}}else onErrorMake||(onErrorMake=function onErrorMake(){return arguments});let ErrorConstructor={[name]:function(){if(this instanceof ErrorConstructor){let err1=this;let args1=onErrorMake.apply(err1,arguments);_.assert(_.argumentsArray.like(args1));let args2=args1;Array.prototype.includes.call(args2,err1)||(args2=[err1,...args1]);let err2=_._err({args:args2,level:2,concealed:{[name]:true}});return _.assert(err1===err2),_.assert(err2 instanceof _global.Error),_.assert(err2 instanceof ErrorConstructor),err2}{if(1===arguments.length&&arguments[0]&&arguments[0]instanceof ErrorConstructor)return arguments[0];let err1;for(let i=0;i<arguments.length;i++)if(arguments[i]&&arguments[i]instanceof ErrorConstructor){err1=arguments[i];break}return err1?ErrorConstructor.apply(err1,arguments):new ErrorConstructor(...arguments)}}}[name];return _.assert(ErrorConstructor.name===name,"Looks like your interpreter does not support dynamice naming of functions. Please use ES2015 or later interpreter."),ErrorConstructor.prototype=Object.create(_global.Error.prototype),ErrorConstructor.prototype.constructor=ErrorConstructor,Object.setPrototypeOf(ErrorConstructor,_global.Error),ErrorConstructor},uncaughtDelayTime:100};Object.assign(_.error,Extension)}()});module.exports,module.include,module.include}(),function _1Seeker_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/1Seeker.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function _1Seeker_s_naked(){!function _l5_1Seeker_s_(){"use strict";_global_;const _=_global_.wTools;const _iteratorInitExcluding=new Set(["Seeker","iterationPrototype","firstIterationPrototype","iterator"]);function classDefine(o){_.routine.options(classDefine,o),null===o.parent&&(o.parent=this.Seeker),null===o.name&&(o.name="CustomSeeker"),_.assert(_.object.isBasic(o.parent),"Parent should be object");let seeker=_.props.extend(null,o.parent);if(!o.seeker||!o.seeker.constructor||o.seeker.constructor===Object){let CustomSeeker={[o.name]:function(){}}[o.name];seeker.constructor=CustomSeeker,_.assert(seeker.constructor.name===o.name)}o.prime&&_.props.extend(seeker,o.prime),o.seeker&&_.props.extend(seeker,o.seeker),o.iterator&&_.props.extend(seeker,o.iterator),o.iterationPreserve&&(o.iteration=_.props.supplement(o.iteration||Object.create(null),o.iterationPreserve)),seeker.Seeker=seeker,seeker.OriginalSeeker=seeker,seeker.Prime=Object.create(seeker.Prime||null),o.prime&&_.props.extend(seeker.Prime,o.prime),Object.preventExtensions(seeker.Prime),(o.exec||seeker.exec)&&(seeker.exec=exec_functor(o.exec||seeker.exec)),(o.execIt||seeker.execIt)&&(seeker.execIt=exec_functor(o.execIt||seeker.execIt));let iterator=seeker.Iterator=Object.assign(Object.create(null),seeker.Iterator);o.iterator&&_.props.extend(iterator,o.iterator),seeker.Iteration=Object.assign(Object.create(null),seeker.Iteration);let iterationPreserve=seeker.IterationPreserve=Object.assign(Object.create(null),seeker.IterationPreserve);return o.iterationPreserve&&_.props.extend(iterationPreserve,o.iterationPreserve),o.iteration&&_.props.extend(seeker.Iteration,o.iteration),Object.freeze(seeker.Iterator),Object.freeze(seeker.Iteration),Object.freeze(seeker.IterationPreserve),seeker;function exec_functor(original){_.assert(_.routineIs(original.head)),_.assert(_.routineIs(original.body)),original.body.defaults||(original.body.defaults=seeker);let exec=_.routine._amend({dst:null,srcs:[original,{defaults:seeker}],strategy:"replacing",amending:"extending"});return _.assert(exec.defaults===seeker),_.assert(exec.body.defaults===seeker),exec}}classDefine.defaults={name:null,parent:null,prime:null,seeker:null,iterator:null,iteration:null,iterationPreserve:null,exec:null,execIt:null};const Seeker=Object.create(null);Seeker.OriginalSeeker=Seeker,Seeker.Seeker=Seeker,Seeker.constructor=function Seeker(){_.assert(0,"not implemented");let prototype=_.prototype.of(this);_.assert(_.object.isBasic(prototype)),_.assert(prototype.exec.defaults===prototype);let result=this.head(prototype.exec,arguments);return _.assert(result===this),this},_.prototype.set(Seeker.constructor,null),Seeker.constructor.prototype=Seeker,Seeker.head=function head(routine,args){_.assert(2===arguments.length),_.assert(!!routine.defaults.Seeker);let o=routine.defaults.Seeker.optionsFromArguments(args);return o.Seeker=o.Seeker||routine.defaults,_.map.assertHasOnly(o,routine.defaults),_.assert(_.props.keys(routine.defaults).length===_.props.keys(o.Seeker).length,()=>`${_.props.keys(routine.defaults).length} <> ${_.props.keys(o.Seeker).length}`),o.Seeker.optionsToIteration(null,o)},Seeker.optionsToIteration=function optionsToIteration(iterator,o){_.assert(void 0===o.it),_.assert(_.mapIs(o)),_.assert(!_.props.ownEnumerable(o,"constructor")),_.assert(2===arguments.length),null===iterator?iterator=o.Seeker.iteratorRetype(o):Object.assign(iterator,o),o.Seeker.iteratorInit(iterator);let it=iterator.iteratorIterationMake();return _.assert(it.Seeker.iterationProper(it)),it},Seeker.optionsFromArguments=function optionsFromArguments(args){let o;return 1===args.length?o=args[0]:2===args.length?o={src:args[0],onUp:args[1]}:3===args.length?o={src:args[0],onUp:args[1],onDown:args[2]}:_.assert(0,"look expects single options-map, 2 or 3 arguments"),_.assert(1===args.length||2===args.length||3===args.length),_.assert(1===arguments.length),_.assert(_.aux.is(o)),o},Seeker.iteratorProper=function iteratorProper(it){return!!it&&!!it.Seeker&&it.iterator===it&&it.constructor===this.constructor},Seeker.iteratorRetype=function iteratorRetype(iterator){return Object.setPrototypeOf(iterator,iterator.Seeker),iterator.iterator=iterator,iterator},Seeker.iteratorInit=function iteratorInit(iterator){this.iteratorInitBegin(iterator),this.iteratorInitEnd(iterator)},Seeker.iteratorInitBegin=function iteratorInitBegin(iterator){return iterator.iterator=iterator,iterator},Seeker.iteratorInitEnd=function iteratorInitEnd(iterator){iterator.iterationPrototype=Object.create(iterator),iterator.firstIterationPrototype=Object.create(iterator.iterationPrototype),Object.assign(iterator.iterationPrototype,iterator.Seeker.Iteration);for(const[key,val]of Object.entries(iterator))_iteratorInitExcluding.has(key)||_.props.own(iterator.iterationPrototype,key)&&(_.props.has(iterator.Iteration,key)?iterator.firstIterationPrototype[key]!==val&&(iterator.firstIterationPrototype[key]=val):iterator.iterationPrototype[key]!==val&&(iterator.iterationPrototype[key]=val));return Object.preventExtensions(iterator.iterationPrototype),iterator},Seeker.iteratorIterationMake=function iteratorIterationMake(){return Object.create(this.firstIterationPrototype)},Seeker.iterationMake=function iterationMake(){let it=this;let newIt=Object.create(it.iterationPrototype);for(let k in it.Seeker.IterationPreserve)newIt[k]=it[k];return newIt.down=it,newIt},Seeker.iterationProper=function iterationProper(it){return!!it&&!!it.Seeker&&!!it.iterator&&it.iterator!==it&&it.constructor===this.constructor},Seeker.onUp=null,Seeker.onDown=null,Seeker.iterationPrototype=null,Seeker.firstIterationPrototype=null,Seeker.Iterator=Object.create(null),(Seeker.Iteration=Object.create(null)).down=null,Seeker.IterationPreserve=Object.create(null);let SeekerExtension={Seeker:Seeker,is:function is(src){return!!src&&!!src.Seeker&&_.prototype.isPrototypeFor(src,src.Seeker)},iteratorIs:function iteratorIs(it){return!!it&&!!it.Seeker&&it.iterator===it},iterationIs:function iterationIs(it){return!!it&&!!it.Seeker&&!!it.iterator&&it.iterator!==it},classDefine:classDefine};Object.assign(_.seeker,SeekerExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function ArgumentsArray_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/ArgumentsArray.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ArgumentsArray_s_naked(){!function _l5_ArgumentsArray_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{}),Object.assign(_.argumentsArray,{})}()});module.exports,module.include,module.include}(),function Array_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Array.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Array_s_naked(){!function _l5_Array_s_(){"use strict";const _ArrayIndexOf=Array.prototype.indexOf;const _ArrayIncludes=Array.prototype.includes;_ArrayIncludes||(_ArrayIncludes=function(e){_ArrayIndexOf.call(this,e)}),_global_;const _=_global_.wTools;function arrayRemovedArray(dstArray,insArray){if(_.assert(2===arguments.length),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),_.assert(_.longLike(insArray)),dstArray===insArray)return dstArray.splice(0).length;let result=0;let index=-1;for(let i=0,len=insArray.length;i<len;i++)for(index=dstArray.indexOf(insArray[i]);-1!==index;)dstArray.splice(index,1),result+=1,index=dstArray.indexOf(insArray[i],index);return result}function arrayRemovedArrayOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];if(_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),_.assert(_.longLike(insArray)),dstArray===insArray&&2===arguments.length)return dstArray.splice(0).length;let result=0;let index=-1;for(let i=insArray.length-1;i>=0;i--)(index=_.longLeftIndex(dstArray,insArray[i],evaluator1,evaluator2))>=0&&(dstArray.splice(index,1),result+=1);return result}function arrayRemovedArrays(dstArray,insArray){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.arrayIs(dstArray),"arrayRemovedArrays :","Expects array"),_.assert(_.longLike(insArray),"arrayRemovedArrays :","Expects longLike entity");let result=0;if(dstArray===insArray)return result=insArray.length,dstArray.splice(0),result;function _remove(argument){let index=dstArray.indexOf(argument);for(;-1!==index;)dstArray.splice(index,1),result+=1,index=dstArray.indexOf(argument,index)}for(let a=insArray.length-1;a>=0;a--)if(_.longLike(insArray[a])){let array=insArray[a];for(let i=array.length-1;i>=0;i--)_remove(array[i])}else _remove(insArray[a]);return result}function arrayRemovedArraysOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(dstArray),"arrayRemovedArraysOnce :","Expects array"),_.assert(_.longLike(insArray),"arrayRemovedArraysOnce :","Expects longLike entity");let result=0;if(dstArray===insArray&&2===arguments.length)return result=insArray.length,dstArray.splice(0),result;function _removeOnce(argument){let index=_.longLeftIndex(dstArray,argument,evaluator1,evaluator2);index>=0&&(dstArray.splice(index,1),result+=1)}for(let a=insArray.length-1;a>=0;a--)if(_.longLike(insArray[a])){let array=insArray[a];for(let i=array.length-1;i>=0;i--)_removeOnce(array[i])}else _removeOnce(insArray[a]);return result}function arrayFlattenedDefined(dstArray,src){let result=0;let length=dstArray.length;let visited=[];if(_.assert(1===arguments.length||2===arguments.length),_.assert(_.object.isBasic(this)),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),1===arguments.length){for(let i=0;i<dstArray.length;i++){let e=dstArray[i];void 0===e?(dstArray.splice(i,1),i-=1):_.longLike(e)||_.set.like(e)?(dstArray.splice(i,1),e!==dstArray&&(i=containerReplace(e,i)),i-=1):result+=1}return result}if(_.longHas(dstArray,dstArray)){let i=_.longLeftIndex(dstArray,dstArray);for(;-1!==i;)dstArray.splice(i,1),i=_.longLeftIndex(dstArray,dstArray)}return _.longLike(src)||_.set.like(src)?function containerAppend(src){if(_.longHas(visited,src))return;let count;visited.push(src),count=src===dstArray?length:src.length;for(let e of src){if(count<1)break;count--,_.longLike(e)||_.set.like(e)?containerAppend(e):void 0!==e&&(dstArray.push(e),result+=1)}visited.pop()}(src):void 0!==src&&(dstArray.push(src),result+=1),result;function containerReplace(src,index){for(let e of src)_.longLike(e)||_.set.like(e)?index=containerReplace(e,index):void 0!==e&&(dstArray.splice(index,0,e),result+=1,index+=1);return index}}function arrayFlattenedDefinedOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let result=0;let length=dstArray.length;let visited=[];if(_.assert(arguments.length&&arguments.length<=4),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),1===arguments.length){_.arrayRemoveDuplicates(dstArray);for(let i=0;i<dstArray.length;i++){let e=dstArray[i];void 0===e?(dstArray.splice(i,1),i-=1):_.longLike(e)||_.set.like(e)?(dstArray.splice(i,1),e!==dstArray&&(i=containerReplace(e,i)),i-=1):result+=1}return result}if(_.longHas(dstArray,dstArray)){let i=_.longLeftIndex(dstArray,dstArray);for(;-1!==i;)dstArray.splice(i,1),i=_.longLeftIndex(dstArray,dstArray)}return _.longLike(insArray)||_.set.like(insArray)?function containerAppend(src){if(_.longHas(visited,src))return;let count;visited.push(src),count=src===dstArray?length:src.length;for(let e of src){if(count<1)break;count--,_.longLike(e)||_.set.like(e)?containerAppend(e):void 0!==e&&-1===_.longLeftIndex(dstArray,e,evaluator1,evaluator2)&&(dstArray.push(e),result+=1)}visited.pop()}(insArray):void 0!==insArray&&-1===_.longLeftIndex(dstArray,insArray,evaluator1,evaluator2)&&(dstArray.push(insArray),result+=1),result;function containerReplace(src,index){
for(let e of src)_.longLike(e)||_.set.like(e)?index=containerReplace(e,index):void 0!==e&&-1===_.longLeftIndex(dstArray,e)&&(dstArray.splice(index,0,e),result+=1,index+=1);return index}}function arrayFlattenedDefinedOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let result=0;let visited=[];_.assert(arguments.length&&arguments.length<=4),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`);let oldLength=dstArray.length;if(_.arrayRemoveDuplicates(dstArray),dstArray.length,1===arguments.length){for(let i=0;i<dstArray.length;i++){let e=dstArray[i];void 0===e?(dstArray.splice(i,1),i-=1):_.longLike(e)||_.set.like(e)?(dstArray.splice(i,1),e!==dstArray&&(i=containerReplace(e,i)),i-=1):result+=1}return result}if(_.longHas(dstArray,dstArray)){let i=_.longLeftIndex(dstArray,dstArray);for(;-1!==i;)dstArray.splice(i,1),i=_.longLeftIndex(dstArray,dstArray)}return _.longLike(insArray)||_.set.like(insArray)?function containerAppend(src){if(_.longHas(visited,src))return;let count;visited.push(src),count=src===dstArray?oldLength:src.length;for(let e of src){if(count<1)break;count--,_.longLike(e)||_.set.like(e)?containerAppend(e):void 0!==e&&-1===_.longLeftIndex(dstArray,e,evaluator1,evaluator2)&&(dstArray.push(e),result+=1)}visited.pop()}(insArray):void 0!==insArray&&-1===_.longLeftIndex(dstArray,insArray,evaluator1,evaluator2)&&(dstArray.push(insArray),result+=1),result;function containerReplace(src,index){for(let e of src)_.longLike(e)||_.set.like(e)?index=containerReplace(e,index):void 0!==e&&-1===_.longLeftIndex(dstArray,e)&&(dstArray.splice(index,0,e),result+=1,index+=1);return index}}function arrayReplacedOnce(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5),_.longLike(ins)&&(_.assert(_.longLike(sub)),_.assert(ins.length===sub.length));let index=-1;return(index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2))>=0&&dstArray.splice(index,1,sub),index}function arrayReplacedElementOnce(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5),_.longLike(ins)&&(_.assert(_.longLike(sub)),_.assert(ins.length===sub.length));let index=-1;if((index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2))>=0)return dstArray.splice(index,1,sub),ins}function arrayReplacedArray(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5),_.assert(_.longLike(ins)),_.assert(_.longLike(sub)),_.assert(ins.length===sub.length,"{-subArray-} should have the same length {-insArray-} has");let result=0;let index=-1;dstArray===ins&&(ins=ins.slice());for(let i=0,len=ins.length;i<len;i++)for(index=_.longLeftIndex(dstArray,ins[i],evaluator1,evaluator2);-1!==index;){let subValue=sub[i];let insValue=ins[i];if(void 0===subValue?dstArray.splice(index,1):dstArray.splice(index,1,subValue),result+=1,subValue===insValue)break;index=_.longLeftIndex(dstArray,insValue,evaluator1,evaluator2)}return result}function arrayReplacedArrayOnce(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(_.longLike(ins)),_.assert(_.longLike(sub)),_.assert(ins.length===sub.length,"{-subArray-} should have the same length {-insArray-} has"),_.assert(3<=arguments.length&&arguments.length<=5);let index=-1;let result=0;for(let i=0,len=ins.length;i<len;i++)if((index=_.longLeftIndex(dstArray,ins[i],evaluator1,evaluator2))>=0){let subValue=sub[i];void 0===subValue?dstArray.splice(index,1):dstArray.splice(index,1,subValue),result+=1}return result}function arrayReplacedArrays(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5),_.assert(_.arrayIs(dstArray),"arrayReplacedArrays :","Expects array"),_.assert(_.longLike(sub),"arrayReplacedArrays :","Expects longLike entity"),_.assert(_.longLike(ins),"arrayReplacedArrays :","Expects longLike entity"),_.assert(ins.length===sub.length,"{-subArray-} should have the same length {-insArray-} has");let result=0;function _replace(){let dstArray=arguments[0];let argument=arguments[1];let subValue=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];let index=_.longLeftIndex(dstArray,argument,evaluator1,evaluator2);for(;-1!==index&&(dstArray.splice(index,1,subValue),result+=1,subValue!==argument);)index=_.longLeftIndex(dstArray,argument,evaluator1,evaluator2)}let insCopy=Object.create(null);let subCopy=Object.create(null);if(dstArray===ins)ins=ins.slice();else for(let i=ins.length-1;i>=0;i--)_.longLike(ins[i])&&ins[i]===dstArray&&(insCopy[i]=ins[i].slice()),_.longLike(sub[i])&&sub[i]===dstArray&&(subCopy[i]=sub[i].slice());for(let a=0,len=ins.length;a<len;a++)if(_.longLike(ins[a])){let insArray=insCopy[a]||ins[a];let subArray=sub[a]||subCopy[a];for(let i=0,len2=insArray.length;i<len2;i++)_replace(dstArray,insArray[i],subArray[i],evaluator1,evaluator2)}else _replace(dstArray,ins[a],sub[a],evaluator1,evaluator2);return result}function arrayReplacedArraysOnce(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5),_.assert(_.arrayIs(dstArray),"arrayReplacedArrays :","Expects array"),_.assert(_.longLike(sub),"arrayReplacedArrays :","Expects longLike entity"),_.assert(_.longLike(ins),"arrayReplacedArrays :","Expects longLike entity"),_.assert(ins.length===sub.length,"{-subArray-} should have the same length {-insArray-} has");let result=0;function _replace(){let dstArray=arguments[0];let argument=arguments[1];let subValue=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];let index=_.longLeftIndex(dstArray,argument,evaluator1,evaluator2);-1!==index&&(dstArray.splice(index,1,subValue),result+=1)}for(let a=0,len=ins.length;a<len;a++)if(_.longLike(ins[a])){let insArray=ins[a];let subArray=sub[a];for(let i=0,len2=insArray.length;i<len2;i++)_replace(dstArray,insArray[i],subArray[i],evaluator1,evaluator2)}else _replace(dstArray,ins[a],sub[a],evaluator1,evaluator2);return result}let ToolsExtension={constructorLikeArray:function constructorLikeArray(src){return!!src&&src!==Function&&src!==Object&&src!==String&&!_.primitive.is(src)&&"length"in src.prototype&&!Object.propertyIsEnumerable.call(src.prototype,"length")},arrayFromCoercing:function arrayFromCoercing(src){return _.assert(1===arguments.length,"Expects single argument"),_.arrayIs(src)&&!_.unrollIs(src)?src:_.longIs(src)?Array.prototype.slice.call(src):_.strIs(src)?this.arrayFromStr(src):_.object.isBasic(src)?_.props.pairs(src):void _.assert(0,"Unknown data type : "+_.entity.strType(src))},arrayFromStr:function arrayFromStr(src){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src)),src.split(/[, ]+/).map(s=>s.length?parseFloat(s):void 0)},arrayExtendAppending:function arrayExtendAppending(dst,src){return _.assert(2===arguments.length),_.longIs(src)?null===dst||void 0===dst?_.longSlice(src):_.arrayIs(dst)?_.arrayAppendArray(dst,src):_.longLike(dst)?_.arrayAppendArrays(null,[dst,src]):_.arrayAppendArray([dst],src):null===dst||void 0===dst?[src]:_.arrayIs(dst)?_.arrayAppend(dst,src):_.longLike(dst)?_.arrayAppendArrays(null,[dst,src]):_.arrayAppend([dst],src)},arrayExtendPrepending:function arrayExtendPrepending(dst,src){return _.assert(2===arguments.length),_.longIs(src)?null===dst||void 0===dst?_.longSlice(src):_.arrayIs(dst)?_.arrayPrependArray(dst,src):_.longLike(dst)?_.arrayPrependArrays(null,[dst,src]):_.arrayPrependArray([dst],src):null===dst||void 0===dst?[src]:_.arrayIs(dst)?_.arrayPrepend(dst,src):_.longLike(dst)?_.arrayPrependArrays(null,[dst,src]):_.arrayPrepend([dst],src)},arrayBut:function arrayBut(src,range,ins){if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return _.array.make(src);_.number.is(range)&&(range=[range,range+1]),_.assert(_.arrayIs(src)),_.assert(_.intervalIs(range)),_.assert(void 0===ins||_.longLike(ins)),_.ointerval.clamp(range,[0,src.length]),range[1]<range[0]&&(range[1]=range[0]);let args=[range[0],range[1]-range[0]];ins&&_.arrayAppendArray(args,ins);let result=src.slice();return result.splice.apply(result,args),result},arrayButInplace:function arrayButInplace(src,range,ins){if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return src;_.number.is(range)&&(range=[range,range+1]),_.assert(_.arrayLikeResizable(src)),_.assert(_.intervalIs(range)),_.assert(void 0===ins||_.longLike(ins)),_.ointerval.clamp(range,[0,src.length]),range[1]<range[0]&&(range[1]=range[0]);let args=[range[0],range[1]-range[0]];ins&&(!Object.isExtensible(src)&&ins.length>range[1]-range[0]?_.assert(0,"Array is not resizable, cannot change length of array"):_.arrayAppendArray(args,ins));let result=src;return result.splice.apply(result,args),result},arrayBut_:function arrayBut_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]),void 0===cinterval?(cinterval=[0,-1],ins=void 0):_.number.is(cinterval)&&(cinterval=[cinterval,cinterval]),_.assert(_.arrayIs(dst)||null===dst,"Expects {-dst-} of Array type or null"),_.assert(_.longIs(src),"Expects {-src-} of Array type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}"),_.assert(_.longLike(ins)||void 0===ins||null===ins,"Expects long {-ins-} for insertion");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;first<0&&(first=0),first>src.length&&(first=src.length),last>src.length-1&&(last=src.length-1),last+1<first&&(last=first-1);let delta=last-first+1;let delta2=delta-(ins?ins.length:0);let resultLength=src.length-delta2;let result=dst;if(null===dst)result=_.array.makeUndefined(resultLength);else{if(dst===src)return dst.length===resultLength&&0===delta||(ins?dst.splice(first,delta,...ins):dst.splice(first,delta)),dst;dst.length!==resultLength&&(dst.length<resultLength&&_.assert(Object.isExtensible(result),"Expects extensible array {-dst-}"),dst.length=resultLength)}for(let i=0;i<first;i++)result[i]=src[i];for(let i=last+1;i<src.length;i++)result[i-delta2]=src[i];if(ins)for(let i=0;i<ins.length;i++)result[first+i]=ins[i];return result},arrayShrink:function arrayShrink(src,range,ins){let result;if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return src.slice();if(_.number.is(range)&&(range=[range,src.length]),_.assert(_.arrayIs(src)),_.assert(_.intervalIs(range)),_.ointerval.clamp(range,[0,src.length]),range[1]<range[0]&&(range[1]=range[0]),0===range[0]&&range[1]===src.length)return src.slice(src);result=_.array.makeUndefined(src,range[1]-range[0]);let f2=Math.max(range[0],0);let l2=Math.min(src.length,range[1]);for(let r=f2;r<l2;r++)result[r-range[0]]=src[r];return result},arrayShrinkInplace:function arrayShrinkInplace(src,range,ins){if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return src;if(_.number.is(range)&&(range=[range,src.length]),_.assert(_.arrayIs(src)),_.assert(_.intervalIs(range)),_.ointerval.clamp(range,[0,src.length]),range[1]<range[0]&&(range[1]=range[0]),0===range[0]&&range[1]===src.length)return src;let f2=Math.max(range[0],0);Math.min(src.length,range[1]);let result=src;return result.splice.apply(result,[0,f2]),result.length=range[1]-range[0],result},arrayShrink_:function arrayShrink_(dst,src,cinterval){_.assert(1<=arguments.length&&arguments.length<=3,"Expects not {-ins-} argument"),arguments.length<3&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1]),void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval]),_.assert(_.arrayIs(dst)||null===dst,"Expects {-dst-} of Array type or null"),_.assert(_.arrayIs(src),"Expects {-src-} of Array type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;first<0&&(first=0),last>src.length-1&&(last=src.length-1),last+1<first&&(last=first-1);let first2=Math.max(first,0);let last2=Math.min(src.length-1,last);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.array.makeUndefined(resultLength);else{if(dst===src)return result.splice.apply(result,[0,first2]),result.length=resultLength,result;dst.length<resultLength&&(_.assert(Object.isExtensible(dst),"Array is not extensible, cannot change array"),result.length=resultLength)}for(let i=first2;i<last2+1;i++)result[i-first2]=src[i];return result},arrayGrow:function arrayGrow(src,range,ins){let result;if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return src.slice();_.number.is(range)&&(range=[0,range]);let f=range?range[0]:void 0;let l=range?range[1]:void 0;if(f=void 0!==f?f:0,l=void 0!==l?l:src.length,_.assert(_.arrayIs(src)),_.assert(_.intervalIs(range)),l<f&&(l=f),f<0&&(l-=f,f-=f),f>0&&(f=0),l<src.length&&(l=src.length),l===src.length)return src.slice();result=_.array.makeUndefined(src,l-f);let f2=Math.max(f,0);let l2=Math.min(src.length,l);for(let r=f2;r<l2;r++)result[r-f]=src[r];if(void 0!==ins)for(let r=l2-f;r<result.length;r++)result[r]=ins;return result},arrayGrowInplace:function arrayGrowInplace(src,range,ins){if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return src;_.number.is(range)&&(range=[0,range]);let f=range?range[0]:void 0;let l=range?range[1]:void 0;if(f=void 0!==f?f:0,l=void 0!==l?l:src.length,_.assert(_.arrayIs(src)),_.assert(_.intervalIs(range)),f<0&&(l-=f,f-=f),l<f&&(l=f),f>0&&(f=0),l<src.length&&(l=src.length),l===src.length)return src;!Object.isExtensible(src)&&src.length<l&&_.assert(0,"Array is not extensible, cannot change length of array");let resultLength=l-f;let f2=Math.max(-range[0],0);let l2=Math.min(src.length,l);return l2+=f2,src.splice(f,0,..._.dup(ins,f2)),src.splice(l2,0,..._.dup(ins,resultLength<=l2?0:resultLength-l2)),src},arrayGrow_:function arrayGrow_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]),void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(_.arrayIs(dst)||null===dst,"Expects {-dst-} of Array type or null"),_.assert(_.arrayIs(src),"Expects {-src-} of Array type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let f=void 0===cinterval[0]?0:cinterval[0];let l=void 0===cinterval[1]?src.length-1:cinterval[1];f>0&&(f=0),l<src.length-1&&(l=src.length-1),f<0&&(l-=f,f-=f),l+1<f&&(l=f-1);let f2=Math.max(-cinterval[0],0);let l2=Math.min(src.length-1+f2,l+f2);let resultLength=l-f+1;let result=dst;if(null===dst)result=_.array.make(resultLength);else{if(dst===src)return dst.length===resultLength?dst:(_.assert(Object.isExtensible(dst),"Array is not extensible, cannot change array"),dst.splice(f,0,..._.dup(ins,f2)),dst.splice(l2+1,0,..._.dup(ins,resultLength<=l2?0:resultLength-l2-1)),dst);dst.length<resultLength&&!Object.isExtensible(dst)&&_.assert(0,"Array is not extensible, cannot change array")}for(let r=f2;r<l2+1;r++)result[r]=src[r-f2];if(void 0!==ins){for(let r=0;r<f2;r++)result[r]=ins;for(let r=l2+1;r<resultLength;r++)result[r]=ins}return result},arrayRelength:function arrayRelength(src,range,ins){let result;if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return src.slice();_.number.is(range)&&(range=[range,src.length]);let f=range?range[0]:void 0;let l=range?range[1]:void 0;if(f=void 0!==f?f:0,l=void 0!==l?l:src.length,_.assert(_.arrayIs(src)),_.assert(_.intervalIs(range)),l<f&&(l=f),f<0&&(f=0),0===f&&l===src.length)return src.slice(src);result=_.array.makeUndefined(src,l-f);let f2=Math.max(f,0);let l2=Math.min(src.length,l);for(let r=f2;r<l2;r++)result[r-f2]=src[r];if(void 0!==ins)for(let r=l2-f;r<result.length;r++)result[r]=ins;return result},arrayRelengthInplace:function arrayRelengthInplace(src,range,ins){if(_.assert(1<=arguments.length&&arguments.length<=3),void 0===range)return src;_.number.is(range)&&(range=[range,src.length]);let f=range?range[0]:void 0;let l=range?range[1]:void 0;if(f=void 0!==f?f:0,l=void 0!==l?l:src.length,_.assert(_.arrayIs(src)),_.assert(_.intervalIs(range)),l<f&&(l=f),f<0&&(f=0),0===f&&l===src.length)return src;!Object.isExtensible(src)&&src.length<l-f&&_.assert(0,"Array is not extensible, cannot change length of array"),Math.max(f,0);let l2=Math.min(src.length,l);let result=src;if(result.splice.apply(result,[0,f]),result.length=l-f,void 0!==ins)for(let r=l2-f;r<result.length;r++)result[r]=ins;return result},arrayRelength_:function arrayRelength_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]),void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(_.arrayIs(dst)||null===dst,"Expects {-dst-} of Array type or null"),_.assert(_.arrayIs(src),"Expects {-src-} of Array type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;last<first&&(last=first-1),first<0&&(last-=first,first-=first);let first2=Math.max(Math.abs(cinterval[0]),0);let last2=Math.min(src.length-1,last);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.array.makeUndefined(src,resultLength);else if(dst===src)return dst.length===resultLength&&0===cinterval[0]?dst:0===resultLength?_.array.empty(dst):(dst.length<resultLength&&_.assert(Object.isExtensible(dst),"dst is not extensible, cannot change dst"),cinterval[0]<0?(dst.splice(first,0,..._.dup(ins,first2)),dst.splice(last2+1,src.length-last2,..._.dup(ins,last-last2))):(dst.splice(0,first),dst.splice(last2+1-first2,dst.length-last2,..._.dup(ins,last-last2))),dst);return result.length<resultLength&&_.assert(Object.isExtensible(result),"dst is not extensible, cannot change dst"),0===resultLength?_.array.empty(result):(cinterval[0]<0?(result.splice(0,first2,..._.dup(ins,first2)),result.splice(first2,last2-first2,...src.slice(0,last2+1-first2)),result.splice(last2+1,result.length-last2,..._.dup(ins,last-last2))):(result.splice(0,last2+1,...src.slice(first2,last2+1)),result.splice(last2+1-first2,result.length-last2,..._.dup(ins,last-last2))),result)},arrayRemove:function arrayRemove(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],_.arrayRemoved.apply(this,arguments),dstArray},arrayRemoveOnce:function arrayRemoveOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],_.arrayRemovedOnce.apply(this,arguments),dstArray},arrayRemoveOnceStrictly:function arrayRemoveOnceStrictly(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],_.arrayRemoveElementOnceStrictly.apply(this,arguments),dstArray},arrayRemoved:function arrayRemoved(){return _.arrayRemovedElement.apply(this,arguments)},arrayRemovedOnce:function arrayRemovedOnce(){let dstArray=arguments[0];arguments[1],arguments[2],arguments[3];let index=_.longLeftIndex.apply(_,arguments);return index>=0&&dstArray.splice(index,1),index},arrayRemovedOnceStrictly:function arrayRemovedOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];arguments[2],arguments[3];let index=_.longLeftIndex.apply(_,arguments);index>=0?dstArray.splice(index,1):_.assert(0,()=>"Array does not have element "+_.entity.exportStringDiagnosticShallow(ins));let newIndex=_.longLeftIndex.apply(_,arguments);return _.assert(newIndex<0,()=>"The element "+_.entity.exportStringDiagnosticShallow(ins)+" is several times in dstArray"),index},arrayRemoveElement:function arrayRemoveElement(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],_.arrayRemovedElement.apply(this,arguments),dstArray},arrayRemoveElementOnce:function arrayRemoveElementOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],_.arrayRemovedElementOnce.apply(this,arguments),dstArray},arrayRemoveElementOnceStrictly:function arrayRemoveElementOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];return arguments[2],arguments[3],_.arrayRemovedElement.apply(this,[dstArray,ins]),dstArray},arrayRemovedElement:function arrayRemovedElement(){let dstArray=arguments[0];arguments[1],arguments[2],arguments[3];let index=_.longLeftIndex.apply(this,arguments);let removedElements=0;for(let i=0;i<dstArray.length;i++)-1!==index&&(dstArray.splice(index,1),removedElements+=1,i-=1),index=_.longLeftIndex.apply(this,arguments);return removedElements},arrayRemovedElement_:function arrayRemovedElement_(){let dstArray=arguments[0];let ins=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let removedElement;let index=_.longLeftIndex.apply(this,arguments);for(evaluator1=_.number.is(evaluator1)?void 0:evaluator1,-1!==index&&(removedElement=dstArray[index]);-1!==index;)dstArray.splice(index,1),index=_.longLeftIndex(dstArray,ins,index,evaluator1,evaluator2);return removedElement},arrayRemovedElementOnce:function arrayRemovedElementOnce(){let dstArray=arguments[0];arguments[1],arguments[2],arguments[3];let index=_.longLeftIndex.apply(_,arguments);return index>=0&&dstArray.splice(index,1),index},arrayRemovedElementOnce_:function arrayRemovedElementOnce_(){let dstArray=arguments[0];let removedElement;arguments[1],arguments[2],arguments[3];let index=_.longLeftIndex.apply(_,arguments);return index>=0&&(removedElement=dstArray[index],dstArray.splice(index,1)),removedElement},arrayRemovedElementOnceStrictly:function arrayRemovedElementOnceStrictly(){let dstArray=arguments[0];let ins=arguments[1];let result;arguments[2],arguments[3];let index=_.longLeftIndex.apply(_,arguments);return index>=0?(result=dstArray[index],dstArray.splice(index,1)):_.assert(0,()=>"Array does not have element "+_.entity.exportStringDiagnosticShallow(ins)),index=_.longLeftIndex.apply(_,arguments),_.assert(index<0,()=>"The element "+_.entity.exportStringDiagnosticShallow(ins)+" is several times in dstArray"),result},arrayRemovedElementOnceStrictly_:function arrayRemovedElementOnceStrictly_(){let dstArray=arguments[0];let ins=arguments[1];let removedElement;arguments[2],arguments[3];let index=_.longLeftIndex.apply(_,arguments);return index>=0?(removedElement=dstArray[index],dstArray.splice(index,1)):_.assert(0,()=>"Array does not have element "+_.entity.exportStringDiagnosticShallow(ins)),index=_.longLeftIndex.apply(_,arguments),_.assert(index<0,()=>"The element "+_.entity.exportStringDiagnosticShallow(ins)+" is several times in dstArray"),removedElement},arrayRemoveArray:function arrayRemoveArray(dstArray,insArray){return arrayRemovedArray.apply(this,arguments),dstArray},arrayRemoveArrayOnce:function arrayRemoveArrayOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arrayRemovedArrayOnce.apply(this,arguments),dstArray},arrayRemoveArrayOnceStrictly:function arrayRemoveArrayOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let result;return arguments[2],arguments[3],result=arrayRemovedArray.apply(this,[dstArray,insArray]),dstArray},arrayRemovedArray:arrayRemovedArray,arrayRemovedArrayOnce:arrayRemovedArrayOnce,arrayRemovedArrayOnceStrictly:function arrayRemovedArrayOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];return arguments[2],arguments[3],arrayRemovedArray.apply(this,[dstArray,insArray])},arrayRemoveArrays:function arrayRemoveArrays(dstArray,insArray){return arrayRemovedArrays.apply(this,arguments),dstArray},arrayRemoveArraysOnce:function arrayRemoveArraysOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arrayRemovedArraysOnce.apply(this,arguments),dstArray},arrayRemoveArraysOnceStrictly:function arrayRemoveArraysOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let result;return arguments[2],arguments[3],result=arrayRemovedArrays.apply(this,[dstArray,insArray]),dstArray},arrayRemovedArrays:arrayRemovedArrays,arrayRemovedArraysOnce:arrayRemovedArraysOnce,arrayRemovedArraysOnceStrictly:function arrayRemovedArraysOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];return arguments[2],arguments[3],arrayRemovedArrays.apply(this,[dstArray,insArray])},arrayRemoveDuplicates:function arrayRemoveDuplicates(dstArray,evaluator){_.assert(1<=arguments.length||arguments.length<=2),_.assert(_.arrayIs(dstArray),"Expects Array");for(let i=0;i<dstArray.length;i++){let index;do{(index=_.longRightIndex(dstArray,dstArray[i],evaluator))!==i&&dstArray.splice(index,1)}while(index!==i)}return dstArray},arrayFlatten:function arrayFlatten(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayFlattened.apply(this,arguments),dstArray},arrayFlattenOnce:function arrayFlattenOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),_.arrayFlattenedOnce.apply(this,arguments),dstArray},arrayFlattenOnceStrictly:function arrayFlattenOnceStrictly(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],_.arrayFlattenedOnceStrictly.apply(this,arguments),dstArray},arrayFlattened:function arrayFlattened(dstArray,src){let result=0;let length=dstArray.length;let visited=[];if(_.assert(1===arguments.length||2===arguments.length),_.assert(_.object.isBasic(this)),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),1===arguments.length){for(let i=0;i<dstArray.length;i++){let e=dstArray[i];_.longLike(e)||_.set.like(e)?(dstArray.splice(i,1),e!==dstArray&&(i=containerReplace(e,i)),i-=1):result+=1}return result}if(_.longHas(dstArray,dstArray)){let i=_.longLeftIndex(dstArray,dstArray);for(;-1!==i;)dstArray.splice(i,1),i=_.longLeftIndex(dstArray,dstArray)}return _.longLike(src)||_.set.like(src)?function containerAppend(src){if(_.longHas(visited,src))return;let count;visited.push(src),count=src===dstArray?length:src.length;for(let e of src){if(count<1)break;count--,_.longLike(e)||_.set.like(e)?containerAppend(e):(dstArray.push(e),result+=1)}visited.pop()}(src):(dstArray.push(src),result+=1),result;function containerReplace(src,index){for(let e of src)_.longLike(e)||_.set.like(e)?index=containerReplace(e,index):(dstArray.splice(index,0,e),result+=1,index+=1);return index}},arrayFlattenedOnce:function arrayFlattenedOnce(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let result=0;let length=dstArray.length;let visited=[];if(_.assert(arguments.length&&arguments.length<=4),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`),1===arguments.length){_.arrayRemoveDuplicates(dstArray);for(let i=0;i<dstArray.length;i++){let e=dstArray[i];_.longLike(e)||_.set.like(e)?(dstArray.splice(i,1),e!==dstArray&&(i=containerReplace(e,i)),i-=1):result+=1}return result}if(_.longHas(dstArray,dstArray)){let i=_.longLeftIndex(dstArray,dstArray);for(;-1!==i;)dstArray.splice(i,1),i=_.longLeftIndex(dstArray,dstArray)}return _.longLike(insArray)||_.set.like(insArray)?function containerAppend(src){if(_.longHas(visited,src))return;let count;visited.push(src),count=src===dstArray?length:src.length;for(let e of src){if(count<1)break;count--,_.longLike(e)||_.set.like(e)?containerAppend(e):-1===_.longLeftIndex(dstArray,e,evaluator1,evaluator2)&&(dstArray.push(e),result+=1)}visited.pop()}(insArray):-1===_.longLeftIndex(dstArray,insArray,evaluator1,evaluator2)&&(dstArray.push(insArray),result+=1),result;function containerReplace(src,index){for(let e of src)_.longLike(e)||_.set.like(e)?index=containerReplace(e,index):-1===_.longLeftIndex(dstArray,e)&&(dstArray.splice(index,0,e),result+=1,index+=1);return index}},arrayFlattenedOnceStrictly:function arrayFlattenedOnceStrictly(){let dstArray=arguments[0];let insArray=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];let result=0;let visited=[];_.assert(arguments.length&&arguments.length<=4),_.assert(_.arrayIs(dstArray),()=>`Expects array as the first argument {-dstArray-} but got "${dstArray}"`);let oldLength=dstArray.length;if(_.arrayRemoveDuplicates(dstArray),dstArray.length,1===arguments.length){for(let i=0;i<dstArray.length;i++){let e=dstArray[i];_.longLike(e)||_.set.like(e)?(dstArray.splice(i,1),e!==dstArray&&(i=containerReplace(e,i)),i-=1):result+=1}return result}if(_.longHas(dstArray,dstArray)){let i=_.longLeftIndex(dstArray,dstArray);for(;-1!==i;)dstArray.splice(i,1),i=_.longLeftIndex(dstArray,dstArray)}return _.longLike(insArray)||_.set.like(insArray)?function containerAppend(src){if(_.longHas(visited,src))return;let count;visited.push(src),count=src===dstArray?oldLength:src.length;for(let e of src){if(count<1)break;count--,_.assert(void 0!==e,"The container should have no undefined"),_.longLike(e)||_.set.like(e)?containerAppend(e):-1===_.longLeftIndex(dstArray,e,evaluator1,evaluator2)&&(dstArray.push(e),result+=1)}visited.pop()}(insArray):-1===_.longLeftIndex(dstArray,insArray,evaluator1,evaluator2)&&(_.assert(void 0!==insArray,"The container should be no undefined"),dstArray.push(insArray),result+=1),result;function containerReplace(src,index){for(let e of src)_.longLike(e)||_.set.like(e)?index=containerReplace(e,index):-1===_.longLeftIndex(dstArray,e)&&(dstArray.splice(index,0,e),result+=1,index+=1);return index}},arrayFlattenDefined:function arrayFlattenDefined(dstArray,insArray){return null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayFlattenedDefined.apply(this,arguments),dstArray},arrayFlattenDefinedOnce:function arrayFlattenDefinedOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],null===dstArray&&(dstArray=[],arguments[0]=dstArray),arrayFlattenedDefinedOnce.apply(this,arguments),dstArray},arrayFlattenDefinedOnceStrictly:function arrayFlattenDefinedOnceStrictly(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arrayFlattenedDefinedOnceStrictly.apply(this,arguments),dstArray},arrayFlattenedDefined:arrayFlattenedDefined,arrayFlattenedDefinedOnce:arrayFlattenedDefinedOnce,arrayFlattenedDefinedOnceStrictly:arrayFlattenedDefinedOnceStrictly,arrayReplace:function arrayReplace(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5);let index=-1;let result=0;for(index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);-1!==index;)dstArray.splice(index,1,sub),result+=1,index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);return dstArray},arrayReplaceOnce:function arrayReplaceOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedOnce.apply(this,arguments),dstArray},arrayReplaceOnceStrictly:function arrayReplaceOnceStrictly(){let dstArray=arguments[0];let result;return arguments[1],arguments[2],arguments[3],arguments[4],result=arrayReplacedOnce.apply(this,arguments),dstArray},arrayReplaced:function arrayReplaced(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5);let index=-1;let result=0;for(index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);-1!==index;)dstArray.splice(index,1,sub),result+=1,index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);return result},arrayReplacedOnce:arrayReplacedOnce,arrayReplacedOnceStrictly:function arrayReplacedOnceStrictly(){return arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedOnce.apply(this,arguments)},arrayReplaceElement:function arrayReplaceElement(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5);let index=-1;let result=0;for(index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);-1!==index;)dstArray.splice(index,1,sub),result+=1,index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);return dstArray},arrayReplaceElementOnce:function arrayReplaceElementOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedElementOnce.apply(this,arguments),dstArray},arrayReplaceElementOnceStrictly:function arrayReplaceElementOnceStrictly(){let dstArray=arguments[0];let result;return arguments[1],arguments[2],arguments[3],arguments[4],result=arrayReplacedElementOnce.apply(this,arguments),dstArray},arrayReplacedElement:function arrayReplacedElement(){let dstArray=arguments[0];let ins=arguments[1];let sub=arguments[2];let evaluator1=arguments[3];let evaluator2=arguments[4];_.assert(3<=arguments.length&&arguments.length<=5);let index=-1;let result=0;for(index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);-1!==index;)dstArray.splice(index,1,sub),result+=1,index=_.longLeftIndex(dstArray,ins,evaluator1,evaluator2);return result},arrayReplacedElementOnce:arrayReplacedElementOnce,arrayReplacedElementOnceStrictly:function arrayReplacedElementOnceStrictly(){return arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedElementOnce.apply(this,arguments)},arrayReplaceArray:function arrayReplaceArray(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedArray.apply(this,arguments),dstArray},arrayReplaceArrayOnce:function arrayReplaceArrayOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedArrayOnce.apply(this,arguments),dstArray},arrayReplaceArrayOnceStrictly:function arrayReplaceArrayOnceStrictly(){let dstArray=arguments[0];let result;return arguments[1],arguments[2],arguments[3],arguments[4],result=arrayReplacedArrayOnce.apply(this,arguments),dstArray},arrayReplacedArray:arrayReplacedArray,arrayReplacedArrayOnce:arrayReplacedArrayOnce,arrayReplacedArrayOnceStrictly:function arrayReplacedArrayOnceStrictly(){return arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedArrayOnce.apply(this,arguments)},arrayReplaceArrays:function arrayReplaceArrays(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedArrays.apply(this,arguments),dstArray},arrayReplaceArraysOnce:function arrayReplaceArraysOnce(){let dstArray=arguments[0];return arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedArraysOnce.apply(this,arguments),dstArray},arrayReplaceArraysOnceStrictly:function arrayReplaceArraysOnceStrictly(){let dstArray=arguments[0];let result;return arguments[1],arguments[2],arguments[3],arguments[4],result=arrayReplacedArraysOnce.apply(this,arguments),dstArray},arrayReplacedArrays:arrayReplacedArrays,arrayReplacedArraysOnce:arrayReplacedArraysOnce,arrayReplacedArraysOnceStrictly:function arrayReplacedArraysOnceStrictly(){return arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arrayReplacedArraysOnce.apply(this,arguments)},arrayUpdate:function arrayUpdate(){let dstArray=arguments[0];arguments[1];let sub=arguments[2];arguments[3],arguments[4];let index=arrayReplacedOnce.apply(this,arguments);return-1===index&&(dstArray.push(sub),index=dstArray.length-1),index}};_.props.supplement(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function ArraySet_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/ArraySet.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ArraySet_s_naked(){!function _l5_ArraySet_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.arraySet=_.arraySet||Object.create(null);function _has(){let src=arguments[0];let e=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];_.assert(void 0===onEvaluate2||_.routine.is(onEvaluate2));let fromIndex=0;if(_.number.is(onEvaluate1)&&(fromIndex=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0),_.routine.is(onEvaluate1)){if(2===onEvaluate1.length){_.assert(!onEvaluate2);for(let el of src)if(0===fromIndex){if(onEvaluate1(el,e))return true}else fromIndex-=1;return false}if(1===onEvaluate1.length){_.assert(!onEvaluate2||1===onEvaluate2.length),e=onEvaluate2?onEvaluate2(e):onEvaluate1(e);for(let el of src)if(0===fromIndex){if(onEvaluate1(el)===e)return true}else fromIndex-=1;return false}_.assert(0)}else if(void 0===onEvaluate1||null===onEvaluate1){if(_.longLike(src))return src.includes(e);if(_.set.like(src))return src.has(e)}else _.assert(0)}function diff_(){let dst=arguments[0];let src1=arguments[1];let src2=arguments[2];let onEvaluate1=arguments[3];let onEvaluate2=arguments[4];_.assert(2<=arguments.length&&arguments.length<=5),_.assert(_.longIs(dst)||_.set.is(dst)||null===dst),_.assert(_.longIs(src1)||_.set.is(src1)),_.assert(_.longIs(src2)||_.set.is(src2)||_.routine.is(src2)||void 0===src2),null===dst&&(dst=new src1.constructor),(_.routine.is(src2)||void 0===src2)&&(onEvaluate2=onEvaluate1,onEvaluate1=src2,src2=src1,src1=dst);let temp=[];if(dst===src1){if(_.longLike(dst)){for(let e of src2)-1===_.longLeftIndex(dst,e,onEvaluate1,onEvaluate2)&&temp.push(e);for(let i=dst.length-1;i>=0;i--)_has(src2,dst[i],onEvaluate1,onEvaluate2)&&dst.splice(i,1);for(let i=0;i<temp.length;i++)dst.push(temp[i])}else if(_.set.like(dst)){for(let e of src2)_has(dst,e,onEvaluate1,onEvaluate2)||temp.push(e);for(let e of dst)_has(src2,e,onEvaluate1,onEvaluate2)&&dst.delete(e);for(let i=0;i<temp.length;i++)dst.add(temp[i])}}else if(dst===src2){if(_.longLike(dst)){for(let e of src1)-1===_.longLeftIndex(dst,e,onEvaluate1,onEvaluate2)&&temp.push(e);for(let i=dst.length-1;i>=0;i--)_has(src1,dst[i],onEvaluate1,onEvaluate2)&&dst.splice(i,1);for(let i=0;i<temp.length;i++)dst.push(temp[i])}else if(_.set.like(dst)){for(let e of src1)_has(dst,e,onEvaluate1,onEvaluate2)||temp.push(e);for(let e of dst)_has(src1,e,onEvaluate1,onEvaluate2)&&dst.delete(e);for(let i=0;i<temp.length;i++)dst.add(temp[i])}}else if(_.longLike(dst)){for(let e of src1)_has(src2,e,onEvaluate1,onEvaluate2)||dst.push(e);for(let e of src2)_has(src1,e,onEvaluate1,onEvaluate2)||dst.push(e)}else if(_.set.like(dst)){for(let e of src1)_has(src2,e,onEvaluate1,onEvaluate2)||dst.add(e);for(let e of src2)_has(src1,e,onEvaluate1,onEvaluate2)||dst.add(e)}return dst}function but_(){let dst=arguments[0];let src1=arguments[1];let src2=arguments[2];let onEvaluate1=arguments[3];let onEvaluate2=arguments[4];if(1===arguments.length){if(null===dst)return[];if(_.longLike(dst)||_.set.like(dst))return dst;_.assert(0)}if(null===dst&&_.routine.is(src2)||null===dst&&void 0===src2){if(_.longLike(src1))return _.longSlice(src1);if(_.set.like(src1))return new Set(src1);_.assert(0)}if(_.assert(2<=arguments.length&&arguments.length<=5),_.assert(_.longIs(dst)||_.set.is(dst)||null===dst),_.assert(_.longIs(src1)||_.set.is(src1)),_.assert(_.longIs(src2)||_.set.is(src2)||_.routine.is(src2)||void 0===src2),null===dst&&(dst=new src1.constructor),(_.routine.is(src2)||void 0===src2)&&(onEvaluate2=onEvaluate1,onEvaluate1=src2,src2=src1,src1=dst),dst===src1){if(_.longLike(dst))for(let i=dst.length-1;i>=0;i--)_has(src2,dst[i],onEvaluate1,onEvaluate2)&&dst.splice(i,1);else if(_.set.like(dst))for(let e of dst)_has(src2,e,onEvaluate1,onEvaluate2)&&dst.delete(e)}else if(_.longLike(dst))for(let e of src1)_has(src2,e,onEvaluate1,onEvaluate2)||dst.push(e);else if(_.set.like(dst))for(let e of src1)_has(src2,e,onEvaluate1,onEvaluate2)||dst.add(e);return dst}function intersection_(){let dst=arguments[0];let src1=arguments[1];let src2=arguments[2];let onEvaluate1=arguments[3];let onEvaluate2=arguments[4];if(1===arguments.length){if(null===dst)return[];if(_.longIs(dst)||_.set.is(dst))return dst;_.assert(0)}if(null===dst&&_.routine.is(src2)||null===dst&&void 0===src2){if(_.longIs(src1))return _.longSlice(src1);if(_.set.is(src1))return new Set(src1);_.assert(0)}if(_.assert(2<=arguments.length&&arguments.length<=5),_.assert(_.longIs(dst)||_.set.is(dst)||null===dst),_.assert(_.longIs(src1)||_.set.is(src1)),_.assert(_.longIs(src2)||_.set.is(src2)||_.routine.is(src2)||void 0===src2),null===dst&&(dst=new src1.constructor),(_.routine.is(src2)||void 0===src2)&&(onEvaluate2=onEvaluate1,onEvaluate1=src2,src2=src1,src1=dst),dst===src1){if(_.longLike(dst))for(let i=dst.length-1;i>=0;i--)_has(src2,dst[i],onEvaluate1,onEvaluate2)||dst.splice(i,1);else if(_.set.like(dst))for(let e of dst)_has(src2,e,onEvaluate1,onEvaluate2)||dst.delete(e)}else if(_.longLike(dst))for(let e of src1)_has(src2,e,onEvaluate1,onEvaluate2)&&dst.push(e);else if(_.set.like(dst))for(let e of src1)_has(src2,e,onEvaluate1,onEvaluate2)&&dst.add(e);return dst}function union_(){let dst=arguments[0];let src1=arguments[1];let src2=arguments[2];let onEvaluate1=arguments[3];let onEvaluate2=arguments[4];if(1===arguments.length){if(null===dst)return[];if(_.longIs(dst)||_.set.is(dst))return dst;_.assert(0)}if(_.assert(2<=arguments.length&&arguments.length<=5),_.assert(_.longIs(dst)||_.set.is(dst)||null===dst),_.assert(_.longIs(src1)||_.set.is(src1)),_.assert(_.longIs(src2)||_.set.is(src2)||_.routine.is(src2)||void 0===src2),null===dst&&(dst=new src1.constructor),(_.routine.is(src2)||void 0===src2)&&(onEvaluate2=onEvaluate1,onEvaluate1=src2,src2=src1,src1=dst),dst===src1){if(_.longLike(dst))for(let e of src2)_has(dst,e,onEvaluate1,onEvaluate2)||dst.push(e);else if(_.set.like(dst))for(let e of src2)_has(dst,e,onEvaluate1,onEvaluate2)||dst.add(e)}else if(dst===src2){if(_.longLike(dst))for(let e of src1)_has(dst,e,onEvaluate1,onEvaluate2)||dst.push(e);else if(_.set.like(dst))for(let e of src1)_has(dst,e,onEvaluate1,onEvaluate2)||dst.add(e)}else if(_.longLike(dst)){for(let e of src1)_has(dst,e,onEvaluate1,onEvaluate2)||dst.push(e);for(let e of src2)_has(dst,e,onEvaluate1,onEvaluate2)||dst.push(e)}else if(_.set.like(dst)){for(let e of src1)_has(dst,e,onEvaluate1,onEvaluate2)||dst.add(e);for(let e of src2)_has(dst,e,onEvaluate1,onEvaluate2)||dst.add(e)}return dst}function containAll_(){let src1=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(src2)||_.set.is(src2));let result=true;if(_.arrayIs(src1))for(let e of src2)-1===_.longLeftIndex(src1,e,onEvaluate1,onEvaluate2)&&(result=false);else{if(_.set.is(src1)){let startFrom=0;if(_.number.is(onEvaluate1)&&(startFrom=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0),!src1.size&&(src2.length||src2.size))return false;for(let e of src2){if(false===result)break;result=void 0,setElementsCheck(startFrom,e)}return void 0===result||result}_.assert(0,"{-src1-} should be instance of Array or Set")}return result;function setElementsCheck(from,e){for(let el of src1)if(0===from){if(_.entity.equal(el,e,onEvaluate1,onEvaluate2)){result=true;break}result=false}else from--}}function containAny_(){let src1=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];if(_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(src2)||_.set.is(src2)),_.arrayIs(src1)){for(let e of src2)if(-1!==_.longLeftIndex(src1,e,onEvaluate1,onEvaluate2))return true}else if(_.set.is(src1)){let startFrom=0;_.number.is(onEvaluate1)&&(startFrom=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let e of src2){let from=startFrom;for(let el of src1)if(0===from){if(_.entity.equal(el,e,onEvaluate1,onEvaluate2))return true}else from--}}else _.assert(0,"{-src1-} should be instance of Array or Set");return false}function containNone_(){let src1=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];if(_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(src2)||_.set.is(src2)),_.arrayIs(src1)){for(let e of src2)if(-1!==_.longLeftIndex(src1,e,onEvaluate1,onEvaluate2))return false}else if(_.set.is(src1)){let startFrom=0;_.number.is(onEvaluate1)&&(startFrom=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let e of src2){let from=startFrom;for(let el of src1)if(0===from){if(_.entity.equal(el,e,onEvaluate1,onEvaluate2))return false}else from--}}else _.assert(0,"{-src1-} should be instance of Array or Set");return true}function containSetsAll(){let src1=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(src1)||_.set.is(src1)),_.assert(_.arrayIs(src2)||_.set.is(src2));for(let e of src2)if(false===containAll_(src1,e,onEvaluate1,onEvaluate2))return false;return true}function containSetsAny(){let src1=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(src1)||_.set.is(src1)),_.assert(_.arrayIs(src2)||_.set.is(src2));for(let e of src2)if(true===containAny_(src1,e,onEvaluate1,onEvaluate2))return true;return false}function containSetsNone(){let src1=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.arrayIs(src1)||_.set.is(src1)),_.assert(_.arrayIs(src2)||_.set.is(src2));for(let e of src2)if(false===containNone_(src1,e,onEvaluate1,onEvaluate2))return false;return true}function identical(ins1,ins2){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(ins1)),_.assert(_.longIs(ins2)),ins1.length===ins2.length&&0===_.arraySet.diff_(null,ins1,ins2).length}function left(){let arr=arguments[0];let ins=arguments[1];let fromIndex=arguments[2];let onEvaluate1=arguments[3];let onEvaluate2=arguments[4];if(_.assert(2<=arguments.length&&arguments.length<=5),_.set.like(arr)){let result=Object.create(null);result.index=-1;let index=0;let from=0;_.routine.is(fromIndex)?(onEvaluate2=onEvaluate1,onEvaluate1=fromIndex):_.number.is(fromIndex)&&(from=fromIndex);for(let e of arr){if(0===from){if(_.entity.equal(e,ins,onEvaluate1,onEvaluate2)){result.index=index,result.element=e;break}}else from--;index++}return result}if(_.longLike(arr))return _.longLeft.apply(this,arguments);_.assert(0)}function right(){let arr=arguments[0];let ins=arguments[1];let fromIndex=arguments[2];let onEvaluate1=arguments[3];let onEvaluate2=arguments[4];if(_.assert(2<=arguments.length&&arguments.length<=5),_.set.like(arr)){let result=Object.create(null);result.index=-1;let to=arr.size;let index=0;_.routine.is(fromIndex)?(onEvaluate2=onEvaluate1,onEvaluate1=fromIndex):_.number.is(fromIndex)?to=fromIndex:void 0!==fromIndex&&_.assert(0);for(let e of arr)index<to&&_.entity.equal(e,ins,onEvaluate1,onEvaluate2)&&(result.index=index,result.element=e),index+=1;return result}if(_.longLike(arr))return _.longRight.apply(this,arguments);_.assert(0)}let ToolsExtension={arraySetDiff_:diff_,arraySetBut_:but_,arraySetIntersection_:intersection_,arraySetUnion_:union_,arraySetContainAll_:containAll_,arraySetContainAny_:containAny_,arraySetContainNone_:containNone_,arraySetContainSetsAll:containSetsAll,arraySetContainSetsAny:containSetsAny,arraySetContainSetsNone:containSetsNone,arraySetIdentical:identical,arraySetLeft:left,arraySetRight:right};let Extension={diff_:diff_,but_:but_,intersection_:intersection_,union_:union_,containAll_:containAll_,containAny_:containAny_,containNone_:containNone_,containSetsAll:containSetsAll,containSetsAny:containSetsAny,containSetsNone:containSetsNone,identical:identical,left:left,right:right};Object.assign(Self,Extension),Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Auxiliary_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Auxiliary.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Auxiliary_s_naked(){!function _l5_Auxiliary_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.aux,{})}()});module.exports,module.include,module.include}(),function BigInt_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/BigInt.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BigInt_s_naked(){!function _l5_BigInt_s_(){"use strict";_global_;const _=_global_.wTools;function from(src){return _.assert(1===arguments.length,"Expects exactly one argument"),_.strIs(src)?BigInt(src):_.number.is(src)?BigInt(src):(_.assert(_.bigInt.is(src),"Cant convert"),src)}function bigIntsFrom(src){if(_.number.is(src))return BigInt(src);if(_.bigInt.is(src))return src;if(_.longIs(src)){let result=[];for(let i=0;i<src.length;i++)result[i]=_.bigInt.from(src[i]);return result}_.assert(0,"Cant convert")}let BigIntExtension={from:from};Object.assign(_.bigInt,BigIntExtension);let BigIntsExtension={from:bigIntsFrom};Object.assign(_.bigInts,BigIntsExtension);let ToolsExtension={bigIntFrom:from,bigIntsFrom:bigIntsFrom};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Blank_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Blank.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Blank_s_naked(){!function _l5_Blank_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{}),Object.assign(_.blank,{})}()});module.exports,module.include,module.include}(),function Bool_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Bool.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Bool_s_naked(){!function _l5_Bool_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{}),Object.assign(_.bool,{}),Object.assign(_.bool.s,{})}()});module.exports,module.include,module.include}(),function Buffer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Buffer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Buffer_s_naked(){!function _l5_Buffer_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.buffer,{}),_.props.supplement(_,{})}()});module.exports,module.include,module.include}(),function Constructible_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Constructible.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Constructible_s_naked(){!function _l5_Constructible_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.constructible=_.constructible||Object.create(null);Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Container_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Container.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Container_s_naked(){!function _l5_Container_s_(){"use strict";_global_;const _=_global_.wTools;_.props.supplement(_.container,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Countable_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Countable.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Countable_s_naked(){!function _l5_Countable_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.countable,{})}()});module.exports,module.include,module.include}(),function Ct_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Ct.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Ct_s_naked(){!function _l5_Ct_s_(){"use strict";_global_;const _=_global_.wTools;_.props.supplement(_.ct,{})}()});module.exports,module.include,module.include}(),function Date_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Date.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Date_s_naked(){!function _l5_Date_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.date=_.date||Object.create(null);function toStr(date){debugger;let y=date.getFullYear();let m=date.getMonth()+1;let d=date.getDate();return m<10&&(m="0"+m),d<10&&(d="0"+d),[y,m,d].join(".")}let ToolsExtension={dateToStr:toStr};let Extension={toStr:toStr};Object.assign(_,ToolsExtension),Object.assign(Self,Extension)}()});module.exports,module.include,module.include}(),function Diagnostic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Diagnostic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Diagnostic_s_naked(){!function _l5_Diagnostic_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.diagnostic=_.diagnostic||Object.create(null);let ToolsExtension={tryCatch:function tryCatch(routine){_.assert(1===arguments.length),_.assert(_.routine.is(routine));try{return routine()}catch(err){throw _._err({args:[err]})}},tryCatchBrief:function tryCatchBrief(routine){_.assert(1===arguments.length),_.assert(_.routine.is(routine));try{return routine()}catch(err){throw _._err({args:[err],brief:1})}}};Object.assign(_,ToolsExtension),Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Entity_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Entity.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Entity_s_naked(){!function _l5_Entity_s_(){"use strict";_global_;const _=_global_.wTools;function exportStringDiagnosticShallow(src,opts){return _.assert(1===arguments.length||2===arguments.length),_.entity.exportStringDiagnosticShallow(src)}function _exportStringShallow(src,o){_.assert(2===arguments.length),_.assert(_.number.is(o.widthLimit)&&o.widthLimit>=0),_.assert(_.number.is(o.heightLimit)&&o.heightLimit>=0),_.assert(void 0===o.src),_.assert("string.diagnostic"===o.format||"string.code"===o.format);let result="";let method="string.diagnostic"===o.format?"exportStringDiagnosticShallow":"exportStringCodeShallow";try{let namespace=this.namespaceForExporting(src);null===namespace&&(_.assert(0,"not tested"),namespace=_.blank),result=namespace[method](src),result=_.strShort_({src:result,widthLimit:o.widthLimit,heightLimit:o.heightLimit}).result}catch(err){debugger;throw err}return result}function exportStringCodeShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects one or two arguments"),(o=_.routine.options_(exportStringCodeShallow,o||null)).format=o.format||exportStringCodeShallow.defaults.format,_.entity._exportStringShallow(src,o)}function exportStringDiagnosticShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects one or two arguments"),(o=_.aux.supplement(o||null,exportStringDiagnosticShallow.defaults)).format=o.format||exportStringDiagnosticShallow.defaults.format,_.entity._exportStringShallow(src,o)}_exportStringShallow.defaults={format:null,widthLimit:0,heightLimit:0},exportStringCodeShallow.defaults={format:"string.code",widthLimit:0,heightLimit:0},exportStringDiagnosticShallow.defaults={format:"string.diagnostic",widthLimit:0,heightLimit:0},Object.assign(_,{});let EntityExtension={exportStringDiagnosticShallow:exportStringDiagnosticShallow,_exportStringShallow:_exportStringShallow,exportString:exportStringDiagnosticShallow,exportStringCodeShallow:exportStringCodeShallow,exportStringDiagnosticShallow:exportStringDiagnosticShallow,cloneDeep:function cloneDeep(src){if(_.assert(1===arguments.length,"Expects single argument"),!src||_.primitive.is(src))return src;if(_.replicate){debugger;return _.replicate({src:src})}return _.routine.is(src[_.class.cloneDeepSymbol])?src[_.class.cloneDeepSymbol]():_.routine.is(src.cloneDeep)?src.cloneDeep():_.arrayIs(src)?Array.from(src):_.longLike(src)?(this.Tools?this.Tools:this).long.make(src):_.hashMap.like(src)||_.set.like(src)?new src.constructor(src):_.aux.is(src)?_.aux.cloneShallow(src):_.routine.is(src.constructor)?new src.constructor(src):void _.assert(0,`Not clear how to make a new element of \`${_.entity.strType(src)}\` with \`_.entity.cloneDeep()\``)},assign2:function assign2(dst,src,onRecursive){let result;if(_.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),_.assert(arguments.length<3||_.routine.is(onRecursive)),null===src)result=src;else if(dst&&_.routine.is(dst.copy))dst.copy(src);else if(src&&_.routine.is(src.clone)){if(dst instanceof src.constructor)throw _.err("not tested");_.primitive.is(dst)||_.longIs(dst)?result=src.clone():_.assert(0,"unknown")}else src&&_.routine.is(src.slice)?result=src.slice():dst&&_.routine.is(dst.set)?dst.set(src):result=_.object.isBasic(src)?onRecursive?_.mapCloneAssigning({srcMap:src,dstMap:_.primitive.is(dst)?Object.create(null):dst,onField:onRecursive}):_.mapCloneAssigning({srcMap:src}):src;return result},assign2FieldFromContainer:function assign2FieldFromContainer(){let dstContainer=arguments[0];let srcContainer=arguments[1];let name=arguments[2];let onRecursive=arguments[3];let result;_.assert(_.strIs(name)||_.symbol.is(name)),_.assert(3===arguments.length||4===arguments.length);let dstValue=Object.hasOwnProperty.call(dstContainer,name)?dstContainer[name]:void 0;let srcValue=srcContainer[name];return void 0!==(result=onRecursive?_.entity.assign2(dstValue,srcValue,onRecursive):_.entity.assign2(dstValue,srcValue))&&(dstContainer[name]=result),result},assign2Field:function assign2Field(){let dstContainer=arguments[0];let srcValue=arguments[1];let name=arguments[2];let onRecursive=arguments[3];let result;_.assert(_.strIs(name)||_.symbol.is(name)),_.assert(3===arguments.length||4===arguments.length);let dstValue=dstContainer[name];if(onRecursive)throw _.err("not tested");return void 0!==(result=_.entity.assign2(dstValue,srcValue))&&(dstContainer[name]=result),result}};Object.assign(_.entity,EntityExtension)}()});module.exports,module.include,module.include}(),function Err_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Err.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Err_s_naked(){!function _l5_Err_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.error,{})}()});module.exports,module.include,module.include}(),function Escape_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Escape.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Escape_s_naked(){!function _l5_Escape_s_(){"use strict";_global_,_global_.wTools}()});module.exports,module.include,module.include}(),function Event_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Event.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Event_s_naked(){!function _l5_Event_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.event,{})}()});module.exports,module.include,module.include}(),function Functional_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Functional.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Functional_s_naked(){!function _l5_Functional_s_(){"use strict";_global_;const _=_global_.wTools;function scalarAppend(dst,src){if(_.assert(2===arguments.length),void 0===dst){if(!_.longIs(src))return void 0===src?[]:src;dst=[]}return _.longIs(dst)?(_.arrayIs(dst)||(dst=_.array.from(dst)),void 0===src||(_.longIs(src)?_.arrayAppendArray(dst,src):dst.push(src))):void 0===src||(dst=_.longIs(src)?_.arrayAppendArray([dst],src):[dst,src]),dst}function scalarAppendOnce(dst,src){if(_.assert(2===arguments.length),void 0===dst){if(!_.longIs(src))return void 0===src?[]:src;dst=[]}return _.longIs(dst)?(_.arrayIs(dst)||(dst=_.array.from(dst)),void 0===src||(_.longIs(src)?_.arrayAppendArrayOnce(dst,src):_.arrayAppendElementOnce(dst,src))):void 0===src||(dst=_.longIs(src)?_.arrayAppendArrayOnce([dst],src):_.arrayAppendElementOnce([dst],src)),dst}function scalarPrepend(dst,src){if(_.assert(2===arguments.length),void 0===dst){if(!_.longIs(src))return void 0===src?[]:src;dst=[]}return _.longIs(dst)?(_.arrayIs(dst)||(dst=_.array.from(dst)),void 0===src||(_.longIs(src)?_.arrayPrependArray(dst,src):dst.splice(0,0,src))):void 0===src||(dst=_.longIs(src)?_.arrayPrependArray([dst],src):[src,dst]),dst}function scalarPrependOnce(dst,src){if(_.assert(2===arguments.length),void 0===dst){if(!_.longIs(src))return void 0===src?[]:src;dst=[]}return _.longIs(dst)?(_.arrayIs(dst)||(dst=_.array.from(dst)),void 0===src||(_.longIs(src)?_.arrayPrependArrayOnce(dst,src):_.arrayPrependElementOnce(dst,src))):void 0===src||(dst=_.longIs(src)?_.arrayPrependArrayOnce([dst],src):_.arrayPrependElementOnce([dst],src)),dst}function scalarToVector(dst,length){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(void 0!==dst,"Expects array or scalar"),_.assert(length>=0),_.arrayIs(dst)?_.assert(dst.length===length,()=>"Expects array of length "+length+" but got "+dst.length):dst=_.longFill([],dst,[0,length]),dst}function scalarFrom(src){return _.longIs(src)&&1===src.length?src[0]:src}function scalarFromOrNull(src){if(_.longIs(src)){if(1===src.length)return src[0];if(0===src.length)return null}return src}function dup(ins,times,result){if(_.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),_.assert(_.number.is(times)||_.longIs(times),"dup expects times as number or array"),_.number.is(times)){result||(result=new Array(times));for(let t=0;t<times;t++)result[t]=ins;return result}if(_.longIs(times)){_.assert(2===times.length);let l=times[1]-times[0];result||(result=new Array(times[1]));for(let t=0;t<l;t++)result[times[0]+t]=ins;return result}_.assert(0,"unexpected")}function multiple(src,times){return _.assert(2===arguments.length),_.argumentsArray.like(src)?_.assert(src.length===times,()=>"Vector should have "+times+" elements, but have "+src.length):src=_.dup(src,times),src}function multipleAll(dsts){let length;_.assert(1===arguments.length);for(let d=0;d<dsts.length;d++)if(_.arrayIs(dsts[d])){length=dsts[d].length;break}if(void 0===length)return dsts;for(let d=0;d<dsts.length;d++)dsts[d]=_.multiple(dsts[d],length);return dsts}function entityEach(src,onEach){if(_.assert(2===arguments.length),_.assert(onEach.length<=3),_.assert(_.routine.is(onEach)),_.longIs(src))for(let k=0;k<src.length;k++)onEach(src[k],k,src);else if(_.aux.is(src))for(let k in src)onEach(src[k],k,src);else onEach(src,void 0,void 0);return src}function entityEachOwn(src,onEach){if(_.assert(2===arguments.length),_.assert(onEach.length<=3),_.assert(_.routine.is(onEach)),_.longIs(src))for(let k=0;k<src.length;k++)onEach(src[k],k,src);else if(_.aux.is(src)||_.object.like(src))for(let k in src)Object.hasOwnProperty.call(src,k)&&onEach(src[k],k,src);else onEach(src,void 0,void 0);return src}function entityOnly(dst,src,onEach){if(arguments.length>2&&(onEach=arguments[arguments.length-1]),void 0===src&&(src=dst),_.strIs(onEach)){let selector=onEach;_.assert(_.routine.is(_.select)),_.assert(_.strBegins(selector,"*/"),()=>`Selector should begins with "*/", but "${selector}" does not`),selector=_.strRemoveBegin(selector,"*/"),onEach=function(e,k){return _.select(e,selector)}}let dstTypeStr=typeStr(dst);let srcTypeStr=typeStr(src);return _.assert(null===dst||dstTypeStr===srcTypeStr),
_.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3,"Expects optional routine or selector {- onEach -}"),null!==dst?_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutineDeleting(){for(let value of src){onEach(value,void 0,src)||dst.delete(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutineDeleting(){for(let[key,value]of src){onEach(value,key,src)||dst.delete(key)}}():function withRoutineDeleting(){if(_.longIs(dst))for(let k=dst.length-1;k>=0;k--){onEach(src[k],k,src)||dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){onEach(src[k],k,src)||delete dst[k]}else{onEach(src,void 0,void 0)||(dst=void 0)}}():"set"===srcTypeStr?function setWithoutRoutineDeleting(){let unnecessaries=[null,0,void 0,false,""];for(let key of unnecessaries)src.has(key)&&dst.delete(key)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutineDeleting(){for(let[key,value]of src)value||dst.delete(key)}():function withoutRoutineDeleting(){if(_.longIs(dst))for(let k=dst.length-1;k>=0;k--){src[k]||dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){src[k]||delete dst[k]}else{src||(dst=void 0)}}():_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutine(){dst=new Set(src);for(let value of src){onEach(value,void 0,src)||dst.delete(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutine(){dst=new HashMap(src);for(let[key,value]of src){onEach(value,key,src)||dst.delete(key)}}():function withRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){onEach(src[k],k,src)&&dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){onEach(src[k],k,src)&&(dst[k]=src[k])}}else{let res=onEach(src,void 0,void 0);dst=res?src:void 0}}():"set"===srcTypeStr?function setWithoutRoutine(){dst=new Set(src);let unnecessaries=[null,0,void 0,false,""];for(let key of unnecessaries)dst.has(key)&&dst.delete(key)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutine(){dst=new HashMap(src);for(let[key,value]of dst)value||dst.delete(key)}():function withoutRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){src[k]&&dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){src[k]&&(dst[k]=src[k])}}else{dst=src||void 0}}(),dst;function typeStr(e){return _.longIs(e)?"long":_.aux.is(e)?"map":_.set.is(e)?"set":_.hashMap.is(e)?"hashMap":"primitive"}}function entityBut(dst,src,onEach){if(arguments.length>2&&(onEach=arguments[arguments.length-1]),void 0===src&&(src=dst),_.strIs(onEach)){let selector=onEach;_.assert(_.routine.is(_.select)),_.assert(_.strBegins(selector,"*/"),()=>`Selector should begins with "*/", but "${selector}" does not`),selector=_.strRemoveBegin(selector,"*/"),onEach=function(e,k){return _.select(e,selector)}}let dstTypeStr=typeStr(dst);let srcTypeStr=typeStr(src);return _.assert(null===dst||dstTypeStr===srcTypeStr),_.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3,"Expects optional routine or selector {- onEach -}"),null!==dst?_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutineDeleting(){for(let value of src){onEach(value,void 0,src)&&dst.delete(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutineDeleting(){for(let[key,value]of src){onEach(value,key,src)&&dst.delete(key)}}():function withRoutineDeleting(){if(_.longIs(dst))for(let k=dst.length-1;k>=0;k--){onEach(src[k],k,src)&&dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){onEach(src[k],k,src)&&delete dst[k]}else{onEach(src,void 0,void 0)&&(dst=void 0)}}():"set"===srcTypeStr?function setWithoutRoutineDeleting(){for(let value of src)value&&dst.delete(value)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutineDeleting(){for(let[key,value]of src)value&&dst.delete(key)}():function withoutRoutineDeleting(){if(_.longIs(dst))for(let k=dst.length-1;k>=0;k--){src[k]&&dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){src[k]&&delete dst[k]}else{dst=src?void 0:dst}}():_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutine(){dst=new Set(null);for(let value of src){onEach(value,void 0,src)||dst.add(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutine(){dst=new HashMap(null);for(let[key,value]of src){onEach(value,key,src)||dst.set(key,value)}}():function withRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){onEach(src[k],k,src)||dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){onEach(src[k],k,src)||(dst[k]=src[k])}}else{let res=onEach(src,void 0,void 0);dst=res?void 0:src}}():"set"===srcTypeStr?function setWithoutRoutine(){dst=new Set(null);for(let e of src)e||dst.add(e)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutine(){dst=new HashMap(null);for(let[key,value]of src)value||dst.set(key,value)}():function withoutRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){src[k]||dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){src[k]||(dst[k]=src[k])}}else{dst=src?void 0:src}}(),dst;function typeStr(e){return _.longIs(e)?"long":_.aux.is(e)?"map":_.set.is(e)?"set":_.hashMap.is(e)?"hashMap":"primitive"}}function entityAnd(dst,src,onEach){if(arguments.length>2&&(onEach=arguments[arguments.length-1]),void 0===src&&(src=dst),_.strIs(onEach)){let selector=onEach;_.assert(_.routine.is(_.select)),_.assert(_.strBegins(selector,"*/"),()=>`Selector should begins with "*/", but "${selector}" does not`),selector=_.strRemoveBegin(selector,"*/"),onEach=function(e,k){return _.select(e,selector)}}let dstTypeStr=typeStr(dst);let srcTypeStr=typeStr(src);return _.assert(null===dst||dstTypeStr===srcTypeStr),_.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3,"Expects optional routine or selector {- onEach -}"),null!==dst?_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutineDeleting(){for(let value of dst){let res1,res2;let from=[...src];(res1=onEach(value,void 0,dst))&&-1!==from.lastIndexOf(value)?res2=onEach(value,void 0,from):res1&&(res2=onEach(void 0,void 0,src)),res1&&res2||dst.delete(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutineDeleting(){for(let[key,value]of dst){let res1,res2;void 0!==(res1=onEach(value,key,dst))&&src.has(key)&&(res2=onEach(src.get(key),key,src)),res1&&res2||dst.delete(key)}}():function withRoutineDeleting(){if(_.longIs(dst))for(let k=(dst=_.arrayIs(dst)?dst:_.array.make(dst)).length-1;k>=0;k--){let res1,res2;(res1=onEach(dst[k],k,dst))&&(res2=onEach(src[k],k,src)),res1&&res2||dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){let res1,res2;(res1=onEach(dst[k],k,dst))&&(res2=onEach(src[k],k,src)),res1&&res2||delete dst[k]}else{let res1,res2;(res1=onEach(dst,void 0,void 0))&&(res2=onEach(src,void 0,void 0)),res1&&res2||(dst=void 0)}}():"set"===srcTypeStr?function setWithoutRoutineDeleting(){for(let value of dst)value&&src.has(value)||dst.delete(value)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutineDeleting(){for(let[key,value]of dst)value&&src.get(key)||dst.delete(key)}():function withoutRoutineDeleting(){if(_.longIs(dst))for(let k=(dst=_.arrayIs(dst)?dst:_.array.make(dst)).length-1;k>=0;k--){let res1=dst[k];let res2=src[k];res1&&res2||dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){let res1=dst[k];let res2=src[k];res1&&res2||delete dst[k]}else{dst&&src||(dst=void 0)}}():_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutine(){dst=new Set(null);for(let value of src){onEach(value,void 0,src)&&dst.add(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutine(){dst=new HashMap(null);for(let[key,value]of src){onEach(value,key,src)&&dst.set(key,value)}}():function withRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){onEach(src[k],k,src)&&dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){onEach(src[k],k,src)&&(dst[k]=src[k])}}else{let res=onEach(src,void 0,void 0);dst=res?src:void 0}}():"set"===srcTypeStr?function setWithoutRoutine(){dst=new Set(src);let unnecessaries=[null,0,void 0,false,""];for(let key of unnecessaries)src.has(key)&&dst.delete(key)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutine(){dst=new HashMap(null);for(let[key,value]of src)value&&dst.set(key,value)}():function withoutRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){src[k]&&dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){src[k]&&(dst[k]=src[k])}}else{dst=src?src:void 0}}(),dst;function typeStr(e){return _.longIs(e)?"long":_.aux.is(e)?"map":_.set.is(e)?"set":_.hashMap.is(e)?"hashMap":"primitive"}}function entityOr(dst,src,onEach){if(arguments.length>2&&(onEach=arguments[arguments.length-1]),void 0===src&&(src=dst),_.strIs(onEach)){let selector=onEach;_.assert(_.routine.is(_.select)),_.assert(_.strBegins(selector,"*/"),()=>`Selector should begins with "*/", but "${selector}" does not`),selector=_.strRemoveBegin(selector,"*/"),onEach=function(e,k){return _.select(e,selector)}}let dstTypeStr=typeStr(dst);let srcTypeStr=typeStr(src);return _.assert(null===dst||dstTypeStr===srcTypeStr),_.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3,"Expects optional routine or selector {- onEach -}"),null!==dst?_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutineDeleting(){for(let key of dst){let res1,res2;res2=!(res1=onEach(key,void 0,dst))&&src.has(key)?onEach(key,void 0,src):onEach(void 0,void 0,src),res1||res2||dst.delete(key)}}():"hashMap"===srcTypeStr?function hashMapWithRoutineDeleting(){for(let[key,value]of dst){let res1,res2;res2=!(res1=onEach(value,key,dst))&&src.has(key)?onEach(src.get(key),key,src):onEach(void 0,void 0,src),res1?dst.set(key,value):res2?dst.set(key,src.get(key)):dst.delete(key)}}():function withRoutineDeleting(){if(_.longIs(dst))for(let k=(dst=_.arrayIs(dst)?dst:_.array.make(dst)).length-1;k>=0;k--){let res1,res2;(res1=onEach(dst[k],k,dst))||(res2=onEach(src[k],k,src)),res1?dst[k]=dst[k]:res2?dst[k]=src[k]:dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){let res1,res2;(res1=onEach(dst[k],k,dst))||(res2=onEach(src[k],k,src)),res1?dst[k]=dst[k]:res2?dst[k]=src[k]:delete dst[k]}else{let res1,res2;(res1=onEach(dst,void 0,void 0))||(res2=onEach(src,void 0,void 0)),dst=res1?dst:res2?src:void 0}}():"set"===srcTypeStr?function setWithoutRoutineDeleting(){for(let value of dst)value||dst.delete(value)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutineDeleting(){for(let[key,value]of dst)if(!value){let res=src.get(key);res?dst.set(key,res):dst.delete(key)}}():function withoutRoutineDeleting(){if(_.longIs(dst))for(let k=(dst=_.arrayIs(dst)?dst:_.array.make(dst)).length-1;k>=0;k--){let res1=dst[k];let res2=src[k];res1?dst[k]=dst[k]:res2?dst[k]=src[k]:dst.splice(k,1)}else if(_.aux.is(dst))for(let k in dst){let res1=dst[k];let res2=src[k];res1?dst[k]=dst[k]:res2?dst[k]=src[k]:delete dst[k]}else{dst=dst?dst:src?src:void 0}}():_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutine(){dst=new Set(null);for(let value of src){onEach(value,void 0,src)&&dst.add(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutine(){dst=new HashMap(null);for(let[key,value]of src){onEach(value,key,src)&&dst.set(key,value)}}():function withRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){onEach(src[k],k,src)&&dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){onEach(src[k],k,src)&&(dst[k]=src[k])}}else{let res=onEach(src,void 0,void 0);dst=res?src:void 0}}():"set"===srcTypeStr?function setWithoutRoutine(){dst=new Set(src);let unnecessaries=[null,0,void 0,false,""];for(let key of unnecessaries)src.has(key)&&dst.delete(key)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutine(){dst=new HashMap(null);for(let[key,value]of src)value&&dst.set(key,value)}():function withoutRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){src[k]&&dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){src[k]&&(dst[k]=src[k])}}else{dst=src?src:void 0}}(),dst;function typeStr(e){return _.longIs(e)?"long":_.aux.is(e)?"map":_.set.is(e)?"set":_.hashMap.is(e)?"hashMap":"primitive"}}function entityXor(dst,src,onEach){if(arguments.length>2&&(onEach=arguments[arguments.length-1]),void 0===src&&(src=dst),_.strIs(onEach)){let selector=onEach;_.assert(_.routine.is(_.select)),_.assert(_.strBegins(selector,"*/"),()=>`Selector should begins with "*/", but "${selector}" does not`),selector=_.strRemoveBegin(selector,"*/"),onEach=function(e,k){return _.select(e,selector)}}let dstTypeStr=typeStr(dst);let srcTypeStr=typeStr(src);return _.assert(null===dst||dstTypeStr===srcTypeStr),_.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3,"Expects optional routine or selector {- onEach -}"),null!==dst?_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutineDeleting(){for(let key of dst){onEach(key,void 0,dst)||dst.delete(key)}for(let key of src){let res1,res2;res1=dst.has(key)?onEach(key,key,dst):onEach(void 0,void 0,dst),res2=onEach(key,key,src),res1&&!res2||(!res1&&res2?dst.add(key):dst.delete(key))}}():"hashMap"===srcTypeStr?function hashMapWithRoutineDeleting(){for(let[key,value]of dst){onEach(value,key,dst)||dst.delete(key)}for(let[key,value]of src){let res1,res2;res1=dst.has(key)?onEach(dst.get(key),key,dst):onEach(void 0,void 0,dst),res2=onEach(value,key,src),res1&&!res2||(!res1&&res2?dst.set(key,value):dst.delete(key))}}():function withRoutineDeleting(){if(_.longIs(dst)){dst=_.arrayIs(dst)?dst:_.array.make(dst);for(let k=src.length-1;k>=0;k--){let res1=onEach(dst[k],k,dst);let res2=onEach(src[k],k,src);res1&&!res2||(!res1&&res2?dst[k]=src[k]:dst.splice(k,1))}}else if(_.aux.is(dst))for(let k in src){let res1=onEach(dst[k],k,dst);let res2=onEach(src[k],k,src);res1&&!res2||(!res1&&res2?dst[k]=src[k]:delete dst[k])}else{let res1=onEach(dst,void 0,void 0);let res2=onEach(src,void 0,void 0);res1&&!res2||(dst=!res1&&res2?src:void 0)}}():"set"===srcTypeStr?function setWithoutRoutineDeleting(){for(let key of dst)key||dst.delete(key);for(let key of src)dst.has(key)?dst.delete(key):key&&dst.add(key)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutineDeleting(){for(let[key,value]of dst)value||dst.delete(key);for(let[key,value]of src){let res1=dst.get(key);res1&&!value||(!res1&&value?dst.set(key,value):dst.delete(key))}}():function withoutRoutineDeleting(){if(_.longIs(dst)){dst=_.arrayIs(dst)?dst:_.array.make(dst);for(let k=src.length-1;k>=0;k--){let res1=dst[k];let res2=src[k];res1&&!res2||(!res1&&res2?dst[k]=src[k]:dst.splice(k,1))}}else if(_.aux.is(dst))for(let k in src){let res1=dst[k];let res2=src[k];res1&&!res2||(!res1&&res2?dst[k]=src[k]:delete dst[k])}else{dst&&!src||(dst=!dst&&src?src:void 0)}}():_.routine.is(onEach)?"set"===srcTypeStr?function setWithRoutine(){dst=new Set(null);for(let value of src){let res1=onEach(void 0,void 0,dst);let res2=onEach(value,void 0,src);(res1&&!res2||!res1&&res2)&&dst.add(value)}}():"hashMap"===srcTypeStr?function hashMapWithRoutine(){dst=new HashMap(null);for(let[key,value]of src){let res1=onEach(void 0,void 0,dst);let res2=onEach(value,key,src);(res1&&!res2||!res1&&res2)&&dst.set(key,value)}}():function withRoutine(){if(_.longIs(src)){dst=[];for(let k=0;k<src.length;k++){let res1=onEach(void 0,void 0,dst);let res2=onEach(src[k],k,src);(res1&&!res2||!res1&&res2)&&dst.push(src[k])}}else if(_.aux.is(src)){dst=Object.create(null);for(let k in src){let res1=onEach(void 0,void 0,dst);let res2=onEach(src[k],k,src);(res1&&!res2||!res1&&res2)&&(dst[k]=src[k])}}else{let res1=onEach(null);let res2=onEach(src,void 0,void 0);dst=res1&&!res2||!res1&&res2?src:void 0}}():"set"===srcTypeStr?function setWithoutRoutine(){dst=new Set(src);let unnecessaries=[null,0,void 0,false,""];for(let e of unnecessaries)dst.delete(e)}():"hashMap"===srcTypeStr?function hashMapWithoutRoutine(){dst=new HashMap(src);let unnecessaries=[null,0,void 0,false,""];for(let k of unnecessaries)dst.get(k)||dst.delete(k)}():function withoutRoutine(){if(_.longIs(src)){dst=[];for(let e of src)e&&dst.push(e)}else if(_.aux.is(src)){dst=Object.assign(Object.create(null),src);let unnecessaries=[null,0,void 0,false,""];for(let k of unnecessaries)dst[k]||delete dst[k]}else dst=void 0!==src?src:void 0}(),dst;function typeStr(e){return _.longIs(e)?"long":_.aux.is(e)?"map":_.set.is(e)?"set":_.hashMap.is(e)?"hashMap":"primitive"}}function entityAll(src,onEach){let result=true;if(_.assert(1===arguments.length||2===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3),_.routine.is(onEach)){if(_.set.like(src)){for(let e of src)if(!(result=onEach(e,void 0,src)))return result}else if(_.hashMap.is(src)){for(let[key,value]of src)if(!(result=onEach(value,key,src)))return result}else if(_.longIs(src)){for(let k=0;k<src.length;k++)if(!(result=onEach(src[k],k,src)))return result}else if(_.aux.is(src)){for(let k in src)if(!(result=onEach(src[k],k,src)))return result}else if(!(result=onEach(src,void 0,void 0)))return result}else if(_.longIs(src)||_.set.like(src)){for(let e of src)if(!(result=e))return result}else if(_.hashMap.is(src)){for(let[key,value]of src)if(!(result=value))return result}else if(_.aux.is(src)){for(let k in src)if(!(result=src[k]))return result}else if(!(result=src))return result;return true}function entityAny(src,onEach){let result=void 0;if(_.assert(1===arguments.length||2===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3),_.routine.is(onEach)){if(_.set.like(src)){for(let e of src)if(result=onEach(e,void 0,src))return result}else if(_.hashMap.is(src)){for(let[key,value]of src)if(result=onEach(value,key,src))return result}else if(_.longIs(src)){for(let k=0;k<src.length;k++)if(result=onEach(src[k],k,void 0))return result}else if(_.aux.is(src)){for(let k in src)if(result=onEach(src[k],k,void 0))return result}else if(result=onEach(src,void 0,void 0))return result}else if(_.longIs(src)||_.set.like(src)){for(let e of src)if(result=e)return result}else if(_.hashMap.is(src)){for(let[key,value]of src)if(result=value)return result}else if(_.aux.is(src)){for(let k in src)if(result=src[k])return result}else if(result=src)return result}function entityNone(src,onEach){let result=true;if(_.assert(1===arguments.length||2===arguments.length),_.assert(void 0===onEach||_.routine.is(onEach)&&onEach.length<=3),_.routine.is(onEach)){if(_.set.like(src)){for(let e of src)if(result=onEach(e,void 0,src))return!result}else if(_.hashMap.is(src)){for(let[key,value]of src)if(result=onEach(value,key,src))return!result}else if(_.longIs(src)){for(let k=0;k<src.length;k++)if(result=onEach(src[k],k,src))return!result}else if(_.aux.is(src)){for(let k in src)if(result=onEach(src[k],k,src))return!result}else if(result=onEach(src,void 0,void 0))return!result}else if(_.longIs(src)||_.set.like(src)){for(let e of src)if(result=e)return!result}else if(_.hashMap.is(src)){for(let[key,value]of src)if(result=value)return!result}else if(_.aux.is(src)){for(let k in src)if(result=src[k])return!result}else if(result=src)return!result;return true}function _filter_functor(condition,levels){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.routine.is(condition)||_.object.isBasic(condition)),_.object.isBasic(condition)){let template=condition;condition=function condition(e,k,src){return _.assert(3===arguments.length),e===template?e:_.object.like(e)&&_.objectSatisfy({template:template,src:e,levels:levels})?e:void 0}}return condition}function filter_(dst,src,onEach){let result;if(2===arguments.length?(_.assert(3===arguments.length,"Expects three arguments"),onEach=src,src=dst):_.assert(3===arguments.length,"Expects two or three arguments"),onEach=_._filter_functor(onEach,1),_.assert(_.routine.is(onEach)),dst===src)if(result=src,_.longIs(src))for(let s=src.length-1;s>=0;s--){let r=onEach.call(src,src[s],s,src);_.unrollIs(r)?_.longBut_(result,s,r):void 0!==r?result[s]=r:result.splice(s,1)}else if(_.aux.is(src))for(let s in src){let r=onEach.call(src,src[s],s,src);void 0===r?delete src[s]:src[s]=r}else result=onEach.call(null,src,null,null);else if(result=dst,_.longIs(src)){let s,d;for(null===dst?result=_.argumentsArray.is(src)?[]:_.long.make(src,0):_.assert(_.longIs(dst),"{-dst-} container should be long like"),s=0,d=0;s<src.length;s++){let r=onEach.call(src,src[s],s,src);_.unrollIs(r)?(_.longBut_(result,d,r),d+=r.length):void 0!==r&&(result[d]=r,d+=1)}}else if(_.aux.is(src)){null===dst?result=_.entity.makeUndefined(src):_.assert(_.aux.is(dst),"{-dst-} container should be map like");for(let s in src){let r=onEach.call(src,src[s],s,src);void 0!==r&&(result[s]=r)}}else{let r=onEach.call(null,src,null,null);void 0!==r&&(_.longIs(dst)?result=_.arrayAppendElement(dst,r):_.aux.is(dst)?result=_.props.extend(dst,r):_.primitive.is(dst)?result=r:_.assert(0,"Not clear how to add result in destination container {-dst-}"))}return result}function _most(o){_.assert(1===arguments.length,"Expects exactly one argument"),_.assert(_.mapIs(o),"Expect map, but got "+_.entity.strType(o)),_.routine.options(_most,o),o.onEach||(o.onEach=_most.defaults.onEach),o.onEvaluate||(_.assert(null!==o.returnMax,"o.returnMax should has value"),o.returnMax?o.onEvaluate=((a,b)=>a-b>0):o.onEvaluate=((a,b)=>b-a>0)),_.assert(1<=o.onEach.length&&o.onEach.length<=3),_.assert(1===o.onEvaluate.length||2===o.onEvaluate.length);let result={index:-1,key:void 0,value:void 0,element:void 0};if(_.longIs(o.src)){if(0===o.src.length)return result;let s=0;if(1===o.onEvaluate.length)for(;s<o.src.length;s++){let value=o.onEach(o.src[s],s,o.src);if(o.onEvaluate(value)){result.value=value,result.key=s;break}}else result.key=s,result.value=o.onEach(o.src[s],s,o.src);for(;s<o.src.length;s++)resultValue(o.src[s],s,o.src);result.index=result.key,result.element=o.src[result.key]}else if(_.aux.is(o.src)){let index=0;if(1===o.onEvaluate.length){for(let s in o.src){if(void 0===result.value){let value=o.onEach(o.src[s],s,o.src);o.onEvaluate(value)&&(result.value=value,result.index=index,result.key=s)}else resultValue(o.src[s],s,o.src)&&(result.index=index);index++}result.element=o.src[result.key]}else{for(let s in o.src){result.index=0,result.key=s,result.value=o.onEach(o.src[s],s,o.src);break}for(let s in o.src)resultValue(o.src[s],s,o.src)&&(result.index=index),index++;result.element=o.src[result.key]}}else _.assert(0);return result;function resultValue(e,k,s){let value=o.onEach(e,k,s);if(1===o.onEvaluate.length){if(o.onEvaluate(value)===o.onEvaluate(result.value))return result.key=k,result.value=value,true}else if(o.onEvaluate(value,result.value))return result.key=k,result.value=value,true;return false}}function entityMin(src,onEach){return _.assert(1===arguments.length||2===arguments.length),_most({src:src,onEach:onEach||null,returnMax:0})}function entityMax(src,onEach){return _.assert(1===arguments.length||2===arguments.length),_most({src:src,onEach:onEach||null,returnMax:1})}_most.defaults={src:null,onEach:e=>e,onEvaluate:null,returnMax:null};let ContainerExtension={scalarAppend:scalarAppend,scalarPrepend:scalarPrepend,scalarAppendOnce:scalarAppendOnce,scalarPrependOnce:scalarPrependOnce,scalarToVector:scalarToVector,scalarFrom:scalarFrom,scalarFromOrNull:scalarFromOrNull,dup:dup,multiple:multiple,multipleAll:multipleAll,each:entityEach,eachOwn:entityEachOwn,only:entityOnly,but:entityBut,and:entityAnd,or:entityOr,xor:entityXor,all:entityAll,any:entityAny,none:entityNone,_filter_functor:_filter_functor,map_:function map_(dst,src,onEach){let result;if(2===arguments.length?(_.assert(2===arguments.length,"Expects three arguments"),onEach=src,src=dst):_.assert(3===arguments.length,"Expects three arguments"),_.assert(_.routine.is(onEach)),dst===src)if(result=src,_.longIs(src))for(let s=0;s<src.length;s++){let r=onEach(src[s],s,src);void 0!==r&&(result[s]=r)}else if(_.aux.is(src))for(let s in src){let r=onEach(src[s],s,src);void 0!==r&&(result[s]=r)}else{result=src;let r=onEach(src,void 0,void 0);void 0!==r&&(result=r)}else if(result=dst,_.longIs(src)){null===dst?result=_.entity.makeUndefined(src,src.length):_.assert(_.longIs(dst),"{-dst-} container should be long like");for(let s=0;s<src.length;s++){let r=onEach(src[s],s,src);void 0!==r&&(result[s]=r)}}else if(_.aux.is(src)){null===dst?result=_.entity.makeUndefined(src):_.assert(_.aux.is(dst),"{-dst-} container should be map like");for(let s in src){let r=onEach(src[s],s,src);void 0!==r&&(result[s]=r)}}else{let r=onEach(src,void 0,void 0);if(void 0===r)return dst;_.longIs(dst)?result=_.arrayAppendElement(dst,r):_.aux.is(dst)?result=_.props.extend(dst,r):_.primitive.is(dst)?result=r:_.assert(0,"Not clear how to add result in destination container {-dst-}")}return result},filter_:filter_,first:function entityFirst(src,onEach){let result;if(onEach=_._filter_functor(onEach,1),_.assert(2===arguments.length),_.assert(_.routine.is(onEach)),_.longIs(src))for(let s=0;s<src.length;s++){let r=onEach.call(src,src[s],s,src);if(void 0!==r)return r}else if(_.aux.is(src))for(let s in src){let r=onEach.call(src,src[s],s,src);if(void 0!==r)return r}else result=onEach.call(null,src,null,null);return result},last:function entityLast(src,onEach){let result;if(onEach=_._filter_functor(onEach,1),_.assert(2===arguments.length),_.assert(_.routine.is(onEach)),_.longIs(src))for(let s=src.length-1;s>=0;s--){let r=onEach.call(src,src[s],s,src);if(void 0!==r)return r}else if(_.aux.is(src))for(let s in src){let r=onEach.call(src,src[s],s,src);void 0!==r&&(result=r)}else result=onEach.call(null,src,null,null);return result},_most:_most,min:entityMin,max:entityMax};_.props.supplement(_.container,ContainerExtension);let ToolsExtension={scalarAppend:scalarAppend,scalarPrepend:scalarPrepend,scalarAppendOnce:scalarAppendOnce,scalarPrependOnce:scalarPrependOnce,scalarToVector:scalarToVector,scalarFrom:scalarFrom,scalarFromOrNull:scalarFromOrNull,dup:dup,multiple:multiple,multipleAll:multipleAll,entityEach:entityEach,each:entityEach,entityEachOwn:entityEachOwn,eachOwn:entityEachOwn,entityOnly:entityOnly,only:entityOnly,entityBut:entityBut,but:entityBut,entityAnd:entityAnd,and:entityAnd,entityOr:entityOr,or:entityOr,entityXor:entityXor,xor:entityXor,entityAll:entityAll,all:entityAll,entityAny:entityAny,any:entityAny,entityNone:entityNone,none:entityNone,_filter_functor:_filter_functor,filter_:filter_,_most:_most,_entityMost:_most,entityMin:entityMin,min:entityMin,entityMax:entityMax,max:entityMax};_.props.supplement(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Fuzzy_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Fuzzy.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Fuzzy_s_naked(){!function _l5_Fuzzy_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.fuzzy=_.fuzzy||Object.create(null);Object.assign(_,{}),Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Global_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Global.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Global_s_naked(){!function _l5_Global_s_(){"use strict";_global_;const _=_global_.wTools;_.global=_.global||Object.create(null);const __=_realGlobal_.wTools;__.global=__.global||Object.create(null);var Extension={};_.props.supplement(_.global,Extension),_.props.supplement(__.global,Extension)}()});module.exports,module.include,module.include}(),function HashMap_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/HashMap.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function HashMap_s_naked(){!function _l5_HashMap_s_(){"use strict";_global_;const _=_global_.wTools;function extend(dst,src){if(_.assert(2===arguments.length),_.assert(null===dst||_.hashMap.like(dst)||_.aux.is(dst)),_.assert(_.hashMapLike(src)||_.aux.is(src)),null===dst&&(dst=new HashMap),dst===src)return dst;if(_.hashMap.like(dst))if(_.hashMapLike(src))for(let[k,e]of src)dst.set(k,e);else for(let k in src)dst.set(k,src[k]);else if(_.hashMap.like(src))for(let[k,e]of src)_.assert(_.strIs(k)),dst[k]=e;else for(let k in src)dst[k]=src[k];return dst}let ToolsExtension={hashMapExtend:extend};let Extension={extend:extend};Object.assign(_,ToolsExtension),Object.assign(_.hashMap,Extension)}()});module.exports,module.include,module.include}(),function Interval_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Interval.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Interval_s_naked(){!function _l5_Interval_s_(){"use strict";_global_,_global_.wTools;const Self=_global_.wTools;Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Intervalc_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Intervalc.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervalc_s_naked(){!function _l5_Intervalc_s_(){"use strict";_global_;const _=_global_.wTools;class Crange{static[Symbol.hasInstance](instance){return is(instance)}}const Self=new Proxy(Crange,{construct(original,args){return Crange.fromLeft(...args)}});Self.original=Crange;let Extension={is:_.intervalIs,isValid:_.intervalIsValid,defined:_.intervalIsValid,isEmpty:function isEmpty(cinterval){return _.assert(1===arguments.length),!!_.intervalIs(cinterval)&&cinterval[0]===cinterval[1]+1},isPopulated:function isPopulated(cinterval){return _.assert(1===arguments.length),!!_.intervalIs(cinterval)&&cinterval[0]!==cinterval[1]+1},has:function has(cinterval,src){if(_.assert(2===arguments.length),_.assert(_.intervalIs(cinterval)),_.intervalIs(src)){if(src[0]<cinterval[0])return false;if(src[1]>cinterval[1])return false}else if(_.number.is(src)){if(src<cinterval[0])return false;if(src>cinterval[1])return false}else _.assert(0,"Expects number or interval {-src-}.");return true},sureIn:function sureIn(src,cinterval){_.assert(arguments.length>=2),_.longIs(src)&&(src=src.length);let args=[_.cinterval.has(cinterval,src),()=>"Out of cinterval"+_.rangeToStr(cinterval),Array.prototype.slice.call(arguments,2)];return _.sure.apply(_,args),true},assertIn:function assertIn(src,cinterval){_.assert(arguments.length>=2),_.longIs(src)&&(src=src.length);let args=[_.cinterval.has(cinterval,src),()=>"Out of cinterval"+_.rangeToStr(cinterval),Array.prototype.slice.call(arguments,2)];return _.assert.apply(_,args),true},fromLeft:function fromLeft(cinterval){return _.assert(1===arguments.length),_.number.is(cinterval)?[cinterval,Infinity]:(_.assert(_.longIs(cinterval)),1===cinterval.length?cinterval=[cinterval[0],Infinity]:_.assert(2===cinterval.length),_.number.is(cinterval[0])||(_.assert(void 0===cinterval[0]),cinterval[0]=0),_.number.is(cinterval[1])||(_.assert(void 0===cinterval[1]),cinterval[1]=Infinity),cinterval)},fromRight:function fromRight(cinterval){return _.assert(1===arguments.length),_.number.is(cinterval)?[0,cinterval]:(_.assert(_.longIs(cinterval)),1===cinterval.length?cinterval=[cinterval[0],Infinity]:_.assert(2===cinterval.length),_.number.is(cinterval[0])||(_.assert(void 0===cinterval[0]),cinterval[0]=0),_.number.is(cinterval[1])||(_.assert(void 0===cinterval[1]),cinterval[1]=Infinity),cinterval)},fromSingle:function fromSingle(cinterval){return _.assert(1===arguments.length),_.number.is(cinterval)?[cinterval,cinterval]:(_.assert(_.longIs(cinterval)),_.assert(1===cinterval.length||2===cinterval.length),void 0===cinterval[0]?void 0===cinterval[1]?[0,0]:(_.assert(_.number.is(cinterval[1])),[cinterval[1],cinterval[1]]):(_.assert(_.number.is(cinterval[0])),void 0===cinterval[1]?[cinterval[0],cinterval[0]]:(_.assert(_.number.is(cinterval[1])),cinterval)))},clamp:function clamp(dstRange,clampRange){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.intervalIs(dstRange)),_.number.is(clampRange)?(dstRange[0]=clampRange,dstRange[1]=clampRange):(_.assert(_.intervalIs(clampRange)),dstRange[0]<clampRange[0]?dstRange[0]=clampRange[0]:dstRange[0]>clampRange[1]&&(dstRange[0]=clampRange[1]),dstRange[1]<clampRange[0]?dstRange[1]=clampRange[0]:dstRange[1]>clampRange[1]&&(dstRange[1]=clampRange[1])),dstRange},countElements:function countElements(cinterval,increment){if(_.assert(_.intervalIs(cinterval)),_.assert(1===arguments.length||2===arguments.length),void 0===increment&&(increment=1),_.assert(_.number.is(increment),"Increment should has a number value"),increment){let result=(cinterval[1]-cinterval[0]+1)/increment;if(result>0)return result<1?1:Math.floor(result);if(result<0)return result>-1?-1:Math.ceil(result)}return 0},firstGet:function firstGet(cinterval){return _.assert(1===arguments.length),_.longIs(cinterval)?(_.assert(_.intervalIs(cinterval)),cinterval[0]):_.mapIs(cinterval)?cinterval.first:void _.assert(0,"unexpected type of cinterval",_.entity.strType(cinterval))},lastGet:function lastGet(cinterval){return _.assert(1===arguments.length),_.longIs(cinterval)?(_.assert(_.intervalIs(cinterval)),cinterval[1]):_.mapIs(cinterval)?cinterval.last:void _.assert(0,"unexpected type of cinterval",_.entity.strType(cinterval))},toStr:function toStr(range){return _.assert(_.intervalIs(range)),_.assert(1===arguments.length),range[0]+".."+range[1]}};_.props.supplement(Self,Extension),_.assert(void 0!==_.cinterval),_.props.supplement(Self,_.cinterval),_.cinterval=Self}()});module.exports,module.include,module.include}(),function Intervall_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Intervall.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervall_s_naked(){!function _l5_Intervall_s_(){"use strict";_global_;const _=_global_.wTools;class Lrange{static[Symbol.hasInstance](instance){return is(instance)}}const Self=new Proxy(Lrange,{construct(original,args){return Lrange.fromLeft(...args)}});Self.original=Lrange;let Extension={is:_.intervalIs,isValid:_.intervalIsValid,defined:_.intervalIsValid,isEmpty:function isEmpty(linterval){return _.assert(1===arguments.length),!!_.intervalIs(linterval)&&0===linterval[1]},isPopulated:function isPopulated(linterval){return _.assert(1===arguments.length),!!_.intervalIs(linterval)&&0!==linterval[1]},has:function has(linterval,src){if(_.assert(2===arguments.length),_.assert(_.intervalIs(linterval)),_.intervalIs(src)){if(src[0]<linterval[0])return false;if(src[1]>linterval[1])return false}else if(_.number.is(src)){if(src<linterval[0])return false;if(src>linterval[0]+linterval[1])return false}else _.assert(0,"Expects interval or number {-src-}.");return true},sureIn:function sureIn(src,linterval){_.assert(arguments.length>=2),_.longIs(src)&&(src=src.length);let args=[_.linterval.has(linterval,src),()=>"Out of linterval"+_.rangeToStr(linterval),Array.prototype.slice.call(arguments,2)];return _.sure.apply(_,args),true},assertIn:function assertIn(src,linterval){_.assert(arguments.length>=2),_.longIs(src)&&(src=src.length);let args=[_.linterval.has(linterval,src),()=>"Out of linterval"+_.rangeToStr(linterval),Array.prototype.slice.call(arguments,2)];return _.assert.apply(_,args),true},fromLeft:_.cinterval.fromLeft,fromRight:_.cinterval.fromRight,fromSingle:function fromSingle(linterval){return _.assert(1===arguments.length),_.number.is(linterval)?[linterval,1]:(_.assert(_.longIs(linterval)),_.assert(1===linterval.length||2===linterval.length),void 0===linterval[0]?void 0===linterval[1]?[0,1]:(_.assert(1===linterval[1],"Expects length of 1"),[0,1]):(_.assert(_.number.is(linterval[0])),void 0===linterval[1]?[linterval[0],1]:(_.assert(_.number.is(linterval[1])),linterval)))},clamp:function clamp(dstRange,clampRange){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.intervalIs(dstRange)),_.number.is(clampRange)?(dstRange[0]=clampRange,dstRange[1]=0):(_.assert(_.intervalIs(clampRange)),dstRange[0]<0?dstRange[0]=0:dstRange[0]>clampRange[0]&&(dstRange[0]=clampRange[0]),dstRange[1]<0?dstRange[1]=0:dstRange[1]>clampRange[1]&&(dstRange[1]=clampRange[1])),dstRange},countElements:function countElements(linterval,increment){if(_.assert(_.intervalIs(linterval)),_.assert(1===arguments.length||2===arguments.length),void 0===increment&&(increment=1),_.assert(_.number.is(increment),"Increment should has a number value"),increment){let result=linterval[1]/increment;if(result>0)return result<1?1:Math.floor(result);if(result<0)return result>-1?-1:Math.ceil(result)}return 0},firstGet:_.cinterval.firstGet,lastGet:function lastGet(linterval,options){return _.assert(1===arguments.length||2===arguments.length),options&&(_.assert(_.object.like(options)),void 0===options.increment&&(options.increment=1)),_.longIs(linterval)?(_.assert(_.intervalIs(linterval)),linterval[0]+linterval[1]-1):_.mapIs(linterval)?linterval.last:void _.assert(0,"unexpected type of linterval",_.entity.strType(linterval))},toStr:_.cinterval.toStr};_.props.supplement(Self,Extension),_.assert(void 0!==_.linterval),_.props.supplement(Self,_.linterval),_.linterval=Self}()});module.exports,module.include,module.include}(),function Intervalo_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Intervalo.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervalo_s_naked(){!function _l5_Intervalo_s_(){"use strict";_global_;const _=_global_.wTools;class Orange{static[Symbol.hasInstance](instance){return is(instance)}}const Self=new Proxy(Orange,{construct(original,args){return Orange.fromLeft(...args)}});Self.original=Orange;let Extension={is:_.intervalIs,isValid:_.intervalIsValid,defined:_.intervalIsValid,isEmpty:function isEmpty(ointerval){return _.assert(1===arguments.length),!!_.intervalIs(ointerval)&&ointerval[0]===ointerval[1]},isPopulated:function isPopulated(ointerval){return _.assert(1===arguments.length),!!_.intervalIs(ointerval)&&ointerval[0]!==ointerval[1]},has:function has(ointerval,src){if(_.assert(2===arguments.length),_.assert(_.intervalIs(ointerval)),_.intervalIs(src)){if(src[0]<ointerval[0])return false;if(src[1]>ointerval[1])return false}else if(_.number.is(src)){if(src<ointerval[0])return false;if(src>=ointerval[1])return false}else _.assert(0,"Expects interval or number {-src-}.");return true},sureIn:function sureIn(src,ointerval){_.assert(arguments.length>=2),_.longIs(src)&&(src=src.length);let args=[_.ointerval.has(ointerval,src),()=>"Out of ointerval"+_.rangeToStr(ointerval),Array.prototype.slice.call(arguments,2)];return _.sure.apply(_,args),true},assertIn:function assertIn(src,ointerval){_.assert(arguments.length>=2),_.longIs(src)&&(src=src.length);let args=[_.ointerval.has(ointerval,src),()=>"Out of ointerval"+_.rangeToStr(ointerval),Array.prototype.slice.call(arguments,2)];return _.assert.apply(_,args),true},fromLeft:_.cinterval.fromLeft,fromRight:_.cinterval.fromRight,fromSingle:function fromSingle(ointerval){return _.assert(1===arguments.length),_.number.is(ointerval)?[ointerval,ointerval+1]:(_.assert(_.longIs(ointerval)),_.assert(1===ointerval.length||2===ointerval.length),void 0===ointerval[0]?void 0===ointerval[1]?[0,1]:(_.assert(_.number.is(ointerval[1])),[ointerval[1]-1,ointerval[1]]):(_.assert(_.number.is(ointerval[0])),void 0===ointerval[1]?[ointerval[0],ointerval[0]+1]:(_.assert(_.number.is(ointerval[1])),ointerval)))},clamp:function clamp(dstRange,clampRange){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.intervalIs(dstRange)),_.number.is(clampRange)?(dstRange[0]=clampRange,dstRange[1]=clampRange):(_.assert(_.intervalIs(clampRange)),dstRange[0]<clampRange[0]?dstRange[0]=clampRange[0]:dstRange[0]>clampRange[1]&&(dstRange[0]=clampRange[1]),dstRange[1]<clampRange[0]?dstRange[1]=clampRange[0]:dstRange[1]>clampRange[1]&&(dstRange[1]=clampRange[1])),dstRange},countElements:function countElements(ointerval,increment){if(_.assert(_.intervalIs(ointerval)),_.assert(1===arguments.length||2===arguments.length),void 0===increment&&(increment=1),_.assert(_.number.is(increment),"Increment should has a number value"),increment){let result=(ointerval[1]-ointerval[0])/increment;if(result>0)return result<1?1:Math.floor(result);if(result<0)return result>-1?-1:Math.ceil(result)}return 0},firstGet:_.cinterval.firstGet,lastGet:function lastGet(ointerval,options){return _.assert(1===arguments.length||2===arguments.length),options&&(_.assert(_.object.like(options)),void 0===options.increment&&(options.increment=1)),_.longIs(ointerval)?(_.assert(_.intervalIs(ointerval)),ointerval[1]-1):_.mapIs(ointerval)?ointerval.last:void _.assert(0,"unexpected type of ointerval",_.entity.strType(ointerval))},toStr:_.cinterval.toStr};_.props.supplement(Self,Extension),_.assert(void 0!==_.ointerval),_.props.supplement(Self,_.ointerval),_.ointerval=Self}()});module.exports,module.include,module.include}(),function Introspector_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Introspector.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Introspector_s_naked(){!function _Introspector_s_(){"use strict";const _=_global_.wTools;_.introspector=_.introspector||Object.create(null),_.props.supplement(_.introspector,{})}()});module.exports,module.include,module.include}(),function Itself_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Itself.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Itself_s_naked(){!function _l5_Itself_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{}),Object.assign(_.itself,{})}()});module.exports,module.include,module.include}(),function Logic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Logic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Logic_s_naked(){!function _l5_Logic_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{}),Object.assign(_.logic,{})}()});module.exports,module.include,module.include}(),function Long_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Long.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Long_s_naked(){!function _l5_Long_s_(){"use strict";const _ArrayIndexOf=Array.prototype.indexOf;const _ArrayIncludes=Array.prototype.includes;_ArrayIncludes||(_ArrayIncludes=function(e){_ArrayIndexOf.call(this,e)}),_global_;const _=_global_.wTools;function longDuplicate(o){if(_.assert(_.mapIs(o)),0===o.nScalarsPerElement&&(0===o.src.length?o.nScalarsPerElement=1:o.nScalarsPerElement=o.src.length),_.routine.options(longDuplicate,o),_.assert(_.number.is(o.nDupsPerElement)),_.assert(_.longIs(o.src),"Expects Long {-o.src-}"),_.assert(_.intIs(o.src.length/o.nScalarsPerElement)),1===o.nDupsPerElement)return o.dst?(_.assert(_.longIs(o.dst)||_.bufferTypedIs(o.dst),"Expects o.dst as longIs or TypedArray if nDupsPerElement equals 1"),_.bufferTypedIs(o.dst)?o.dst=_.longJoin(o.dst,o.src):_.longIs(o.dst)&&o.dst.push.apply(o.dst,o.src)):o.dst=o.src,o.dst;let length=o.src.length*o.nDupsPerElement;let numberOfElements=o.src.length/o.nScalarsPerElement;o.dst&&_.assert(o.dst.length>=length),o.dst=o.dst||_.long.makeUndefined(o.src,length);let rlength=o.dst.length;for(let c=0,cl=numberOfElements;c<cl;c++)for(let d=0,dl=o.nDupsPerElement;d<dl;d++)for(let e=0,el=o.nScalarsPerElement;e<el;e++){let indexDst=c*o.nScalarsPerElement*o.nDupsPerElement+d*o.nScalarsPerElement+e;let indexSrc=c*o.nScalarsPerElement+e;o.dst[indexDst]=o.src[indexSrc]}return _.assert(o.dst.length===rlength),o.dst}function _longShallow(src,f,l){return _.assert(1<=arguments.length&&arguments.length<=3),_.assert(_.longIs(src),"Expects long {-src-}"),_.assert(void 0===f||_.number.is(f)),_.assert(void 0===l||_.number.is(l)),f=void 0===f?0:f,l=void 0===l?src.length:l,f<0&&(f=src.length+f),l<0&&(l=src.length+l),f<0&&(f=0),f>l&&(l=f),_.bufferTypedIs(src)?_.longOnly_(null,src,[f,l-1]):Array.prototype.slice.call(src,f,l)}longDuplicate.defaults={src:null,dst:null,nScalarsPerElement:1,nDupsPerElement:2};let Extension={_longMake_functor:function _longMake_functor(onMake){return _.assert(_.routine.is(onMake)),function _longMake(src,ins){let result;let length=ins;let minLength;_.longLike(length)&&(length=length.length),void 0!==length&&null!==length||(null===src?length=0:_.longLike(src)?length=src.length:_.number.is(src)?(length=src,src=null):_.routine.is(src)?length=0:_.assert(0)),length||(length=0),void 0===ins||null===ins?ins=_.longLike(src)?src:null:_.longLike(ins)||(ins=_.longIs(src)?src:null),minLength=ins?Math.min(ins.length,length):0,_.argumentsArray.is(src)&&(src=null);let self=this;return null===src&&(src=function(src){return self.tools.long.default.make(src)}),_.assert(1===arguments.length||2===arguments.length),_.assert(_.number.isFinite(length)),_.assert(_.routine.is(src)||_.longLike(src),()=>"Expects long, but got "+_.entity.strType(src)),result=onMake.call(this,src,ins,length,minLength),_.assert(_.longLike(result)),result}},longFrom:function longFrom(src){return _.assert(1===arguments.length),src instanceof this.tools.long.default.InstanceConstructor&&!_.unrollIs(src)&&_.longIs(src)?src:this.longMake.call(this,src)},longFromCoercing:function longFromCoercing(src){return _.assert(1===arguments.length,"Expects single argument"),this.long.default.InstanceConstructor&&src instanceof this.long.default.InstanceConstructor&&_.longIs(src)?src:_.longIs(src)?this.long.default.from(src):_.object.isBasic(src)?this.longFromCoercing(_.props.pairs(src)):_.strIs(src)?this.longFromCoercing(this.arrayFromStr(src)):void _.assert(0,`Unknown data type : ${_.entity.strType(src)}`)},longFill:function longFill(src,value,range){void 0===range&&(range=[0,src.length]),_.number.is(range)&&(range=[0,range]),_.assert(1<=arguments.length&&arguments.length<=3),_.assert(_.longIs(src)),_.assert(_.intervalIs(range)),void 0===value&&(value=0),src=_.longGrow_(src,src,[range[0],range[1]-1]);let offset=Math.max(-range[0],0);if(range[0]<0&&(range[1]-=range[0],range[0]=0),_.routine.is(src.fill))src.fill(value,range[0],range[1]+offset);else for(let t=range[0];t<range[1]+offset;t++)src[t]=value;return src},longFill_:function longFill_(src,ins,cinterval){void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(1<=arguments.length&&arguments.length<=3),_.assert(_.longIs(src)),_.assert(_.intervalIs(cinterval)),void 0===ins&&(ins=0),src=_.longGrow_(src,src,cinterval);let offset=Math.max(-cinterval[0],0);if(cinterval[0]<0&&(cinterval[1]-=cinterval[0],cinterval[0]=0),_.routine.is(src.fill))src.fill(ins,cinterval[0],cinterval[1]+1+offset);else for(let t=cinterval[0];t<cinterval[1]+1+offset;t++)src[t]=ins;return src},longDuplicate:longDuplicate,_longClone:function _longClone(src){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.longLike(src)||_.bufferAnyIs(src)),_.unrollIs(src)?_.unroll.make(src):_.arrayIs(src)?src.slice():_.argumentsArray.is(src)?Array.prototype.slice.call(src):_.bufferRawIs(src)?new U8x(new U8x(src)).buffer:_.bufferTypedIs(src)||_.bufferNodeIs(src)?new src.constructor(src):_.bufferViewIs(src)?new src.constructor(src.buffer,src.byteOffset,src.byteLength):void _.assert(0,"unknown kind of buffer",_.entity.strType(src))},_longShallow:_longShallow,longSlice:_longShallow,longRepresent:function longRepresent(src,begin,end){return _.assert(arguments.length<=3),_.assert(_.longLike(src),"Unknown type of (-src-) argument"),_.assert(_.routine.is(src.slice)||_.routine.is(src.subarray)),_.routine.is(src.subarray)?src.subarray(begin,end):src.slice(begin,end)},longJoin:function longJoin(){if(_.assert(arguments.length>=1,"Expects at least one argument"),1===arguments.length)return _._longClone(arguments[0]);let length=0;for(let a=0;a<arguments.length;a++){let argument=arguments[a];_.assert(void 0!==argument,"argument is not defined"),_.longLike(argument)||_.bufferNodeIs(argument)?length+=argument.length:_.bufferRawIs(argument)||_.bufferViewIs(argument)?length+=argument.byteLength:length+=1}let result,bufferDst;let offset=0;_.bufferRawIs(arguments[0])?(result=new BufferRaw(length),bufferDst=new U8x(result)):_.bufferViewIs(arguments[0])?(result=new BufferView(new BufferRaw(length)),bufferDst=new U8x(result.buffer)):(_.arrayIs(arguments[0])||_.bufferTypedIs(arguments[0])||_.argumentsArray.is(arguments[0])?result=_.long.makeUndefined(arguments[0],length):_.bufferNodeIs(arguments[0])?result=BufferNode.alloc(length):_.assert(0,"Unexpected data type"),bufferDst=result);for(let a=0;a<arguments.length;a++){let srcTyped;let argument=arguments[a];srcTyped=_.bufferRawIs(argument)?new U8x(argument):_.bufferViewIs(argument)?new U8x(argument.buffer):_.bufferTypedIs(argument)?argument:_.longLike(argument)||_.bufferNodeIs(argument)?argument:[argument];for(let i=0;i<srcTyped.length;i++)bufferDst[i+offset]=srcTyped[i];offset+=srcTyped.length}return result},longEmpty:function longEmpty(dstLong){if(_.arrayIs(dstLong))return dstLong.splice(0,dstLong.length),dstLong;_.assert(0,()=>`Cant change length of fixed-length container ${_.entity.strType(dstLong)}`)},longBut_:function longBut_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]),void 0===cinterval?(cinterval=[0,-1],ins=void 0):_.number.is(cinterval)&&(cinterval=[cinterval,cinterval]),_.assert(_.longIs(dst)||null===dst,"Expects {-dst-} of any long type or null"),_.assert(_.longIs(src),"Expects {-src-} of any long type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}"),_.assert(_.longLike(ins)||void 0===ins||null===ins,"Expects long {-ins-} for insertion");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;first<0&&(first=0),first>src.length&&(first=src.length),last>src.length-1&&(last=src.length-1),last+1<first&&(last=first-1);let delta=last-first+1;let delta2=delta-(ins?ins.length:0);let resultLength=src.length-delta2;let result=dst;if(null===dst)result=_.long.makeUndefined(src,resultLength);else if(dst===src){if(dst.length===resultLength&&0===delta)return dst;if(_.arrayLikeResizable(dst))return ins?dst.splice(first,delta,...ins):dst.splice(first,delta),dst;(dst.length!==resultLength||_.argumentsArray.is(dst))&&(result=_.long.makeUndefined(dst,resultLength))}else dst.length!==resultLength&&(dst=_.long.makeUndefined(dst,resultLength));for(let i=0;i<first;i++)result[i]=src[i];for(let i=last+1;i<src.length;i++)result[i-delta2]=src[i];if(ins)for(let i=0;i<ins.length;i++)result[first+i]=ins[i];return result},longOnly_:function longOnly_(dst,src,cinterval){_.assert(1<=arguments.length&&arguments.length<=3,"Expects not {-ins-} element"),arguments.length<3&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1]),void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval]),_.assert(_.longIs(dst)||null===dst,"Expects {-dst-} of any long type or null"),_.assert(_.longIs(src),"Expects {-src-} of any long type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;first<0&&(first=0),last>src.length-1&&(last=src.length-1),last+1<first&&(last=first-1);let first2=Math.max(first,0);let last2=Math.min(src.length-1,last);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.long.makeUndefined(src,resultLength);else if(dst===src){if(dst.length===resultLength)return dst;if(_.arrayLikeResizable(dst))return _.assert(Object.isExtensible(dst),"Array is not extensible, cannot change array"),0===resultLength?_.longEmpty(dst):(dst.splice(last2+1,dst.length-last+1),dst.splice(0,first2),dst);(dst.length!==resultLength||_.argumentsArray.is(dst))&&(result=_.long.makeUndefined(dst,resultLength))}else dst.length!==resultLength&&(_.arrayLikeResizable(result)?result.splice(resultLength):result=_.bufferMakeUndefined(dst,resultLength));for(let r=first2;r<last2+1;r++)result[r-first2]=src[r];return result},longGrow_:function longGrow_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]),void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(_.longIs(dst)||null===dst,"Expects {-dst-} of any long type or null"),_.assert(_.longIs(src),"Expects {-src-} of any long type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;first>0&&(first=0),last<src.length-1&&(last=src.length-1),first<0&&(last-=first,first-=first),last+1<first&&(last=first-1);let first2=Math.max(-cinterval[0],0);let last2=Math.min(src.length-1+first2,last+first2);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.long.makeUndefined(src,resultLength);else if(dst===src){if(dst.length===resultLength)return dst;if(_.arrayLikeResizable(dst))return _.assert(Object.isExtensible(dst),"Array is not extensible, cannot change array"),dst.splice(0,0,..._.dup(ins,first2)),dst.splice(last2+1,0,..._.dup(ins,resultLength<=last2?0:resultLength-last2-1)),dst;(dst.length!==resultLength||_.argumentsArray.is(dst))&&(result=_.long.makeUndefined(dst,resultLength))}else dst.length!==resultLength&&(_.arrayLikeResizable(result)?result.splice(resultLength):result=_.bufferMakeUndefined(dst,resultLength));for(let r=first2;r<last2+1;r++)result[r]=src[r-first2];if(void 0!==ins){for(let r=0;r<first2;r++)result[r]=ins;for(let r=last2+1;r<resultLength;r++)result[r]=ins}return result},longRelength_:function longRelength_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]),void 0===cinterval&&(cinterval=[0,src.length-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(_.longIs(dst)||null===dst,"Expects {-dst-} of any long type or null"),_.assert(_.longIs(src),"Expects {-src-} of any long type"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0!==cinterval[0]?cinterval[0]:0;let last=cinterval[1]=void 0!==cinterval[1]?cinterval[1]:src.length-1;last<first&&(last=first-1),cinterval[1]<0&&cinterval[0]<0&&(cinterval[0]-=cinterval[1]+1),first<0&&(last-=first,first-=first);let first2=Math.max(Math.abs(cinterval[0]),0);let last2=Math.min(src.length-1,last);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.long.makeUndefined(src,resultLength);else if(dst===src){if(dst.length===resultLength&&0===cinterval[0])return dst;if(_.arrayLikeResizable(dst))return _.assert(Object.isExtensible(dst),"dst is not extensible, cannot change dst"),cinterval[0]<0?(dst.splice(first,0,..._.dup(ins,first2)),dst.splice(last2+1,src.length-last2,..._.dup(ins,last-last2))):(dst.splice(0,first),dst.splice(last2+1-first2,src.length-last2,..._.dup(ins,last-last2))),dst;(dst.length!==resultLength||_.argumentsArray.is(dst))&&(result=_.long.makeUndefined(dst,resultLength))}else dst.length!==resultLength&&(_.arrayLikeResizable(result)?result.splice(resultLength):result=_.bufferMakeUndefined(dst,resultLength));if(0===resultLength)return result;if(cinterval[0]<0){for(let r=first2;r<last2+1+first2&&r<resultLength;r++)result[r]=src[r-first2];if(void 0!==ins){for(let r=0;r<first2;r++)result[r]=ins;for(let r=last2+1+first2;r<resultLength;r++)result[r]=ins}}else{for(let r=first2;r<last2+1;r++)result[r-first2]=src[r];if(void 0!==ins)for(let r=last2+1;r<last+1;r++)result[r-first2]=ins}return result},longHas:function longHas(){let array=arguments[0];let element=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];return _.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.argumentsArray.like(array)),evaluator1||evaluator2?_.longLeftIndex(array,element,evaluator1,evaluator2)>=0:_ArrayIncludes.call(array,element)},longHasAny:function longHasAny(){let src=arguments[0];let ins=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),_.assert(_.longLike(src),`Expects long, but got ${_.entity.strType(src)}`),_.assert(_.longLike(ins)||_.primitive.is(ins)),_.primitive.is(ins)&&(ins=[ins]);let i=0;let result;do{result=_.longLeftIndex(src,ins[i],0,evaluator1,evaluator2),i++}while(result<0&&i<ins.length);return-1!==result},longHasAll:function longHasAll(){let src=arguments[0];let ins=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];if(_.assert(1<=arguments.length&&arguments.length<=4),_.assert(_.longLike(src),`Expects long, but got ${_.entity.strType(src)}`),_.assert(_.longLike(ins)||_.primitive.is(ins)),_.primitive.is(ins)&&(ins=[ins]),0===ins.length)return true;let i=0;let result=0;for(;result>=0&&i<ins.length;)result=_.longLeftIndex(src,ins[i],0,evaluator1,evaluator2),i++;return-1!==result},longHasNone:function longHasNone(){let src=arguments[0];let ins=arguments[1];let evaluator1=arguments[2];let evaluator2=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),_.assert(_.longLike(src),`Expects long, but got ${_.entity.strType(src)}`),_.assert(_.longLike(ins)||_.primitive.is(ins)),_.primitive.is(ins)&&(ins=[ins]);let i=0;let result;do{result=_.longLeftIndex(src,ins[i],0,evaluator1,evaluator2),i++}while(result<0&&i<ins.length);return-1===result},longHasDepth:function longHasDepth(arr,level=1){if(_.assert(1===arguments.length||2===arguments.length),_.assert(_.intIs(level)),!_.longLike(arr))return false;if(level<=0)return true;for(let a=0;a<arr.length;a+=1)if(_.longLike(arr[a])&&_.longHasDepth(arr[a],level-1))return true;return false},longAll:function longAll(src){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.longLike(src));for(let s=0;s<src.length;s+=1)if(!src[s])return false;return true},longAny:function longAny(src){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.longLike(src));for(let s=0;s<src.length;s+=1)if(src[s])return true;return false},longNone:function longNone(src){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.longLike(src));for(let s=0;s<src.length;s+=1)if(src[s])return false;return true},longCountElement:function longCountElement(){let srcArray=arguments[0];let element=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];let result=0;_.assert(2<=arguments.length&&arguments.length<=4),_.assert(_.longLike(srcArray),"Expects long");let left=_.longLeftIndex(srcArray,element,onEvaluate1,onEvaluate2);for(;left>=0;)result+=1,left=_.longLeftIndex(srcArray,element,left+1,onEvaluate1,onEvaluate2);return result},longCountTotal:function longCountTotal(srcArray){let result=0;_.assert(1===arguments.length),_.assert(_.longLike(srcArray),"Expects long");for(let i=0;i<srcArray.length;i++)_.assert(_.bool.is(srcArray[i])||_.number.is(srcArray[i])||null===srcArray[i]),result+=srcArray[i];return result},longCountUnique:function longCountUnique(src,onEvaluate){let found=[];onEvaluate=onEvaluate||function(e){return e},_.assert(1===arguments.length||2===arguments.length),_.assert(_.longLike(src),"longCountUnique :","Expects ArrayLike"),_.assert(_.routine.is(onEvaluate)),_.assert(1===onEvaluate.length);for(let i1=0;i1<src.length;i1++){let element1=onEvaluate(src[i1]);if(-1===found.indexOf(element1))for(let i2=i1+1;i2<src.length;i2++){let element2=onEvaluate(src[i2]);-1===found.indexOf(element2)&&element1===element2&&found.push(element1)}}return found.length}};_.props.supplement(_,Extension)}()});module.exports,module.include,module.include}(),function Map_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Map.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Map_s_naked(){!function _l5_Map_s_(){"use strict";_global_;const _=_global_.wTools;function objectSatisfy(o){return 2===arguments.length&&(o={template:arguments[0],src:arguments[1]}),_.assert(1===arguments.length||2===arguments.length),_.assert(_.object.isBasic(o.template)||_.routine.is(o.template)),_.assert(void 0!==o.src),_.routine.options(objectSatisfy,o),function _objectSatisfy(){let template=arguments[0];let src=arguments[1];let root=arguments[2];let levels=arguments[3];let strict=arguments[4];if(!strict&&void 0===src)return true;if(template===src)return true;if(0===levels)return _.object.isBasic(template)&&_.object.isBasic(src)&&_.routine.is(template.identicalWith)&&src.identicalWith===template.identicalWith?template.identicalWith(src):template===src;if(levels<0)return false;if(_.routine.is(template))return template(src);if(!_.object.isBasic(src))return false;if(_.object.isBasic(template)){for(let t in template){let satisfy=false;if(!(satisfy=_objectSatisfy(template[t],src[t],root,levels-1,strict)))return false}return true}return false}(o.template,o.src,o.src,o.levels,o.strict)}function mapOwnKey(srcMap,key){return!_.primitive.is(srcMap)&&Object.hasOwnProperty.call(srcMap,key)}function mapHasKey(srcMap,key){return!_.primitive.is(srcMap)&&!!Reflect.has(srcMap,key)}function mapCloneAssigning(o){o.dstMap=o.dstMap||Object.create(null),_.assert(_.mapIs(o)),_.assert(1===arguments.length,"Expects {-srcMap-} as argument"),_.assert(!_.primitive.is(o.srcMap),"Expects {-srcMap-} as argument"),_.routine.options(mapCloneAssigning,o),o.onField||(o.onField=function onField(dstContainer,srcContainer,key){_.assert(_.strIs(key)),dstContainer[key]=srcContainer[key]});for(let k in o.srcMap)Object.hasOwnProperty.call(o.srcMap,k)&&o.onField(o.dstMap,o.srcMap,k,o.onField);return Object.setPrototypeOf(o.dstMap,Object.getPrototypeOf(o.srcMap)),o.dstMap}function _filterTrue(){return true}function _filterFalse(){return true}function _mapExtendRecursiveConditional(filters,dstMap,srcMap){_.assert(_.aux.is(srcMap));for(let s in srcMap)_.aux.is(srcMap[s])?true===filters.onUpFilter(dstMap,srcMap,s)&&(_.object.isBasic(dstMap[s])||(dstMap[s]=Object.create(null)),_._mapExtendRecursiveConditional(filters,dstMap[s],srcMap[s])):true===filters.onField(dstMap,srcMap,s)&&(dstMap[s]=srcMap[s]);return dstMap}function mapSetWithKeys(dstMap,key,val){if(null===dstMap&&(dstMap=Object.create(null)),_.assert(_.object.isBasic(dstMap)),_.assert(_.strIs(key)||_.countable.is(key)),_.assert(3===arguments.length,"Expects exactly three arguments"),_.countable.is(key))if(_.argumentsArray.like(key))for(let s=0;s<key.length;s++)set(dstMap,key[s],val);else for(let value of key)set(dstMap,value,val);else set(dstMap,key,val);return dstMap;function set(dstMap,key,val){void 0===val?delete dstMap[key]:dstMap[key]=val}}function mapInvert(src,dst){return _.assert(1===arguments.length||2===arguments.length),_._mapInvert({src:src,dst:dst})}function _mapInvert(o){let del;_.routine.options(_mapInvert,o),o.dst=o.dst||Object.create(null),_.assert(1===arguments.length,"Expects exactly one argument"),_.assert(!_.primitive.is(o.src)),_.assert(!_.primitive.is(o.dst)),"delete"===o.duplicate&&(del=Object.create(null));for(let k in o.src){let e=o.src[k];"delete"!==o.duplicate||void 0===o.dst[e]?"array"===o.duplicate||"array-with-value"===o.duplicate?(void 0===o.dst[e]&&(o.dst[e]="array-with-value"===o.duplicate?[e]:[]),o.dst[e].push(k)):(_.assert(void 0===o.dst[e],"Cant invert the map, it has several keys with value",o.src[k]),o.dst[e]=k):del[e]=k}return"delete"===o.duplicate&&_.mapDelete(o.dst,del),o.dst}function mapsFlatten(o){return _.countable.is(o)&&(o={src:o}),_.routine.options(mapsFlatten,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(false===o.delimeter||0===o.delimeter||_.strIs(o.delimeter)),_.assert(_.countable.is(o.src)||_.aux.is(o.src)),o.dst=o.dst||Object.create(null),function extend(src,prefix){
if(_.countable.is(src))if(_.argumentsArray.like(src))for(let s=0;s<src.length;s++)extend(src[s],prefix);else for(let value of src)extend(value,prefix);else if(_.aux.is(src))for(let k in src){let key=k;_.strIs(o.delimeter)&&(key=(prefix?prefix+o.delimeter:"")+k),_.aux.is(src[k])?extend(src[k],key):(_.assert(!!o.allowingCollision||void 0===o.dst[key]),o.dst[key]=src[k])}else _.assert(0,"Expects map or array of maps, but got "+_.entity.strType(src))}(o.src,""),o.dst}function mapToStr(o){_.strIs(o)&&(o={src:o}),_.routine.options(mapToStr,o),_.assert(1===arguments.length,"Expects single argument");let result="";for(let s in o.src)result+=s+o.keyValDelimeter+o.src[s]+o.entryDelimeter;return result.substr(0,result.length-o.entryDelimeter.length)}function fromHashMap(dstMap,srcMap){1===arguments.length&&(srcMap=arguments[0],dstMap=null),_.assert(1===arguments.length||2===arguments.length),_.assert(_.hashMap.is(srcMap)),_.assert(!_.primitiveIs(dstMap)||null===dstMap),null===dstMap&&(dstMap=Object.create(null));for(let pair of srcMap)dstMap[pair[0]]=pair[1];return dstMap}function _mapOnly(o){let self=this;if(o.dstMap=o.dstMap||Object.create(null),o.filter=o.filter||_.props.mapper.bypass(),_.assert(1===arguments.length,"Expects single options map {-o-}"),_.assert(_.props.mapperIs(o.filter),"Expects PropertyFilter {-o.filter-}"),_.assert(!_.primitive.is(o.dstMap),"Expects non primitive {-o.dstMap-}"),_.assert(!_.primitive.is(o.screenMaps),"Expects non primitive {-o.screenMaps-}"),_.assert(!_.primitive.is(o.srcMaps),"Expects non primitive {-srcMap-}"),_.map.assertHasOnly(o,_mapOnly.defaults),_.countable.is(o.srcMaps))for(let srcMap of o.srcMaps)_.assert(!_.primitive.is(srcMap),"Expects non primitive {-srcMap-}"),_.countable.is(o.screenMaps)?filterSrcMapWithVectorScreenMap(srcMap):filterSrcMap(srcMap);else _.countable.is(o.screenMaps)?filterSrcMapWithVectorScreenMap(o.srcMaps):filterSrcMap(o.srcMaps);return o.dstMap;function filterSrcMapWithVectorScreenMap(srcMap){for(let key in srcMap){let screenKey=screenKeySearch(key);screenKey&&o.filter.call(self,o.dstMap,srcMap,screenKey)}}function screenKeySearch(key){if(_.argumentsArray.like(o.screenMaps)){for(let m=0;m<o.screenMaps.length;m++)if(_.primitive.is(o.screenMaps[m])&&o.screenMaps[m]===key)return key}else for(let m of o.screenMaps)if(_.primitive.is(m)&&m===key)return key}function filterSrcMap(srcMap){for(let key in o.screenMaps)void 0!==o.screenMaps[key]&&key in srcMap&&o.filter.call(this,o.dstMap,srcMap,key)}}function _mapOnly_VerifyMapFields(o){return _.assert(1===arguments.length,"Expects single options map {-o-}"),_.assert(!_.primitive.is(o.dstMap),"Expects non primitive {-o.dstMap-}"),_.assert(!_.primitive.is(o.screenMaps),"Expects non primitive {-o.screenMaps-}"),_.assert(!_.primitive.is(o.srcMaps),"Expects non primitive {-o.srcMaps-}"),_.map.assertHasOnly(o,_mapOnly_VerifyMapFields.defaults),_.assert(!_.vector.is(o.dstMap),"Expects not a vector {-o.dstMap-}"),o}function _screenMapSearchingRoutineFunctor(screenMaps){let screenMapsIsArray=_.argumentsArray.like(screenMaps)?1:0;let element;if(screenMapsIsArray)element=screenMaps[0];else for(let el of screenMaps){element=el;break}return[function searchKeyInVectorScreenMapWithPrimitives(screenMaps,key){for(let m of screenMaps)if(m===key)return key},function searchKeyInArrayScreenMapWithPrimitives(screenMaps,key){for(let m=0;m<screenMaps.length;m++)if(screenMaps[m]===key)return key},function searchKeyInVectorScreenMapWithMaps(screenMaps,key){for(let m of screenMaps)if(key in m)return key},function searchKeyInArrayScreenMapWithMaps(screenMaps,key){for(let m=0;m<screenMaps.length;m++)if(key in screenMaps[m])return key}][screenMapsIsArray+(_.aux.is(element)?2:0)]}objectSatisfy.defaults={template:null,src:null,levels:1,strict:1},mapCloneAssigning.defaults={srcMap:null,dstMap:null,onField:null},_filterTrue.identity={propertyCondition:true,propertyTransformer:true},_filterFalse.identity={propertyCondition:true,propertyTransformer:true},mapInvert.defaults={src:null,dst:null,duplicate:"error"},_mapInvert.defaults={src:null,dst:null,duplicate:"error"},mapsFlatten.defaults={src:null,dst:null,allowingCollision:0,delimeter:"/"},mapToStr.defaults={src:null,keyValDelimeter:":",entryDelimeter:";"},_mapOnly.defaults={dstMap:null,srcMaps:null,screenMaps:null,filter:null},_mapOnly_VerifyMapFields.defaults={dstMap:null,srcMaps:null,screenMaps:null,filter:null};let Extension={mapFirstPair:function mapFirstPair(srcMap){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.object.like(srcMap));for(let s in srcMap)return[s,srcMap[s]];return[]},mapAllValsSet:function mapAllValsSet(dstMap,val){_.assert(2===arguments.length,"Expects exactly two arguments");for(let k in dstMap)dstMap[k]=val;return dstMap},mapValsWithKeys:function mapValsWithKeys(srcMap,keys){let result=Object.create(null);_.assert(_.argumentsArray.like(keys));for(let k=0;k<keys.length;k++){let key=keys[k];_.assert(_.strIs(key)||_.number.is(key)),result[key]=srcMap[key]}return result},mapValWithIndex:function mapValWithIndex(srcMap,index){if(_.assert(2===arguments.length,"Expects exactly two arguments"),index<0)return;let i=0;for(let s in srcMap){if(i===index)return srcMap[s];i++}},mapKeyWithIndex:function mapKeyWithIndex(srcMap,index){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.number.intIs(index)),_.assert(_.map.like(srcMap)),index<0)return;let i=0;for(let s in srcMap){if(i===index)return s;i++}},mapKeyWithValue:function mapKeyWithValue(srcMap,value){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.map.like(srcMap));for(let s in srcMap)if(srcMap[s]===value)return s},mapOnlyNulls:function mapOnlyNulls(srcMap){let result=Object.create(null);_.assert(1===arguments.length),_.assert(_.map.like(srcMap));for(let s in srcMap)null===srcMap[s]&&(result[s]=null);return result},mapButNulls:function mapButNulls(srcMap){let result=Object.create(null);_.assert(1===arguments.length);for(let s in srcMap)null!==srcMap[s]&&(result[s]=srcMap[s]);return result},objectSatisfy:objectSatisfy,mapOwn:mapOwnKey,mapOwnKey:mapOwnKey,mapHas:mapHasKey,mapHasKey:mapHasKey,mapOnlyOwnKey:function mapOnlyOwnKey(object,key){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(key)||_.symbolIs(key),`Expects either string or symbol, but got ${_.entity.strType(key)}`),_.strIs(key)?Object.hasOwnProperty.call(object,key):_.symbol.is(key)?Object.hasOwnProperty.call(object,key):void 0},mapHasVal:function mapHasVal(object,val){return-1!==_.props.vals(object).indexOf(val)},mapOnlyOwnVal:function mapOnlyOwnVal(object,val){return-1!==_.props.onlyOwnVals(object).indexOf(val)},mapHasAll:function mapHasAll(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(!(screen[s]in src))return false}else if(_.countable.is(screen)){for(let value of screen)if(!(value in src))return false}else if(_.aux.is(screen))for(let k in screen)if(!(k in src))return false;return true},mapHasAny:function mapHasAny(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(screen[s]in src)return true}else if(_.countable.is(screen)){for(let value of screen)if(value in src)return true}else if(_.aux.is(screen))for(let k in screen)if(k in src)return true;return false},mapHasNone:function mapHasNone(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(screen[s]in src)return false}else if(_.countable.is(screen)){for(let value of screen)if(value in src)return false}else if(_.aux.is(screen))for(let k in screen)if(k in src)return false;return true},mapOnlyOwnAll:function mapOnlyOwnAll(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(!Object.hasOwnProperty.call(src,screen[s]))return false}else if(_.countable.is(screen)){for(let value of screen)if(!Object.hasOwnProperty.call(src,value))return false}else if(_.aux.is(screen))for(let k in screen)if(!Object.hasOwnProperty.call(src,k))return false;return true},mapOnlyOwnAny:function mapOnlyOwnAny(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(Object.hasOwnProperty.call(src,screen[s]))return true}else if(_.countable.is(screen)){for(let value of screen)if(Object.hasOwnProperty.call(src,value))return true}else if(_.aux.is(screen))for(let k in screen)if(Object.hasOwnProperty.call(src,k))return true;return false},mapOnlyOwnNone:function mapOnlyOwnNone(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(Object.hasOwnProperty.call(src,screen[s]))return false}else if(_.countable.is(screen)){for(let value of screen)if(Object.hasOwnProperty.call(src,value))return false}else if(_.aux.is(screen))for(let k in screen)if(Object.hasOwnProperty.call(src,k))return false;return true},mapHasExactly:function mapHasExactly(srcMap,screenMaps){let result=true;return _.assert(2===arguments.length),(result=result&&_.mapHasOnly(srcMap,screenMaps))&&_.mapHasAll(srcMap,screenMaps)},mapOnlyOwnExactly:function mapOnlyOwnExactly(srcMap,screenMaps){let result=true;return _.assert(2===arguments.length),(result=result&&_.mapOnlyOwnOnly(srcMap,screenMaps))&&_.mapOnlyOwnAll(srcMap,screenMaps)},mapHasOnly:function mapHasOnly(srcMap,screenMaps){return _.assert(2===arguments.length),arguments.length,!(Object.keys(_.mapBut_(null,srcMap,screenMaps)).length>0)},mapOnlyOwnOnly:function mapOnlyOwnOnly(srcMap,screenMaps){return _.assert(2===arguments.length),arguments.length,!(Object.keys(_.mapOnlyOwnButOld(srcMap,screenMaps)).length>0)},mapHasNoUndefine:function mapHasNoUndefine(srcMap){_.assert(1===arguments.length),arguments.length;for(let s in srcMap)if(void 0===srcMap[s])return false;return true},mapCloneAssigning:mapCloneAssigning,mapsExtend:function mapsExtend(dstMap,srcMaps){if(null===dstMap&&(dstMap=Object.create(null)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(dstMap),"Expects non primitive as the first argument"),_.countable.is(srcMaps))for(let srcMap of srcMaps)dstMapExtend(srcMap);else dstMapExtend(srcMaps);return dstMap;function dstMapExtend(srcMap){if(_.assert(!_.primitive.is(srcMap),"Expects non primitive"),null===Object.getPrototypeOf(srcMap))Object.assign(dstMap,srcMap);else for(let k in srcMap)dstMap[k]=srcMap[k]}},mapExtendConditional:function mapExtendConditional(filter,dstMap){null===dstMap&&(dstMap=Object.create(null)),_.assert(!!filter),_.assert(_.props.mapperIs(filter)&&!filter.identity.functor),_.assert(arguments.length>=3,"Expects more arguments"),_.assert(_.routine.is(filter),"Expects filter"),_.assert(!_.primitive.is(dstMap),"Expects non primitive as argument");for(let a=2;a<arguments.length;a++){let srcMap=arguments[a];_.assert(!_.primitive.is(srcMap),()=>"Expects object-like entity to extend, but got : "+_.entity.strType(srcMap));for(let k in srcMap)filter.call(this,dstMap,srcMap,k)}return dstMap},mapsExtendConditional:function mapsExtendConditional(filter,dstMap,srcMaps){if(null===dstMap&&(dstMap=Object.create(null)),_.assert(!!filter),_.assert(_.props.mapperIs(filter)&&!filter.identity.functor),_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.routine.is(filter),"Expects filter"),_.assert(!_.primitive.is(dstMap),"Expects non primitive as argument"),_.arrayIs(srcMaps))for(let a=0;a<srcMaps.length;a++){let srcMap=srcMaps[a];_.assert(!_.primitive.is(srcMap),()=>"Expects object-like entity to extend, but got : "+_.entity.strType(srcMap));for(let k in srcMap)filter.call(this,dstMap,srcMap,k)}else for(let srcMap of srcMaps){_.assert(!_.primitive.is(srcMap),()=>"Expects object-like entity to extend, but got : "+_.entity.strType(srcMap));for(let k in srcMap)filter.call(this,dstMap,srcMap,k)}return dstMap},mapExtendHiding:function mapExtendHiding(dstMap){return _.mapExtendConditional(_.props.mapper.hiding(),...arguments)},mapsExtendHiding:function mapsExtendHiding(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.mapsExtendConditional(_.props.mapper.hiding(),dstMap,srcMaps)},mapExtendAppending:function mapExtendAppending(dstMap){return null===dstMap&&2===arguments.length?Object.assign(Object.create(null),srcMap):_.mapExtendConditional(_.props.mapper.appendingAnything(),...arguments)},mapsExtendAppending:function mapsExtendAppending(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),null===dstMap?_.props.extend(null,srcMaps[0]):_.mapsExtendConditional(_.props.mapper.appendingAnything(),dstMap,srcMaps)},mapExtendPrepending:function mapExtendPrepending(dstMap){return null===dstMap&&2===arguments.length?Object.assign(Object.create(null),srcMap):_.mapExtendConditional(_.props.mapper.prependingAnything(),...arguments)},mapsExtendPrepending:function mapsExtendPrepending(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),null===dstMap?_.props.extend(null,srcMaps[0]):_.mapsExtendConditional(_.props.mapper.prependingAnything(),dstMap,srcMaps)},mapExtendAppendingOnlyArrays:function mapExtendAppendingOnlyArrays(dstMap){return null===dstMap&&2===arguments.length?Object.assign(Object.create(null),srcMap):_.mapExtendConditional(_.props.mapper.appendingOnlyArrays(),...arguments)},mapsExtendAppendingOnlyArrays:function mapsExtendAppendingOnlyArrays(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),null===dstMap?_.props.extend(null,srcMaps[0]):_.mapsExtendConditional(_.props.mapper.appendingOnlyArrays(),dstMap,srcMaps)},mapExtendByDefined:function mapExtendByDefined(dstMap){return null===dstMap&&2===arguments.length?Object.assign(Object.create(null),srcMap):_.mapExtendConditional(_.props.mapper.srcDefined(),...arguments)},mapsExtendByDefined:function mapsExtendByDefined(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.mapsExtendConditional(_.props.mapper.srcDefined(),dstMap,srcMaps)},mapExtendNulls:function mapExtendNulls(dstMap){return _.mapExtendConditional(_.props.mapper.dstNotHasOrSrcNotNull(),...arguments)},mapsExtendNulls:function mapsExtendNulls(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.mapsExtendConditional(_.props.mapper.dstNotHasOrSrcNotNull(),dstMap,srcMaps)},mapExtendDstNotOwn:function mapExtendDstNotOwn(dstMap,srcMap){return null===dstMap&&2===arguments.length?_.props.extend(dstMap,srcMap):_.mapExtendConditional(_.props.mapper.dstNotOwn(),...arguments)},mapsExtendDstNotOwn:function mapsExtendDstNotOwn(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),null===dstMap?_.props.extend(null,srcMaps[0]):_.mapsExtendConditional(_.props.mapper.dstNotOwn(),dstMap,srcMaps)},mapExtendNotIdentical:function mapExtendNotIdentical(dstMap,srcMap){return null===dstMap&&2===arguments.length?_.props.extend(dstMap,srcMap):_.mapExtendConditional(_.props.mapper.notIdentical(),...arguments)},mapsExtendNotIdentical:function mapsExtendNotIdentical(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),null===dstMap?_.props.extend(null,srcMaps[0]):_.mapsExtendConditional(_.props.mapper.notIdentical(),dstMap,srcMaps)},mapSupplementNulls:function mapSupplementNulls(dstMap){return _.mapExtendConditional(_.props.mapper.dstNotHasOrHasNull(),...arguments)},mapSupplementNils:function mapSupplementNils(dstMap){return _.mapExtendConditional(_.props.mapper.dstNotHasOrHasNil(),...arguments)},mapSupplementAssigning:function mapSupplementAssigning(dstMap){return _.mapExtendConditional(_.props.mapper.dstNotHasAssigning(),...arguments)},mapSupplementAppending:function mapSupplementAppending(dstMap){return null===dstMap&&2===arguments.length?Object.assign(Object.create(null),srcMap):_.mapExtendConditional(_.props.mapper.dstNotHasAppending(),...arguments)},mapsSupplementAppending:function mapsSupplementAppending(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.mapsExtendConditional(_.props.mapper.dstNotHasAppending(),dstMap,srcMaps)},mapSupplementOwnAssigning:function mapSupplementOwnAssigning(dstMap){return _.mapExtendConditional(_.props.mapper.dstNotOwnAssigning(),...arguments)},mapComplement:function mapComplement(dstMap,srcMap){return dstNotOwnOrUndefinedAssigning.identity={propertyMapper:true,propertyTransformer:true},_.mapExtendConditional(dstNotOwnOrUndefinedAssigning,...arguments);function dstNotOwnOrUndefinedAssigning(dstContainer,srcContainer,key){Object.hasOwnProperty.call(dstContainer,key)&&void 0!==dstContainer[key]||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key)}},mapsComplement:function mapsComplement(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.mapsExtendConditional(_.props.mapper.dstNotOwnOrUndefinedAssigning(),dstMap,srcMaps)},mapComplementReplacingUndefines:function mapComplementReplacingUndefines(dstMap,srcMap){return _.assert(!!_.props.mapper),_.mapExtendConditional(_.props.mapper.dstNotOwnOrUndefinedAssigning(),...arguments)},mapsComplementReplacingUndefines:function mapsComplementReplacingUndefines(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.mapsExtendConditional(_.props.mapper.dstNotOwnOrUndefinedAssigning(),dstMap,srcMaps)},mapComplementPreservingUndefines:function mapComplementPreservingUndefines(dstMap){return _.mapExtendConditional(_.props.mapper.dstNotOwnAssigning(),...arguments)},mapsComplementPreservingUndefines:function mapsComplementPreservingUndefines(dstMap,srcMaps){return _.assert(2===arguments.length,"Expects exactly two arguments"),_.mapsExtendConditional(_.props.mapper.dstNotOwnAssigning(),dstMap,srcMaps)},mapExtendRecursiveConditional:function mapExtendRecursiveConditional(filters,dstMap,srcMap){_.assert(arguments.length>=3,"Expects at least three arguments");let srcMaps=_.longSlice(arguments,2);return _.mapsExtendRecursiveConditional(filters,dstMap,srcMaps)},mapsExtendRecursiveConditional:function mapsExtendRecursiveConditional(filters,dstMap,srcMaps){if(_.assert(3===arguments.length,"Expects exactly three arguments"),_.routine.is(filters)&&(filters={onUpFilter:filters,onField:filters}),void 0===filters.onUpFilter?filters.onUpFilter=filters.onField:true===filters.onUpFilter?filters.onUpFilter=_filterTrue:false===filters.onUpFilter&&(filters.onUpFilter=_filterFalse),true===filters.onField?filters.onField=_filterTrue:false===filters.onField&&(filters.onField=_filterFalse),_.assert(_.routine.is(filters.onUpFilter)),_.assert(_.routine.is(filters.onField)),_.assert(_.props.conditionIs(filters.onUpFilter)&&!filters.onUpFilter.identity.functor,"Expects PropertyFilter {-propertyCondition-}"),_.assert(_.props.transformerIs(filters.onField)),_.arrayIs(srcMaps))for(let a=0;a<srcMaps.length;a++)_mapExtendRecursiveConditional(filters,dstMap,srcMaps[a]);else for(let srcMap of srcMaps)_mapExtendRecursiveConditional(filters,dstMap,srcMap);return dstMap},_mapExtendRecursiveConditional:_mapExtendRecursiveConditional,mapExtendRecursive:function mapExtendRecursive(dstMap,srcMap){_.assert(arguments.length>=2,"Expects at least two arguments");for(let a=1;a<arguments.length;a++)srcMap=arguments[a],_._mapExtendRecursive(dstMap,srcMap);return dstMap},mapsExtendRecursive:function mapsExtendRecursive(dstMap,srcMaps){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.arrayIs(srcMaps))for(let a=1;a<srcMaps.length;a++){let srcMap=srcMaps[a];_._mapExtendRecursive(dstMap,srcMap)}else for(let srcMap of srcMaps)_._mapExtendRecursive(dstMap,srcMap);return dstMap},_mapExtendRecursive:function _mapExtendRecursive(dstMap,srcMap){null===dstMap&&(dstMap=Object.create(null)),_.assert(_.aux.is(srcMap));for(let s in srcMap)_.aux.is(srcMap[s])?(_.aux.is(dstMap[s])||(dstMap[s]=Object.create(null)),_._mapExtendRecursive(dstMap[s],srcMap[s])):dstMap[s]=srcMap[s]},mapExtendAppendingAnythingRecursive:function mapExtendAppendingAnythingRecursive(dstMap,srcMap){_.assert(arguments.length>=2,"Expects at least two arguments");let filters={onField:_.props.mapper.appendingAnything(),onUpFilter:true};return _.mapExtendRecursiveConditional(filters,...arguments)},mapsExtendAppendingAnythingRecursive:function mapsExtendAppendingAnythingRecursive(dstMap,srcMaps){_.assert(2===arguments.length,"Expects exactly two arguments");let filters={onField:_.props.mapper.appendingAnything(),onUpFilter:true};return _.mapsExtendRecursiveConditional.call(_,filters,dstMap,srcMaps)},mapExtendAppendingArraysRecursive:function mapExtendAppendingArraysRecursive(dstMap,srcMap){_.assert(arguments.length>=2,"Expects at least two arguments");let filters={onField:_.props.mapper.appendingOnlyArrays(),onUpFilter:true};return _.mapExtendRecursiveConditional(filters,...arguments)},mapsExtendAppendingArraysRecursive:function mapsExtendAppendingArraysRecursive(dstMap,srcMaps){_.assert(2===arguments.length,"Expects exactly two arguments");let filters={onField:_.props.mapper.appendingOnlyArrays(),onUpFilter:true};return _.mapsExtendRecursiveConditional.call(_,filters,dstMap,srcMaps)},mapExtendAppendingOnceRecursive:function mapExtendAppendingOnceRecursive(dstMap,srcMap){_.assert(arguments.length>=2,"Expects at least two arguments");let filters={onField:_.props.mapper.appendingOnce(),onUpFilter:true};return _.mapExtendRecursiveConditional(filters,...arguments)},mapsExtendAppendingOnceRecursive:function mapsExtendAppendingOnceRecursive(dstMap,srcMaps){_.assert(2===arguments.length,"Expects exactly two arguments");let filters={onField:_.props.mapper.appendingOnce(),onUpFilter:true};return _.mapsExtendRecursiveConditional.call(_,filters,dstMap,srcMaps)},mapSupplementRecursive:function mapSupplementRecursive(dstMap,srcMap){_.assert(arguments.length>=2,"Expects at least two arguments");let filters={onField:_.props.mapper.dstNotHas(),onUpFilter:true};return _.mapExtendRecursiveConditional(filters,...arguments)},mapSupplementByMapsRecursive:function mapSupplementByMapsRecursive(dstMap,srcMaps){_.assert(2===arguments.length,"Expects exactly two arguments");let filters={onField:_.props.mapper.dstNotHas(),onUpFilter:true};return _.mapsExtendRecursiveConditional.call(_,filters,dstMap,srcMaps)},mapSupplementOwnRecursive:function mapSupplementOwnRecursive(dstMap,srcMap){_.assert(arguments.length>=2,"Expects at least two arguments");let filters={onField:_.props.mapper.dstOwn(),onUpFilter:true};return _.mapExtendRecursiveConditional(filters,...arguments)},mapsSupplementOwnRecursive:function mapsSupplementOwnRecursive(dstMap,srcMaps){_.assert(2===arguments.length,"Expects exactly two arguments");let filters={onField:_.props.mapper.dstOwn(),onUpFilter:true};return _.mapsExtendRecursiveConditional.call(_,filters,dstMap,srcMaps)},mapSupplementRemovingRecursive:function mapSupplementRemovingRecursive(dstMap,srcMap){_.assert(arguments.length>=2,"Expects at least two arguments");let filters={onField:_.props.mapper.removing(),onUpFilter:true};return _.mapExtendRecursiveConditional(filters,...arguments)},mapSupplementByMapsRemovingRecursive:function mapSupplementByMapsRemovingRecursive(dstMap,srcMaps){_.assert(2===arguments.length,"Expects exactly two arguments");let filters={onField:_.props.mapper.removing(),onUpFilter:true};return _.mapsExtendRecursiveConditional.call(_,filters,dstMap,srcMaps)},mapOnlyPrimitives:function mapOnlyPrimitives(srcMap){return _.assert(1===arguments.length,"Expects single argument"),_.assert(!_.primitive.is(srcMap)),_.mapExtendConditional(_.props.mapper.primitive(),Object.create(null),srcMap)},mapSetWithKeys:mapSetWithKeys,mapSet:mapSetWithKeys,mapSetWithKeyStrictly:function mapSetWithKeyStrictly(dstMap,key,val){if(null===dstMap&&(dstMap=Object.create(null)),_.assert(_.object.isBasic(dstMap)),_.assert(_.strIs(key)||_.countable.is(key)),_.assert(3===arguments.length,"Expects exactly three arguments"),_.countable.is(key))if(_.argumentsArray.like(key))for(let s=0;s<key.length;s++)set(dstMap,key[s],val);else for(let value of key)set(dstMap,value,val);else set(dstMap,key,val);return dstMap;function set(dstMap,key,val){void 0===val?delete dstMap[key]:(_.assert(void 0===dstMap[key]||dstMap[key]===val),dstMap[key]=val)}},mapInvert:mapInvert,_mapInvert:_mapInvert,mapInvertDroppingDuplicates:function mapInvertDroppingDuplicates(src,dst){let drop;dst=dst||Object.create(null),_.assert(1===arguments.length||2===arguments.length),_.assert(!_.primitive.is(src));for(let s in src)void 0!==dst[src[s]]&&((drop=drop||Object.create(null))[src[s]]=true),dst[src[s]]=s;if(drop)for(let d in drop)delete dst[d];return dst},mapsFlatten:mapsFlatten,mapToStr:mapToStr,mapFromHashMap:fromHashMap,mapButConditionalOld:function mapButConditionalOld(propertyCondition,srcMap,butMap){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(!_.primitive.is(butMap),"Expects non primitive {-butMap-}"),_.assert(!_.primitive.is(srcMap),"Expects non primitive {-srcMap-}"),_.assert(propertyCondition&&3===propertyCondition.length,"Expects PropertyFilter {-propertyCondition-}"),_.assert(_.props.conditionIs(propertyCondition)&&!propertyCondition.identity.functor,"Expects PropertyFilter {-propertyCondition-}");let result=Object.create(null);if(_.countable.is(butMap)){let filterRoutines=[function filterWithVectorButMap(s){for(let but of butMap)if(!propertyCondition(but,srcMap,s))return s},function filterWithArrayLikeButMap(s){for(let m=0;m<butMap.length;m++)if(!propertyCondition(butMap[m],srcMap,s))return s}];let arrayLikeIs=_.argumentsArray.like(butMap)?1:0;for(let s in srcMap)void 0===filterRoutines[arrayLikeIs](s)&&(result[s]=srcMap[s])}else for(let s in srcMap)propertyCondition(butMap,srcMap,s)&&(result[s]=srcMap[s]);return result},mapButConditional_:function mapButConditional_(){_.assert(4===arguments.length,"Not clear how to construct {-dstMap-}. Please, specify exactly 4 arguments");let propertyCondition=arguments[0];let dstMap=arguments[1];let srcMap=arguments[2];let butMap=arguments[3];null===dstMap&&(dstMap=arguments[1]=Object.create(null));let o={filter:propertyCondition,dstMap:dstMap,srcMap:srcMap,butMap:butMap};o=_._mapBut_VerifyMapFields(o),_.assert(_.routineIs(o.filter)&&3===o.filter.length,"Expects filter {-o.filter-}"),_.assert(_.props.conditionIs(o.filter),"Expects PropertyFilter {-o.filter-}");let filterRoutine=_._mapBut_FilterFunctor(o);for(let key in o.srcMap)filterRoutine(key);return o.dstMap},mapBut_:function mapBut_(dstMap,srcMap,butMap){_.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),null===dstMap&&(dstMap=arguments[0]=arguments[0]||Object.create(null)),_.assert(3===arguments.length,"Not clear how to construct {-dstMap-}. Please, specify exactly 3 arguments");let o={dstMap:dstMap,srcMap:srcMap,butMap:butMap};let mapsAreIdentical=(o=_._mapBut_VerifyMapFields(o)).dstMap===o.srcMap?1:0;let butMapsIsCountable=_.countable.is(o.butMap)?2:0;let filterRoutine=[function filterNotIdenticalWithAuxScreenMap(key){key in o.butMap||(o.dstMap[key]=o.srcMap[key])},function filterIdenticalWithAuxScreenMap(key){key in o.butMap&&delete o.dstMap[key]},function filterNotIdenticalWithVectorScreenMap(key){void 0===searchingRoutine(o.butMap,key)&&(o.dstMap[key]=o.srcMap[key])},function filterIdenticalWithVectorScreenMap(key){void 0!==searchingRoutine(o.butMap,key)&&delete o.dstMap[key]}][mapsAreIdentical+butMapsIsCountable];let searchingRoutine;butMapsIsCountable&&(searchingRoutine=_screenMapSearchingRoutineFunctor(o.butMap));for(let key in o.srcMap)filterRoutine(key);return o.dstMap},mapButOld:function mapButOld(srcMap,butMap){let result=Object.create(null);if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(srcMap),"Expects map {-srcMap-}"),_.countable.is(butMap)){let filterRoutines=[function filterWithVectorButMap(s){for(let but of butMap)if(_.primitive.is(but)){if(s===but)return s}else if(_.aux.is(but)){if(s in but)return s}else _.assert(0,"Unexpected type of element")},function filterWithArrayLikeButMap(s){for(let m=0;m<butMap.length;m++)if(_.primitive.is(butMap[m])){if(s===butMap[m])return s}else if(_.aux.is(butMap[m])){if(s in butMap[m])return s}else _.assert(0,"Unexpected type of element")}];let arrayLikeIs=_.argumentsArray.like(butMap)?1:0;for(let s in srcMap)void 0===filterRoutines[arrayLikeIs](s)&&(result[s]=srcMap[s])}else if(_.primitive.is(butMap))_.assert(0,"Expects object-like or long-like {-butMap-}");else for(let s in srcMap)s in butMap||(result[s]=srcMap[s]);return result},_mapBut_VerifyMapFields:function _mapBut_VerifyMapFields(o){return _.assert(1===arguments.length,"Expects single options map {-o-}"),_.assert(!_.primitive.is(o.dstMap),"Expects non primitive {-o.dstMap-}"),_.assert(!_.primitive.is(o.srcMap),"Expects non primitive {-o.srcMap-}"),_.assert(!_.primitive.is(o.butMap),"Expects object like {-o.butMap-}"),_.assert(!_.vector.is(o.dstMap),"Expects aux like {-o.dstMap-}"),o},_mapBut_FilterFunctor:function _mapBut_FilterFunctor(o){let mapsAreIdentical=o.dstMap===o.srcMap?1:0;let butMapIsCountable=_.countable.is(o.butMap)?2:0;return _.argumentsArray.like(o.butMap)&&(butMapIsCountable+=2),[function filterNotIdentical(key){o.filter(o.butMap,o.srcMap,key)&&(o.dstMap[key]=o.srcMap[key])},function filterIdentical(key){o.filter(o.butMap,o.srcMap,key)||delete o.dstMap[key]},function filterNotIdenticalWithVectorButMap(key){for(let but of o.butMap)if((_.primitive.is(but)||_.aux.is(but))&&!o.filter(but,o.srcMap,key))return;o.dstMap[key]=o.srcMap[key]},function filterIdenticalWithVectorButMap(key){for(let but of o.butMap)_.primitive.is(but)&&(o.filter(but,o.srcMap,key)||delete o.dstMap[key])},function filterNotIdenticalWithArrayButMap(key){for(let m=0;m<o.butMap.length;m++)if((_.primitive.is(o.butMap[m])||_.aux.is(o.butMap[m]))&&!o.filter(o.butMap[m],o.srcMap,key))return;o.dstMap[key]=o.srcMap[key]},function filterIdenticalWithArrayButMap(key){for(let m=0;m<o.butMap.length;m++)_.primitive.is(o.butMap[m])&&(o.filter(o.butMap[m],o.srcMap,key)||delete o.dstMap[key])}][mapsAreIdentical+butMapIsCountable]},mapDelete:function mapDelete(dstMap,ins){return _.assert(1===arguments.length||2===arguments.length),_.assert(!_.primitive.is(dstMap)),void 0===ins?_.mapEmpty(dstMap):_.mapBut_(dstMap,dstMap,ins)},mapEmpty:function mapEmpty(dstMap){_.assert(1===arguments.length),_.assert(!_.primitive.is(dstMap));for(let i in dstMap)delete dstMap[i];return dstMap},mapButIgnoringUndefines_:function mapButIgnoringUndefines_(dstMap,srcMap,butMap){return _.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),_.mapButConditional_(_.props.condition.dstUndefinedSrcNotUndefined(),...arguments)},mapOnlyOwnButOld:function mapOnlyOwnButOld(srcMap,butMap){return Object.create(null),_.assert(2===arguments.length,"Expects exactly two arguments"),_.mapButConditionalOld(_.props.condition.dstNotHasSrcOwn(),srcMap,butMap)},mapOnlyOwnBut_:function mapOnlyOwnBut_(dstMap,srcMap,butMap){return _.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),_.mapButConditional_(_.props.condition.dstNotHasSrcOwn(),...arguments)},mapOnlyOld:function mapOnlyOld(srcMaps,screenMaps){return 1===arguments.length?_.mapsExtend(null,srcMaps):(_.assert(2===arguments.length,"Expects single or two arguments"),_._mapOnly({srcMaps:srcMaps,screenMaps:screenMaps,dstMap:Object.create(null)}))},mapOnly_:function mapOnly_(dstMap,srcMaps,screenMaps){if(1===arguments.length)return _.mapsExtend(null,dstMap);_.assert(3===arguments.length,"Not clear how to construct {-dstMap-}. Please, specify exactly 3 arguments");let o=_._mapOnly_VerifyMapFields({srcMaps:srcMaps,screenMaps:screenMaps,dstMap:dstMap||Object.create(null)});let mapsAreIdentical=o.dstMap===o.srcMaps?1:0;let screenMapsIsCountable=_.countable.is(o.screenMaps)?2:0;let filterRoutine=[function filterNotIdenticalWithAuxScreenMap(srcMap){for(let key in o.screenMaps)void 0!==o.screenMaps[key]&&key in srcMap&&(o.dstMap[key]=srcMap[key])},function filterIdenticalWithAuxScreenMap(srcMap){for(let key in srcMap)key in o.screenMaps||delete srcMap[key]},function filterNotIdenticalWithVectorScreenMap(srcMap){for(let key in srcMap){let screenKey=searchingRoutine(o.screenMaps,key);void 0!==screenKey&&(o.dstMap[screenKey]=srcMap[screenKey])}},function filterIdenticalWithVectorScreenMap(srcMap){for(let key in srcMap){void 0===searchingRoutine(o.screenMaps,key)&&delete srcMap[key]}}][mapsAreIdentical+screenMapsIsCountable];let searchingRoutine;if(screenMapsIsCountable&&(searchingRoutine=_screenMapSearchingRoutineFunctor(o.screenMaps)),_.countable.is(o.srcMaps))for(let srcMap of o.srcMaps)_.assert(!_.primitive.is(srcMap),"Expects no primitive in {-o.srcMaps-}"),filterRoutine(srcMap);else filterRoutine(o.srcMaps);return o.dstMap},mapOnlyOwn_:function mapOnlyOwn_(dstMap,srcMaps,screenMaps){if(1===arguments.length)return _.mapsExtendConditional(_.props.mapper.srcOwn(),null,_.array.as(dstMap));_.assert(3===arguments.length,"Not clear how to construct {-dstMap-}. Please, specify exactly 3 arguments");let o=_._mapOnly_VerifyMapFields({filter:_.props.mapper.srcOwn(),srcMaps:srcMaps,screenMaps:screenMaps,dstMap:dstMap||Object.create(null)});_.assert(_.props.mapperIs(o.filter),"Expects PropertyFilter {-o.filter-}");let filterRoutine=_._mapOnly_FilterFunctor(o);if(_.countable.is(o.srcMaps))for(let srcMap of o.srcMaps)_.assert(!_.primitive.is(srcMap),"Expects no primitive in {-o.srcMaps-}"),filterRoutine(srcMap);else filterRoutine(o.srcMaps);return o.dstMap},mapOnlyComplementing_:function mapOnlyComplementing_(dstMap,srcMaps,screenMaps){_.assert(3===arguments.length,"Not clear how to construct {-dstMap-}. Please, specify exactly 3 arguments");let o=_._mapOnly_VerifyMapFields({filter:_.props.mapper.dstNotOwnOrUndefinedAssigning(),srcMaps:srcMaps,screenMaps:screenMaps,dstMap:dstMap||Object.create(null)});_.assert(_.props.mapperIs(o.filter),"Expects PropertyFilter {-o.filter-}");let filterRoutine=_._mapOnly_FilterFunctor(o);if(_.countable.is(o.srcMaps))for(let srcMap of o.srcMaps)_.assert(!_.primitive.is(srcMap),"Expects no primitive in {-o.srcMaps-}"),filterRoutine(srcMap);else filterRoutine(o.srcMaps);return o.dstMap},_mapOnly:_mapOnly,_mapOnly_VerifyMapFields:_mapOnly_VerifyMapFields,_mapOnly_FilterFunctor:function _mapOnly_FilterFunctor(o){let self=this;let mapsAreIdentical=o.dstMap===o.srcMaps?1:0;let screenMapsIsVector=_.vector.is(o.screenMaps)?2:0;let filterRoutines=[function filterNotIdenticalWithAuxScreenMap(srcMap){for(let key in o.screenMaps)void 0!==o.screenMaps[key]&&key in srcMap&&o.filter.call(self,o.dstMap,srcMap,key)},function filterIdenticalWithAuxScreenMap(srcMap){for(let key in srcMap)key in o.screenMaps?o.filter.call(self,o.dstMap,srcMap,key):delete srcMap[key]},function filterNotIdenticalWithVectorScreenMap(srcMap){for(let key in srcMap){void 0!==searchingRoutine(o.screenMaps,key)&&o.filter.call(self,o.dstMap,srcMap,key)}},function filterIdenticalWithVectorScreenMap(srcMap){for(let key in srcMap){void 0===searchingRoutine(o.screenMaps,key)?delete srcMap[key]:o.filter.call(self,o.dstMap,srcMap,key)}}];let key=mapsAreIdentical+screenMapsIsVector;let searchingRoutine;return screenMapsIsVector&&(searchingRoutine=_screenMapSearchingRoutineFunctor(o.screenMaps)),filterRoutines[key]},_screenMapSearchingRoutineFunctor:_screenMapSearchingRoutineFunctor,mapDiff:function mapDiff(dst,src1,src2){return 2===arguments.length&&(dst=null,src1=arguments[0],src2=arguments[1]),_.assert(2===arguments.length||3===arguments.length),_.assert(null===dst||_.aux.is(dst)),(dst=dst||Object.create(null)).src1=_.mapBut_(dst.src1||null,src1,src2),dst.src2=_.mapBut_(dst.src2||null,src2,src1),dst.src2=_.props.extend(null,dst.src1,dst.src2),dst.identical=0===Object.keys(dst.src1).length&&0===Object.keys(dst.src2).length,dst}};let ExtensionMap={fromHashMap:fromHashMap,sureHasExactly:function sureHasExactly(srcMap,screenMaps,msg){let result=true;return result=(result=result&&_.map.sureHasOnly.apply(this,arguments))&&_.map.sureHasAll.apply(this,arguments),true},sureOwnExactly:function sureOwnExactly(srcMap,screenMaps,msg){let result=true;return result=(result=result&&_.map.sureOwnOnly.apply(this,arguments))&&_.map.sureOwnAll.apply(this,arguments),true},sureHasOnly:function sureHasOnly(srcMap,screenMaps,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapButOld(srcMap,screenMaps));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have no fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},sureOwnOnly:function sureOwnOnly(srcMap,screenMaps,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapOnlyOwnButOld(srcMap,screenMaps));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should own no fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:3})}debugger;throw err}return true},sureHasAll:function sureHasAll(srcMap,all,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapBut_(null,all,srcMap));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},sureOwnAll:function sureOwnAll(srcMap,all,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapOnlyOwnBut_(null,all,srcMap));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should own fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},sureHasNone:function sureHasNone(srcMap,screenMaps,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapOnly_(null,srcMap,screenMaps));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have no fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},sureOwnNone:function sureOwnNone(srcMap,screenMaps,msg){_.assert(2===arguments.length||3===arguments.length||4===arguments.length,"Expects two, three or four arguments");let but=Object.keys(_.mapOnlyOwn_(null,srcMap,screenMaps));if(but.length>0){let err;if(2===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should own no fields :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=2;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},sureHasNoUndefine:function sureHasNoUndefine(srcMap,msg){_.assert(1===arguments.length||2===arguments.length||3===arguments.length,"Expects one, two or three arguments");let but=[];for(let s in srcMap)void 0===srcMap[s]&&but.push(s);if(but.length>0){let err;if(1===arguments.length)err=_._err({args:[`${_.entity.strType(srcMap)} should have no undefines, but has :`,_.strQuote(but).join(", ")],level:2});else{let arr=[];for(let i=1;i<arguments.length;i++)_.routine.is(arguments[i])&&(arguments[i]=arguments[i]()),arr.push(arguments[i]);err=_._err({args:[arr.join(" "),_.strQuote(but).join(", ")],level:2})}debugger;throw err}return true},assertHasExactly:function assertHasExactly(srcMap,screenMaps,msg){return true},assertOwnExactly:function assertOwnExactly(srcMap,screenMaps,msg){return true},assertHasOnly:function assertHasOnly(srcMap,screenMaps,msg){return true},assertOwnOnly:function assertOwnOnly(srcMap,screenMaps,msg){return true},assertHasNone:function assertHasNone(srcMap,screenMaps,msg){return true},assertOwnNone:function assertOwnNone(srcMap,screenMaps,msg){return true},assertHasAll:function assertHasAll(srcMap,all,msg){return true},assertOwnAll:function assertOwnAll(srcMap,all,msg){return true},assertHasNoUndefine:function assertHasNoUndefine(srcMap,msg){return true}};_.props.supplement(_,Extension),_.props.supplement(_.map,ExtensionMap),_.assert(_.aux.is(_.map))}()});module.exports,module.include,module.include}(),function Number_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Number.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Number_s_naked(){!function _l5_Numbers_s_(){"use strict";_global_;const _=_global_.wTools;function clamp(src,low,high){return _.assert(2===arguments.length||3===arguments.length,"Expects two or three arguments"),_.assert(_.number.is(src)),2===arguments.length&&(_.assert(2===arguments[1].length),low=arguments[1][0],high=arguments[1][1]),src>high?high:src<low?low:src}function mix(ins1,ins2,progress){return _.assert(3===arguments.length,"Expects exactly three arguments"),ins1*(1-progress)+ins2*progress}let ToolsExtension={numberClamp:clamp,numberMix:mix};Object.assign(_,ToolsExtension);let NumberExtension={clamp:clamp,mix:mix};Object.assign(_.number,NumberExtension)}()});module.exports,module.include,module.include}(),function Object_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Object.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Object_s_naked(){!function _l5_Object_s_(){"use strict";_global_;const _=_global_.wTools;_.object=_.object||Object.create(null),Object.assign(_,{}),Object.assign(_.object,{})}()});module.exports,module.include,module.include}(),function Pair_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Pair.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Pair_s_naked(){!function _l5_Pair_s_(){"use strict";_global_;const _=_global_.wTools;_.pair=_.pair||Object.create(null),_.props.supplement(_.pair,{})}()});module.exports,module.include,module.include}(),function Path_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Path.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Path_s_naked(){!function _l5_Path_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.path;let Extension={escape:function escape(filePath){let self=this;let splits=self.split(filePath);return(splits=splits.map(split=>{{let i=0;for(;'"'===split[i];)i+=1;i>0&&(split=split.substring(0,i)+split)}{let i=split.length-1;for(;'"'===split[i];)i-=1;i<split.length-1&&(split+=split.substring(i+1,split.length))}return _.strLeft_(split,self.escapeTokens).entry?`"${split}"`:split})).join(self.upToken)}};_.props.supplement(Self,Extension)}()});module.exports,module.include,module.include}(),function Permutation_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Permutation.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Permutation_s_naked(){!function _l5_Permutation_s_(){"use strict";_global_;const _=_global_.wTools;function eachSample(o){2===arguments.length?o={sets:arguments[0],onEach:arguments[1]}:_.argumentsArray.like(arguments[0])&&(o={sets:arguments[0]}),_.routine.options(eachSample,o),_.assert(1===arguments.length||2===arguments.length),_.assert(_.routine.is(o.onEach)||null===o.onEach),_.assert(_.longLike(o.sets)||_.aux.is(o.sets)),_.assert(void 0===o.base&&void 0===o.add),null===o.result&&(o.result=null===o.onEach),o.sample||(o.sample=_.entity.makeUndefined(o.sets));let keys=_.longLike(o.sets)?_.longFromRange([0,o.sets.length]):_.props.keys(o.sets);if(_.bool.likeTrue(o.result)&&!_.arrayIs(o.result)&&(o.result=[]),0===keys.length)return o.result?o.result:0;let len=[];let indexnd=[];let index=0;let l=_.entity.lengthOf(o.sets);let sindex=0;let breaking=0;if(o.sets=_.filter_(null,o.sets,function(set,k){return _.assert(_.longIs(set)||_.primitive.is(set)),0===breaking&&(_.primitive.is(set)&&(set=[set]),0===set.length&&(breaking=1),len[sindex]=_.entity.lengthOf(o.sets[k]),indexnd[sindex]=0,sindex+=1),set}),1===breaking)return o.result?o.result:0;if(!function firstSample(){let sindex=0;return _.each(o.sets,function(e,k){if(o.sample[k]=o.sets[k][indexnd[sindex]],sindex+=1,!len[k])return 0}),o.result&&(_.aux.is(o.sample)?o.result.push(_.props.extend(null,o.sample)):o.result.push(_.longSlice(o.sample))),1}())return o.result;let iterate=o.leftToRight?function iterateLeftToRight(){for(let i=0;i<l;i++)if(nextSample(i))return 1;return 0}:function iterateRightToLeft(){for(let i=l-1;i>=0;i--)if(nextSample(i))return 1;return 0};do{o.onEach&&o.onEach.call(o.sample,o.sample,index)}while(iterate());return o.result?o.result:index;function nextSample(i){let k=keys[i];return indexnd[i]++,indexnd[i]>=len[i]?(indexnd[i]=0,o.sample[k]=o.sets[k][indexnd[i]],0):(o.sample[k]=o.sets[k][indexnd[i]],index+=1,o.result&&(_.aux.is(o.sample)?o.result.push(_.props.extend(null,o.sample)):o.result.push(_.longSlice(o.sample))),1)}}function eachPermutation(o){if(_.routine.options(eachPermutation,arguments),null===o.result&&(o.result=null===o.onEach),_.number.is(o.sets)){o.sets<0&&(o.sets=0);let sets=Array(o.sets);for(let i=o.sets-1;i>=0;i--)sets[i]=i;o.sets=sets}_.bool.likeTrue(o.result)&&!_.arrayIs(o.result)&&(o.result=[]);const add=_.argumentsArray.like(o.result)||_.routineIs(o.result.push)?function append1(){dst.push(sets.slice())}:function append0(){};const dst=o.result?o.result:void 0;const sets=o.sets;const length=o.sets.length;const last=length-1;const plast=length-2;const slast=length-3;const iterateAll=null===o.onEach?function iterateWithoutCallback(){for(;iteration<iterations;)add(),left=plast,nextCounter(),reverse(),iteration+=1}:function iterateWithCallback(){for(_.assert(_.routineIs(o.onEach),"Expects routine {-o.onEach-}");iteration<iterations;)o.onEach(sets,iteration,left,last,swaps),add(),left=plast,nextCounter(),reverse(),iteration+=1};let left=last;let swaps=0;let iteration=0;if(length<=1)return void(1===length&&(o.onEach&&o.onEach(sets,iteration,left,last,swaps),add()));let iterations=1;for(let i=plast-1;i>=0;i--)iterations*=last-i;iterations*=length;let counter=[];for(let i=plast;i>=0;i--)counter[i]=last-i;return _.assert(_.longIs(sets)),_.assert(length>=0),_.assert(length<=30),iterateAll(),dst;function swap(left,right){_.assert(void 0!==sets[right]),_.assert(void 0!==sets[left]);let ex=sets[right];sets[right]=sets[left],sets[left]=ex}function reverse(){if(left>=slast)swaps=1,swap(left,last),counter[left]-=1;else{(swaps=last-left)%2==1&&(swaps-=1);for(let i=swaps/=2;i>=0;i--)swap(left+i,last-i);counter[left]-=1,swaps+=1}}function nextCounter(){for(;0===counter[left]&&0!==left;)left-=1;for(let i=left+1;i<counter.length;i++)counter[i]=last-i}}function factorial(src){return _.assert(src<1e4),_.assert(_.intIs(src)),_.assert(src>=0),_.assert(1===arguments.length,"Expects single argument"),0===src?1:_.permutation._factorial(src)}_.permutation=_.permutation||Object.create(null),eachSample.defaults={leftToRight:1,onEach:null,sets:null,sample:null,result:null},eachPermutation.defaults={onEach:null,sets:null,result:null};let PermutationExtension={eachSample:eachSample,eachPermutation:eachPermutation,swapsCount:function swapsCount(permutation){let counter=0;let forward=permutation.slice();let backward=[];for(let i=forward.length-1;i>=0;i--)backward[forward[i]]=i;for(let i=backward.length-1;i>=0;i--)if(backward[i]!==i){let forward1=forward[i];let backward1=backward[i];forward[backward1]=forward1,backward[forward1]=backward1,counter+=1}return counter},_factorial:function _factorial(src){let result=1;for(;src>1;)result*=src,src-=1;return result},factorial:factorial};Object.assign(_.permutation,PermutationExtension);let ToolsExtension={factorial:factorial};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Primitive_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Primitive.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Primitive_s_naked(){!function _l5_Primitive_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{}),Object.assign(_.primitive,{})}()});module.exports,module.include,module.include}(),function Printer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Printer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Printer_s_naked(){!function _l5_Printer_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.printer=_.printer||Object.create(null);Object.assign(Self,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Process_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Process.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Process_s_naked(){!function _l5_Process_s_(){"use strict";_global_;const _=_global_.wTools;_.process=_.process||Object.create(null),_.props.supplement(_.process,{})}()});module.exports,module.include,module.include}(),function PropertyTransformer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/PropertyTransformer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function PropertyTransformer_s_naked(){!function _l5_PropertyTransformer_s_(){"use strict";_global_;const _=_global_.wTools;function mapperFrom(routine){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.routine.is(routine),"Expects routine but got",_.entity.strType(routine)),routine.identity?routine.identity.propertyMapper?(routine.identity.propertyTransformer=true,routine):_.props.mapperFromCondition(routine):(routine.identity={propertyMapper:true,propertyTransformer:true},routine)}let PropsExtension={mapperFromCondition:function mapperFromCondition(routine){if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.routine.is(routine),"Expects routine but got",_.entity.strType(routine)),_.assert(!!routine.identity),routine.identity.propertyCondition)return routine.identity.functor?(functor.identity={propertyMapper:true,propertyTransformer:true,functor:true},functor):(mapper.identity={propertyMapper:true,propertyTransformer:true},mapper);if(routine.identity.propertyMapper)return routine;function mapper(dstContainer,srcContainer,key){let result=routine(dstContainer,srcContainer,key);_.assert(_.bool.is(result)),false!==result&&(dstContainer[key]=srcContainer[key])}function functor(){let routine2=routine(...arguments);return _.assert(_.props.conditionIs(routine2)&&!routine2.identity.functor),mapper.identity={propertyMapper:true,propertyTransformer:true},mapper;function mapper(dstContainer,srcContainer,key){let result=routine2(dstContainer,srcContainer,key);_.assert(_.bool.is(result)),false!==result&&(dstContainer[key]=srcContainer[key])}}_.assert(0,"Expects PropertyTransformer")},mapperFrom:mapperFrom,conditionFrom:function conditionFrom(routine){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.routine.is(routine),"Expects routine but got",_.entity.strType(routine)),routine.identity?(routine.identity.propertyCondition||(_.assert(!routine.identity.propertyMapper,"It is not possible to convert FieldMapper to FieldFilter"),_.assert(void 0===routine.identity.propertyCondition),routine.identity.propertyCondition=true),routine.identity.propertyTransformer=true,routine):(routine.identity={propertyCondition:true,propertyTransformer:true},routine)},transformerRegister:function transformerRegister(fi,name){return name||(name=fi.name),_.assert(_.strDefined(name)),_.assert(_.object.isBasic(fi.identity),"Not property transformer"),_.assert(!!fi.identity),fi.identity.propertyMapper?(_.assert(void 0===_.props.mapper[name]),void(_.props.mapper[name]=mapperFrom(fi))):fi.identity.propertyCondition?(_.assert(void 0===_.props.condition[name]),_.assert(void 0===_.props.mapper[name]),_.props.mapper[name]=_.props.mapperFromCondition(fi),void(_.props.condition[name]=fi)):void _.assert(0,"unexpected")},transformersRegister:function transformersRegister(transformers){_.assert(_.mapIs(transformers));for(let f in transformers){let fi=transformers[f];_.assert(!!fi.identity&&!!fi.identity.functor,`Routine::${f} is not functor`),_.props.transformerRegister(fi,f)}},transformerUnregister:function transformerUnregister(transformerName,transformerType){transformerType=transformerType||"mapper",_.assert(_.strIs(transformerName)),_.assert(_.strIs(transformerType)),_.assert(void 0!==_.props[transformerType][transformerName],"Transformer must be registered"),delete _.props[transformerType][transformerName]},transformersUnregister:function transformersUnregister(transformerNames,transformerType){_.assert(_.arrayIs(transformerNames)),_.assert(_.strIs(transformerType)),transformerNames.forEach(transformerName=>_.props.transformerUnregister(transformerName,transformerType))},transformerIs:function transformerIs(transformer){return!!_.routine.is(transformer)&&!!_.object.isBasic(transformer.identity)&&!!(transformer.identity.propertyTransformer||transformer.identity.propertyCondition||transformer.identity.propertyMapper)},mapperIs:function mapperIs(transformer){return!!_.routine.is(transformer)&&!!_.object.isBasic(transformer.identity)&&!!transformer.identity.propertyMapper},conditionIs:function conditionIs(transformer){return!!_.routine.is(transformer)&&!!_.object.isBasic(transformer.identity)&&!!transformer.identity.propertyCondition}};Object.assign(_.props,PropsExtension)}()});module.exports,module.include,module.include}(),function Props_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Props.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Props_s_naked(){!function _l5_Property_s_(){"use strict";_global_;const _=_global_.wTools;_.props=_.props||Object.create(null);let Extension={hasAll:function hasAll(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(!(screen[s]in src))return false}else if(_.vector.is(screen)){for(let value of screen)if(!(value in src))return false}else if(_.aux.is(screen))for(let k in screen)if(!(k in src))return false;return true},hasAny:function hasAny(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(screen[s]in src)return true}else if(_.vector.is(screen)){for(let value of screen)if(value in src)return true}else if(_.aux.is(screen))for(let k in screen)if(k in src)return true;return false},hasNone:function hasNone(src,screen){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(!_.primitive.is(src)),_.assert(!_.primitive.is(screen)),_.argumentsArray.like(screen)){for(let s=0;s<screen.length;s++)if(screen[s]in src)return false}else if(_.vector.is(screen)){for(let value of screen)if(value in src)return false}else if(_.aux.is(screen))for(let k in screen)if(k in src)return false;return true}};Object.assign(_.props,Extension)}()});module.exports,module.include,module.include}(),function Prototype_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Prototype.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Prototype_s_naked(){!function _l5_Prototype_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.prototype=_.prototype||Object.create(null);Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Regexp_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Regexp.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Regexp_s_naked(){!function _l5_Regexp_s_(){"use strict";_global_;const _=_global_.wTools;function regexpsEquivalent(src1,src2){_.assert(_.strIs(src1)||_.regexpIs(src1)||_.longIs(src1),"Expects string/regexp or array of strings/regexps {-src1-}"),_.assert(_.strIs(src2)||_.regexpIs(src2)||_.longIs(src2),"Expects string/regexp or array of strings/regexps {-src2-}"),_.assert(2===arguments.length,"Expects exactly two arguments");let isLong1=_.longIs(src1);let isLong2=_.longIs(src2);if(isLong1&&isLong2){let result=[];_.assert(src1.length===src2.length);for(let i=0,len=src1.length;i<len;i++)result[i]=_.regexp.equivalent(src1[i],src2[i]);return result}if(!isLong1&&isLong2){let result=[];for(let i=0,len=src2.length;i<len;i++)result[i]=_.regexp.equivalent(src1,src2[i]);return result}if(isLong1&&!isLong2){let result=[];for(let i=0,len=src1.length;i<len;i++)result[i]=_.regexp.equivalent(src1[i],src2);return result}return _.regexp.equivalent(src1,src2)}function _test(regexp,str){return _.assert(2===arguments.length),_.assert(_.regexpLike(regexp)),_.assert(_.strIs(str)),_.strIs(regexp)?regexp===str:regexp.test(str)}function test(regexp,strs){return _.assert(2===arguments.length),_.assert(_.regexpLike(regexp)),_.strIs(strs)?_.regexp._test(regexp,strs):_.argumentsArray.like(strs)?strs.map(str=>_.regexp._test(regexp,str)):void _.assert(0)}function testAll(regexp,strs){return _.assert(2===arguments.length),_.assert(_.regexpLike(regexp)),_.strIs(strs)?_.regexp._test(regexp,strs):_.argumentsArray.like(strs)?strs.every(str=>_.regexp._test(regexp,str)):void _.assert(0)}function testAny(regexp,strs){return _.assert(2===arguments.length),_.assert(_.regexpLike(regexp)),_.strIs(strs)?_.regexp._test(regexp,strs):_.argumentsArray.like(strs)?strs.some(str=>_.regexp._test(regexp,str)):void _.assert(0)}function testNone(regexp,strs){return _.assert(2===arguments.length),_.assert(_.regexpLike(regexp)),_.strIs(strs)?!_.regexp._test(regexp,strs):_.argumentsArray.like(strs)?!strs.some(str=>_.regexp._test(regexp,str)):void _.assert(0)}function regexpsTestAll(regexps,strs){return _.assert(2===arguments.length),_.arrayIs(regexps)?(_.assert(_.regexpsLikeAll(regexps)),regexps.every(regexp=>_.regexpTestAll(regexp,strs))):_.regexpTestAll(regexps,strs)}function regexpsTestAny(regexps,strs){return _.assert(2===arguments.length),_.arrayIs(regexps)?(_.assert(_.regexpsLikeAll(regexps)),regexps.some(regexp=>_.regexpTestAny(regexp,strs))):_.regexpTestAny(regexps,strs)}function regexpsTestNone(regexps,strs){return _.assert(2===arguments.length),_.arrayIs(regexps)?(_.assert(_.regexpsLikeAll(regexps)),regexps.every(regexp=>_.regexpTestNone(regexp,strs))):_.regexpTestNone(regexps,strs)}_.regexp=_.regexp||Object.create(null),_.regexp.s=_.regexp.s||Object.create(null);let ToolsExtension={regexpsEquivalent:regexpsEquivalent,regexpsEquivalentAll:_.vectorizeAll(_.regexp.equivalentShallow.bind(_.regexp),2),regexpsEquivalentAny:_.vectorizeAny(_.regexp.equivalentShallow.bind(_.regexp),2),regexpsEquivalentNone:_.vectorizeNone(_.regexp.equivalentShallow.bind(_.regexp),2),regexpsEscape:_.vectorize(_.regexpEscape),_regexpTest:_test,regexpTest:test,regexpTestAll:testAll,regexpTestAny:testAny,regexpTestNone:testNone,regexpsTestAll:regexpsTestAll,regexpsTestAny:regexpsTestAny,regexpsTestNone:regexpsTestNone};_.props.supplement(_,ToolsExtension);let RegexpExtension={_test:_test,test:test,testAll:testAll,testAny:testAny,testNone:testNone};_.props.supplement(_.regexp,RegexpExtension);let RegexpsExtension={regexpsEquivalent:regexpsEquivalent,escape:_.vectorize(_.regexpEscape),testAll:regexpsTestAll,testAny:regexpsTestAny,testNone:regexpsTestNone};_.props.supplement(_.regexp.s,RegexpsExtension)}()});module.exports,module.include,module.include}(),function Routine_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Routine.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Routine_s_naked(){!function _l5_Routine_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.routine,{})}()});module.exports,module.include,module.include}(),function Set_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Set.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Set_s_naked(){!function _l5_Set_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{});let SetExtension={butElement:function butElement(dst,src1,element){if(null===dst?dst=new Set:dst===_.self&&(dst=src1),_.assert(3===arguments.length),_.assert(_.set.is(dst)||null===dst),_.assert(_.countable.is(src1)),dst===src1)dst.delete(element);else for(let e of src1)e!==element&&dst.add(e);return dst},but:function but(dst,src1,src2){if(null===dst?dst=new Set:dst===_.self&&(dst=src1),_.assert(3===arguments.length),_.assert(_.set.is(dst)||null===dst),_.assert(_.countable.is(src1)),_.assert(_.countable.is(src2)),dst===src1)for(let e of src2)dst.has(e)&&dst.delete(e);else{_.set.is(src2)||(src2=[...src2]);for(let e of src1)src2.has(e)||dst.add(e)}return dst},only:function only(dst,src1,src2){_.assert(3===arguments.length),_.assert(null===dst||_.set.is(dst)),_.assert(_.countable.is(src1)),_.assert(_.countable.is(src2)),null===dst&&(dst=new Set);for(let e of src1)src2.has(e)&&dst.add(e);return dst},union:function union(dst,src1,src2){if(_.assert(2===arguments.length||3===arguments.length),_.assert(null===dst||_.set.is(dst)),_.assert(_.countable.is(src1)),_.assert(_.countable.is(src2)),null===dst&&(dst=new Set),_.unrollIs(src1)){_.assert(0,"not implemented");for(let set of src1){_.assert(_.set.is(set));for(let e of set)dst.add(e)}}else for(let e of src1)dst.add(e);if(void 0!==src2)if(_.unrollIs(src2)){xxx;for(let set of src2){_.assert(_.set.is(set));for(let e of set)dst.add(e)}}else for(let e of src2)dst.add(e);return dst},diff:function diff(dst,src1,src2){return 2===arguments.length&&(dst=null,src1=arguments[0],src2=arguments[1]),_.assert(2===arguments.length||3===arguments.length),_.assert(null===dst||_.aux.is(dst)),_.assert(_.set.is(src1)),_.assert(_.set.is(src2)),(dst=dst||Object.create(null)).src1=_.set.but(dst.src1||null,src1,src2),dst.src2=_.set.but(dst.src2||null,src2,src1),dst.diff=new Set([...dst.src1,...dst.src2]),dst.identical=0===dst.src1.size&&0===dst.src2.size,dst},appendContainer:function appendContainer(dst,src){return null===dst&&(dst=new Set),_.assert(2===arguments.length),_.countable.is(src)?dst.add(...src):dst.add(src),dst}};Object.assign(_.set,SetExtension),Object.assign(_.set.s,{})}()});module.exports,module.include,module.include}(),function Sorted_s(){
let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Sorted.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Sorted_s_naked(){!function _l5_Sorted_s_(){"use strict";_global_;const _=_global_.wTools;_.sorted=_.sorted||Object.create(null);let Extension={searchFirstIndex:function searchFirstIndex(srcArr,ins){let l=0;let r=srcArr.length;let m;if(srcArr.length)do{if(srcArr[m=Math.floor((l+r)/2)]<ins)l=m+1;else{if(!(srcArr[m]>ins))return m;r=m}}while(l<r);return srcArr[m]<ins?m+1:m}};_.props.supplement(_.sorted,Extension)}()});module.exports,module.include,module.include}(),function Str_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Str.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Str_s_naked(){!function _l5_Str_s_(){"use strict";_global_;const _=_global_.wTools;function exportStringDiagnosticShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringDiagnosticShallow(...arguments)}function quote(o){if(_.mapIs(o)||(o={src:arguments[0],quote:arguments.length>1?arguments[1]:null}),void 0!==o.quote&&null!==o.quote||(o.quote=quote.defaults.quote),_.map.assertHasOnly(o,quote.defaults),_.assert(1===arguments.length||2===arguments.length),_.arrayIs(o.src)){let result=[];for(let s=0;s<o.src.length;s++)result.push(_.strQuote({src:o.src[s],quote:o.quote}));return result}let src=o.src;return _.primitive.is(src)||(src=_.entity.exportString(src)),_.assert(_.primitive.is(src)),o.quote+String(src)+o.quote}function unquote(o){if(_.mapIs(o)||(o={src:arguments[0],quote:arguments.length>1?arguments[1]:null}),void 0!==o.quote&&null!==o.quote||(o.quote=unquote.defaults.quote),_.map.assertHasOnly(o,unquote.defaults),_.assert(1===arguments.length||2===arguments.length),_.arrayIs(o.src)){let result=[];for(let s=0;s<o.src.length;s++)result.push(_.strUnquote({src:o.src[s],quote:o.quote}));return result}let result=o.src;let isolated=_.strIsolateInside(result,o.quote);return""===isolated[0]&&""===isolated[4]&&(result=isolated[2]),result}function quotePairsNormalize(quote){_.bool.like(quote)&&quote&&(quote=quoteAnalyze.defaults.quote),_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(quote)||_.arrayIs(quote)),quote=_.array.as(quote);for(let q=0;q<quote.length;q++){let quotingPair=quote[q];_.assert(_.pair.is(quotingPair)||_.strIs(quotingPair)),_.strIs(quotingPair)&&(quotingPair=quote[q]=[quotingPair,quotingPair]),_.assert(_.strIs(quotingPair[0])&&_.strIs(quotingPair[1]))}return quote}function quoteAnalyze(o){let i=-1;let result=Object.create(null);result.ranges=[],result.quotes=[],_.mapIs(o)||(o={src:arguments[0],quote:arguments.length>1?arguments[1]:null}),void 0!==o.quote&&null!==o.quote||(o.quote=quoteAnalyze.defaults.quote),_.map.assertHasOnly(o,quoteAnalyze.defaults),_.assert(1===arguments.length||2===arguments.length),o.quote=_.strQuotePairsNormalize(o.quote);let maxQuoteLength=0;for(let q=0;q<o.quote.length;q++){let quotingPair=o.quote[q];maxQuoteLength=Math.max(maxQuoteLength,quotingPair[0].length,quotingPair[1].length)}let isEqual=1===maxQuoteLength?function isEqualChar(quote){return _.assert(o.src.length>=i),o.src[i]===quote}:function isEqualString(quote){return!(i+quote.length>o.src.length)&&o.src.substring(i,i+quote.length)===quote};let inRange=false;do{for(;i<o.src.length;)if(i+=1,inRange)isEqual(inRange)&&(result.ranges.push(i),inRange=false);else for(let q=0;q<o.quote.length;q++){let quotingPair=o.quote[q];if(isEqual(quotingPair[0])){result.quotes.push(quotingPair[0]),result.ranges.push(i),inRange=quotingPair[1];break}}inRange&&(result.quotes.pop(),i=result.ranges.pop()+1,inRange=false)}while(i<o.src.length);return result}function _leftSingle_(src,ins,cinterval){_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(src)),_.number.is(cinterval)?cinterval=[cinterval,src.length-1]:void 0===cinterval&&(cinterval=[0,src.length-1]),cinterval[0]=void 0===cinterval[0]?0:cinterval[0],cinterval[1]=void 0===cinterval[1]?src.length-1:cinterval[1],cinterval[0]<0&&(cinterval[0]=src.length+cinterval[0]),cinterval[1]<-1&&(cinterval[1]=src.length+cinterval[1]),_.assert(_.intervalIs(cinterval)),_.assert(0<=cinterval[0]&&cinterval[0]<=src.length),_.assert(-1<=cinterval[1]&&cinterval[1]<=src.length-1);let result=Object.create(null);result.index=src.length,result.instanceIndex=-1,result.entry=void 0;let src1=src.substring(cinterval[0],cinterval[1]+1);ins=_.array.as(ins);for(let k=0;k<ins.length;k++){let entry=ins[k];if(_.strIs(entry)){let found=src1.indexOf(entry);found>=0&&(found<result.index||void 0===result.entry)&&(result.instanceIndex=k,result.index=found,result.entry=entry)}else if(_.regexpIs(entry)){let found=src1.match(entry);found&&(found.index<result.index||void 0===result.entry)&&(result.instanceIndex=k,result.index=found.index,result.entry=found[0])}else _.assert(0,"Expects string-like ( string or regexp )")}return 0!==cinterval[0]&&result.index!==src.length&&(result.index+=cinterval[0]),result}function left_(src,ins,cinterval){if(_.assert(2===arguments.length||3===arguments.length),_.argumentsArray.like(src)){let result=[];for(let s=0;s<src.length;s++)result[s]=_._strLeftSingle_(src[s],ins,cinterval);return result}return _._strLeftSingle_(src,ins,cinterval)}function right_(src,ins,cinterval){if(_.assert(2===arguments.length||3===arguments.length),_.argumentsArray.like(src)){let result=[];for(let s=0;s<src.length;s++)result[s]=_._strRightSingle_(src[s],ins,cinterval);return result}return _._strRightSingle_(src,ins,cinterval)}function strInsideOf_body(o){let beginOf,endOf;if(void 0!==(beginOf=_.strBeginOf(o.src,o.begin))&&!(void 0===(endOf=_.strEndOf(o.src,o.end))||o.pairing&&_.longIs(o.begin)&&_.longLeftIndex(o.begin,beginOf)!==_.longLeftIndex(o.end,endOf)))return o.src.substring(beginOf.length,o.src.length-endOf.length)}quote.defaults={src:null,quote:'"'},unquote.defaults={src:null,quote:['"',"`","'"]},quoteAnalyze.defaults={src:null,quote:['"',"`","'"]},strInsideOf_body.defaults={src:null,begin:null,end:null,pairing:0};let insideOf=_.routine.unite(function strInsideOf_head(routine,args){let o=args[0];return _.mapIs(o)?_.assert(1===args.length,"Expects exactly one argument"):((o=Object.create(null)).src=args[0],o.begin=args[1],o.end=args[2],_.assert(3===args.length,"Expects exactly three arguments")),_.routine.options(routine,o),_.assert(_.strIs(o.src),"Expects string {-o.src-}"),_.longIs(o.begin||_.longIs(o.end))&&(o.begin=_.array.as(o.begin),o.end=_.array.as(o.end)),_.assert(!o.pairing||!_.longIs(o.begin)||o.begin.length===o.end.length,"If option::o.paring is true then length of o.begin should be equal to length of o.end"),o},strInsideOf_body);function strInsideOf__body(o){let begin=_.strBeginOf(o.src,o.begin);if(void 0===begin)return[void 0,void 0,void 0];let end=_.strEndOf(o.src,o.end);return void 0===end?[void 0,void 0,void 0]:o.pairing&&_.longLeftIndex(o.begin,begin)!==_.longLeftIndex(o.end,end)?[void 0,void 0,void 0]:[begin,o.src.substring(begin.length,o.src.length-end.length),end]}strInsideOf__body.defaults={src:null,begin:null,end:null,pairing:1};let insideOf_=_.routine.unite(function strInsideOf__head(routine,args){let o=args[0];return _.mapIs(o)?_.assert(1===args.length,"Expects exactly one argument"):((o=Object.create(null)).src=args[0],o.begin=args[1],o.end=args[2],_.assert(3===args.length,"Expects exactly three arguments")),_.assert(_.strIs(o.src),"Expects string {-o.src-}"),_.routine.options(routine,o),o.begin=_.array.as(o.begin),o.end=_.array.as(o.end),_.assert(!o.pairing||o.begin.length===o.end.length,"If {-o.paring-} is true then length of o.begin should be equal to length of o.end."),o},strInsideOf__body);function outsideOf(src,begin,end){let beginOf,endOf;if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(3===arguments.length,"Expects exactly three arguments"),void 0!==(beginOf=_.strBeginOf(src,begin))&&void 0!==(endOf=_.strEndOf(src,end)))return beginOf+endOf}function _removedBegin(src,begin){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}");let result=src;let beginOf=_._strBeginOf(result,begin);return void 0!==beginOf&&(result=result.substr(beginOf.length,result.length)),result}function removeBegin(src,begin){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(src)||_.strIs(src),"Expects string or array of strings {-src-}"),_.assert(_.longIs(begin)||_.strIs(begin)||_.regexpIs(begin),"Expects string/regexp or array of strings/regexps {-begin-}");let result=[];let srcIsArray=_.longIs(src);if(_.strIs(src)&&!_.longIs(begin))return _._strRemovedBegin(src,begin);src=_.array.as(src),begin=_.array.as(begin);for(let s=0,slen=src.length;s<slen;s++){let beginOf=void 0;let src1=src[s];for(let b=0,blen=begin.length;b<blen&&void 0===(beginOf=_._strBeginOf(src1,begin[b]));b++);void 0!==beginOf&&(src1=src1.substr(beginOf.length,src1.length)),result[s]=src1}return srcIsArray?result:result[0]}function _removedEnd(src,end){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src),"Expects string {-src-}");let result=src;let endOf=_._strEndOf(result,end);return void 0!==endOf&&(result=result.substr(0,result.length-endOf.length)),result}function removeEnd(src,end){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(src)||_.strIs(src),"Expects string or array of strings {-src-}"),_.assert(_.longIs(end)||_.strIs(end)||_.regexpIs(end),"Expects string/regexp or array of strings/regexps {-end-}");let result=[];let srcIsArray=_.longIs(src);if(_.strIs(src)&&!_.longIs(end))return _._strRemovedEnd(src,end);src=_.array.as(src),end=_.array.as(end);for(let s=0,slen=src.length;s<slen;s++){let endOf=void 0;let src1=src[s];for(let b=0,blen=end.length;b<blen&&void 0===(endOf=_._strEndOf(src1,end[b]));b++);void 0!==endOf&&(src1=src1.substr(0,src1.length-endOf.length)),result[s]=src1}return srcIsArray?result:result[0]}function replaceBegin(src,begin,ins){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.strIs(ins)||_.longIs(ins),"Expects {-ins-} as string/array of strings"),_.longIs(begin)&&_.longIs(ins)&&_.assert(begin.length===ins.length),begin=_.array.as(begin);let result=_.array.as(src).slice();for(let k=0,srcLength=result.length;k<srcLength;k++)for(let j=0,beginLength=begin.length;j<beginLength;j++)if(_.strBegins(result[k],begin[j])){let prefix=_.longIs(ins)?ins[j]:ins;_.assert(_.strIs(prefix)),result[k]=prefix+_.strRemoveBegin(result[k],begin[j]);break}return 1===result.length&&_.strIs(src)?result[0]:result}function replaceEnd(src,end,ins){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.strIs(ins)||_.longIs(ins),"Expects {-ins-} as string/array of strings"),_.longIs(end)&&_.longIs(ins)&&_.assert(end.length===ins.length),end=_.array.as(end);let result=_.array.as(src).slice();for(let k=0,srcLength=result.length;k<srcLength;k++)for(let j=0,endLength=end.length;j<endLength;j++)if(_.strEnds(result[k],end[j])){let postfix=_.longIs(ins)?ins[j]:ins;_.assert(_.strIs(postfix)),result[k]=_.strRemoveEnd(result[k],end[j])+postfix;break}return 1===result.length&&_.strIs(src)?result[0]:result}function replace(src,ins,sub){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.strsAreAll(sub),"Expects {-sub-} as string/array of strings"),_.longIs(ins)&&_.longIs(sub)&&_.assert(ins.length===sub.length),ins=_.array.as(ins);for(let i=0;i<ins.length;i++)_.assert(""!==ins[i],"{-ins-} should be a string with length");let result=_.array.as(src).slice();for(let i=0;i<result.length;i++)result[i]=_.strSplit({src:result[i],delimeter:ins,quoting:0,stripping:0,preservingEmpty:1,preservingDelimeters:1,onDelimeter:(e,k)=>_.strIs(sub)?sub:sub[k]}),result[i]=result[i].join("");return 1===result.length&&_.strIs(src)?result[0]:result}function strip(o){(_.strIs(o)||_.arrayIs(o))&&(o={src:o}),_.assert(1===arguments.length,"Expects single argument"),_.routine.options(strip,o),o.stripper=function stripperNormalize(){let stripper=o.stripper;return _.bool.likeTrue(o.stripper)?stripper=strip.defaults.stripper:_.arrayIs(o.stripper)?_.assert(_.strsAreAll(o.stripper),"Expects characters in container {-o.stripper-}"):_.strIs(o.stripper)?(stripper=_.regexpEscape(o.stripper),stripper=new RegExp(stripper,"g")):_.regexpIs(o.stripper)||_.assert(0,"Unexpected type of {-o.stripper-}. Expects either a String, an Array or a Regexp {-o.stripper-}"),stripper}();let stripRoutine=_.regexpIs(o.stripper)?function singleStripByRegexp(src){return src.replace(o.stripper,"")}:function singleStripByArrayOfStrings(src){let begin=0;for(;begin<src.length&&-1!==o.stripper.indexOf(src[begin]);begin++);let end=src.length-1;for(;end>=0&&-1!==o.stripper.indexOf(src[end]);end--);return begin>=end?"":src.substring(begin,end+1)};if(_.arrayIs(o.src)){_.assert(_.strsAreAll(o.src),"Expects strings {-o.srs-}");let result=[];for(let i=0;i<o.src.length;i++)result[i]=stripRoutine(o.src[i]);return result}return _.assert(_.strIs(o.src)),stripRoutine(o.src)}function stripLeft(o){return(_.strIs(o)||_.arrayIs(o))&&(o={src:o}),_.routine.options(stripLeft,o),_.assert(1===arguments.length,"Expects single argument"),_.strStrip(o)}function stripRight(o){return(_.strIs(o)||_.arrayIs(o))&&(o={src:o}),_.routine.options(stripRight,o),_.assert(1===arguments.length,"Expects single argument"),_.strStrip(o)}function _removeAllSpaces(src,sub){return _.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(src)),void 0===sub&&(sub=""),src.replace(/\s/g,sub)}function _stripEmptyLines(srcStr){let result="";let lines=srcStr.split("\n");_.assert(_.strIs(srcStr)),_.assert(1===arguments.length,"Expects single argument");for(let l=0;l<lines.length;l+=1){let line=lines[l];_.strStrip(line)&&(result+=line+"\n")}return result.substring(0,result.length-1)}function splitsCoupledGroup(o){_.arrayIs(o)&&(o={splits:o}),(o=_.routine.options(splitsCoupledGroup,o)).prefix=_.array.as(o.prefix),o.postfix=_.array.as(o.postfix),_.assert(1===arguments.length),_.assert(_.regexpsLikeAll(o.prefix)),_.assert(_.regexpsLikeAll(o.postfix));let begins=[];for(let i=0;i<o.splits.length;i++){let element=o.splits[i];if(_.regexpsTestAny(o.prefix,element))begins.push(i);else if(_.regexpsTestAny(o.postfix,element)){if(0===begins.length&&!o.allowingUncoupledPostfix)throw _.err(`"${element}" does not have complementing openning\n`);if(0===begins.length)continue;let begin=begins.pop();let l=i-begin;_.assert(l>=0);let newElement=o.splits.splice(begin,l+1,null);o.splits[begin]=newElement,i-=l}}if(begins.length&&!o.allowingUncoupledPrefix){debugger;throw _.err(`"${begins[begins.length-1]}" does not have complementing closing\n`)}return o.splits}function splitsUngroupedJoin(o){_.arrayIs(o)&&(o={splits:o});let s=(o=_.routine.options(splitsUngroupedJoin,o)).splits.length-1;let l=null;for(;s>=0;){let split=o.splits[s];_.strIs(split)?null===l&&(l=s):null!==l&&join(),s-=1}return null!==l&&join(),o.splits;function join(){if(s+1<l){let element=o.splits.slice(s+1,l+1).join("");o.splits.splice(s+1,l+1,element)}l=null}}function strSplitsQuotedRejoin_body(o){_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits));let s=0;if(o.quoting)for(;s<o.splits.length;s+=1)splitsQuote(o.splits[s],s);return o.splits;function splitsQuote(split,i){let s2;let q=o.quotingPrefixes.indexOf(split);if(q>=0){let postfix=o.quotingPostfixes[q];for(s2=i+2;s2<o.splits.length;s2+=1)if(o.splits[s2]===postfix){if(o.pairing&&o.quotingPrefixes.indexOf(o.splits[s])!==o.quotingPostfixes.indexOf(o.splits[s2]))break;let bextra=0;let eextra=0;o.inliningQuoting&&(s-=1,bextra+=1,s2+=1,eextra+=1);let splitNew=o.splits.splice(s,s2-s+1,null);o.preservingQuoting||(splitNew.splice(bextra,1),splitNew.splice(splitNew.length-1-eextra,1)),splitNew=splitNew.join(""),o.onQuoting?o.splits[s]=o.onQuoting(splitNew,o):o.splits[s]=splitNew,s2=s;break}}if(s2>=o.splits.length&&!_.longHas(o.delimeter,split)){let splitNew=o.splits.splice(s,2).join("");o.splits[s-1]=o.splits[s-1]+splitNew}}}strip.defaults={src:null,stripper:/^(\s|\n|\0)+|(\s|\n|\0)+$/g},stripLeft.defaults={...strip.defaults,stripper:/^(\s|\n|\0)+/gm},stripRight.defaults={...strip.defaults,stripper:/(\s|\n|\0)+$/gm},splitsCoupledGroup.defaults={splits:null,prefix:'"',postfix:'"',allowingUncoupledPrefix:0,allowingUncoupledPostfix:0},splitsUngroupedJoin.defaults={splits:null},strSplitsQuotedRejoin_body.defaults={quoting:1,quotingPrefixes:null,quotingPostfixes:null,preservingQuoting:1,inliningQuoting:1,splits:null,delimeter:null,onQuoting:null,pairing:0};let splitsQuotedRejoin=_.routine.unite(function strSplitsQuotedRejoin_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length,"Expects one or two arguments"),_.assert(_.object.isBasic(o)),o.quoting&&(_.bool.like(o.quoting)?(o.quotingPrefixes||(o.quotingPrefixes=['"']),o.quotingPostfixes||(o.quotingPostfixes=['"'])):_.strIs(o.quoting)||_.regexpIs(o.quoting)||_.arrayIs(o.quoting)?(_.assert(!o.quotingPrefixes),_.assert(!o.quotingPostfixes),o.quoting=_.array.as(o.quoting),o.quotingPrefixes=o.quoting.map(q=>_.arrayIs(q)?q[0]:q),o.quotingPostfixes=o.quoting.map(q=>_.arrayIs(q)?q[0]:q),o.quoting=true):_.assert(0,"unexpected type of {-o.quoting-}"),_.assert(!o.pairing||o.quotingPrefixes.length===o.quotingPostfixes.length,"If option::o.paring is true then the length of o.quotingPrefixes should be equal to the length of o.quotingPostfixes")),o},strSplitsQuotedRejoin_body);function strSplitsDropDelimeters_body(o){_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits));for(let s=o.splits.length-1;s>=0;s--){let split=o.splits[s];_.regexpsTestAny(o.delimeter,split)&&o.splits.splice(s,1)}return o.splits}strSplitsDropDelimeters_body.defaults={splits:null,delimeter:null};let splitsDropDelimeters=_.routine.unite(function strSplitsDropDelimeters_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.strIs(o.delimeter)&&(o.delimeter=[o.delimeter]),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),o},strSplitsDropDelimeters_body);function strSplitsStrip_body(o){if(_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits)),!o.stripping)return o.splits;for(let s=0;s<o.splits.length;s++){let split=o.splits[s];_.strIs(split)&&(split=_.strStrip({src:split,stripper:o.stripping})),o.splits[s]=split}return o.splits}strSplitsStrip_body.defaults={stripping:1,splits:null};let splitsStrip=_.routine.unite(function strSplitsStrip_head(routine,args){let o=args[0];return _.routine.options(routine,o),o.stripping&&_.bool.like(o.stripping)&&(o.stripping=_.strStrip.defaults.stripper),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),_.assert(!o.stripping||_.strIs(o.stripping)||_.regexpIs(o.stripping)),o},strSplitsStrip_body);function strSplitsDropEmpty_body(o){_.assert(1===arguments.length),_.assert(_.arrayIs(o.splits));for(let s=0;s<o.splits.length;s++)o.splits[s]||(o.splits.splice(s,1),s-=1);return o.splits}strSplitsDropEmpty_body.defaults={splits:null};let splitsDropEmpty=_.routine.unite(function strSplitsDropEmpty_head(routine,args){let o=args[0];return _.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length),_.assert(_.object.isBasic(o)),o},strSplitsDropEmpty_body);function strSplitFast_head(routine,args){let o=args[0];return 2===args.length?o={src:args[0],delimeter:args[1]}:_.strIs(args[0])&&(o={src:args[0]}),_.routine.options(routine,o),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(1===args.length||2===args.length,"Expects one or two arguments"),_.assert(_.strIs(o.src)),_.assert(null===o.delimeter||_.regexp.like(o.delimeter)||_.arrayIs(o.delimeter)),_.assert(_.object.isBasic(o)),o}function strSplitFast_body(o){let result,closests,position,closestPosition,closestIndex,hasEmptyDelimeter,delimeter;o.delimeter=_.array.as(o.delimeter);let foundDelimeters=o.delimeter.slice();if(_.assert(1===arguments.length),_.assert(_.arrayIs(o.delimeter)),_.assert(_.bool.like(o.preservingDelimeters)),o.preservingDelimeters||1!==o.delimeter.length){if(!o.delimeter.length)return result=[o.src];result=[],closests=[],position=0,closestPosition=0,closestIndex=-1,hasEmptyDelimeter=false;for(let d=0;d<o.delimeter.length;d++){let delimeter=o.delimeter[d];_.regexpIs(delimeter)?(_.assert(!delimeter.sticky),""!==delimeter.source&&"()"!==delimeter.source&&"(?:)"!==delimeter.source||(hasEmptyDelimeter=true)):0===delimeter.length&&(hasEmptyDelimeter=true),closests[d]=delimeterNext(d,position)}do{if(closestWhich(),closestPosition===o.src.length)break;delimeter.length||(position+=1),ordinaryAdd(o.src.substring(position,closestPosition)),(delimeter.length>0||position<o.src.length)&&delimeterAdd(delimeter),position=closests[closestIndex]+(delimeter.length?delimeter.length:1);for(let d=0;d<o.delimeter.length;d++)closests[d]<position&&(closests[d]=delimeterNext(d,position))}while(position<o.src.length);!delimeter&&hasEmptyDelimeter||ordinaryAdd(o.src.substring(position,o.src.length))}else result=o.src.split(o.delimeter[0]),o.preservingEmpty||(result=result.filter(e=>e||false));return result;function delimeterAdd(delimeter){o.preservingDelimeters&&(o.preservingEmpty||delimeter)&&result.push(delimeter)}function ordinaryAdd(ordinary){(o.preservingEmpty||ordinary)&&result.push(ordinary)}function closestWhich(){closestPosition=o.src.length,closestIndex=-1;for(let d=0;d<o.delimeter.length;d++)closests[d]<o.src.length&&closests[d]<closestPosition&&(closestPosition=closests[d],closestIndex=d);delimeter=foundDelimeters[closestIndex]}function delimeterNext(d,position){_.assert(position<=o.src.length);let delimeter=o.delimeter[d];let result;if(_.strIs(delimeter))result=o.src.indexOf(delimeter,position);else{let execed=delimeter.exec(o.src.substring(position));execed&&(result=execed.index+position,foundDelimeters[d]=execed[0])}return-1===result?o.src.length:result}}strSplitFast_body.defaults={src:null,delimeter:" ",preservingEmpty:1,preservingDelimeters:1};let splitFast=_.routine.unite(strSplitFast_head,strSplitFast_body);function strSplit_body(o){if(o.delimeter=_.array.as(o.delimeter),!o.stripping&&!o.quoting&&!o.onDelimeter)return _.strSplitFast.body(_.mapOnly_(null,o,_.strSplitFast.defaults));_.assert(1===arguments.length);let fastOptions=_.mapOnly_(null,o,_.strSplitFast.defaults);if(fastOptions.preservingEmpty=1,fastOptions.preservingDelimeters=1,o.quoting&&(fastOptions.delimeter=_.arrayAppendArraysOnce([],[o.quotingPrefixes,o.quotingPostfixes,fastOptions.delimeter])),o.splits=_.strSplitFast.body(fastOptions),o.quoting&&o.onQuote){let quotes=_.arrayAppendArraysOnce(null,[o.quotingPrefixes,o.quotingPostfixes]);for(let i=0;i<o.splits.length;i++){let index=_.longLeftIndex(quotes,o.splits[i],equalizeStrings);-1!==index&&(o.splits[i]=o.onQuote(o.splits[i],index,quotes))}}if(o.onDelimeter){let delimeter=_.filter_(null,o.delimeter,function(pattern){return _.regexpIs(pattern)?pattern.test(o.src)?pattern:null:pattern});for(let i=0;i<o.splits.length;i++){let index=_.longLeftIndex(delimeter,o.splits[i],equalizeStrings);-1!==index&&(o.splits[i]=o.onDelimeter(o.splits[i],index,o.delimeter))}}return o.quoting&&_.strSplitsQuotedRejoin.body(o),o.preservingDelimeters||_.strSplitsDropDelimeters.body(o),o.stripping&&_.strSplitsStrip.body(o),o.preservingEmpty||_.strSplitsDropEmpty.body(o),o.splits;function equalizeStrings(pattern,el){return _.strIs(pattern)?pattern===el:null!==pattern&&pattern.test(el)}}_.assert(splitFast.head===strSplitFast_head),_.assert(splitFast.body===strSplitFast_body),_.assert(_.object.isBasic(splitFast.defaults)),(defaults=strSplit_body.defaults=Object.create(strSplitFast_body.defaults)).preservingEmpty=1,defaults.preservingDelimeters=1,defaults.preservingQuoting=1,defaults.inliningQuoting=1,defaults.stripping=1,defaults.quoting=1,defaults.quotingPrefixes=null,defaults.quotingPostfixes=null,defaults.onDelimeter=null,defaults.onQuote=null;let head=[splitFast.head,splitsQuotedRejoin.head,splitsDropDelimeters.head,splitsStrip.head,splitsDropEmpty.head];let split=_.routine.unite(head,strSplit_body);_.assert(split.head!==splitFast.head),_.assert(_.routine.is(split.head)),_.assert(split.body===strSplit_body),_.assert(_.object.isBasic(split.defaults)),_.assert(!!split.defaults.preservingEmpty);let splitNonPreserving=_.routine.uniteCloning(split.head,split.body);var defaults;function _strSplitInlined_body(o){_.assert(1===arguments.length,"Expects single options map"),null===o.delimeter&&(o.delimeter="#");let splitArray=_.strSplit({src:o.src,delimeter:o.delimeter,stripping:o.stripping,quoting:o.quoting,preservingEmpty:1,preservingDelimeters:1});if(splitArray.length<=1)return o.preservingEmpty||""===splitArray[0]&&splitArray.splice(0,1),splitArray;let first=0;let result=[];let i=0;for(;i<splitArray.length;i+=4)splitArray.length-i>=4?handleTriplet()&&handleOrdinary():(splitArray.length>i+1&&(splitArray[i]=splitArray.slice(i,splitArray.length).join(""),splitArray.splice(i+1,splitArray.length-i-1)),handleOrdinary(),_.assert(i+1===splitArray.length,"Openning delimeter",o.delimeter,"does not have closing"));return result;function handleTriplet(){let delimeter1=splitArray[i+1];let escaped=splitArray[i+2];let delimeter2=splitArray[i+3];return o.onInlined&&(escaped=o.onInlined(escaped,o,[delimeter1,delimeter2])),void 0===escaped?(_.assert(_.strIs(splitArray[i+4])),splitArray[i+2]=splitArray[i+0]+splitArray[i+1]+splitArray[i+2],splitArray.splice(i,2),i-=4,false):(first=result.length,o.preservingDelimeters&&void 0!==delimeter1&&(o.preservingEmpty||delimeter1)&&result.push(delimeter1),o.preservingInlined&&void 0!==escaped&&(o.preservingEmpty||escaped)&&result.push(escaped),o.preservingDelimeters&&void 0!==delimeter2&&(o.preservingEmpty||delimeter2)&&result.push(delimeter2),true)}function handleOrdinary(){let ordinary=splitArray[i+0];o.onOrdinary&&(ordinary=o.onOrdinary(ordinary,o)),o.preservingOrdinary&&void 0!==ordinary&&(o.preservingEmpty||ordinary)&&result.splice(first,0,ordinary),first=result.length}}(defaults=splitNonPreserving.defaults).preservingEmpty=0,defaults.preservingDelimeters=0,_strSplitInlined_body.defaults={src:null,delimeter:null,stripping:0,quoting:0,onOrdinary:null,onInlined:e=>[e],preservingEmpty:1,preservingDelimeters:0,preservingOrdinary:1,preservingInlined:1};let splitInlined=_.routine.unite(strSplitFast_head,_strSplitInlined_body);function splitInlinedStereo_(o){_.strIs(o)&&(o={src:o}),o.quotingPrefixes=o.quotingPrefixes||['"'],o.quotingPostfixes=o.quotingPostfixes||['"'],_.assert(this===_),_.assert(_.strIs(o.src)),_.assert(_.object.isBasic(o)),_.assert(1===arguments.length,"Expects single argument"),_.routine.options(splitInlinedStereo_,o);let isDefaultOnInlined=true;null===o.onInlined?o.onInlined=(e=>[e]):(_.assert(_.routine.is(o.onInlined),"Expects a routine as option::onInlined"),isDefaultOnInlined=false);let end=function handleTrivial(){let delimLeftPosition=o.src.indexOf(o.prefix);let delimRightPosition=o.src.indexOf(o.postfix);return-1===delimLeftPosition||-1===delimRightPosition?o.preservingOrdinary?[o.src]:[]:o.preservingOrdinary||o.preservingInlined?1===o.src.split(o.prefix).length&&(o.preservingOrdinary?[o.src]:[]):[]}();if(false!==end)return end;let replacementForPrefix="𠌰";let isReplacedPrefix=false;let splitOptions=_.mapOnly_(null,o,split.defaults);splitOptions.preservingDelimeters=1,splitOptions.delimeter=o.prefix===o.postfix?o.prefix:[o.prefix,o.postfix],splitOptions.stripping=0,splitOptions.preservingEmpty=1;let result=_.strSplit(splitOptions);return result=function preprocessBeforeJoin(array){let ordinary="";let result=[];for(let i=0;i<array.length;i++)array[i]===o.prefix&&array[i+2]===o.postfix?(pushOrdinary(result,ordinary),o.preservingInlined&&(result.push(array[i]),result.push(o.stripping?array[i+1].trim():array[i+1]),result.push(array[i+2])),i+=2,ordinary=""):ordinary+=array[i];return pushOrdinary(result,ordinary),result}(result),result=_.strSplitsQuotedRejoin({splits:result,delimeter:[o.prefix,o.postfix],quoting:1,quotingPrefixes:[o.prefix],quotingPostfixes:[o.postfix],preservingQuoting:o.preservingDelimeters,inliningQuoting:0,onQuoting:o.preservingEmpty?function escapeInlined(func){return function(el){return _.escape.wrap(func(el))}}(o.onInlined):o.onInlined}),o.preservingEmpty&&function handlePreservingEmpty(){_.escape.is(result[0])&&result.unshift(""),_.escape.is(result[result.length-1])&&result.push("");let len=result.length;for(let i=0;i<len;i++)_.escape.is(result[i])&&_.escape.is(result[i+1])&&(result.splice(i+1,0,""),len++)}(),function unescape(){for(let i=0;i<result.length;i++)_.escape.is(result[i])&&(result[i]=_.escape.unwrap(result[i]))}(),o.preservingDelimeters&&!o.inliningDelimeters&&isDefaultOnInlined&&function splitInlined(){result=result.map(el=>{return _.arrayIs(el)&&(el=[o.prefix,el[0].slice(1,-1),o.postfix]),el})}(),isReplacedPrefix&&(result=result.map(el=>{return _.strIs(el)?el.replace(replacementForPrefix,o.prefix):el})),result;function pushOrdinary(result,ordinary){if(o.preservingOrdinary&&ordinary)if(ordinary===o.prefix)result.push(replacementForPrefix),isReplacedPrefix=true;else{if(ordinary=o.stripping?ordinary.trim():ordinary,o.onOrdinary){ordinary=o.onOrdinary(ordinary)||ordinary}result.push(ordinary)}}}function from(src){return null===src?src:void 0===src?src:_.primitive.is(src)?String(src):_.bufferAnyIs(src)?_.bufferToStr(src):(_.assert(_.strIs(src)),src)}splitInlinedStereo_.defaults={src:null,prefix:"❮",postfix:"❯",onInlined:null,onOrdinary:null,stripping:0,quoting:0,quotingPrefixes:null,quotingPostfixes:null,preservingQuoting:1,preservingEmpty:0,preservingDelimeters:0,inliningDelimeters:0,preservingOrdinary:1,preservingInlined:1};let StrExtension={_exportStringDiagnosticShallow:function _exportStringDiagnosticShallow(src,o){return src},exportStringDiagnosticShallow:exportStringDiagnosticShallow,_exportStringCodeShallow:function _exportStringCodeShallow(src,o){return`'${src}'`},exportStringCodeShallow:function exportStringCodeShallow(src,o){return _.assert(1===arguments.length||2===arguments.length,"Expects 1 or 2 arguments"),_.assert(this.like(src)),this._exportStringCodeShallow(...arguments)},exportString:exportStringDiagnosticShallow,parseType:function parseType(src){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src),"Expects string"),/^{- .+ -}$/g.test(src)?(src=src.slice(3,-3),_.str._parseType(src)):Object.create(null)},_parseType:function _parseType(src){_.assert(_.strIs(src),"Expects string");let o={type:"",traits:[]};let splitted=src.split(" ");let type=splitted[0];let length;if(2===splitted.length?o.name=splitted[1]:4===splitted.length?length=+splitted[2]:5===splitted.length&&(o.name=splitted[1],length=+splitted[3]),length=isNaN(length)?null:length,-1===type.indexOf("."))o.type=type;else{let[t,...traits]=type.split(".");o.type=t,o.traits=traits}return null!==length&&(o.length=length),o},quote:quote,unquote:unquote,quotePairsNormalize:quotePairsNormalize,quoteAnalyze:quoteAnalyze,_leftSingle_:_leftSingle_,left_:left_,right_:right_,insideOf:insideOf,insideOf_:insideOf_,outsideOf:outsideOf,_removedBegin:_removedBegin,removeBegin:removeBegin,_removedEnd:_removedEnd,removeEnd:removeEnd,replaceBegin:replaceBegin,replaceEnd:replaceEnd,replace:replace,strip:strip,stripLeft:stripLeft,stripRight:stripRight,_removeAllSpaces:_removeAllSpaces,_stripEmptyLines:_stripEmptyLines,splitsCoupledGroup:splitsCoupledGroup,splitsUngroupedJoin:splitsUngroupedJoin,splitsQuotedRejoin:splitsQuotedRejoin,splitsDropDelimeters:splitsDropDelimeters,splitsStrip:splitsStrip,splitsDropEmpty:splitsDropEmpty,splitFast:splitFast,split:split,splitNonPreserving:splitNonPreserving,splitInlined:splitInlined,splitInlinedStereo_:splitInlinedStereo_,from:from};Object.assign(_.str,StrExtension),Object.assign(_.entity,{});let ToolsExtension={strQuote:quote,strUnquote:unquote,strQuotePairsNormalize:quotePairsNormalize,strQuoteAnalyze:quoteAnalyze,_strLeftSingle_:_leftSingle_,strLeft_:left_,_strRightSingle_:function _rightSingle_(src,ins,cinterval){_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(src)),_.number.is(cinterval)?cinterval=[cinterval,src.length-1]:void 0===cinterval&&(cinterval=[0,src.length-1]),cinterval[0]=void 0===cinterval[0]?0:cinterval[0],cinterval[1]=void 0===cinterval[1]?src.length-1:cinterval[1],cinterval[0]<0&&(cinterval[0]=src.length+cinterval[0]),cinterval[1]<-1&&(cinterval[1]=src.length+cinterval[1]),_.assert(_.intervalIs(cinterval)),_.assert(0<=cinterval[0]&&cinterval[0]<=src.length),_.assert(-1<=cinterval[1]&&cinterval[1]<=src.length-1),src.length;let result=Object.create(null);result.index=-1,result.instanceIndex=-1,result.entry=void 0;let src1=src.substring(cinterval[0],cinterval[1]+1);for(let k=0,len=(ins=_.array.as(ins)).length;k<len;k++){let entry=ins[k];if(_.strIs(entry)){let found=src1.lastIndexOf(entry);found>=0&&found>result.index&&(result.instanceIndex=k,result.index=found,result.entry=entry)}else if(_.regexpIs(entry)){let regexp1=_.regexpsJoin([".*","(",entry,")"]);let match1=src1.match(regexp1);if(!match1)continue;let regexp2=_.regexpsJoin([entry,"(?!(?=.).*",entry,")"]);let match2=src1.match(regexp2);let found;_.assert(!!match2);let found1=match1[1];let found2=match2[0];let index;let index1=match1.index+match1[0].length;let index2=match2.index+match2[0].length;(index=index1===index2?found1.length<found2.length?index2-(found=found2).length:index1-(found=found1).length:index1<index2?index2-(found=found2).length:index1-(found=found1).length)>result.index&&(result.instanceIndex=k,result.index=index,result.entry=found)}else _.assert(0,"Expects string-like ( string or regexp )")}return 0!==cinterval[0]&&-1!==result.index&&(result.index+=cinterval[0]),result},strRight_:right_,strsEquivalentAll:_.vectorizeAll(_.str.equivalent.bind(_.str),2),strsEquivalentAny:_.vectorizeAny(_.str.equivalent.bind(_.str),2),strsEquivalentNone:_.vectorizeNone(_.str.equivalent.bind(_.str),2),strInsideOf:insideOf,strInsideOf_:insideOf_,strOutsideOf:outsideOf,_strRemovedBegin:_removedBegin,strRemoveBegin:removeBegin,_strRemovedEnd:_removedEnd,strRemoveEnd:removeEnd,strReplaceBegin:replaceBegin,strReplaceEnd:replaceEnd,strReplace:replace,strStrip:strip,strStripLeft:stripLeft,strStripRight:stripRight,_strRemoveAllSpaces:_removeAllSpaces,strRemoveAllSpaces:_.vectorize(_removeAllSpaces),_strStripEmptyLines:_stripEmptyLines,strStripEmptyLines:_.vectorize(_stripEmptyLines),strSplitsCoupledGroup:splitsCoupledGroup,strSplitsUngroupedJoin:splitsUngroupedJoin,strSplitsQuotedRejoin:splitsQuotedRejoin,strSplitsDropDelimeters:splitsDropDelimeters,strSplitsStrip:splitsStrip,strSplitsDropEmpty:splitsDropEmpty,strSplitFast:splitFast,strSplit:split,strSplitNonPreserving:splitNonPreserving,strSplitInlined:splitInlined,strSplitInlinedStereo_:splitInlinedStereo_,strFrom:from};_.props.extend(_,ToolsExtension),_.assert(!!_.strSplit.defaults.preservingEmpty)}()});module.exports,module.include,module.include}(),function Stringer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Stringer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Stringer_s_naked(){!function _l5_Stringer_s_(){"use strict";_global_;const _=_global_.wTools;const Parent=_.seeker.Seeker;function head(o,o2){if(null===o&&(o=Object.create(null)),o2&&_.props.supplement(o,o2),_.prototype.has(o,_.stringer.Stringer))return o;o.Seeker||(o.Seeker=Stringer);let it=o.Seeker.optionsToIteration(null,o);return _.assert(_.number.is(it.verbosity)),_.assert(_.routine.is(it.tabLevelDown)),it}function nodesExportString(src,o){let result="";return function act(src,tab){if(_.str.is(src))return result.length&&(result+="\n"),void(result+=tab+src);_.array.is(src)?src.forEach(e=>act(e,tab+o.dtab)):_.assert(0)}(src,(o=_.routine.options(nodesExportString,o)).tab),result}nodesExportString.defaults={tab:"",dtab:"  "};const StringerClassExtension=Object.create(null);StringerClassExtension.constructor=function Stringer(){},StringerClassExtension.head=head,StringerClassExtension.iteratorInitBegin=function iteratorInitBegin(iterator){return Parent.iteratorInitBegin.call(this,iterator),iterator.dstNode=[],iterator},StringerClassExtension.resultExportString=function resultExportString(){return this.iterator.result},StringerClassExtension.verbosityUp=function verbosityUp(){let it2=this.iterationMake();return it2.tabLevelUp(),it2.verbosity-=1,it2},StringerClassExtension.verbosityDown=function verbosityDown(){return this},StringerClassExtension.tabLevelUp=function tabLevelUp(){let it=this;return it.tab+=it.dtab,it.tabLevel+=1,it.dstNode=[],it.iterator.dstNode.push(it.dstNode),it},StringerClassExtension.tabLevelDown=function tabLevelDown(){let it=this;return it.tab=it.tab.slice(0,it.tab.length-it.dtab.length),it.tabLevel-=1,it},StringerClassExtension.levelUp=function levelUp(){return this.level+=1,this},StringerClassExtension.levelDown=function levelDown(){return this.level-=1,this},StringerClassExtension.write=function write(src){let it=this;return _.assert(1===arguments.length),_.assert(_.str.is(src)),it.iterator.result+=src,it.dstNode.length?it.dstNode[it.iterator.dstNode.length-1]+=src:it.dstNode.push(src),it},StringerClassExtension.eolWrite=function eolWrite(){return _.assert(0===arguments.length),this.write(this.eol),this},StringerClassExtension.tabWrite=function tabWrite(){return _.assert(0===arguments.length),this.write(this.tab),this},StringerClassExtension.lineWrite=function lineWrite(src){let it=this;return _.assert(1===arguments.length),it.iterator.result.length?it.iterator.result+=`${it.eol}${it.tab}${src}`:it.iterator.result+=`${it.tab}${src}`,it.dstNode.push(`${it.tab}${src}`),it},StringerClassExtension.titleWrite=function titleWrite(src){_.assert(1===arguments.length);let it2=this.verbosityUp();return it2.lineWrite(src),it2},StringerClassExtension.elementsWrite=function elementsWrite(src){_.assert(1===arguments.length);let it2=this.verbosityUp();for(let e of src)it2.lineWrite(e);return it2};const Iterator=StringerClassExtension.Iterator=Object.create(null);Iterator.result="",Iterator.dstNode=null,Iterator.dtab="  ",Iterator.eol=_.str.lines.Eol.default,Iterator.recursive=Infinity,_.assert(!!Iterator.eol);const Iteration=StringerClassExtension.Iteration=Object.create(null);const IterationPreserve=StringerClassExtension.IterationPreserve=Object.create(null);IterationPreserve.tab="",IterationPreserve.verbosity=2,IterationPreserve.tabLevel=0,IterationPreserve.level=0,IterationPreserve.dstNode=null;const Stringer=_.seeker.classDefine({name:"Stringer",parent:Parent,prime:{},seeker:StringerClassExtension,iterator:Iterator,iteration:Iteration,iterationPreserve:IterationPreserve});_.assert("Stringer"===Stringer.constructor.name),_.assert(""===Stringer.IterationPreserve.tab),_.assert(""===Stringer.Iteration.tab),_.assert(void 0===Stringer.Iterator.tab),_.assert(void 0===Stringer.tab);let StringerExtension={Stringer:Stringer,it:head,nodesExportString:nodesExportString};Object.assign(_.stringer,StringerExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Symbol_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Symbol.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Symbol_s_naked(){!function _l5_Symbol_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.symbol=_.symbol||Object.create(null);Object.assign(_,{}),Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Time_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Time.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Time_s_naked(){!function _l5_Time_s_(){"use strict";_global_;const _=_global_.wTools;let TimeExtension={spent:function spent(description,time){let now=_.time.now();return 1===arguments.length&&(time=arguments[0],description=""),_.assert(1<=arguments.length&&arguments.length<=2),_.assert(_.number.is(time)),_.assert(_.strIs(description)),description+_.time.spentFormat(now-time)},spentFormat:function spentFormat(spent){return _.assert(1===arguments.length),_.assert(_.number.is(spent)),(.001*spent).toFixed(3)+"s"}};_.props.supplement(_.time,TimeExtension)}()});module.exports,module.include,module.include}(),function Type_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Type.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Type_s_naked(){!function _l5_Type_s_(){"use strict";_global_;const _=_global_.wTools;_.props.supplement(_,{})}()});module.exports,module.include,module.include}(),function Units_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Units.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Units_s_naked(){!function _l5_Units_s_(){"use strict";_global_;const _=_global_.wTools;_.units=_.units||Object.create(null),Object.assign(_.units,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Unroll_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Unroll.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Unroll_s_naked(){!function _l5_Unroll_s_(){"use strict";_global_;const _=_global_.wTools;Symbol.for("unroll"),_.props.supplement(_,{})}()});module.exports,module.include,module.include}(),function Vector_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/Vector.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Vector_s_naked(){!function _l5_Vector_s_(){"use strict";_global_;const _=_global_.wTools;_.vector=_.vector||Object.create(null);var Extension={hasLength:function hasLength(src){return void 0!==src&&null!==src&&!!_.number.is(src.length)}};Object.assign(_.vector,Extension)}()});module.exports,module.include,module.include}(),function zModule_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5/zModule.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l5");let __dirname=_dirPath_;let module=_starter_._sourceMake(_filePath_,_dirPath_,function zModule_s_naked(){!function _l5_Module_s_(){"use strict";const _global=_global_;const _=_global_.wTools;const __=_realGlobal_.wTools;let ModuleFileNative=null;let __fileNativeInclude;void 0!==require?__fileNativeInclude=require:"undefined"!=typeof importScripts?__fileNativeInclude=importScripts:_global._remoteRequire&&(__fileNativeInclude=_global._remoteRequire);const hasModuleFileDescriptor=!(void 0===module);function predeclare_body(o){_.arrayPrependOnce(o.alias,o.name),_.assert(_.arrayIs(o.entryPath)),o.entryPath.forEach((entryPath,i)=>{if(_.path.isDotted(entryPath))null===o.basePath&&(o.basePath=_.path.dir(_.introspector.location({level:4}).filePath)),_.assert(_.strDefined(o.basePath),"{-o.basePath-} is required if path is relative"),entryPath=o.entryPath[i]=_.path.canonize(o.basePath+"/"+entryPath);else{let normalized=_.path.canonize(entryPath);_.path.isAbsolute(normalized)&&(entryPath=o.entryPath[i]=normalized)}if(_.path.isAbsolute(entryPath)){let module2=_.module.predeclaredWithEntryPathMap.get(entryPath);_.assert(!module2||module2.name===o.name,()=>`Module ${o.name} is trying to register entry path ${entryPath} which is registered for ${module2}`),_.module.predeclaredWithEntryPathMap.set(entryPath,o)}else{_.assert(!_.path.isDotted(entryPath));let module2=_.module.predeclaredWithEntryPathMap.get(entryPath);_.assert(!module2||module2.name===o.name,()=>`Module ${o.name} is trying to register entry path ${entryPath} which is registered for ${module2}`),_.module.predeclaredWithEntryPathMap.set(entryPath,o)}});let module2=_.module.predeclaredWithNameMap.get(o.name);if(module2){_.assert(o.name===module2.name),_.arrayAppendArrayOnce(module2.entryPath,o.entryPath),_.arrayAppendArrayOnce(module2.alias,o.alias),_.arrayAppendArrayOnce(module2.filePath,o.entryPath),_.arrayAppendArrayOnce(module2.lookPath,o.entryPath),_.arrayAppendArrayOnce(module2.lookPath,o.alias),register(module2,o.entryPath,o.alias);let files=_.module._filesWithResolvedPath(o.entryPath);return _.module._filesUniversalAssociateModule(files,module2,true),module2}register(o,o.entryPath,o.alias),_.assert(void 0===o.files),o.files=null,_.assert(void 0===o.filePath),o.filePath=o.filePath||[],_.arrayAppendArray(o.filePath,o.entryPath),_.assert(void 0===o.lookPath),o.lookPath=[...o.entryPath,...o.alias],o.ups=new Set,o.downs=new Set,delete o.basePath,o.status=0,Object.setPrototypeOf(o,_.module.Module.prototype),Object.preventExtensions(o);let files=_.module._filesWithResolvedPath(o.entryPath);return _.module._filesUniversalAssociateModule(files,o,true),o;function register(module,entryPath,alias){entryPath.forEach(entryPath=>_.module.predeclaredWithEntryPathMap.set(entryPath,module)),alias.forEach(name=>{let module3=_.module.predeclaredWithNameMap.get(name);_.assert(void 0===module3||module3===module),_.module.predeclaredWithNameMap.set(name,module)})}}predeclare_body.defaults={name:null,alias:null,entryPath:null,basePath:null};const predeclare=_.routine.unite(function predeclare_head(routine,args){let o=args[0];return _.strIs(args[0])&&(o={name:args[0],entryPath:args.length>1?args[1]:null}),_.routine.options(routine,o),_.strIs(o.alias)?o.alias=[o.alias]:null===o.alias&&(o.alias=[]),o.name||(o.name=o.alias[0]),o.entryPath=_.array.as(o.entryPath),_.assert(_.arrayIs(o.alias)),_.assert(_.strDefined(o.name)),_.assert(_.mapIs(o)),_.assert(void 0===o.files),o},predeclare_body);function predeclareAll(o){_.assert(1===arguments.length),_.assert(_.mapIs(o.modules)),_.routine.options(predeclareAll,arguments);for(let k in o.modules){let module=o.modules[k];_.assert(module.name===k||void 0===module.name),_.assert(_.mapIs(module)),module.name=k,module.basePath||(module.basePath=o.basePath),_.module.predeclare(module),delete o.modules[k]}}function _fileUniversalInit(o){try{o.sourcePath=_.path.canonize(o.sourcePath);let moduleFile2=_.module.filesMap.get(o.sourcePath);return moduleFile2?(moduleFile2.native!==o.native&&(moduleFile2.native=o.native),moduleFile2):(o.native.universal=o,Object.setPrototypeOf(o,_.module.File.prototype),_.module.filesMap.set(o.sourcePath,o),o.moduleNativeFilesMap=o.moduleNativeFilesMap||_.module.nativeFilesMap,o.global=o.global||_global,o.error=o.error||null,function pathsAmend(){_.module._prependPath&&_.arrayPrependArrayOnce(o.native.paths,_.module._prependPath),_.module._appendPath&&_.arrayAppendArrayOnce(o.native.paths,_.module._appendPath)}(),function modulesAssociate(){_.assert(void 0===o.module),_.assert(void 0===o.modules),o.module=null,o.modules=new Set;let predeclaredModule=_.module._predeclaredWithEntryPath(o.sourcePath);if(predeclaredModule&&_.module._fileUniversalAssociateModule(o,predeclaredModule),!predeclaredModule&&(null===o.requestedSourcePath||_.path.isRelative(o.requestedSourcePath))){let parentNative=_.module.fileNativeParent(o.native);let parentModules;parentNative&&parentNative.universal&&o.moduleNativeFilesMap===parentNative.universal.moduleNativeFilesMap&&parentNative.universal.module&&(_.assert(!!_.module.is(parentNative.universal.module)),_.assert(parentNative.universal.module instanceof _.module.Module),_.assert(_.set.is(parentNative.universal.modules)),parentModules=parentNative.universal.modules,_.assert(parentModules.size>0),_.module._fileUniversalAssociateModule(o,parentModules))}}(),function filesAssociate(){o.downFiles=new Set;let parent=_.module.fileNativeParent(o.native);parent&&parent.universal?_.module._fileUniversalAssociateFile(o,parent.universal):o.downFile=null,o.upFiles=new Set,o.native.children.forEach((file,index)=>{file.universal&&_.module._fileUniversalAssociateFile(file.universal,o)})}(),Object.preventExtensions(o),o)}catch(err){throw err=_.err(err,`\nError in _.module._fileUniversalInit of ${o.sourcePath}`)}}function _filesUniversalInit(o){let visited=new Set;let stack=[];if(_.routine.options(_filesUniversalInit,o),o.files=_.array.as(o.files),stack.push(...o.files),"test1"===_.__GLOBAL_NAME__)debugger;for(let i=0;i<stack.length;i++)up(stack[i]);for(;stack.length;)down(stack.pop());return visited;function up(file){if(visited.has(file))return;visited.add(file),stack.push(...file.children),_.assert(_.module.fileNativeIs(file));let fileName=file.filename||file.id;file.universal||_.module.nativeFilesMap[fileName]!==file||_.module._fileUniversalInit({sourcePath:fileName,nativeSourcePath:fileName,requestedSourcePath:null,native:file,status:2})}function down(file){file.universal&&file.children.forEach((file2,index)=>{file2.universal&&(_.module._fileUniversalAssociateFile(file2.universal,file.universal),file.universal.moduleNativeFilesMap===_.module.nativeFilesMap&&file.universal.module&&_.module._filesUniversalAssociateModule(file2.universal,file.universal.module,false))})}}function _exportString(module,it){return it.verbosity?(it.lineWrite(String(module)),1===it.verbosity?it:(module.downs.size>0&&it.titleWrite("downs").elementsWrite(module.downs),module.ups.size>0&&it.titleWrite("ups").elementsWrite(module.ups),it)):it}function exportString(module,o){let it=(o=_.routine.options(exportString,o||null)).it=_.stringer.it(o.it,{verbosity:1,recursive:1});return it.opts=o,it.src=module,function _export(module,it){_.module._exportString(module,it)}(module,it),it}function _fileExportString(file,it){return it.verbosity?(it.lineWrite(String(file)),1===it.verbosity?it:(file.native._virtualEnvironment&&it.titleWrite(`virtualEnvironment : ${file.native._virtualEnvironment.global.__GLOBAL_NAME__}`),file.global&&it.titleWrite(`global : ${file.global.__GLOBAL_NAME__}`),file.error&&it.titleWrite(`error : ${!!file.error}`),file.modules.size>0&&it.titleWrite("modules").elementsWrite(file.modules),file.downFiles.size>0&&it.titleWrite("downFiles").elementsWrite(file.downFiles),file.upFiles.size>0&&it.titleWrite("upFiles").elementsWrite(file.upFiles),it)):it}function fileExportString(file,o){_.assert(_.module.fileUniversalIs(file),()=>`Expects module file, but got ${_.strType(file)}`);let it=(o=_.routine.options(fileExportString,o||null)).it=_.stringer.it(o.it,{verbosity:1,recursive:1});return function _export(file,it){if(_.module._fileExportString(file,it),it.verbosity>0&&it.recursive-it.level>1&&file.upFiles.size>0){let it2=it.iterationMake().tabLevelUp();it.verbosity>1&&it2.lineWrite("ups").tabLevelUp();for(let file2 of file.upFiles)_export(file2,it2.iterationMake().levelUp())}}(file,it),it}function recursiveExportString(src,o){let Format=new Set(["diagnostic"]);o=_.routine.options(recursiveExportString,o||null),_.assert(Format.has(o.format));let it=o.it=_.stringer.it(o.it);it.opts=o,_.assert(_.number.is(it.depth)),_.module.fileIs(src)?_.module.fileExport(src,{it:it}):_.module.is(src)&&_.module.fileExport(src,{it:it}),it.lineWrite(operation.clname)}function filePath_head(routine,args){let o=args[0];if(_.mapIs(o)||(o={paths:o}),_.strIs(o.paths)&&(o.paths=[o.paths]),_.assert(1===args.length),_.assert(2===arguments.length),_.assert(_.arrayIs(o.paths)),_.routine.options(filePathAmend,o),_.path.nativizeMinimal&&_.path.canonize)for(var p=0;p<o.paths.length;p++)o.paths[p]=_.path.nativizeMinimal(_.path.canonize(o.paths[p]));return o}function filePathAmend_body(o){const ModuleFileNative=require("module");o.moduleFile&&void 0!==_&&(o.moduleFile=function fileNativeFrom(src){return _.module&&_.module.fileNativeFrom?_.module.fileNativeFrom(src):src}(o.moduleFile));let filePathAmend="prepend"===o.amending?function arrayPrependedArrayOnce(dstArray,insArray){let result=0;for(let i=insArray.length-1;i>=0;i--){let index=i;dstArray===insArray&&(index=i+result),-1===dstArray.indexOf(insArray[index])&&(dstArray.unshift(insArray[index]),result+=1)}return result}:function arrayAppendedArrayOnce(dstArray,insArray){let result=0;for(let i=0,len=insArray.length;i<len;i++)-1===dstArray.indexOf(insArray[i])&&(dstArray.push(insArray[i]),result+=1);return result};if(o.globally&&filePathAmend(ModuleFileNative.globalPaths,o.paths),o.locally&&o.moduleFile&&filePathAmend(o.moduleFile.paths,o.paths),o.locally&&o.permanent&&("prepend"===o.amending?(_.module._prependPath=_.module._prependPath||[],filePathAmend(_.module._prependPath,o.paths)):"append"===o.amending&&(_.module._appendPath=_.module._appendPath||[],filePathAmend(_.module._appendPath,o.paths))),o.locally&&o.recursive&&o.moduleFile)return function _root(_module,paths,visited){if(!visited.has(_module)){if(o.recursive>=2)for(;fileNativeParent(_module);)_module=fileNativeParent(_module);!function _children1(_module,paths,visited){if(!visited.has(_module)&&(visited.add(_module),filePathAmend(_module.paths,paths),o.recursive>=2&&_module.children))for(var c=0;c<_module.children.length;c++)_children2(_module.children[c],paths,visited)}(_module,paths,visited)}}(o.moduleFile,o.paths,new Set);function fileNativeParent(file){if(file.parent&&void 0!==file.parent.id)return file.parent}function _children2(_module,paths,visited){if(!visited.has(_module)&&(visited.add(_module),filePathAmend(_module.paths,paths),_module.children))for(var c=0;c<_module.children.length;c++)_children2(_module.children[c],paths,visited)}}predeclareAll.defaults={modules:null,basePath:null},_fileUniversalInit.defaults={sourcePath:null,nativeSourcePath:null,requestedSourcePath:null,native:null,moduleNativeFilesMap:null,error:null,global:null,status:null},_filesUniversalInit.defaults={files:null},_exportString.defaults={it:null},exportString.defaults={format:"diagnostic",verbosity:1,it:null},_fileExportString.defaults={it:null},fileExportString.defaults={it:null},recursiveExportString.defaults={format:"diagnostic",it:null},filePathAmend_body.defaults={moduleFile:null,paths:null,permanent:0,globally:1,locally:0,recursive:2,amending:"append"};let filePathAmend=_.routine.unite(filePath_head,filePathAmend_body);function pathRemove_body(o){const ModuleFileNative=require("module");if(o.moduleFile&&(o.moduleFile=_.module.fileNativeFrom(o.moduleFile)),o.globally&&remove(ModuleFileNative.globalPaths,o.paths),o.locally&&o.moduleFile&&remove(o.moduleFile.paths,o.paths),o.locally&&o.permanent&&(_.module._prependPath&&remove(_.module._prependPath,o.paths),_.module._appendPath&&remove(_.module._appendPath,o.paths)),o.locally&&o.recursive&&o.moduleFile)return function _root(_module,paths,visited){if(!visited.has(_module)){if(o.recursive>=2)for(;_.module.fileNativeParent(_module);)_module=_.module.fileNativeParent(_module);!function _children1(_module,paths,visited){if(!visited.has(_module)&&(visited.add(_module),remove(_module.paths,paths),o.recursive>=2&&_module.children))for(var c=0;c<_module.children.length;c++)_children2(_module.children[c],paths,visited)}(_module,paths,visited)}}(o.moduleFile,o.paths,new Set);function _children2(_module,paths,visited){if(!visited.has(_module)&&(visited.add(_module),remove(_module.paths,paths),_module.children))for(var c=0;c<_module.children.length;c++)_children2(_module.children[c],paths,visited)}function remove(dst,src){for(let p=0;p<src.length;p++)-1!==dst.indexOf(src[p])&&dst.splice(p,1)}}pathRemove_body.defaults={moduleFile:null,paths:null,permanent:0,globally:1,locally:0,recursive:2,amending:"append"};let filePathRemove=_.routine.unite(filePath_head,pathRemove_body);function filePathGet(o){const ModuleFileNative=require("module");_.mapIs(o)||(o={moduleFile:o}),_.assert(0===arguments.length||1===arguments.length),null===(o=_.routine.options(filePathGet,o)).all&&(o.all=o.locally&&o.globally);let result=Object.create(null);return o.locally&&(result.local=[]),o.globally&&(result.global=[]),o.all&&(result.all=[]),o.moduleFile&&(o.moduleFile=_.module.fileNativeFrom(o.moduleFile)),o.moduleFile=o.moduleFile||module,o.globally&&(_.assert(_.arrayIs(ModuleFileNative.globalPaths)),result.global.push(...ModuleFileNative.globalPaths),result.all&&result.all.push(...ModuleFileNative.globalPaths)),o.locally&&(_.assert(_.arrayIs(o.moduleFile.paths)),result.local.push(...o.moduleFile.paths),result.all&&result.all.push(...o.moduleFile.paths)),result}function _resolve(o){if(_.argumentsArray.like(o.moduleName)){let result=[];for(let a=0;a<o.moduleName.length;a++){let r=_.module._resolve({basePath:o.basePath,downPath:o.downPath,moduleName:o.moduleName[a],throwing:o.throwing,withAlternatives:o.withAlternatives});void 0!==r&&(result[a]=r)}return result}if(o.moduleName!==_.optional)return _.module._resolveFirst({moduleNames:[o.moduleName],downPath:o.downPath,basePath:o.basePath,throwing:o.throwing,withAlternatives:o.withAlternatives})}function _resolveFirst(o){_.mapIs(o)||(o={moduleNames:arguments}),_.assert(_.strDefined(o.downPath)),_.assert(_.strDefined(o.basePath));let sourcePaths=this._moduleNamesToPaths(o.moduleNames);let resolved=this._fileResolve({sourcePaths:sourcePaths,basePath:o.basePath,downPath:o.downPath,withAlternatives:o.withAlternatives,all:0});if(o.throwing&&void 0===resolved&&!o.moduleNames.includes(_.optional))throw _.err(`Cant resolve module::${Array.prototype.slice.call(o.moduleNames).join(" module::")}.`+`\nLooked at:\n - ${sourcePaths.join("\n - ")}`);return resolved}function _fileResolve(o){let result=[];_.mapIs(arguments[0])||(o={sourcePaths:arguments[0]});let native=_.module.nativeFilesMap[_.path.nativizeMinimal(o.downPath)];native=native||module,_.assert(1===arguments.length),_.assert(_.longIs(o.sourcePaths)),_.strDefined(o.downPath),_.strDefined(o.basePath),_.assert(!!native);for(let a=0;a<o.sourcePaths.length;a++){let sourcePath=o.sourcePaths[a];let resolved;if(void 0===(resolved=nativeResolve(sourcePath))&&o.withAlternatives){let sourcePath2=sourcePath.toLowerCase();sourcePath!==sourcePath2&&(resolved=nativeResolve(sourcePath2))}if(result.push(resolved),!o.all)return result[0]}return o.all?result:void 0;function nativeResolve(sourcePath){try{let r;return(r=_.path.isAbsolute(sourcePath)?ModuleFileNative._resolveFilename(_.path.nativizeMinimal(sourcePath),native,false,void 0):ModuleFileNative._resolveFilename(sourcePath,native,false,void 0))&&(r=_.path.normalize(r)),r}catch(err){return}}}function include(){_.assert(1===arguments.length),_.assert(_.strIs(arguments[0]));let downPath=_.path.normalize(_.introspector.location({level:1}).filePath);let basePath=_.path.dir(downPath);let resolved=_.module._resolve({basePath:basePath,downPath:downPath,moduleName:arguments,throwing:1,withAlternatives:1});if(1===resolved.length)return _.module._fileIncludeSingle(downPath,resolved[0]);{let result=[];for(let i=0;i<resolved.length;i++)result[i]=_.module._fileIncludeSingle(downPath,resolved[i]);return result}}function includeFirst(){let downPath=_.path.normalize(_.introspector.location({level:1}).filePath);let basePath=_.path.dir(downPath);let resolved=_.module._resolveFirst({basePath:basePath,downPath:downPath,moduleNames:arguments,throwing:1,withAlternatives:1});if(resolved)return _.module._fileIncludeSingle(downPath,resolved)}filePathGet.defaults={moduleFile:null,globally:1,locally:1,all:null},_resolve.defaults={basePath:null,downPath:null,moduleName:null,throwing:0,withAlternatives:1},_resolveFirst.defaults={moduleNames:null,downPath:null,basePath:null,throwing:0,withAlternatives:1},_fileResolve.defaults={sourcePaths:null,downPath:null,basePath:null,withAlternatives:1,all:0};const ModuleSymbol=Symbol.for("Module");function Module(){if(_.assert(0,"not implemented"),0!==arguments.length)throw new Error("Expects no arguments");return _.assert(this instanceof Module),this}_.class.declareBasic({constructor:Module,exportString:function moduleExportString(){return`{- ${this.constructor.name} ${this.name} -}`}}),Object.defineProperty(Module.prototype,ModuleSymbol,{enumerable:false,configurable:false,writable:false,value:true});const ModuleFileSymbol=Symbol.for("ModuleFile");function ModuleFile(){if(_.assert(0,"not implemented"),0!==arguments.length)throw new Error("Expects no arguments");return _.assert(this instanceof ModuleFile),this}_.class.declareBasic({constructor:ModuleFile,exportString:function moduleFileExportString(){return`{- ${this.constructor.name} ${this.sourcePath} -}`}}),Object.defineProperty(ModuleFile.prototype,ModuleFileSymbol,{enumerable:false,configurable:false,writable:false,value:true}),Object.defineProperty(ModuleFile.prototype,"returned",{enumerable:true,configurable:true,get:function moduleFileReturnedGet(){if(this.native)return this.native.exports}});var ModuleExtension={is:function is(src){return!!src&&!Reflect.hasOwnProperty(src,"constructor")&&true===src[ModuleSymbol]},with:function _with(name){let module=_.module.withName(name);return module||_.module.withPath(name)},withName:function withName(name){return _.module.modulesMap.get(name)||null},withPath:function withPath(filePath){let normalizedPath=_.path.canonize(filePath);let file=_.module.filesMap.get(normalizedPath);return file?file.module:null},predeclare:predeclare,predeclareAll:predeclareAll,_predeclaredWithEntryPath:function _predeclaredWithEntryPath(entryPath){let predeclaredModule=_.module.predeclaredWithEntryPathMap.get(entryPath);if(predeclaredModule)return predeclaredModule},fileIs:function fileIs(src){return!!src&&!!src.constructor&&(src.constructor.name,true)},fileUniversalIs:__.module.fileUniversalIs,fileUniversalFrom:function fileUniversalFrom(src){return _.module.fileUniversalIs(src)?src:_.module.fileNativeIs(src)?src.universal||null:void _.assert(0,`Not clear how to deduce module file from ${_.entity.strType(src)}`)},_fileUniversalFinit:function _fileUniversalFinit(file){_.assert(_.module.fileUniversalIs(file)),file.status=-1,file.native.children.forEach((nativeFile,index)=>{nativeFile.universal&&_.module._fileUniversalDisassociateFile(nativeFile.universal,file)}),file.downFiles.forEach(file2=>{_.module._fileUniversalDisassociateFile(file,file2)}),_.module._fileUniversalDisassociateModules(file,false),_.module.filesMap.delete(file.sourcePath),Object.freeze(file)},_fileUniversalInit:_fileUniversalInit,_filesUniversalInit:_filesUniversalInit,_fileUniversalAssociateFile:function _fileUniversalAssociateFile(upFile,downFile){if(!_.module.fileUniversalIs(upFile))debugger;_.assert(_.module.fileUniversalIs(upFile)),_.assert(_.module.fileUniversalIs(downFile)),upFile.downFile=upFile.downFile||downFile,upFile.downFiles.add(downFile);for(let module of upFile.modules)module.downs.add(..._.set.butElement(null,downFile.modules,module));downFile.upFiles.add(upFile);for(let module of downFile.modules)module.ups.add(..._.set.butElement(null,upFile.modules,module))},_fileUniversalDisassociateFile:function _fileUniversalDisassociateFile(upFile,downFile){_.assert(_.module.fileUniversalIs(upFile)),_.assert(_.module.fileUniversalIs(downFile)),upFile.downFiles.delete(downFile),upFile.downFile===downFile&&(upFile.downFile=[...upFile.downFiles][0]||null),downFile.upFiles.delete(upFile)},_fileUniversalAssociateModule:function _fileUniversalAssociateModule(file,module){let result=0;return _.set.is(module)?(module.forEach(module=>result+=_.module._fileUniversalAssociateModule(file,module)),result):(_.assert(_.module.fileUniversalIs(file)),_.assert(_.module.is(module)),file.modules.add(module),file.module=file.module||module,result+=1,module.files=module.files||new HashMap,module.files.set(file.sourcePath,file),module.alias.forEach(name=>{_.module.modulesMap.set(name,module)}),result)},_fileUniversalDisassociateModules:function _fileUniversalDisassociateModules(file,reassociating){let result=0;return result+=file.modules.size,file.modules.size?(reassociating?function reassociate(){let downModules=new Set;if(file.downFiles.forEach(file2=>downModules.add(...file2.modules)),file.modules.forEach(module=>{downModules.has(module)||(moduleDisassociate(module),file.modules.delete(module),module===file.module&&(file.module=null))}),file.module=null){debugger;file.module=[...file.modules][0]}}():function deassociate(){file.modules.forEach(module=>moduleDisassociate(module)),file.modules.clear(),file.module=null}(),result):result;function moduleDisassociate(module){module.files.delete(file.sourcePath)}},_filesUniversalAssociateModule:function _filesUniversalAssociateModule(files,modules,disassociating){let visited=new Set;let stack=[];if(files=_.countable.is(files)?files:[files],stack.push(...files),disassociating&&files.forEach(file=>_.module._fileUniversalDisassociateModules(file,false)),
_.set.is(modules))for(;stack.length;)modulesAssociate(stack.pop());else for(;stack.length;)moduleAssociate(stack.pop());return visited;function modulesAssociate(file){if(visited.has(file))return;if(visited.add(file),_.assert(_.module.fileUniversalIs(file)),_.assert(_.setIs(file.upFiles)),file.moduleNativeFilesMap!==_.module.nativeFilesMap)return;let module2=_.module._predeclaredWithEntryPath(file.sourcePath);module2&&!modules.has(module2)||_.set.identicalShallow(file.modules,modules)||(disassociating&&_.module._fileUniversalDisassociateModules(file,true),modules.forEach(module=>singleAssociate(file,module)))}function moduleAssociate(file){if(visited.has(file))return;visited.add(file);let module=modules;if(_.assert(_.module.fileUniversalIs(file)),_.assert(_.setIs(file.upFiles)),file.moduleNativeFilesMap!==_.module.nativeFilesMap)return;let module2=_.module._predeclaredWithEntryPath(file.sourcePath);module2&&module2!==module||(!file.modules.has(module)||1!==file.modules.size&&disassociating)&&(disassociating&&_.module._fileUniversalDisassociateModules(file,true),singleAssociate(file,module))}function singleAssociate(file,module){file.upFiles.forEach(file2=>{if(void 0===file2)debugger;void 0!==file2&&stack.push(file2)}),_.module._fileUniversalAssociateModule(file,module)}},_filesWithResolvedPath:function _filesWithResolvedPath(caninicalSourcePathCountable){let result=new Set;return _.strIs(caninicalSourcePathCountable)&&(caninicalSourcePathCountable=[caninicalSourcePathCountable]),caninicalSourcePathCountable.forEach(sourcePath=>{let file=_.module.filesMap.get(sourcePath);file&&result.add(file)}),result},_fileWithResolvedPath:function _fileWithResolvedPath(caninicalSourcePath){return _.assert(_.strIs(caninicalSourcePath)),_.module.filesMap.get(caninicalSourcePath)},_fileWithResolvedPathAnyNamespace:function _fileWithResolvedPathAnyNamespace(caninicalSourcePath){_.assert(_.strIs(caninicalSourcePath));let result=_.module.filesMap.get(caninicalSourcePath);if(!result)for(let globalName in _globals_)if(_globals_[globalName].wTools&&_globals_[globalName].wTools.module&&_globals_[globalName].wTools.module.filesMap&&(result=_globals_[globalName].wTools.module.filesMap.get(caninicalSourcePath)))return result;return result},fileWithResolvedPath:function fileWithResolvedPath(sourcePath){return _.module.filesMap.get(_.path.canonize(sourcePath))},fileWith:function fileWith(relativeSourcePath){let absoluteSourcePath=relativeSourcePath;if(_.numberIs(relativeSourcePath))return _.assert(relativeSourcePath>=0),absoluteSourcePath=_.introspector.location({level:relativeSourcePath+1}).filePath,_.module._fileWithResolvedPath(absoluteSourcePath);if(_.path.isDotted(relativeSourcePath)){let basePath=_.path.dir(_.introspector.location({level:1}).filePath);absoluteSourcePath=_.path.canonize(basePath+"/"+absoluteSourcePath)}else absoluteSourcePath=_.path.canonize(absoluteSourcePath);return _.module._fileWithResolvedPath(absoluteSourcePath)},fileNativeIs:__.module.fileNativeIs,fileNativeFrom:__.module.fileNativeFrom,fileNativeParent:__.module.fileNativeParent,_fileNativeWithResolvedNativePath:function _fileNativeWithResolvedNativePath(caninicalSourcePath,nativeFilesMap){return(nativeFilesMap=nativeFilesMap||_.module.nativeFilesMap)[caninicalSourcePath]},fileNativeWith:function fileNativeWith(relativeSourcePath,nativeFilesMap){let absoluteSourcePath=relativeSourcePath;if(_.numberIs(relativeSourcePath))return _.assert(relativeSourcePath>=0),absoluteSourcePath=_.introspector.location({level:relativeSourcePath+1}).filePath,_.module._fileNativeWithResolvedNativePath(_.path.nativizeMinimal(absoluteSourcePath),nativeFilesMap);if(_.path.isDotted(relativeSourcePath)){let basePath=_.path.dir(_.introspector.location({level:1}).filePath);absoluteSourcePath=_.path.nativizeMinimal(_.path.canonize(basePath+"/"+absoluteSourcePath))}else absoluteSourcePath=_.path.nativizeMinimal(absoluteSourcePath);return _.module._fileNativeWithResolvedNativePath(absoluteSourcePath,nativeFilesMap)},_exportString:_exportString,exportString:exportString,_fileExportString:_fileExportString,fileExportString:fileExportString,recursiveExportString:recursiveExportString,filePathAmend:filePathAmend,filePathRemove:filePathRemove,filePathGet:filePathGet,filePathIsBin:__.module.filePathIsBin,_resolve:_resolve,resolve:function resolve(moduleName){let downPath=_.path.normalize(_.introspector.location({level:1}).filePath);let basePath=_.path.dir(downPath);let result=_.module._resolve({basePath:basePath,downPath:downPath,moduleName:arguments,throwing:0,withAlternatives:1});return _.assert(_.arrayIs(result)),result.length<=1?result[0]:result},_resolveFirst:_resolveFirst,resolveFirst:function resolveFirst(){let downPath=_.path.normalize(_.introspector.location({level:1}).filePath);let basePath=_.path.dir(downPath);return _.module._resolveFirst({moduleNames:arguments,basePath:basePath,downPath:downPath,throwing:0})},_fileResolve:_fileResolve,_moduleNamesToPaths:function _moduleNamesToPaths(names){let result=[];_.assert(1===arguments.length),_.assert(_.longIs(names));for(let a=0;a<names.length;a++){let src=names[a];if(src!==_.optional){_.assert(_.strDefined(src));var descriptor=_.module.predeclaredWithNameMap.get(src);descriptor?(_.assert(_.longIs(descriptor.lookPath)),_.arrayAppendArray(result,descriptor.lookPath)):result.push(src)}}return result},_fileIncludeSingle:function _fileIncludeSingle(downPath,filePath){if(_.assert(2===arguments.length),_.assert(_.strIs(filePath),"Expects string"),!hasModuleFileDescriptor)throw _.err('Cant include, routine "require" does not exist.');let normalizedPath=_.path.nativizeMinimal(filePath);let moduleFile=_.module._fileWithResolvedPathAnyNamespace(downPath);return moduleFile?moduleFile.native.require(normalizedPath):_.module.__fileNativeInclude(normalizedPath)},include:include,includeFirst:includeFirst,isIncluded:function isIncluded(src){return!!_.module.modulesMap.has(src)},_trackingEnable:function _trackingEnable(){const ModuleFileNative=require("module");const NjsResolveFilename=ModuleFileNative._resolveFilename;const NjsLoad1=ModuleFileNative._load;const NjsLoad2=ModuleFileNative.prototype.load;const resolving=Object.create(null);resolving.request=null,resolving.parent=null,resolving.resolvedPath=null;const loading=Object.create(null);loading.request=null,loading.parent=null,loading.childrenLength=null,loading.counter=0,_.assert(_.routineIs(NjsResolveFilename)),_.assert(_.routineIs(NjsLoad1)),_.assert(_.routineIs(NjsLoad2)),ModuleFileNative._resolveFilename=_resolveFilename;const dlopen=process.dlopen;function _resolveFilename(){let request=arguments[0];let parent=arguments[1];return arguments[2],arguments[3],resolving.parent===parent&&resolving.request===request?resolving.resolvedPath:(resolving.resolvedPath=NjsResolveFilename.apply(this,arguments),resolving.request=request,resolving.parent=parent,resolving.resolvedPath)}_realGlobal_._modulingGlobal_||(ModuleFileNative._load=function _loadEnvironment(request,parent,isMain){let result;const originalModuleNativeFiles=ModuleFileNative._cache;const originalGlobal=_realGlobal_._global_;parent&&(parent._virtualEnvironment?(parent._virtualEnvironment.moduleNativeFilesMap&&(ModuleFileNative._cache=parent._virtualEnvironment.moduleNativeFilesMap),parent._virtualEnvironment.global&&(_realGlobal_._global_=parent._virtualEnvironment.global)):parent.universal&&(parent.universal.moduleNativeFilesMap&&(ModuleFileNative._cache=parent.universal.moduleNativeFilesMap),parent.universal.global&&(_realGlobal_._global_=parent.universal.global)));try{result=function _loadModuling(request,parent,isMain){let result,err;const counter=loading.counter;loading.request=request,loading.parent=parent,loading.childrenLength=parent?parent.children.length:0;try{result=NjsLoad1.apply(this,arguments)}catch(_err){err=_err}if(!err)try{loading.counter===counter&&function second(request,parent){if(!parent.universal)return;let native;if(loading.request===request&&loading.parent===parent){if(_.assert(loading.childrenLength===parent.children.length||loading.childrenLength+1===parent.children.length),loading.childrenLength===parent.children.length)return;native=parent.children[parent.children.length-1]}else{let resolvedPath=_resolveFilename(request,parent,false);native=ModuleFileNative._cache[resolvedPath],_.assert(!!_.module.fileNativeParent(native)),_.assert(0,"not tested")}native.universal&&_.module.fileNativeParent(native)!==parent&&(_.module._fileUniversalAssociateFile(native.universal,parent.universal),_.module._predeclaredWithEntryPath(native.universal.sourcePath)||_.module._filesUniversalAssociateModule(native.universal,parent.universal.modules,false))}(request,parent)}catch(err2){console.error(err2)}if(loading.request=null,loading.parent=null,err)throw err;return result}.apply(this,arguments)}catch(err){let error;throw error=parent&&parent.filename?_.err(err,`\nModule file "${parent.filename}" failed to include "${request}"`):_.err(err,`\nFailed to include "${request}"`)}finally{ModuleFileNative._cache=originalModuleNativeFiles,_realGlobal_._global_=originalGlobal}return result},_realGlobal_._modulingGlobal_=_global,process.dlopen=function dlopen2(){let r;try{r=dlopen.apply(this,arguments)}catch(err){debugger;throw err}return r}),ModuleFileNative.prototype.load=function moduleFileLoad(nativeSourcePath){let result;if(loading.counter+=1,_modulingGlobal_===_global&&function fileShare(moduleFile){const nativeSourcePath=moduleFile.fileName||moduleFile.id;if(_.module.filePathIsBin(nativeSourcePath))for(let name in _globals_){let global=_globals_[name];if(global.wTools&&global.wTools.module&&global.wTools.module.nativeFilesMap&&!global.wTools.module.nativeFilesMap[nativeSourcePath]){debugger;global.wTools.module.nativeFilesMap[nativeSourcePath]=moduleFile}}}(this),_.module.nativeFilesMap!==ModuleFileNative._cache)return NjsLoad2.apply(this,arguments);let moduleFile=_.module._fileUniversalInit({sourcePath:nativeSourcePath,nativeSourcePath:nativeSourcePath,requestedSourcePath:resolving.request,native:this,status:1});_.assert(this===ModuleFileNative._cache[moduleFile.nativeSourcePath]),_.assert(this===moduleFile.native),_.assert(resolving.resolvedPath===nativeSourcePath);try{result=NjsLoad2.apply(this,arguments)}catch(err){err=_.err(err);try{moduleFile.error=moduleFile.error||err,_.module._fileUniversalFinit(moduleFile)}catch(err2){console.error(_.err(err2))}throw err}return-1!==moduleFile.status&&(moduleFile.status=2),result}},_Setup:function _Setup(){if(_.module._modulesToPredeclare&&_.module.predeclareAll({modules:_.module._modulesToPredeclare,basePath:__dirname}),void 0!==require){if(ModuleFileNative||(ModuleFileNative=require("module")),!_.module.rootFileNative){let rootFileNative=_.module.rootFileNative=module;for(;_.module.fileNativeParent(rootFileNative);)rootFileNative=_.module.fileNativeParent(rootFileNative);_.module.rootFileNative=rootFileNative}_.module.nativeFilesMap||(_.module.nativeFilesMap=ModuleFileNative._cache),_.module._setupRequireDone||(_.module._setupRequireDone=1,_.module._trackingEnable(),_.module._filesUniversalInit({files:[_.module.rootFileNative]}),_.module.rootFileNative.universal&&(_.module.rootFile=_.module.rootFileNative.universal))}},Module:Module,File:ModuleFile,__fileNativeInclude:__fileNativeInclude,_prependPath:null,_appendPath:null,rootFile:null,rootFileNative:null,predeclaredWithNameMap:new HashMap,predeclaredWithEntryPathMap:new HashMap,modulesMap:new HashMap,nativeFilesMap:null,filesMap:new HashMap,_setupRequireDone:null};Object.assign(_.module,ModuleExtension);var ToolsExtension={include:include,includeFirst:includeFirst};Object.assign(_,ToolsExtension),_.module._Setup()}()});module.exports;let require=module.include;module.include}(),function Compose_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l6/Compose.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l6");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Compose_s_naked(){!function _Compose_s_(){"use strict";_global_;const _=_global_.wTools;_.routine.chainer=_.routine.chainer||Object.create(null),_.routine.tail=_.routine.tail||Object.create(null);let chainer={original:function originalChainer(){let args=arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(false!==result),args},originalWithDont:function originalWithDontChainer(){let args=arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(false!==result),result===_.dont?_.dont:args},composeAll:function composeAllChainer(){let args=arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(false!==result),result===_.dont?_.dont:args},chaining:function chainingChainer(){let args=arguments[0];let result=arguments[1];return arguments[2],arguments[3],_.assert(false!==result),void 0===result?args:result===_.dont?_.dont:_.unroll.from(result)}};Object.assign(_.routine.chainer,chainer);let tail={returningLast:function returningLastTail(args,fo){let result=fo.act.apply(this,args);return result[result.length-1]},composeAll:function composeAllTail(args,fo){let result=fo.act.apply(this,args);return _.assert(!!result),result.length?result[result.length-1]!==_.dont&&!!_.all(result)&&result:result},chaining:function chainingTail(args,fo){let result=fo.act.apply(this,args);return result[result.length-1]===_.dont&&result.pop(),result}};Object.assign(_.routine.tail,tail)}()});module.exports,module.include,module.include}(),function PropertyTransformers_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l6/PropertyTransformers.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l6");let module=_starter_._sourceMake(_filePath_,_dirPath_,function PropertyTransformers_s_naked(){!function _PropertyTransformer_s_(){"use strict";_global_;const _=_global_.wTools;function bypass(){let routine=function bypass(dstContainer,srcContainer,key){return true};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function assigning(){let routine=function assigning(dstContainer,srcContainer,key){_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function primitive(){let routine=function primitive(dstContainer,srcContainer,key){return!!_.primitive.is(srcContainer[key])};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function hiding(){let routine=function hiding(dstContainer,srcContainer,key){let properties={value:srcContainer[key],enumerable:false,configurable:true};Object.defineProperty(dstContainer,key,properties)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function appendingAnything(){let routine=function appendingAnything(dstContainer,srcContainer,key){void 0===dstContainer[key]?dstContainer[key]=srcContainer[key]:_.arrayIs(dstContainer[key])?dstContainer[key]=_.arrayAppendArrays(dstContainer[key],[srcContainer[key]]):dstContainer[key]=_.arrayAppendArrays([],[dstContainer[key],srcContainer[key]])};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function prependingAnything(){let routine=function prependingAnything(dstContainer,srcContainer,key){void 0===dstContainer[key]?dstContainer[key]=srcContainer[key]:_.arrayIs(dstContainer[key])?dstContainer[key]=_.arrayPrependArrays(dstContainer[key],[srcContainer[key]]):dstContainer[key]=_.arrayPrependArrays([],[dstContainer[key],srcContainer[key]])};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function appendingOnlyArrays(){let routine=function appendingOnlyArrays(dstContainer,srcContainer,key){_.arrayIs(dstContainer[key])&&_.arrayIs(srcContainer[key])?_.arrayAppendArray(dstContainer[key],srcContainer[key]):dstContainer[key]=srcContainer[key]};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function appendingOnce(){let routine=function appendingOnce(dstContainer,srcContainer,key){_.arrayIs(dstContainer[key])&&_.arrayIs(srcContainer[key])?_.arrayAppendArrayOnce(dstContainer[key],srcContainer[key]):dstContainer[key]=srcContainer[key]};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function removing(){let routine=function removing(dstContainer,srcContainer,key){let dstElement=dstContainer[key];let srcElement=srcContainer[key];_.arrayIs(dstElement)&&_.arrayIs(srcElement)?dstElement===srcElement?dstContainer[key]=[]:_.arrayRemoveArrayOnce(dstElement,srcElement):dstElement===srcElement&&delete dstContainer[key]};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function notPrimitiveAssigning(){let routine=function notPrimitiveAssigning(dstContainer,srcContainer,key){_.primitive.is(srcContainer[key])||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function assigningRecursive(){let routine=function assigningRecursive(dstContainer,srcContainer,key){_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key,_.entity.assign2FieldFromContainer)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function drop(dropContainer){debugger;_.assert(_.object.isBasic(dropContainer));let routine=function drop(dstContainer,srcContainer,key){return void 0===dropContainer[key]};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function notIdentical(){let routine=function notIdentical(dstContainer,srcContainer,key){return dstContainer[key]!==srcContainer[key]};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function srcDefined(){let routine=function srcDefined(dstContainer,srcContainer,key){return void 0!==srcContainer[key]};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHasOrSrcNotNull(){let routine=function dstNotHasOrSrcNotNull(dstContainer,srcContainer,key){return!(key in dstContainer&&void 0!==dstContainer[key])&&null!==srcContainer[key]};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotConstant(){let routine=function dstNotConstant(dstContainer,srcContainer,key){let d=Object.getOwnPropertyDescriptor(dstContainer,key);return!d||!!d.writable};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstAndSrcOwn(){let routine=function dstAndSrcOwn(dstContainer,srcContainer,key){return!!Object.hasOwnProperty.call(srcContainer,key)&&!!Object.hasOwnProperty.call(dstContainer,key)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstUndefinedSrcNotUndefined(){let routine=function dstUndefinedSrcNotUndefined(dstContainer,srcContainer,key){return void 0===dstContainer[key]&&void 0!==srcContainer[key]};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHas(){let routine=function dstNotHas(dstContainer,srcContainer,key){return!(key in dstContainer)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHasOrHasNull(){let routine=function dstNotHasOrHasNull(dstContainer,srcContainer,key){return!(key in dstContainer&&null!==dstContainer[key])};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHasOrHasNil(){let routine=function dstNotHasOrHasNil(dstContainer,srcContainer,key){return!(key in dstContainer&&dstContainer[key]!==_.nothing)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHasAssigning(){let routine=function dstNotHasAssigning(dstContainer,srcContainer,key){void 0===dstContainer[key]&&_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstNotHasAppending(){let routine=function dstNotHasAppending(dstContainer,srcContainer,key){if(key in dstContainer){debugger;_.arrayIs(dstContainer[key])&&_.arrayIs(srcContainer[key])&&_.arrayAppendArray(dstContainer,srcContainer,key)}else dstContainer[key]=srcContainer[key]};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstNotHasSrcPrimitive(){let routine=function dstNotHasSrcPrimitive(dstContainer,srcContainer,key){debugger;return!(key in dstContainer||!_.primitive.is(srcContainer[key]))};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHasSrcOwn(){let routine=function dstNotHasSrcOwn(dstContainer,srcContainer,key){return!(!Object.hasOwnProperty.call(srcContainer,key)||key in dstContainer)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHasSrcOwnAssigning(){let routine=function dstNotHasSrcOwnAssigning(dstContainer,srcContainer,key){Object.hasOwnProperty.call(srcContainer,key)&&(key in dstContainer||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key))};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstNotHasSrcOwnRoutines(){let routine=function dstNotHasSrcOwnRoutines(dstContainer,srcContainer,key){return!(!Object.hasOwnProperty.call(srcContainer,key)||!_.routine.is(srcContainer[key])||key in dstContainer)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotHasAssigningRecursive(){let routine=function dstNotHasAssigningRecursive(dstContainer,srcContainer,key){key in dstContainer||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key,_.entity.assign2FieldFromContainer)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstOwn(){let routine=function dstOwn(dstContainer,srcContainer,key){return!!Object.hasOwnProperty.call(dstContainer,key)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotOwn(){let routine=function dstNotOwn(dstContainer,srcContainer,key){return!Object.hasOwnProperty.call(dstContainer,key)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotOwnNotSame(){let routine=function dstNotOwnNotSame(dstContainer,srcContainer,key){if("groupTextualReport"===key)debugger;return!Object.hasOwnProperty.call(dstContainer,key)&&dstContainer[key]!==srcContainer[key]};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotOwnSrcOwn(){let routine=function dstNotOwnSrcOwn(dstContainer,srcContainer,key){return!!Object.hasOwnProperty.call(srcContainer,key)&&!Object.hasOwnProperty.call(dstContainer,key)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstNotOwnSrcOwnAssigning(){let routine=function dstNotOwnSrcOwnAssigning(dstContainer,srcContainer,key){Object.hasOwnProperty.call(srcContainer,key)&&(Object.hasOwnProperty.call(dstContainer,key)||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key))};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstNotOwnOrUndefinedAssigning(){let routine=function dstNotOwnOrUndefinedAssigning(dstContainer,srcContainer,key){Object.hasOwnProperty.call(dstContainer,key)&&void 0!==dstContainer[key]||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstNotOwnAssigning(){let routine=function dstNotOwnAssigning(dstContainer,srcContainer,key){if(Object.hasOwnProperty.call(dstContainer,key))return;let srcElement=srcContainer[key];_.mapIs(srcElement)||_.arrayIs(srcElement)?_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key):dstContainer[key]=srcContainer[key]};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstNotOwnAppending(){let routine=function dstNotOwnAppending(dstContainer,srcContainer,key){debugger;if(void 0!==dstContainer[key]){debugger;_.arrayIs(dstContainer[key])&&_.arrayIs(srcContainer[key])&&_.arrayAppendArray(dstContainer,srcContainer,key)}Object.hasOwnProperty.call(dstContainer,key)||(dstContainer[key]=srcContainer[key])};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function dstHasMaybeUndefined(){let routine=function dstHasMaybeUndefined(dstContainer,srcContainer,key){return key in dstContainer};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstHasButUndefined(){let routine=function dstHasButUndefined(dstContainer,srcContainer,key){return void 0!==dstContainer[key]};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstHasSrcOwn(){let routine=function dstHasSrcOwn(dstContainer,srcContainer,key){return key in dstContainer&&!!Object.hasOwnProperty.call(srcContainer,key)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function dstHasSrcNotOwn(){let routine=function dstHasSrcNotOwn(dstContainer,srcContainer,key){return key in dstContainer&&!Object.hasOwnProperty.call(srcContainer,key)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function srcOwn(){let routine=function srcOwn(dstContainer,srcContainer,key){return!!Object.hasOwnProperty.call(srcContainer,key)};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function srcOwnRoutines(){let routine=function srcOwnRoutines(dstContainer,srcContainer,key){return!!Object.hasOwnProperty.call(srcContainer,key)&&!!_.routine.is(srcContainer[key])};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function srcOwnAssigning(){let routine=function assigning(dstContainer,srcContainer,key){Object.hasOwnProperty.call(srcContainer,key)&&_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function srcOwnPrimitive(){let routine=function srcOwnPrimitive(dstContainer,srcContainer,key){return!!Object.hasOwnProperty.call(srcContainer,key)&&!!_.primitive.is(srcContainer[key])};return routine.identity={propertyCondition:true,propertyTransformer:true},routine}function srcOwnNotPrimitiveAssigning(){let routine=function srcOwnNotPrimitiveAssigning(dstContainer,srcContainer,key){Object.hasOwnProperty.call(srcContainer,key)&&(_.primitive.is(srcContainer[key])||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key))};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function srcOwnNotPrimitiveAssigningRecursive(){let routine=function srcOwnNotPrimitiveAssigningRecursive(dstContainer,srcContainer,key){Object.hasOwnProperty.call(srcContainer,key)&&(_.primitive.is(srcContainer[key])||_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key,_.entity.assign2FieldFromContainer))};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}function srcOwnAssigningRecursive(){let routine=function srcOwnAssigningRecursive(dstContainer,srcContainer,key){Object.hasOwnProperty.call(srcContainer,key)&&_.entity.assign2FieldFromContainer(dstContainer,srcContainer,key,_.entity.assign2FieldFromContainer)};return routine.identity={propertyMapper:true,propertyTransformer:true},routine}bypass.identity={propertyCondition:true,propertyTransformer:true,functor:true},assigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},primitive.identity={propertyCondition:true,propertyTransformer:true,functor:true},hiding.identity={propertyMapper:true,propertyTransformer:true,functor:true},appendingAnything.identity={propertyMapper:true,propertyTransformer:true,functor:true},prependingAnything.identity={propertyMapper:true,propertyTransformer:true,functor:true},appendingOnlyArrays.identity={propertyMapper:true,propertyTransformer:true,functor:true},appendingOnce.identity={propertyMapper:true,propertyTransformer:true,functor:true},removing.identity={propertyMapper:true,propertyTransformer:true,functor:true},notPrimitiveAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},assigningRecursive.identity={propertyMapper:true,propertyTransformer:true,functor:true},drop.identity={propertyCondition:true,propertyTransformer:true,functor:true},notIdentical.identity={propertyCondition:true,propertyTransformer:true,functor:true},srcDefined.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHasOrSrcNotNull.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotConstant.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstAndSrcOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstUndefinedSrcNotUndefined.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHas.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHasOrHasNull.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHasOrHasNil.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHasAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstNotHasAppending.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstNotHasSrcPrimitive.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHasSrcOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHasSrcOwnAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstNotHasSrcOwnRoutines.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotHasAssigningRecursive.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotOwnNotSame.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotOwnSrcOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstNotOwnSrcOwnAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstNotOwnOrUndefinedAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstNotOwnAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstNotOwnAppending.identity={propertyMapper:true,propertyTransformer:true,functor:true},dstHasMaybeUndefined.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstHasButUndefined.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstHasSrcOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},dstHasSrcNotOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},srcOwn.identity={propertyCondition:true,propertyTransformer:true,functor:true},srcOwnRoutines.identity={propertyCondition:true,propertyTransformer:true,functor:true},srcOwnAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},srcOwnPrimitive.identity={propertyCondition:true,propertyTransformer:true,functor:true},srcOwnNotPrimitiveAssigning.identity={propertyMapper:true,propertyTransformer:true,functor:true},srcOwnNotPrimitiveAssigningRecursive.identity={propertyMapper:true,propertyTransformer:true,functor:true},srcOwnAssigningRecursive.identity={propertyMapper:true,propertyTransformer:true,functor:true};let _Transformers={bypass:bypass,assigning:assigning,primitive:primitive,hiding:hiding,appendingAnything:appendingAnything,prependingAnything:prependingAnything,appendingOnlyArrays:appendingOnlyArrays,appendingOnce:appendingOnce,removing:removing,notPrimitiveAssigning:notPrimitiveAssigning,assigningRecursive:assigningRecursive,drop:drop,notIdentical:notIdentical,srcDefined:srcDefined,dstNotHasOrSrcNotNull:dstNotHasOrSrcNotNull,dstNotConstant:dstNotConstant,dstAndSrcOwn:dstAndSrcOwn,dstUndefinedSrcNotUndefined:dstUndefinedSrcNotUndefined,dstNotHas:dstNotHas,dstNotHasOrHasNull:dstNotHasOrHasNull,dstNotHasOrHasNil:dstNotHasOrHasNil,dstNotHasAssigning:dstNotHasAssigning,dstNotHasAppending:dstNotHasAppending,dstNotHasSrcPrimitive:dstNotHasSrcPrimitive,dstNotHasSrcOwn:dstNotHasSrcOwn,dstNotHasSrcOwnAssigning:dstNotHasSrcOwnAssigning,dstNotHasSrcOwnRoutines:dstNotHasSrcOwnRoutines,dstNotHasAssigningRecursive:dstNotHasAssigningRecursive,dstOwn:dstOwn,dstNotOwn:dstNotOwn,dstNotOwnNotSame:dstNotOwnNotSame,dstNotOwnSrcOwn:dstNotOwnSrcOwn,dstNotOwnSrcOwnAssigning:dstNotOwnSrcOwnAssigning,dstNotOwnOrUndefinedAssigning:dstNotOwnOrUndefinedAssigning,dstNotOwnAssigning:dstNotOwnAssigning,dstNotOwnAppending:dstNotOwnAppending,dstHasMaybeUndefined:dstHasMaybeUndefined,dstHasButUndefined:dstHasButUndefined,dstHasSrcOwn:dstHasSrcOwn,dstHasSrcNotOwn:dstHasSrcNotOwn,srcOwn:srcOwn,srcOwnRoutines:srcOwnRoutines,srcOwnAssigning:srcOwnAssigning,srcOwnPrimitive:srcOwnPrimitive,srcOwnNotPrimitiveAssigning:srcOwnNotPrimitiveAssigning,srcOwnNotPrimitiveAssigningRecursive:srcOwnNotPrimitiveAssigningRecursive,srcOwnAssigningRecursive:srcOwnAssigningRecursive};_.props.transformersRegister(_Transformers)}()});module.exports,module.include,module.include}(),function ArgumentsArray_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/ArgumentsArray.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ArgumentsArray_s_naked(){!function _l7_ArgumentsArray_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.argumentsArray=_.argumentsArray||Object.create(null);Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Array_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Array.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Array_s_naked(){!function _l7_Array_s_(){"use strict";_global_;const _=_global_.wTools;_global_.wTools,Object.assign(_,{})}()});module.exports,module.include,module.include}(),function ArraySet_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/ArraySet.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ArraySet_s_naked(){!function _l7_ArraySet_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.arraySet=_.arraySet||Object.create(null);Object.assign(Self,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Auxiliary_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Auxiliary.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Auxiliary_s_naked(){!function _l7_Auxiliary_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.aux,{})}()});module.exports,module.include,module.include}(),function BigInt_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/BigInt.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function BigInt_s_naked(){!function _l7_BigInt_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.bigInt=_.bigInt||Object.create(null);Object.assign(Self,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Bool_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Bool.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Bool_s_naked(){!function _l7_Bool_s_(){"use strict";_global_;const _=_global_.wTools;function from(src){let result=_.bool.fromMaybe(src);return _.assert(_.boolIs(result),`Cant convert ${_.entity.strType(src)} to boolean`),result}function fromMaybe(src){return _.bool.is(src)?src:_.number.is(src)?!!src:_.strIs(src)?"0"!==(src=src.toLowerCase())&&"false"!==src&&("1"===src||"true"===src||src):src}function coerceFrom(src){return _.strIs(src)?"0"!==(src=src.toLowerCase())&&"false"!==src&&"null"!==src&&"undefined"!==src&&""!==src:Boolean(src)}_.bool=_.bool||Object.create(null);let ToolsExtension={boolFrom:from,boolFromMaybe:fromMaybe,boolCoerceFrom:coerceFrom};Object.assign(_,ToolsExtension);let BoolExtension={from:from,fromMaybe:fromMaybe,coerceFrom:coerceFrom};Object.assign(_.bool,BoolExtension)}()});module.exports,module.include,module.include}(),function Buffer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Buffer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Buffer_s_naked(){!function _l7_Buffer_s_(){"use strict";_global_;const _=_global_.wTools;function bufferReusing4Arguments_head(routine,args){_.assert(2===arguments.length),_.assert(args.length>0,"Expects arguments");let o=Object.create(null);return 1===args.length?_.mapIs(args[0])?o=args[0]:(o.dst=null,o.src=args[0]):2===args.length?(o.dst=null,o.src=args[0],o.cinterval=args[1]):3===args.length?(o.dst=null,o.src=args[0],o.cinterval=args[1],o.ins=args[2]):4===args.length?(o.dst=args[0],o.src=args[1],o.cinterval=args[2],o.ins=args[3]):_.assert(0,"Expects less then 4 arguments"),_.routine.optionsWithoutUndefined(routine,o),_.assert(_.bufferAnyIs(o.src)||_.longIs(o.src)),_.assert(_.intervalIs(o.cinterval)||_.numberIs(o.cinterval)||null===o.cinterval),_.assert(_.intIs(o.minSize)&&o.minSize>=0),o.growFactor=0===o.growFactor?1:o.growFactor,o.shrinkFactor=0===o.shrinkFactor?1:o.shrinkFactor,o.dst===_.self&&(o.dst=o.src),o}function bufferReusing3Arguments_head(routine,args){let o;return _.assert(2===arguments.length),_.assert(1<=args.length&&args.length<=3),3===args.length?((o=Object.create(null)).dst=args[0],o.src=args[1],o.cinterval=args[2],o=_.bufferReusing4Arguments_head.call(this,routine,[o])):o=_.bufferReusing4Arguments_head.apply(this,arguments),o}function _bufferTypedViewMake(src){let srcTyped=src;return _.bufferRawIs(src)&&(srcTyped=new U8x(src)),_.bufferViewIs(src)&&(srcTyped=new U8x(src.buffer)),srcTyped}function _resultBufferReusedMaybe(o){let buffer;let dstOffset=0;let dstSize=o.dst.length?o.dst.length*o.dstElementSize:o.dst.byteLength;o.offsetting&&!_.bufferNodeIs(o.dst)&&_.bufferAnyIs(o.dst)&&(dstOffset=o.dst.byteOffset?o.dst.byteOffset:dstOffset,dstSize=o.dst.buffer?o.dst.buffer.byteLength:dstSize);let shouldReuse=function insideBufferBounds(dstOffset,dstSize,resultSize){let leftOffset=dstOffset+o.cinterval[0];return leftOffset>=0&&leftOffset<dstSize&&leftOffset+resultSize<=dstSize}(dstOffset,dstSize,o.dstSize);let shouldShrink=function shrinkFactorCheck(dstSize,resultSize){return o.shrinkFactor>1&&dstSize/resultSize>=o.shrinkFactor}(dstSize,o.dstSize);if(shouldReuse&&!shouldShrink){buffer=o.dst;let leftOffset=dstOffset+o.cinterval[0];let bufferLength=buffer.buffer&&!_.bufferViewIs(buffer)?buffer.length:buffer.byteLength;leftOffset===dstOffset&&o.dstSize===bufferLength||(o.offsetting||(leftOffset+=buffer.byteOffset?buffer.byteOffset:0),_.bufferNodeIs(buffer)?buffer=BufferNode.from(buffer.buffer,leftOffset,o.dstSize):buffer.buffer&&(buffer=new buffer.constructor(buffer.buffer,leftOffset,o.dstSize)))}else buffer=_resultBufferMake(o);return buffer}function _resultBufferMake(o){let buffer;let dstResultedLength=o.dstSize/o.dstElementSize;return _.assert(_.intIs(dstResultedLength)),null===o.dst?buffer=_.bufferMakeUndefined(o.src,dstResultedLength):o.dst.length===dstResultedLength?buffer=o.dst:o.dst.byteLength===o.dstSize?buffer=o.dst:_.arrayLikeResizable(o.dst)?(buffer=o.dst).length=dstResultedLength:buffer=_.bufferMakeUndefined(o.dst,dstResultedLength),buffer}function bufferReusingBut_body(o){_.assert(_.intIs(o.growFactor)&&o.growFactor>=0),_.assert(_.intIs(o.shrinkFactor)&&o.shrinkFactor>=0);let bufferLength=0;let _cinterval;bufferLength=o.dst?o.dst&&void 0!==o.dst.length?o.dst.length:o.dst.byteLength:void 0===o.src.length?o.src.byteLength:o.src.length,o.cinterval=function cintervalClamp(){return null===o.cinterval?o.cinterval=[0,-1]:_.number.is(o.cinterval)&&(o.cinterval=[o.cinterval,o.cinterval]),o.cinterval[0]<0&&(o.cinterval[0]=0),o.cinterval[1]<o.cinterval[0]-1&&(o.cinterval[1]=o.cinterval[0]-1),_cinterval=o.cinterval,[0,o.cinterval[1]]}(),null!==o.ins&&void 0!==o.ins||(o.ins=[]),_.assert(_.longIs(o.ins)||_.bufferAnyIs(o.ins));let newBufferCreate=null===o.dst;let dstBuffer;return _.assert(newBufferCreate||_.bufferAnyIs(o.dst)||_.longIs(o.dst)),o.dstElementSize=newBufferCreate?_._bufferElementSizeGet(o.src):_._bufferElementSizeGet(o.dst),o.dstSize=function bufferSizeCount(cinterval,elementSize){return(bufferLength-(cinterval[1]-cinterval[0]+1)+o.ins.length)*elementSize}(_cinterval,o.dstElementSize),o.dstSize=_._dstBufferSizeRecount(o),function dstBufferFill(){let dstTyped=arguments[0];let srcTyped=arguments[1];let cinterval=arguments[2];let ins=arguments[3];cinterval=_cinterval;let left=Math.max(0,cinterval[0]);let right=left+ins.length;let start=cinterval[1]+1;if(srcTyped.length){if(dstTyped.buffer===srcTyped.buffer){let val=srcTyped[srcTyped.length-1];for(let i=srcTyped.length-1;i>=start;i--){let temp=srcTyped[i-1];dstTyped[right+i-start]=val,val=temp}}else for(let i=srcTyped.length-1;i>=start;i--)dstTyped[right+i-start]=srcTyped[i];for(let i=0;i<left;i++)dstTyped[i]=srcTyped[i]}for(let i=left;i<right;i++)dstTyped[i]=ins[i-left]}(_bufferTypedViewMake(dstBuffer=o.reusing&&!newBufferCreate?_resultBufferReusedMaybe(o):_resultBufferMake(o)),_bufferTypedViewMake(o.src),o.cinterval,o.ins),dstBuffer}bufferReusingBut_body.defaults={dst:null,src:null,cinterval:null,ins:null,offsetting:1,reusing:1,growFactor:2,shrinkFactor:0,minSize:64};let bufferReusingBut=_.routine.unite(bufferReusing4Arguments_head,bufferReusingBut_body);function bufferReusingOnly_body(o){_.assert(_.intIs(o.shrinkFactor)&&o.shrinkFactor>=0),o.cinterval=function cintervalClamp(){let bufferLength=0;return bufferLength=o.dst?o.dst&&void 0!==o.dst.length?o.dst.length:o.dst.byteLength:void 0===o.src.length?o.src.byteLength:o.src.length,null===o.cinterval?o.cinterval=[0,bufferLength-1]:_.number.is(o.cinterval)&&(o.cinterval=[0,o.cinterval]),o.cinterval[0]<0&&(o.cinterval[0]=0),o.cinterval[1]<o.cinterval[0]-1&&(o.cinterval[1]=o.cinterval[0]-1),o.cinterval[1]>bufferLength-1&&(o.cinterval[1]=bufferLength-1),o.cinterval}(),o.growFactor=1;let newBufferCreate=null===o.dst;let dstBuffer;return _.assert(newBufferCreate||_.bufferAnyIs(o.dst)||_.longIs(o.dst)),o.dstElementSize=newBufferCreate?_._bufferElementSizeGet(o.src):_._bufferElementSizeGet(o.dst),o.dstSize=_._dstBufferSizeRecount(o),function dstBufferFill(){let dstTyped=arguments[0];let srcTyped=arguments[1];let cinterval=arguments[2];let left=Math.max(0,cinterval[0]);let right=Math.min(cinterval[1],srcTyped.length-1);let i;for(i=left;i<right+1;i++)dstTyped[i-left]=srcTyped[i];if(_.arrayLikeResizable(dstTyped)&&i-left<dstTyped.length)for(;i-left<dstTyped.length;i++)dstTyped[i-left]=void 0}(_bufferTypedViewMake(dstBuffer=o.reusing&&!newBufferCreate?_resultBufferReusedMaybe(o):_resultBufferMake(o)),_bufferTypedViewMake(o.src),o.cinterval,o.ins),dstBuffer}bufferReusingOnly_body.defaults={dst:null,src:null,cinterval:null,offsetting:1,reusing:1,shrinkFactor:0,minSize:64};let bufferReusingOnly=_.routine.unite(bufferReusing3Arguments_head,bufferReusingOnly_body);function bufferReusingGrow_body(o){_.assert(_.intIs(o.growFactor)&&o.growFactor>=0);let srcLength=o.src.byteLength;void 0!==o.src.length&&(srcLength=o.src.length),o.cinterval=function cintervalClamp(){let bufferLength=0;return bufferLength=o.dst?o.dst&&void 0!==o.dst.length?o.dst.length:o.dst.byteLength:void 0===o.src.length?o.src.byteLength:o.src.length,null===o.cinterval?o.cinterval=[0,bufferLength-1]:_.number.is(o.cinterval)&&(o.cinterval=[0,o.cinterval-1]),o.cinterval[0]>0&&(o.cinterval[0]=0),o.cinterval[1]<o.cinterval[0]-1&&(o.cinterval[1]=o.cinterval[0]-1),o.cinterval[1]<bufferLength-1&&(o.cinterval[1]=bufferLength-1),o.cinterval}();let newBufferCreate=null===o.dst;let dstBuffer;return _.assert(newBufferCreate||_.bufferAnyIs(o.dst)||_.longIs(o.dst)),o.dstElementSize=newBufferCreate?_._bufferElementSizeGet(o.src):_._bufferElementSizeGet(o.dst),o.dstSize=_._dstBufferSizeRecount(o),function dstBufferFill(){let dstTyped=arguments[0];let srcTyped=arguments[1];let cinterval=arguments[2];arguments[3];let offset=Math.max(0,-cinterval[0]);let rightBound=Math.min(dstTyped.length,srcLength);let length=dstTyped.length;if(dstTyped!==srcTyped)for(let i=offset;i<rightBound+offset;i++)dstTyped[i]=srcTyped[i-offset];for(let i=0;i<offset;i++)dstTyped[i]=o.ins;for(let i=offset+rightBound;i<length;i++)dstTyped[i]=o.ins}(_bufferTypedViewMake(dstBuffer=o.reusing&&!newBufferCreate?_resultBufferReusedMaybe(o):_resultBufferMake(o)),_bufferTypedViewMake(o.src),o.cinterval,o.ins),dstBuffer}bufferReusingGrow_body.defaults={dst:null,src:null,cinterval:null,ins:null,offsetting:1,reusing:1,growFactor:2,minSize:64};let bufferReusingGrow=_.routine.unite(bufferReusing4Arguments_head,bufferReusingGrow_body);function bufferReusingRelength_body(o){let left,right;_.assert(_.intIs(o.growFactor)&&o.growFactor>=0),_.assert(_.intIs(o.shrinkFactor)&&o.shrinkFactor>=0);let srcLength=o.src.byteLength;void 0!==o.src.length&&(srcLength=o.src.length),o.cinterval=function cintervalClamp(){let bufferLength=0;return bufferLength=o.dst?o.dst&&void 0!==o.dst.length?o.dst.length:o.dst.byteLength:void 0===o.src.length?o.src.byteLength:o.src.length,null===o.cinterval?o.cinterval=[0,bufferLength-1]:_.number.is(o.cinterval)&&(o.cinterval=[0,o.cinterval-1]),left=o.cinterval[0],right=o.cinterval[1],o.cinterval[1]<o.cinterval[0]-1&&(o.cinterval[1]=o.cinterval[0]-1),o.cinterval}();let newBufferCreate=null===o.dst;let dstBuffer;return _.assert(newBufferCreate||_.bufferAnyIs(o.dst)||_.longIs(o.dst)),o.dstElementSize=newBufferCreate?_._bufferElementSizeGet(o.src):_._bufferElementSizeGet(o.dst),o.dstSize=_._dstBufferSizeRecount(o),function dstBufferFill(){let dstTyped=arguments[0];let srcTyped=arguments[1];arguments[2],arguments[3];let offset=left<0?Math.max(0,-left):0;left=left<0?0:left;let rightBound=Math.min(srcTyped.length,right-left+1);rightBound=Math.min(rightBound,srcLength);let length=dstTyped.length;let i;for(i=offset;i<rightBound+offset&&i-offset+left<srcTyped.length;i++)dstTyped[i]=srcTyped[i-offset+left];for(i>srcLength+offset-left&&(i=srcLength+offset-left);i<length;i++)dstTyped[i]=o.ins;for(let i=0;i<offset;i++)dstTyped[i]=o.ins}(_bufferTypedViewMake(dstBuffer=o.reusing&&!newBufferCreate?_resultBufferReusedMaybe(o):_resultBufferMake(o)),_bufferTypedViewMake(o.src),o.cinterval,o.ins),dstBuffer}bufferReusingRelength_body.defaults={dst:null,src:null,cinterval:null,ins:null,offsetting:1,reusing:1,growFactor:2,shrinkFactor:0,minSize:64};let bufferReusingRelength=_.routine.unite(bufferReusing4Arguments_head,bufferReusingRelength_body);function bufferReusingResize_body(o){let left,right;_.assert(_.intIs(o.shrinkFactor)&&o.shrinkFactor>=0),_.assert(_.intIs(o.growFactor)&&o.growFactor>=0),_.assert(_.bufferAnyIs(o.src),"Expects buffer {-src-}"),o.cinterval=function cintervalClamp(){let bufferLength=0;return bufferLength=o.dst?o.dst&&void 0!==o.dst.length?o.dst.length:o.dst.byteLength:void 0===o.src.length?o.src.byteLength:o.src.length,null===o.cinterval?o.cinterval=[0,bufferLength-1]:_.number.is(o.cinterval)&&(o.cinterval=[0,o.cinterval-1]),left=o.cinterval[0],right=o.cinterval[1],o.cinterval[1]<o.cinterval[0]-1&&(o.cinterval[1]=o.cinterval[0]-1),o.cinterval}();let newBufferCreate=null===o.dst;let dstBuffer;return _.assert(newBufferCreate||_.bufferAnyIs(o.dst)||_.longIs(o.dst)),o.dstElementSize=newBufferCreate?_._bufferElementSizeGet(o.src):_._bufferElementSizeGet(o.dst),o.dstSize=function bufferSizeCount(cinterval){return cinterval[1]-cinterval[0]+1}(o.cinterval),o.dstSize=_._dstBufferSizeRecount(o),function dstBufferFill(){let dstTyped=arguments[0];let srcTyped=arguments[1];if(arguments[2],arguments[3],srcTyped===dstTyped)return dstTyped;_.bufferAnyIs(dstTyped)&&(dstTyped=_.bufferBytesFrom(dstTyped.buffer?dstTyped.buffer:dstTyped));let srcBytesView=srcTyped;_.bufferAnyIs(srcTyped)&&(srcBytesView=_.bufferBytesFrom(srcTyped.buffer?srcTyped.buffer:srcTyped));let offset=srcTyped.byteOffset?srcTyped.byteOffset:0;offset+=left;let length=right-left+1;if(dstTyped.buffer===srcTyped.buffer)dstTyped=new dstTyped.constructor(dstTyped.buffer,offset,length);else for(let i=0;i<dstTyped.length&&i<length;i++)dstTyped[i]=srcBytesView[offset+i]?srcBytesView[offset+i]:0}(_bufferTypedViewMake(dstBuffer=o.reusing&&!newBufferCreate?_resultBufferReusedMaybe(o):_resultBufferMake(o)),_bufferTypedViewMake(o.src),o.cinterval,o.ins),dstBuffer}bufferReusingResize_body.defaults={dst:null,src:null,cinterval:null,offsetting:1,reusing:1,growFactor:2,shrinkFactor:0,minSize:64};let bufferReusingResize=_.routine.unite(bufferReusing3Arguments_head,bufferReusingResize_body);function bufferMove(dst,src){if(2===arguments.length){if(_.assert(_.longIs(dst)),_.assert(_.longIs(src)),dst.length!==src.length)throw _.err("_.bufferMove :",'"dst" and "src" must have same length');if(dst.set&&(src instanceof U64x||src instanceof I64x))for(let s=0;s<src.length;s++)dst[s]=Number(src[s]);else if(dst.set&&(dst instanceof U64x||dst instanceof I64x))dst.set(_.bigInt.s.from(src));else if(dst.set)dst.set(src);else for(let s=0;s<src.length;s++)dst[s]=src[s]}else if(1===arguments.length){let options=arguments[0];if(_.map.assertHasOnly(options,bufferMove.defaults),src=options.src,dst=options.dst,_.bufferRawIs(dst)&&(dst=new U8x(dst),!_.bufferTypedIs(src)||src instanceof U8x||(src=new U8x(src.buffer,src.byteOffset,src.byteLength))),_.assert(_.longIs(dst)),_.assert(_.longIs(src)),options.dstOffset=options.dstOffset||0,dst.set&&(src instanceof U64x||src instanceof I64x))for(let s=0,d=options.dstOffset;s<src.length;s++,d++)dst[d]=Number(src[s]);else if(dst.set&&(dst instanceof U64x||dst instanceof I64x))dst.set(_.bigInt.s.from(src),options.dstOffset);else if(dst.set)dst.set(src,options.dstOffset);else for(let s=0,d=options.dstOffset;s<src.length;s++,d++)dst[d]=src[s]}else _.assert(0,"unexpected");return dst}function bufferIsolate_head(routine,args){let o;return args.length>1?o=3===args.length?{src:args[0],delimeter:args[1],times:args[2]}:2===args.length?{src:args[0],delimeter:args[1]}:{src:args[0]}:(o=args[0],_.assert(1===args.length,"Expects single argument")),_.routine.options(routine,o),_.assert(1<=args.length&&args.length<=3),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.bufferAnyIs(o.src)||_.strIs(o.src)),_.assert(_.bufferAnyIs(o.delimeter)||_.strIs(o.delimeter)),_.assert(_.number.is(o.times)),o}function bufferIsolate_body(o){_.routine.assertOptions(bufferIsolate_body,arguments);let src=o.src;_.strIs(o.src)&&(src=o.src=_.bufferBytesGet(o.src)),_.bufferTypedIs(o.src)||(src=_.bufferBytesGet(o.src));let delimeter=o.delimeter;!_.strIs(o.delimeter)&&_.bufferTypedIs(o.delimeter)||(delimeter=_.bufferBytesGet(o.delimeter)),delimeter=_.bufferRetype(delimeter,src.constructor),_.assert(_.routine.is(src.indexOf)),_.assert(_.routine.is(delimeter.indexOf));let result=[];let times=o.times;let index=o.left?0:src.length;let more=o.left?function bufferLeft(index){for(index=src.indexOf(delimeter[0],index);-1!==index;){let i=0;for(;i<delimeter.length&&src[index+i]===delimeter[i];i++);if(i===delimeter.length)return index;index+=1,index=src.indexOf(delimeter[0],index)}return index}:function bufferRight(index){for(index=src.lastIndexOf(delimeter[0],index);-1!==index;){let i=0;for(;i<delimeter.length&&src[index+i]===delimeter[i];i++);if(i===delimeter.length)return index;index-=1,index=src.lastIndexOf(delimeter[0],index)}return index};for(;times>0&&-1!==(index=more(index));){if(0==(times-=1)){if(o.src.constructor===src.constructor){let del=delimeter;result.push(o.src.subarray(0,index)),result.push(new o.src.constructor(del.buffer,del.byteOffset,del.byteLength/(o.src.BYTES_PER_ELEMENT||1))),result.push(o.src.subarray(index+delimeter.length))}else if(o.src.constructor===BufferRaw)result.push(o.src.slice(0,index)),result.push(delimeter.buffer.slice(delimeter.byteOffset,delimeter.byteOffset+delimeter.byteLength)),result.push(o.src.slice(index+delimeter.length,src.byteLength));else{let del=delimeter;result.push(new o.src.constructor(o.src.buffer,o.src.byteOffset,index)),result.push(new o.src.constructor(del.buffer,del.byteOffset,del.byteLength/(o.src.BYTES_PER_ELEMENT||1)));let secondOffset=src.byteOffset+index*(o.src.BYTES_PER_ELEMENT||1)+delimeter.length;result.push(new o.src.constructor(o.src.buffer,secondOffset,o.src.byteOffset+src.byteLength-secondOffset))}return result}if(o.left){if((index+=1)>=src.length)break}else if((index-=1)<=0)break}return result.length?result:0===o.times?everything(!o.left):times===o.times?everything(o.left^o.none):everything(o.left);function everything(side){let empty=new U8x(0).buffer;return side?[o.src,void 0,new o.src.constructor(empty)]:[new o.src.constructor(empty),void 0,o.src]}}bufferMove.defaults={dst:null,src:null,dstOffset:null},bufferIsolate_body.defaults={src:null,delimeter:" ",left:1,times:1,none:1};let bufferIsolate=_.routine.unite(bufferIsolate_head,bufferIsolate_body);function bufferIsolateLeftOrNone_body(o){return o.left=1,o.none=1,_.bufferIsolate.body(o)}bufferIsolateLeftOrNone_body.defaults={src:null,delimeter:" ",times:1};let bufferIsolateLeftOrNone=_.routine.unite(bufferIsolate_head,bufferIsolateLeftOrNone_body);function bufferIsolateLeftOrAll_body(o){return o.left=1,o.none=0,_.bufferIsolate.body(o)}bufferIsolateLeftOrAll_body.defaults={src:null,delimeter:" ",times:1};let bufferIsolateLeftOrAll=_.routine.unite(bufferIsolate_head,bufferIsolateLeftOrAll_body);function bufferIsolateRightOrNone_body(o){return o.left=0,o.none=1,_.bufferIsolate.body(o)}bufferIsolateRightOrNone_body.defaults={src:null,delimeter:" ",times:1};let bufferIsolateRightOrNone=_.routine.unite(bufferIsolate_head,bufferIsolateRightOrNone_body);function bufferIsolateRightOrAll_body(o){return o.left=0,o.none=0,_.bufferIsolate.body(o)}bufferIsolateRightOrAll_body.defaults={src:null,delimeter:" ",times:1};let bufferIsolateRightOrAll=_.routine.unite(bufferIsolate_head,bufferIsolateRightOrAll_body);Object.assign(_.buffer,{});let ToolsExtension={bufferRelen:function bufferRelen(src,len){let result=src;return _.assert(_.bufferTypedIs(src)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.number.is(len)),len>src.length?(result=_.long.makeUndefined(src,len)).set(src):len<src.length&&(result=src.subarray(0,len)),result},bufferBut_:function bufferBut_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]);let dstLength=0;null!==dst&&(dstLength=void 0===dst.length?dst.byteLength:dst.length);let srcLength=void 0===src.length?src.byteLength:src.length;void 0===cinterval?(cinterval=[0,-1],ins=void 0):_.number.is(cinterval)&&(cinterval=[cinterval,cinterval]),_.assert(_.bufferAnyIs(dst)||_.longIs(dst)||null===dst,"Expects {-dst-} of any buffer type, long or null"),_.assert(_.bufferAnyIs(src)||_.longIs(src),"Expects {-src-} of any buffer type or long"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}"),_.assert(_.longIs(ins)||_.bufferNodeIs(ins)||void 0===ins||null===ins,"Expects iterable buffer {-ins-}");let first=cinterval[0]=void 0===cinterval[0]?0:cinterval[0];let last=cinterval[1]=void 0===cinterval[1]?srcLength-1:cinterval[1];first<0&&(first=0),first>srcLength&&(first=srcLength),last>srcLength-1&&(last=srcLength-1),last+1<first&&(last=first-1);let delta=last-first+1;let insLength=0;ins&&(insLength=void 0===ins.length?ins.byteLength:ins.length);let delta2=delta-insLength;let resultLength=srcLength-delta2;let result=dst;if(null===dst)result=_.bufferMakeUndefined(src,resultLength);else if(dst===src){if(dstLength===resultLength&&0===delta)return dst;if(_.arrayLikeResizable(dst))return ins?dst.splice(first,delta,...ins):dst.splice(first,delta),dst;(dstLength!==resultLength||_.argumentsArray.is(dst))&&(result=_.bufferMakeUndefined(dst,resultLength))}else dstLength!==resultLength&&(dst=_.bufferMakeUndefined(dst,resultLength));let resultTyped=result;_.bufferRawIs(result)?resultTyped=new U8x(result):_.bufferViewIs(result)&&(resultTyped=new U8x(result.buffer));let srcTyped=src;_.bufferRawIs(src)?srcTyped=new U8x(src):_.bufferViewIs(src)&&(srcTyped=new U8x(src.buffer));for(let i=0;i<first;i++)resultTyped[i]=srcTyped[i];for(let i=last+1;i<srcLength;i++)resultTyped[i-delta2]=srcTyped[i];if(ins)for(let i=0;i<insLength;i++)resultTyped[first+i]=ins[i];return result},bufferOnly_:function bufferOnly_(dst,src,cinterval){_.assert(1<=arguments.length&&arguments.length<=3,"Expects not {-ins-} argument"),arguments.length<3&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1]);let dstLength=0;null!==dst&&(dstLength=void 0===dst.length?dst.byteLength:dst.length);let srcLength=void 0===src.length?src.byteLength:src.length;void 0===cinterval&&(cinterval=[0,srcLength-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval]),_.assert(_.bufferAnyIs(dst)||_.longIs(dst)||null===dst,"Expects {-dst-} of any buffer type, long or null"),_.assert(_.bufferAnyIs(src)||_.longIs(src),"Expects {-src-} of any buffer type or long"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0===cinterval[0]?0:cinterval[0];let last=cinterval[1]=void 0===cinterval[1]?srcLength-1:cinterval[1];first<0&&(first=0),last>srcLength-1&&(last=srcLength-1),last+1<first&&(last=first-1);let first2=Math.max(first,0);let last2=Math.min(srcLength-1,last);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.bufferMakeUndefined(src,resultLength);else if(dst===src){if(dstLength===resultLength)return dst;if(_.arrayLikeResizable(dst))return _.assert(Object.isExtensible(dst),"Array is not extensible, cannot change array"),0===resultLength?_.longEmpty(dst):(dst.splice(last2+1,dst.length-last+1),dst.splice(0,first2),dst);(dstLength!==resultLength||_.argumentsArray.is(dst))&&(result=_.bufferMakeUndefined(dst,resultLength))}else dstLength!==resultLength&&(_.arrayLikeResizable(result)?result.splice(resultLength):result=_.bufferMakeUndefined(dst,resultLength));let resultTyped=result;_.bufferRawIs(result)?resultTyped=new U8x(result):_.bufferViewIs(result)&&(resultTyped=new U8x(result.buffer));let srcTyped=src;_.bufferRawIs(src)?srcTyped=new U8x(src):_.bufferViewIs(src)&&(srcTyped=new U8x(src.buffer));for(let r=first2;r<last2+1;r++)resultTyped[r-first2]=srcTyped[r];return result},bufferGrow_:function bufferGrow_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]);let dstLength=0;null!==dst&&(dstLength=void 0===dst.length?dst.byteLength:dst.length);let srcLength=void 0===src.length?src.byteLength:src.length;void 0===cinterval&&(cinterval=[0,srcLength-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(_.bufferAnyIs(dst)||_.longIs(dst)||null===dst,"Expects {-dst-} of any buffer type, long or null"),_.assert(_.bufferAnyIs(src)||_.longIs(src),"Expects {-src-} of any buffer type or long"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0===cinterval[0]?0:cinterval[0];let last=cinterval[1]=void 0===cinterval[1]?srcLength-1:cinterval[1];first>0&&(first=0),last<srcLength-1&&(last=srcLength-1),first<0&&(last-=first,first-=first),last+1<first&&(last=first-1);let first2=Math.max(-cinterval[0],0);let last2=Math.min(srcLength-1+first2,last+first2);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.bufferMakeUndefined(src,resultLength);else if(dst===src){if(dstLength===resultLength)return dst;if(_.arrayLikeResizable(dst))return _.assert(Object.isExtensible(dst),"Array is not extensible, cannot change array"),dst.splice(first,0,..._.dup(ins,first2)),dst.splice(last2+1,0,..._.dup(ins,resultLength<=last2?0:resultLength-last2-1)),dst;(dstLength!==resultLength||_.argumentsArray.is(dst))&&(result=_.bufferMakeUndefined(dst,resultLength))}else dstLength!==resultLength&&(_.arrayLikeResizable(result)?result.splice(resultLength):result=_.bufferMakeUndefined(dst,resultLength));let resultTyped=result;_.bufferRawIs(result)?resultTyped=new U8x(result):_.bufferViewIs(result)&&(resultTyped=new U8x(result.buffer));let srcTyped=src;_.bufferRawIs(src)?srcTyped=new U8x(src):_.bufferViewIs(src)&&(srcTyped=new U8x(src.buffer));for(let r=first2;r<last2+1;r++)resultTyped[r]=srcTyped[r-first2];if(void 0!==ins){for(let r=0;r<first2;r++)resultTyped[r]=ins;for(let r=last2+1;r<resultLength;r++)resultTyped[r]=ins}return result},bufferRelength_:function bufferRelength_(){let dst=arguments[0];let src=arguments[1];let cinterval=arguments[2];let ins=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4),arguments.length<4&&null!==dst&&dst!==src&&(dst=arguments[0],src=arguments[0],cinterval=arguments[1],ins=arguments[2]);let dstLength=0;null!==dst&&(dstLength=void 0===dst.length?dst.byteLength:dst.length);let srcLength=void 0===src.length?src.byteLength:src.length;void 0===cinterval&&(cinterval=[0,srcLength-1]),_.number.is(cinterval)&&(cinterval=[0,cinterval-1]),_.assert(_.bufferAnyIs(dst)||_.longIs(dst)||null===dst,"Expects {-dst-} of any buffer type, long or null"),_.assert(_.bufferAnyIs(src)||_.longIs(src),"Expects {-src-} of any buffer type or long"),_.assert(_.intervalIs(cinterval),"Expects cinterval {-cinterval-}");let first=cinterval[0]=void 0===cinterval[0]?0:cinterval[0];let last=cinterval[1]=void 0===cinterval[1]?srcLength-1:cinterval[1];last<first&&(last=first-1),cinterval[1]<0&&cinterval[0]<0&&(cinterval[0]-=cinterval[1]+1),first<0&&(last-=first,first-=first);let first2=Math.max(Math.abs(cinterval[0]),0);let last2=Math.min(srcLength-1,last);let resultLength=last-first+1;let result=dst;if(null===dst)result=_.bufferMakeUndefined(src,resultLength);else if(dst===src){if(dstLength===resultLength&&0===cinterval[0])return dst;if(_.arrayLikeResizable(dst))return _.assert(Object.isExtensible(dst),"dst is not extensible, cannot change dst"),cinterval[0]<0?(dst.splice(first,0,..._.dup(ins,first2)),dst.splice(last2+1,src.length-last2,..._.dup(ins,last-last2))):(dst.splice(0,first),dst.splice(last2+1-first2,src.length-last2,..._.dup(ins,last-last2))),dst;(dstLength!==resultLength||_.argumentsArray.is(dst))&&(result=_.bufferMakeUndefined(dst,resultLength))}else dstLength!==resultLength&&(_.arrayLikeResizable(result)?result.splice(resultLength):result=_.bufferMakeUndefined(dst,resultLength));let resultTyped=result;_.bufferRawIs(result)?resultTyped=new U8x(result):_.bufferViewIs(result)&&(resultTyped=new U8x(result.buffer));let srcTyped=src;if(_.bufferRawIs(src)?srcTyped=new U8x(src):_.bufferViewIs(src)&&(srcTyped=new U8x(src.buffer)),0===resultLength)return result;if(cinterval[0]<0){for(let r=first2;r<last2+1+first2&&r<resultLength;r++)resultTyped[r]=srcTyped[r-first2];if(void 0!==ins){for(let r=0;r<first2;r++)resultTyped[r]=ins;for(let r=last2+1+first2;r<resultLength;r++)resultTyped[r]=ins}}else{for(let r=first2;r<last2+1;r++)resultTyped[r-first2]=srcTyped[r];if(void 0!==ins)for(let r=last2+1;r<last+1;r++)resultTyped[r-first2]=ins}return result},bufferResize_:function bufferResize_(dst,srcBuffer,size){null===dst&&(dst=_.nothing),2===arguments.length&&(size=srcBuffer,srcBuffer=dst);let range=_.intervalIs(size)?size:[0,size];if(size=range[1]-range[0],range[1]<range[0]&&(range[1]=range[0]),_.assert(_.bufferAnyIs(srcBuffer)&&srcBuffer.byteLength>=0),_.assert(_.intervalIs(range)),_.assert(2===arguments.length||3===arguments.length),dst===srcBuffer&&0===range[0]&&range[1]===srcBuffer.byteLength)return srcBuffer;let result;let newOffset=srcBuffer.byteOffset?srcBuffer.byteOffset+range[0]:range[0];if(dst===_.nothing){_.assert(dst===_.nothing),result=_.bufferMakeUndefined(srcBuffer,size/srcBuffer.BYTES_PER_ELEMENT||size);let resultTyped=_.bufferRawIs(result)?new U8x(result):new U8x(result.buffer);let srcBufferToU8x=_.bufferRawIs(srcBuffer)?new U8x(srcBuffer):new U8x(srcBuffer.buffer);let first=Math.max(newOffset,0);let last=Math.min(srcBufferToU8x.byteLength,newOffset+size);newOffset=newOffset<0?-newOffset:0;for(let r=first;r<last;r++)resultTyped[r-first+newOffset]=srcBufferToU8x[r]}else{_.assert(_.bufferAnyIs(dst)),
result=dst===srcBuffer&&!_.bufferRawIs(srcBuffer)&&newOffset>=0&&newOffset+size<=srcBuffer.buffer.byteLength?_.bufferNodeIs(srcBuffer)?BufferNode.from(srcBuffer.buffer,newOffset,size):_.bufferViewIs(srcBuffer)?new BufferView(srcBuffer.buffer,newOffset,size):new srcBuffer.constructor(srcBuffer.buffer,newOffset,size/srcBuffer.BYTES_PER_ELEMENT):_.bufferRawIs(dst)?size===dst.byteLength?dst:_.bufferMakeUndefined(dst,size):size<=dst.byteLength?dst:_.bufferMakeUndefined(dst,size/dst.BYTES_PER_ELEMENT||size);let dstTyped=_.bufferRawIs(result)?new U8x(result):new U8x(result.buffer);let srcBufferToU8x=_.bufferRawIs(srcBuffer)?new U8x(srcBuffer):new U8x(srcBuffer.buffer);let first=Math.max(newOffset,0);let last=Math.min(srcBufferToU8x.byteLength,newOffset+size);for(let r=first;r<last;r++)dstTyped[r-first]=srcBufferToU8x[r];dstTyped.fill(0,last-first,dstTyped.length)}return result},bufferReusing4Arguments_head:bufferReusing4Arguments_head,bufferReusing3Arguments_head:bufferReusing3Arguments_head,_bufferElementSizeGet:function _bufferElementSizeGet(src){return src.BYTES_PER_ELEMENT?src.BYTES_PER_ELEMENT:void 0===src.byteLength?8:1},_dstBufferSizeRecount:function _dstBufferSizeRecount(o){if(_.numberIs(o.dstSize)||(o.dstSize=(o.cinterval[1]-o.cinterval[0]+1)*o.dstElementSize),o.growFactor>1&&o.reusing&&null!==o.dst){let dstSize=o.dst.length?o.dst.length*o.dstElementSize:o.dst.byteLength;if(dstSize<o.dstSize){let growed=dstSize*o.growFactor;o.dstSize=growed>o.dstSize?growed:o.dstSize}}return o.dstSize=o.minSize>o.dstSize?o.minSize:o.dstSize,o.dstSize},_bufferTypedViewMake:_bufferTypedViewMake,_resultBufferReusedMaybe:_resultBufferReusedMaybe,_resultBufferMake:_resultBufferMake,bufferReusingBut:bufferReusingBut,bufferReusingOnly:bufferReusingOnly,bufferReusingGrow:bufferReusingGrow,bufferReusingRelength:bufferReusingRelength,bufferReusingResize:bufferReusingResize,bufferBytesGet:function bufferBytesGet(src){return _.assert(1===arguments.length,"Expects single argument"),src instanceof BufferRaw||src instanceof BufferRawShared?new U8x(src):"undefined"!=typeof BufferNode&&src instanceof BufferNode?new U8x(src.buffer,src.byteOffset,src.byteLength):_.bufferTypedIs(src)?new U8x(src.buffer,src.byteOffset,src.byteLength):_.bufferViewIs(src)?new U8x(src.buffer,src.byteOffset,src.byteLength):_.strIs(src)?_global_.BufferNode?new U8x(_.bufferRawFrom(BufferNode.from(src,"utf8"))):new U8x(_.encode.utf8ToBuffer(src)):void _.assert(0,"wrong argument")},bufferRetype:function bufferRetype(src,bufferType){_.assert(2===arguments.length,"Expects source buffer {-src-} and constructor of buffer {-bufferTyped-}"),_.assert(_.bufferTypedIs(src)),_.assert(_.constructorIsBuffer(bufferType));let o=src.byteOffset;let l=Math.floor(src.byteLength/bufferType.BYTES_PER_ELEMENT);return new bufferType(src.buffer,o,l)},bufferJoin:function bufferJoin(){if(arguments.length<2)return _.assert(_.bufferAnyIs(arguments[0])||!arguments[0]),arguments[0]||null;let srcs=[];let size=0;let firstSrc;for(let s=0;s<arguments.length;s++){let src=arguments[s];null!==src&&(firstSrc||(firstSrc=src),_.bufferRawIs(src)?srcs.push(new U8x(src)):src instanceof U8x?srcs.push(src):srcs.push(new U8x(src.buffer,src.byteOffset,src.byteLength)),_.assert(src.byteLength>=0,"Expects buffers, but got",_.entity.strType(src)),size+=src.byteLength)}if(0===srcs.length)return null;let resultBuffer=new BufferRaw(size);let result=_.bufferRawIs(firstSrc)?resultBuffer:new firstSrc.constructor(resultBuffer);let resultBytes=result.constructor===U8x?result:new U8x(resultBuffer);let offset=0;for(let s=0;s<srcs.length;s++){let src=srcs[s];if(resultBytes.set)resultBytes.set(src,offset);else for(let i=0;i<src.length;i++)resultBytes[offset+i]=src[i];offset+=src.byteLength}return result},bufferMove:bufferMove,bufferToStr:function bufferToStr(src){let result="";if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.bufferAnyIs(src)),"undefined"!=typeof BufferNode?src=_.bufferNodeFrom(src):src instanceof BufferRaw&&(src=new U8x(src,0,src.byteLength)),_.bufferNodeIs(src))return src.toString("utf8");try{result=String.fromCharCode.apply(null,src)}catch(e){for(let i=0;i<src.byteLength;i++)result+=String.fromCharCode(src[i])}return result},bufferToDom:function bufferToDom(xmlBuffer){let result;if("undefined"!=typeof DOMParser&&DOMParser.prototype.parseFromBuffer)throw result=(new DOMParser).parseFromBuffer(xmlBuffer,xmlBuffer.byteLength,"text/xml"),_.err("not tested");{let xmlStr=_.bufferToStr(xmlBuffer);result=this.strToDom(xmlStr)}return result},bufferLeft:function bufferLeft(src,ins){_.bufferRawIs(src)||(src=_.bufferBytesGet(src)),_.bufferRawIs(ins)||(ins=_.bufferBytesGet(ins)),_.assert(_.routine.is(src.indexOf)),_.assert(_.routine.is(ins.indexOf));let index=src.indexOf(ins[0]);for(;-1!==index;){let i=0;for(;i<ins.length&&src[index+i]===ins[i];i++);if(i===ins.length)return index;index+=1,index=src.indexOf(ins[0],index)}return index},bufferRight:function bufferRight(src,ins){_.bufferRawIs(src)||(src=_.bufferBytesGet(src)),_.bufferRawIs(ins)||(ins=_.bufferBytesGet(ins)),_.assert(_.routine.is(src.indexOf)),_.assert(_.routine.is(ins.indexOf));let index=src.lastIndexOf(ins[0]);for(;-1!==index;){let i=0;for(;i<ins.length&&src[index+i]===ins[i];i++);if(i===ins.length)return index;index-=1,index=src.lastIndexOf(ins[0],index)}return index},bufferSplit:function bufferSplit(src,del){_.bufferRawIs(src)||(src=_.bufferBytesGet(src)),_.bufferRawIs(del)||(del=_.bufferBytesGet(del)),_.assert(_.routine.is(src.indexOf)),_.assert(_.routine.is(del.indexOf));let result=[];let begin=0;let index=src.indexOf(del[0]);for(;-1!==index;){for(let i=0;i<del.length&&src[index+i]===del[i];i++);i===del.length?(result.push(src.slice(begin,index)),begin=index+=i):index+=1,index=src.indexOf(del[0],index)}return 0===begin?result.push(src):result.push(src.slice(begin,src.length)),result},bufferCutOffLeft:function bufferCutOffLeft(src,del){_.bufferRawIs(src)||(src=_.bufferBytesGet(src)),_.bufferRawIs(del)||(del=_.bufferBytesGet(del)),_.assert(_.routine.is(src.indexOf)),_.assert(_.routine.is(del.indexOf));let result=[];let index=src.indexOf(del[0]);for(;-1!==index;){for(let i=0;i<del.length&&src[index+i]===del[i];i++);if(i===del.length)return result.push(src.slice(0,index)),result.push(src.slice(index,index+i)),result.push(src.slice(index+i,src.length)),result;index+=1,index=src.indexOf(del[0],index)}return result.push(null),result.push(null),result.push(src),result},bufferIsolate:bufferIsolate,bufferIsolateLeftOrNone:bufferIsolateLeftOrNone,bufferIsolateLeftOrAll:bufferIsolateLeftOrAll,bufferIsolateRightOrNone:bufferIsolateRightOrNone,bufferIsolateRightOrAll:bufferIsolateRightOrAll};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Constructible_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Constructible.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Constructible_s_naked(){!function _l7_Constructible_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.constructible=_.constructible||Object.create(null);Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Container_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Container.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Container_s_naked(){!function _l7_Container_s_(){"use strict";_global_;const _=_global_.wTools;let ContainerExtension={extendReplacing:function extendReplacing(dst,src){if(_.assert(2===arguments.length,"Expects exactly two arguments"),null===dst||void 0===dst)dst=_.aux.is(src)?_.props.extend(null,src):_.longLike(src)?_.arrayExtendAppending(null,src):_.hashMap.like(src)?_.hashMap.extend(null,src):_.set.like(src)?_.arraySet.union_(null,src):src;else if(_.aux.is(src))dst=_.aux.is(dst)?_.props.extend(dst,src):_.hashMap.like(dst)?_.hashMap.extend(dst,src):_.container.extendReplacing(null,src);else if(_.longLike(src))if(_.longIs(dst))for(let i=src.length-1;i>=0;i--)dst[i]=src[i];else dst=_.container.extendReplacing(null,src);else dst=_.hashMap.like(src)?_.hashMap.like(dst)||_.aux.is(dst)?_.hashMap.extend(dst,src):_.container.extendReplacing(null,src):_.set.like(src)?_.set.like(dst)||_.longLike(dst)?_.arraySet.union_(dst,src):_.container.extendReplacing(null,src):src;return dst},extendAppending:function extendAppending(dst,src){return _.assert(2===arguments.length,"Expects exactly two arguments"),null===dst||void 0===dst?_.aux.is(src)?_.props.extend(null,src):_.longLike(src)?_.arrayExtendAppending(null,src):_.hashMap.like(src)?_.hashMap.extend(null,src):_.set.like(src)?_.arraySet.union_(null,src):src:_.aux.is(dst)?_.aux.is(src)?_.props.extend(dst,src):_.hashMap.like(src)?_.hashMap.extend(dst,src):_.arrayExtendAppending(dst,src):_.longLike(dst)?_.arrayExtendAppending(dst,src):_.hashMap.like(dst)?_.hashMap.like(src)||_.aux.is(src)?_.hashMap.extend(dst,src):_.arrayExtendAppending(dst,src):_.set.like(dst)?_.set.like(src)||_.longLike(src)?_.arraySet.union_(dst,src):_.arrayExtendAppending(dst,src):src}};_.props.supplement(_.container,ContainerExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Countable_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Countable.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Countable_s_naked(){!function _l7_Countable_s_(){"use strict";_global_;const _=_global_.wTools;_.countable=_.countable||Object.create(null),Object.assign(_.countable,{})}()});module.exports,module.include,module.include}(),function Ct_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Ct.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Ct_s_naked(){!function _l7_Ct_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.ct=_.ct||Object.create(null);function formatBackground(srcStr,color){return _.number.is(color)&&(color=_.color.colorNameNearest(color)),_.assert(2===arguments.length,"Expects 2 arguments"),_.assert(_.strIs(srcStr),"Expects string {-srcStr-}"),_.assert(_.strIs(color),"Expects string {-color-}"),`❮background : ${color}❯${srcStr}❮background : default❯`}function formatForeground(srcStr,color){return _.number.is(color)&&(color=_.color.colorNameNearest(color)),_.assert(2===arguments.length,"Expects 2 arguments"),_.assert(_.strIs(srcStr),"Expects string {-srcStr-}"),_.assert(_.strIs(color),"Expects string {-color-}"),`❮foreground : ${color}❯${srcStr}❮foreground : default❯`}let escape=_.routineVectorize_functor(function _strEscape(srcStr){let result=srcStr;return _.number.is(result)&&(result+=""),_.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(result),"Expects string got",_.entity.strType(result)),"❮inputRaw:1❯"+srcStr+"❮inputRaw:0❯"});let unescape=_.routineVectorize_functor(function _strUnescape(srcStr){let result=srcStr;return _.number.is(result)&&(result+=""),_.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(result),"Expects string got",_.entity.strType(result)),"❮inputRaw:0❯"+srcStr+"❮inputRaw:1❯"});function _formatAffixesForStyleObject(styleObject){let result=Object.create(null);return result.head="",result.post="",_.map.assertHasOnly(styleObject,_formatAffixesForStyleObject.defaults),styleObject.fg&&_.ct._affixesJoin(result,_.ct._formatAffixesForeground(styleObject.fg)),styleObject.bg&&_.ct._affixesJoin(result,_.ct._formatAffixesBackground(styleObject.bg)),result}function _format(srcStr,style){let result=srcStr;_.number.is(result)&&(result+=""),_.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(result),"Expects string got",_.entity.strType(result));let r=_.ct._formatAffixes(style);return r.head+result+r.post}_formatAffixesForStyleObject.defaults={fg:null,bg:null};let format=_.routineVectorize_functor(_format);let strip=_.vectorize(function _strip(srcStr){return _.assert(_.strIs(srcStr)),_.strSplitInlinedStereo_({src:srcStr,preservingEmpty:0,stripping:0,preservingInlined:0,inliningDelimeters:1}).join("")});function parse(o){return _.strIs(arguments[0])&&(o={src:arguments[0]}),_.routine.options_(parse,o),o.inliningDelimeters=1,o.preservingOrdinary=1,o.preservingInlined=1,_.strSplitInlinedStereo_(o)}let StripAnsi;function _stripAnsi(src){return _.assert(1===arguments.length),_.assert(_.strIs(src)),void 0===StripAnsi&&(StripAnsi=require("strip-ansi")),StripAnsi(src)}parse.defaults={src:null,prefix:"❮",postfix:"❯",onInlined:e=>[e],onOrdinary:null,stripping:0,quoting:0,preservingDelimeters:0,preservingEmpty:0};let Extension={_formatAffixesBackground:function _formatAffixesBackground(color){let result=Object.create(null);return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(color)),result.head=`❮background : ${color}❯`,result.post="❮background : default❯",result},formatBackground:formatBackground,bg:formatBackground,_formatAffixesForeground:function _formatAffixesForeground(color){let result=Object.create(null);return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(color)),result.head=`❮foreground : ${color}❯`,result.post="❮foreground : default❯",result},formatForeground:formatForeground,fg:formatForeground,escape:escape,unescape:unescape,styleObjectFor:function styleObjectFor(style){_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(style),"Expects string got",_.entity.strType(style));let result=_.ct.Style[style];return _.assert(_.mapIs(result),`No such style : ${style}`),result},_affixesJoin:function _affixesJoin(){_.assert(_.mapIs(arguments[0]));for(let a=1;a<arguments.length;a++)arguments[0].head=arguments[a].head+arguments[0].head,arguments[0].post=arguments[0].post+arguments[a].post;return arguments[0]},_formatAffixesForStyleObject:_formatAffixesForStyleObject,_formatAffixes:function _formatAffixes(styles){let result=Object.create(null);result.head="",result.post="",styles=_.array.as(styles),_.assert(1===arguments.length,"Expects single argument"),_.assert(_.arrayIs(styles),"Expects string or array of strings {- styles -}");for(let s=0;s<styles.length;s++){let style=styles[s];if(_.object.isBasic(style)){let affixes=_.ct._formatAffixesForStyleObject(style);_.ct._affixesJoin(result,affixes);continue}_.assert(_.strIs(style),"Expects string or array of strings { style }");let styleObject=_.ct.styleObjectFor(style);_.assert(!!styleObject,"Unknown style",_.strQuote(style));let affixes=_.ct._formatAffixesForStyleObject(styleObject);_.ct._affixesJoin(result,affixes)}return result},_format:_format,format:format,formatFinal:format,strip:strip,parse:parse,_stripAnsi:_stripAnsi,stripAnsi:_.vectorize(_stripAnsi),Style:{positive:{fg:"green"},negative:{fg:"red"},path:{fg:"dark cyan"},code:{fg:"dark green"},entity:{fg:"bright blue"},"topic.up":{fg:"white",bg:"dark blue"},"topic.down":{fg:"dark black",bg:"dark blue"},head:{fg:"dark black",bg:"white"},tail:{fg:"white",bg:"dark black"},highlighted:{fg:"white",bg:"dark black"},selected:{fg:"dark yellow",bg:"dark blue"},neutral:{fg:"smoke",bg:"dim"},secondary:{fg:"silver"},tertiary:{fg:"gray"},"pipe.neutral":{fg:"dark magenta"},"pipe.negative":{fg:"dark red"},"exclusiveOutput.neutral":{fg:"dark black",bg:"dark yellow"},"exclusiveOutput.negative":{fg:"dark red",bg:"dark yellow"},"info.neutral":{fg:"white",bg:"magenta"},"info.negative":{fg:"dark red",bg:"magenta"}}};Object.assign(Self,Extension)}()});module.exports;let require=module.include;module.include}(),function Date_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Date.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Date_s_naked(){!function _l7_Date_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.date=_.date||Object.create(null);Object.assign(_,{}),Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Diagnostic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Diagnostic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Diagnostic_s_naked(){!function _l7_Diagnostic_s_(){"use strict";_global_;const _=_global_.wTools;function beep(){console.log("")}function watchFields(o){void 0!==arguments[1]&&(o={target:arguments[0],names:arguments[1]}),(o=_.routine.options(watchFields,o)).names?o.names=o.names:o.names=o.target,_.assert(1===arguments.length||2===arguments.length),_.assert(_.object.like(o.target)),_.assert(_.object.like(o.names));for(let f in o.names)!function(){let propName=f;Symbol.for(f);let val=o.target[f];if(o.debugging>1)debugger;o.verbosity>1&&console.log("watching for",propName,"in",o.target);let properties={enumerable:true,configurable:true,get:function read(){let result=val;if(o.verbosity>1?console.log("reading "+propName+" "+_.entity.exportString(result)):console.log("reading "+propName),o.debugging>1)debugger;return result},set:function write(src){if(o.verbosity>1?console.log("writing "+propName+" "+_.entity.exportString(o.target[propName])+" -> "+_.entity.exportString(src)):console.log("writing "+propName),o.debugging)debugger;val=src}};Object.defineProperty(o.target,propName,properties)}()}function proxyFields(o){void 0!==arguments[1]&&(o={target:arguments[0],names:arguments[1]}),o=_.routine.options(proxyFields,o),_.assert(1===arguments.length||2===arguments.length),_.assert(_.object.like(o.target)),_.assert(_.object.like(o.names)||null===o.names);let handler={set:function(obj,k,e){if(!o.names||k in o.names){if(o.verbosity>1?console.log("writing "+k+" "+_.entity.exportString(o.target[k])+" -> "+_.entity.exportString(e)):console.log("writing "+k),o.debug)debugger;return obj[k]=e,true}}};let result=new Proxy(o.target,handler);if(o.verbosity>1&&console.log("watching for",o.target),o.debug)debugger;return result}function eachLongType(o){let result=Object.create(null);_.routine.is(o)&&(o={onEach:o}),null===(o=_.routine.options(eachLongType,o)).onEach&&(o.onEach=function onEach(make,descriptor){return make}),_.assert(0===arguments.length||1===arguments.length),_.assert(_.routine.is(o.onEach));for(let k in _.long.namespaces){let namespace=_.long.namespaces[k];let long=_.withLong[namespace.TypeName];debugger;result[long.TypeName]=o.onEach(long.make,long)}return result}function eachElementComparator(o){let result=[];return void 0!==arguments[1]?o={onMake:arguments[0],onEach:arguments[1]||null}:_.routine.is(arguments[0])&&(o={onEach:arguments[1]||null}),null===(o=_.routine.options(eachElementComparator,o)).onEach&&(o.onEach=function onEach(make,evaluate,description){return evaluate}),null===o.onMake&&(o.onMake=function onMake(src){return src}),_.assert(1===arguments.length||2===arguments.length),_.assert(_.routine.is(o.onEach)),_.assert(_.routine.is(o.onMake)),result.push(o.onEach(o.onMake,void 0,"no evaluator")),result.push(o.onEach(make,evaluator,"evaluator")),result.push(o.onEach(make,[evaluator,evaluator],"tandem of evaluators")),result.push(o.onEach(make,function equalizer(e1,e2){return _.assert(1===e1.length),_.assert(1===e2.length),e1[0]===e2[0]},"equalizer")),result;function evaluator(e){return _.assert(1===e.length),e[0]}function make(long){_.assert(_.longIs(long));let result=[];for(let l=0;l<long.length;l++)result[l]=[long[l]];return o.onMake(result)}}function diagnosticStructureGenerate_body(o){return o.result=function structureMake(level){let struct=Object.create(null);if(!(level<=o.depth))return null;o.nullComplexity>=2&&(struct.null=null),o.undefinedComplexity>=3&&(struct[void 0]=void 0),o.booleanComplexity&&(struct["boolean.true"]=true,struct["boolean.false"]=false),o.stringComplexity&&(o.random?struct["string.defined"]=_.strRandom(o.stringSize):struct["string.defined"]=new RegExp(_.strDup("a",o.stringSize)),struct["string.empty"]=""),o.numberComplexity&&(struct["number.zero"]=0,struct["number.small"]=13),o.numberComplexity>=2&&(struct["number.big"]=1<<30),o.numberInfinityComplexity>=2&&(struct["number.infinity.positive"]=Infinity,struct["number.infinity.negative"]=-Infinity),o.numberNanComplexity>=2&&(struct["number.nan"]=NaN),o.numberSignedZeroComplexity>=3&&(struct["number.signed.zero.negative"]=-0,struct["number.signed.zero.positive"]=0),o.bigIntComplexity>=3&&"undefined"!=typeof BigInt&&(struct["bigInt.zero"]=BigInt(0),struct["bigInt.small"]=BigInt(1),struct["bigInt.big"]=BigInt(1)<<BigInt(100)),o.regexpComplexity>=2&&(o.random?struct["regexp.defined"]=new RegExp(_.strRandom(o.regexpSize)):struct["regexp.defined"]=new RegExp(_.strDup("a",o.regexpSize)),struct["regexp.simple1"]=/ab|cd/,struct["regexp.simple2"]=/a[bc]d/,struct["regexp.simple3"]=/ab{1, }bc/,struct["regexp.simple4"]=/\.js$/,struct["regexp.simple5"]=/.reg/),o.regexpComplexity>=3&&(struct["regexp.complex0"]=/^(?:(?!ab|cd).)+$/gm,struct["regexp.complex1"]=/\/\*[\s\S]*?\*\/|\/\/.*/g,struct["regexp.complex2"]=/^[1-9]+[0-9]*$/gm,struct["regexp.complex3"]=/aBc/i,struct["regexp.complex4"]=/^\d+/gm,struct["regexp.complex5"]=/^a.*c$/g,struct["regexp.complex6"]=/[a-z]/m,struct["regexp.complex7"]=/^[A-Za-z0-9]$/),o.dateComplexity>=3&&(struct["date.now"]=new Date,struct["date.fixed"]=new Date(1987,1,4,5,13,0));let bufferSrc=_.longRandom([],[0,1],[0,o.bufferSize]);if(o.bufferNodeComplexity>=4&&"undefined"!=typeof BufferNode&&(struct["buffer.node"]=BufferNode.from(bufferSrc)),o.bufferRawComplexity>=3&&(struct["buffer.raw"]=new U8x(bufferSrc).buffer),o.bufferBytesComplexity>=3&&(struct["buffer.bytes"]=new U8x(bufferSrc)),o.arrayComplexity&&(struct["array.simple"]=_.longFill([],0,[0,o.arrayLength])),o.arrayComplexity>=3){struct["array.complex"]=[];for(let a=0;a<o.arrayLength;a++)struct["array.complex"][a]=structureMake(level+1)}if(o.setComplexity>=3){struct.set=new Set;for(let m=0;m<o.setLength;m++)struct.set.add(structureMake(level+1))}if(o.hashMapComplexity>=4){struct.hashMap=new HashMap;for(let m=0;m<o.hashMapLength;m++)struct.hashMap.set("element"+m,structureMake(level+1))}if(o.mapComplexity){struct.map=Object.create(null);for(let m=0;m<o.mapLength;m++)struct.map["element"+m]=structureMake(level+1)}return level<o.depth&&(struct["level"+(level+1)]=structureMake(level+1)),o.recursionComplexity>=2&&(struct["recursion.self"]=struct),o.recursionComplexity>=3&&struct["level"+(level+1)]&&(struct["level"+(level+1)]["recursion.super"]=struct),struct}(0),o.size=_.entity.sizeOf(o.result),o}_.diagnostic=_.diagnostic||Object.create(null),watchFields.defaults={target:null,names:null,verbosity:2,debugging:1},proxyFields.defaults={...watchFields.defaults},eachLongType.defaults={onEach:null},eachElementComparator.defaults={onMake:null,onEach:null},diagnosticStructureGenerate_body.defaults={result:null,depth:1,random:1,stringSize:null,bufferSize:null,regexpSize:null,defaultSize:50,arrayLength:null,mapLength:null,hashMapLength:null,setLength:null,defaultLength:4,defaultComplexity:2,primitiveComplexity:null,nullComplexity:null,undefinedComplexity:null,booleanComplexity:null,stringComplexity:null,bigIntComplexity:null,numberComplexity:null,numberInfinityComplexity:null,numberNanComplexity:null,numberSignedZeroComplexity:null,objectComplexity:null,dateComplexity:null,regexpComplexity:null,bufferComplexity:null,bufferNodeComplexity:null,bufferRawComplexity:null,bufferBytesComplexity:null,containerComplexity:null,recursionComplexity:null,arrayComplexity:null,mapComplexity:null,setComplexity:null,hashMapComplexity:null};let structureGenerate=_.routine.unite(function diagnosticStructureGenerate_head(routine,args){let o;function from(complexity,min){return void 0===min?complexity:complexity>=min?complexity:0}return _.assert(0===args.length||1===args.length,()=>`Expects optional argument, but got ${args.length} arguments`),o=1===args.length?args[0]:Object.create(null),null===(o=_.routine.options(structureGenerate,o)).arrayLength&&(o.arrayLength=o.defaultLength),null===o.mapLength&&(o.mapLength=o.defaultLength),null===o.hashMapLength&&(o.hashMapLength=o.defaultLength),null===o.setLength&&(o.setLength=o.defaultLength),null===o.stringSize&&(o.stringSize=o.defaultSize),null===o.bufferSize&&(o.bufferSize=o.defaultSize),null===o.regexpSize&&(o.regexpSize=o.defaultSize),null===o.primitiveComplexity&&(o.primitiveComplexity=from(o.defaultComplexity)),null===o.nullComplexity&&(o.nullComplexity=from(o.primitiveComplexity)),null===o.undefinedComplexity&&(o.undefinedComplexity=from(o.primitiveComplexity)),null===o.booleanComplexity&&(o.booleanComplexity=from(o.primitiveComplexity)),null===o.stringComplexity&&(o.stringComplexity=from(o.primitiveComplexity)),null===o.bigIntComplexity&&(o.bigIntComplexity=from(o.primitiveComplexity)),null===o.numberComplexity&&(o.numberComplexity=from(o.primitiveComplexity)),null===o.numberInfinityComplexity&&(o.numberInfinityComplexity=from(o.numberComplexity)),null===o.numberNanComplexity&&(o.numberNanComplexity=from(o.numberComplexity)),null===o.numberSignedZeroComplexity&&(o.numberSignedZeroComplexity=from(o.numberComplexity)),null===o.objectComplexity&&(o.objectComplexity=from(o.defaultComplexity)),null===o.dateComplexity&&(o.dateComplexity=from(o.objectComplexity)),null===o.regexpComplexity&&(o.regexpComplexity=from(o.objectComplexity)),null===o.bufferComplexity&&(o.bufferComplexity=from(o.objectComplexity)),null===o.bufferNodeComplexity&&(o.bufferNodeComplexity=from(o.bufferComplexity)),null===o.bufferRawComplexity&&(o.bufferRawComplexity=from(o.bufferComplexity)),null===o.bufferBytesComplexity&&(o.bufferBytesComplexity=from(o.bufferComplexity)),null===o.containerComplexity&&(o.containerComplexity=from(o.defaultComplexity)),null===o.recursionComplexity&&(o.recursionComplexity=from(o.containerComplexity)),null===o.arrayComplexity&&(o.arrayComplexity=from(o.containerComplexity)),null===o.mapComplexity&&(o.mapComplexity=from(o.containerComplexity)),null===o.setComplexity&&(o.setComplexity=from(o.containerComplexity)),null===o.hashMapComplexity&&(o.hashMapComplexity=from(o.containerComplexity)),_.assert(_.number.is(o.depth)),o},diagnosticStructureGenerate_body);let ToolsExtension={diagnosticBeep:beep,diagnosticWatchFields:watchFields,diagnosticProxyFields:proxyFields,diagnosticEachLongType:eachLongType,diagnosticEachElementComparator:eachElementComparator,diagnosticStructureGenerate:structureGenerate};Object.assign(_,ToolsExtension);let DiagnosticExtension={beep:beep,watchFields:watchFields,proxyFields:proxyFields,eachLongType:eachLongType,eachElementComparator:eachElementComparator,structureGenerate:structureGenerate};Object.assign(_.diagnostic,DiagnosticExtension)}()});module.exports,module.include,module.include}(),function Entity_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Entity.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Entity_s_naked(){!function _l7_Entity_s_(){"use strict";_global_;const _=_global_.wTools;_global_.wTools;let EntityExtension={sizeOfUncountable:function sizeOfUncountable(src,sizeOfContainer){return 1===arguments.length&&(sizeOfContainer=8),_.assert(_.number.defined(sizeOfContainer)),_.assert(1===arguments.length||2===arguments.length),_.strIs(src)?src.length?_.bufferBytesFrom(src).byteLength+sizeOfContainer:src.length+sizeOfContainer:_.primitive.is(src)?sizeOfContainer||8:_.routine.is(src)?sizeOfContainer:_.number.is(src.byteLength)?src.byteLength+sizeOfContainer:_.regexpIs(src)?_.entity.sizeOfUncountable(src.source,0)+src.flags.length+sizeOfContainer:NaN},sizeOf:function sizeOf(src,sizeOfContainer){return 1===arguments.length&&(sizeOfContainer=8),_.assert(_.number.defined(sizeOfContainer)),_.assert(1===arguments.length||2===arguments.length),_.primitive.is(src)||_.bufferAnyIs(src)||_.routineIs(src)||_.regexpIs(src)?_.entity.sizeOfUncountable(src,sizeOfContainer):NaN}};Object.assign(_.entity,EntityExtension),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Err_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Err.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Err_s_naked(){!function _l7_Err_s_(){"use strict";const _=_global_.wTools;_._err;let ErrorExtension={ErrorAbort:_.error.error_functor("ErrorAbort")};let ToolsExtension={_isInstanceOrClass:function _isInstanceOrClass(_constructor,_this){_.assert(2===arguments.length,"Expects exactly two arguments");debugger;return _this===_constructor||_this instanceof _constructor||Object.isPrototypeOf.call(_constructor,_this)||Object.isPrototypeOf.call(_constructor,_this.prototype)},sureInstanceOrClass:function sureInstanceOrClass(_constructor,_this){_.sure(2===arguments.length,"Expects exactly two arguments"),_.sure(_._isInstanceOrClass(_constructor,_this))},sureOwnNoConstructor:function sureOwnNoConstructor(ins){_.sure(!_.primitive.is(ins));let args=Array.prototype.slice.call(arguments);args[0]=!Object.hasOwnProperty.call(ins,"constructor"),_.sure.apply(_,args)},assertInstanceOrClass:function assertInstanceOrClass(_constructor,_this){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_._isInstanceOrClass(_constructor,_this))},assertOwnNoConstructor:function assertOwnNoConstructor(ins){_.assert(!_.primitive.is(ins));let args=Array.prototype.slice.call(arguments);args[0]=!Object.hasOwnProperty.call(ins,"constructor"),_.assert.apply(_,args)}};Object.assign(_.error,ErrorExtension),Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Escape_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Escape.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Escape_s_naked(){!function _l7_Escape_s_(){"use strict";_global_;const _=_global_.wTools;_.escape=_.escape||Object.create(null),_.props.supplement(_.escape,{})}()});module.exports,module.include,module.include}(),function Event_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Event.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Event_s_naked(){!function _l7_Event_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.event,{})}()});module.exports,module.include,module.include}(),function Functional_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Functional.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Functional_s_naked(){!function _l7_Functional_s_(){"use strict";_global_;const _=_global_.wTools;function _entityFilterDeep(o){let result;let onEach=_._filter_functor(o.onEach,o.conditionLevels);if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.object.like(o.src)||_.longIs(o.src),"entityFilter : expects objectLike or longIs src, but got",_.entity.strType(o.src)),_.assert(_.routine.is(onEach)),_.longIs(o.src)){let s,d;for(result=_.argumentsArray.is(o.src)?[]:_.long.make(o.src,0),s=0,d=0;s<o.src.length;s++){let r=onEach.call(o.src,o.src[s],s,o.src);_.unrollIs(r)?(_.arrayAppendArray(result,r),d+=r.length):void 0!==r&&(result[d]=r,d+=1)}d<o.src.length&&(result=_.longSlice(result,0,d))}else{result=_.entity.makeUndefined(o.src);for(let s in o.src){let r=onEach.call(o.src,o.src[s],s,o.src);void 0!==r&&(result[s]=r)}}return result}function entityFilterDeep(src,onEach){return _.assert(2===arguments.length,"Expects exactly two arguments"),_entityFilterDeep({src:src,onEach:onEach,conditionLevels:1024})}function _entityIndex_functor(fop){let extendRoutine=(fop=_.routine.options(_entityIndex_functor,fop)).extendRoutine;return function entityIndex(src,onEach){let result=Object.create(null);if(void 0===onEach)onEach=function(e,k){return void 0===k&&extendRoutine?{[e]:void 0}:k};else if(_.strIs(onEach)){let selector=onEach;_.assert(_.routine.is(_.select)),_.assert(_.strBegins(selector,"*/"),()=>`Selector should begins with "*/", but "${selector}" does not`),selector=_.strRemoveBegin(selector,"*/"),onEach=function(e,k){return _.select(e,selector)}}if(_.assert(1===arguments.length||2===arguments.length),_.assert(_.routine.is(onEach)),_.assert(void 0!==src,"Expects {-src-}"),_.aux.is(src))for(let k in src){let val=src[k];extend(onEach(val,k,src),val)}else if(_.longIs(src))for(let k=0;k<src.length;k++){let val=src[k];extend(onEach(val,k,src),val)}else{let val=src;extend(onEach(val,void 0,void 0),val)}return result;function extend(ext,val){if(void 0!==ext)return _.unrollIs(ext)?ext.forEach(ext=>extend(ext,val)):void(null===extendRoutine?result[ext]=val:(_.aux.is(ext)||(_.assert(_.primitive.is(ext)),ext={[ext]:val}),extendRoutine(result,ext)))}}}_global_.wTools,_entityFilterDeep.defaults={src:null,onEach:null,conditionLevels:1},_entityIndex_functor.defaults={extendRoutine:null};let entityIndex=_entityIndex_functor({extendRoutine:null});let entityIndexSupplementing=_entityIndex_functor({extendRoutine:_.props.supplement.bind(_.props)});let entityIndexExtending=_entityIndex_functor({extendRoutine:_.props.extend.bind(_.props)});let entityIndexPrepending=_entityIndex_functor({extendRoutine:_.mapExtendPrepending});let entityIndexAppending=_entityIndex_functor({extendRoutine:_.mapExtendAppending});function _entityRemap_functor(fop){let extendRoutine=(fop=_.routine.options(_entityRemap_functor,fop)).extendRoutine;return function entityRemap(src,onEach){let result=Object.create(null);if(void 0===onEach)onEach=function(e,k){return void 0===e&&extendRoutine?{[k]:e}:e};else if(_.strIs(onEach)){let selector=onEach;_.assert(_.routine.is(_.select)),_.assert(_.strBegins(selector,"*/"),()=>`Selector should begins with "*/", but "${selector}" does not`),selector=_.strRemoveBegin(selector,"*/"),onEach=function(e,k){return _.select(e,selector)}}if(_.assert(1===arguments.length||2===arguments.length),_.assert(_.routine.is(onEach)),_.assert(void 0!==src,"Expects src"),_.aux.is(src))for(let k in src)extend(onEach(src[k],k,src),k);else if(_.longIs(src))for(let k=0;k<src.length;k++)extend(onEach(src[k],k,src),k);else extend(onEach(src,void 0,void 0),void 0);return result;function extend(res,key){if(void 0!==res)return _.unrollIs(res)?res.forEach(res=>extend(res,key)):void(null===extendRoutine?void 0!==key&&(result[key]=res):_.aux.is(res)?extendRoutine(result,res):void 0!==key&&(result[key]=res))}}}_entityRemap_functor.defaults={extendRoutine:null};let entityRemap=_entityRemap_functor({extendRoutine:null});let entityRemapSupplementing=_entityRemap_functor({extendRoutine:_.props.supplement.bind(_.props)});let entityRemapExtending=_entityRemap_functor({extendRoutine:_.props.extend.bind(_.props)});let entityRemapPrepending=_entityRemap_functor({extendRoutine:_.mapExtendPrepending});let entityRemapAppending=_entityRemap_functor({extendRoutine:_.mapExtendAppending});let ToolsExtension={_entityFilterDeep:_entityFilterDeep,entityFilterDeep:entityFilterDeep,filterDeep:entityFilterDeep,_entityIndex_functor:_entityIndex_functor,entityIndex:entityIndex,index:entityIndex,entityIndexSupplementing:entityIndexSupplementing,indexSupplementing:entityIndexSupplementing,entityIndexExtending:entityIndexExtending,indexExtending:entityIndexExtending,entityIndexPrepending:entityIndexPrepending,indexPrepending:entityIndexPrepending,entityIndexAppending:entityIndexAppending,indexAppending:entityIndexAppending,_entityRemap_functor:_entityRemap_functor,entityRemap:entityRemap,remap:entityRemap,entityRemapSupplementing:entityRemapSupplementing,remapSupplementing:entityRemapSupplementing,entityRemapExtending:entityRemapExtending,remapExtending:entityRemapExtending,entityRemapPrepending:entityRemapPrepending,remapPrepending:entityRemapPrepending,entityRemapAppending:entityRemapAppending,remapAppending:entityRemapAppending};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Fuzzy_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Fuzzy.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Fuzzy_s_naked(){!function _l7_Fuzzy_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.fuzzy=_.fuzzy||Object.create(null);Object.assign(_,{}),Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Global_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Global.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Global_s_naked(){!function _l7_Global_s_(){"use strict";_global_;const _=_global_.wTools;_.global=_.global||Object.create(null),Object.assign(_.global,{})}()});module.exports,module.include,module.include}(),function HashMap_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/HashMap.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function HashMap_s_naked(){!function _l7_HashMap_s_(){"use strict";_global_;const _=_global_.wTools;_.hashMap=_.hashMap||Object.create(null),Object.assign(_,{}),Object.assign(_.hashMap,{})}()});module.exports,module.include,module.include}(),function Interval_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Interval.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Interval_s_naked(){!function _l7_Interval_s_(){"use strict";_global_;const _=_global_.wTools;_.props.supplement(_,{})}()});module.exports,module.include,module.include}(),function Intervalc_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Intervalc.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervalc_s_naked(){!function _l7_Intervalc_s_(){"use strict";_global_;const _=_global_.wTools;_.cinterval=_.cinterval||Object.create(null),_.props.supplement(_.cinterval,{})}()});module.exports,module.include,module.include}(),function Intervall_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Intervall.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervall_s_naked(){!function _l7_Intervall_s_(){"use strict";_global_;const _=_global_.wTools;_.linterval=_.linterval||Object.create(null),_.props.supplement(_.linterval,{})}()});module.exports,module.include,module.include}(),function Intervalo_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Intervalo.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Intervalo_s_naked(){!function _l7_Intervalo_s_(){"use strict";_global_;const _=_global_.wTools;_.ointerval=_.ointerval||Object.create(null),_.props.supplement(_.ointerval,{})}()});module.exports,module.include,module.include}(),function Introspector_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Introspector.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Introspector_s_naked(){!function _l7_Introspector_s_(){"use strict";const _=_global_.wTools;_.introspector=_.introspector||Object.create(null);let _diagnosticCodeExecuting=0;function code(o){if(_.routine.options(code,o),_.assert(0===arguments.length||1===arguments.length),!_diagnosticCodeExecuting){_diagnosticCodeExecuting+=1;try{if(o.location||(o.error?o.location=_.introspector.location({error:o.error,level:o.level}):o.location=_.introspector.location({stack:o.stack,level:o.stack?o.level:o.level+1})),!_.number.is(o.location.line))return end();if(!o.sourceCode){if(!o.location.filePath)return end();let codeProvider=_.codeProvider||_.fileProvider;if(!codeProvider&&_globals_.testing&&_globals_.testing.wTools&&(codeProvider=_globals_.testing.wTools.codeProvider||_globals_.testing.wTools.fileProvider),!codeProvider)return end();try{let filePath=codeProvider.path.normalizeTolerant(o.location.filePath);codeProvider.path.isAbsolute(filePath)&&(o.sourceCode=function read(codeProvider,filePath){return codeProvider.fileRead({filePath:filePath,sync:1,throwing:0})}(codeProvider,filePath))}catch(err){o.sourceCode=` ! Cant load source code of "${o.location.filePath}"`}if(!o.sourceCode)return end()}let code=_.strLinesSelect({src:o.sourceCode,line:o.location.line,nearestLines:o.nearestLines,selectMode:o.selectMode,zeroLine:1,numbering:1});code&&_.strLinesIndentation&&o.identation&&(code=o.identation+_.strLinesIndentation(code,o.identation));let result=code;return o.withPath&&(result=o.asMap?{path:o.location.filePathLineCol,code:code}:o.location.filePathLineCol+"\n"+code),end(result)}catch(err){return void console.log(err.toString())}}function end(result){return _diagnosticCodeExecuting-=1,result}}code.defaults={level:0,nearestLines:5,withPath:1,asMap:0,selectMode:"center",identation:null,stack:null,error:null,location:null,sourceCode:null};let Extension={code:code,memoryUsageInfo:function memoryUsageInfo(){var usage=process.memoryUsage();return(usage.heapUsed>>20)+" / "+(usage.heapTotal>>20)+" / "+(usage.rss>>20)+" Mb"}};Object.assign(_.introspector,Extension)}()});module.exports,module.include,module.include}(),function Logic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Logic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Logic_s_naked(){!function _l7_Logic_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.logic,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Long_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Long.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Long_s_naked(){!function _l7_Long_s_(){"use strict";_global_;const _=_global_.wTools;function longHasUniques(o){_.longIs(o)&&(o={src:o}),_.assert(1===arguments.length,"Expects single argument"),_.assert(_.longIs(o.src)),_.map.assertHasOnly(o,longHasUniques.defaults);let number=o.src.length;let isUnique=[];let index;for(let i=0;i<o.src.length;i++)isUnique[i]=1;for(let i=0;i<o.src.length;i++){if(index=i,!isUnique[i])continue;let currentUnique=1;if((index=_.longLeftIndex(o.src,o.src[i],index+1,o.onEvaluate))>=0)do{isUnique[index]=0,number-=1,currentUnique=0,index=_.longLeftIndex(o.src,o.src[i],index+1,o.onEvaluate)}while(index>=0);o.includeFirst||currentUnique||(isUnique[i]=0,number-=1)}return{number:number,is:isUnique}}function longUnmask(o){_.assert(1===arguments.length||2===arguments.length),2===arguments.length&&(o={src:arguments[0],mask:arguments[1]}),_.map.assertHasOnly(o,longUnmask.defaults),_.assert(_.longIs(o.src),"Expects o.src as ArrayLike");let scalarsPerElement=o.mask.length;let scalarsPerElementPreserved=0;for(let m=0;m<o.mask.length;m++)o.mask[m]&&(scalarsPerElementPreserved+=1);let length=o.src.length/scalarsPerElementPreserved;if(Math.floor(length)!==length)throw _.err("longMask :","Expects mask that has component for each atom of o.src",_.entity.exportString({scalarsPerElementPreserved:scalarsPerElementPreserved,"o.src.length":o.src.length}));let dstArray=_.long.makeUndefined(o.src,scalarsPerElement*length);let e=[];for(let i=0;i<length;i++){for(let m=0,p=0;m<o.mask.length;m++)o.mask[m]?(e[m]=o.src[i*scalarsPerElementPreserved+p],p+=1):e[m]=0;o.onEach&&o.onEach(e,i);for(let m=0;m<o.mask.length;m++)dstArray[i*scalarsPerElement+m]=e[m]}return dstArray}function longRandom(o){void 0!==arguments[2]?o={dst:arguments[0],value:arguments[1],length:arguments[2]}:(_.number.is(o)||_.intervalIs(o))&&(o={length:o}),_.assert(1===arguments.length||3===arguments.length),_.routine.options(longRandom,o),null===o.onEach&&(o.onEach=(value=>_.number.random(value))),null===o.value&&(o.value=[0,1]),_.number.is(o.value)&&(o.value=[0,o.value]),_.intervalIs(o.length)&&(o.length=_.intRandom(o.length)),null===o.length&&o.dst&&(o.length=o.dst.length),null===o.length&&(o.length=1),_.assert(_.intIs(o.length)),(null===o.dst||o.dst.length<o.length)&&(o.dst=_.long.make(o.dst,o.length));for(let i=0;i<o.length;i++)o.dst[i]=o.onEach(o.value,i,o);return o.dst}Array.prototype.indexOf,Array.prototype.lastIndexOf,Array.prototype.slice,Array.prototype.splice,Function.prototype.bind,Object.prototype.toString,Object.propertyIsEnumerable,longHasUniques.defaults={src:null,onEvaluate:null,includeFirst:0},longUnmask.defaults={src:null,mask:null,onEach:null},longRandom.defaults={dst:null,onEach:null,value:null,length:null};let ToolsExtension={longOnce:function longOnce(dstLong,onEvaluate){if(_.assert(1<=arguments.length||arguments.length<=2),_.assert(_.longIs(dstLong),"Expects Long"),_.arrayIs(dstLong))return _.arrayRemoveDuplicates(dstLong,onEvaluate);if(!dstLong.length)return dstLong;let length=dstLong.length;for(let i=0;i<dstLong.length;i++)-1!==_.longLeftIndex(dstLong,dstLong[i],i+1,onEvaluate)&&length--;if(length===dstLong.length)return dstLong;let result=_.long.makeUndefined(dstLong,length);result[0]=dstLong[0];let j=1;for(let i=1;i<dstLong.length&&j<length;i++)-1===_.longRightIndex(result,dstLong[i],j-1,onEvaluate)&&(result[j++]=dstLong[i]);return _.assert(j===length),result},longOnce_:function longOnce_(dstLong,srcLong,onEvaluate){if(_.assert(null===dstLong||_.longIs(dstLong),"Expects Long"),null===dstLong){if(!_.longIs(srcLong))return[];dstLong=_.long.makeUndefined(srcLong,0)}let result;if(1===arguments.length?srcLong=dstLong:2===arguments.length?_.routine.is(srcLong)&&(onEvaluate=arguments[1],srcLong=arguments[0]):3!==arguments.length&&_.assert(0),_.assert(_.longIs(srcLong)),dstLong===srcLong){if(!dstLong.length)return dstLong;if(_.arrayIs(dstLong))return _.arrayRemoveDuplicates(dstLong,onEvaluate);let length=dstLong.length;for(let i=0;i<dstLong.length;i++)-1!==_.longLeftIndex(dstLong,dstLong[i],i+1,onEvaluate)&&length--;if(length===dstLong.length)return dstLong;(result=_.long.makeUndefined(dstLong,length))[0]=dstLong[0];let j=1;for(let i=1;i<dstLong.length&&j<length;i++)-1===_.longRightIndex(result,dstLong[i],j-1,onEvaluate)&&(result[j++]=dstLong[i]);_.assert(j===length)}else if(_.arrayIs(dstLong))result=_.arrayAppendArrayOnce(dstLong,srcLong,onEvaluate);else{let length=srcLong.length+dstLong.length;for(let i=0;i<srcLong.length;i++)-1===_.longLeftIndex(dstLong,srcLong[i],onEvaluate)&&-1===_.longLeftIndex(srcLong,srcLong[i],i+1,onEvaluate)||length--;if(length===dstLong.length)return dstLong;result=_.long.makeUndefined(dstLong,length);for(let i=0;i<dstLong.length;i++)result[i]=dstLong[i];let offset=dstLong.length;for(let i=dstLong.length;i<result.length&&offset>=-result.length;)-1===_.longLeftIndex(result,srcLong[i-offset],onEvaluate)?(result[i]=srcLong[i-offset],i++):offset--}return result},longHasUniques:longHasUniques,longAreRepeatedProbe:function longAreRepeatedProbe(srcArray,onEvaluate){_.long.makeUndefined(srcArray);let result=Object.create(null);result.array=_.array.make(srcArray.length),result.uniques=srcArray.length,result.condensed=srcArray.length,_.assert(1===arguments.length||2===arguments.length),_.assert(_.longIs(srcArray));for(let i=0;i<srcArray.length;i++){let element=srcArray[i];if(result.array[i]>0)continue;result.array[i]=0;let left=_.longLeftIndex(srcArray,element,i+1,onEvaluate);if(left>=0){result.array[i]=1,result.uniques-=1;do{result.uniques-=1,result.condensed-=1,result.array[left]=1,left=_.longLeftIndex(srcArray,element,left+1,onEvaluate)}while(left>=0)}}return result},longAllAreRepeated:function longAllAreRepeated(src,onEvalutate){return!_.longAreRepeatedProbe.apply(this,arguments).uniques},longAnyAreRepeated:function longAnyAreRepeated(src,onEvalutate){return _.longAreRepeatedProbe.apply(this,arguments).uniques!==src.length},longNoneAreRepeated:function longNoneAreRepeated(src,onEvalutate){return _.longAreRepeatedProbe.apply(this,arguments).uniques===src.length},longMask:function longMask(srcArray,mask){let scalarsPerElement=mask.length;let length=srcArray.length/scalarsPerElement;_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(srcArray),"longMask :","Expects array-like as srcArray"),_.assert(_.longIs(mask),"longMask :","Expects array-like as mask"),_.assert(_.intIs(length),"longMask :","Expects mask that has component for each atom of srcArray",_.entity.exportString({scalarsPerElement:scalarsPerElement,"srcArray.length":srcArray.length}));let preserve=0;for(let m=0;m<mask.length;m++)mask[m]&&(preserve+=1);let dstArray=_.long.makeUndefined(srcArray,length*preserve);if(!preserve)return dstArray;let c=0;for(let i=0;i<length;i++)for(let m=0;m<mask.length;m++)mask[m]&&(dstArray[c]=srcArray[i*scalarsPerElement+m],c+=1);return dstArray},longUnmask:longUnmask,longRandom:longRandom,longFromRange:function longFromRange(range){_.number.is(range)&&(range=[0,range]),_.assert(1===arguments.length,"Expects single argument"),_.assert(2===range.length),_.assert(_.longIs(range));let step=range[0]<=range[1]?1:-1;return this.longFromRangeWithStep(range,step)},longFromProgressionArithmetic:function longFromProgressionArithmetic(progression,numberOfSteps){debugger;_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(progression)),_.assert(isFinite(progression[0])),_.assert(isFinite(progression[1])),_.assert(isFinite(numberOfSteps)),_.assert(_.routine.is(this.tools.long.default.from));debugger;if(0===numberOfSteps)return this.tools.long.default.from();if(1===numberOfSteps)return this.tools.long.default.from([progression[0]]);let range=[progression[0],progression[0]+progression[1]*(numberOfSteps+1)];let step=(range[1]-range[0])/(numberOfSteps-1);return this.longFromRangeWithStep(range,step)},longFromRangeWithStep:function longFromRangeWithStep(range,step){let result;if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(isFinite(range[0])),_.assert(isFinite(range[1])),_.assert(void 0===step||step<0||step>0),_.assert(_.routine.is(this.tools.long.default.from)),range[0]===range[1])return this.long.default.make();if(range[0]<range[1]){void 0===step&&(step=1),_.assert(step>0),result=this.long.default.from(Math.round((range[1]-range[0])/step));let i=0;for(;range[0]<range[1];)result[i]=range[0],range[0]+=step,i+=1}else{void 0===step&&(step=-1),_.assert(step<0),result=this.long.default.from(Math.abs(Math.round((range[0]-range[1])/step)));let i=0;for(;range[0]>range[1];)result[i]=range[0],range[0]+=step,i+=1}return result},longFromRangeWithNumberOfSteps:function longFromRangeWithNumberOfSteps(range,numberOfSteps){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(isFinite(range[0])),_.assert(isFinite(range[1])),_.assert(numberOfSteps>=0),_.assert(_.routine.is(this.tools.long.default.from)),0===numberOfSteps)return this.tools.long.default.from();if(1===numberOfSteps)return this.tools.long.default.from(range[0]);let step;return step=range[0]<range[1]?(range[1]-range[0])/(numberOfSteps-1):(range[0]-range[1])/(numberOfSteps-1),this.longFromRangeWithStep(range,step)},longToMap:function longToMap(array){let result=Object.create(null);_.assert(1===arguments.length,"Expects single argument"),_.assert(_.longIs(array));for(let a=0;a<array.length;a++)result[a]=array[a];return result},longOnlyWithIndices:function longOnlyWithIndices(srcArray,indicesArray){let scalarsPerElement=1;_.object.isBasic(indicesArray)&&(scalarsPerElement=indicesArray.scalarsPerElement||1,indicesArray=indicesArray.indices),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(srcArray)),_.assert(_.longIs(indicesArray));let result=_.long.makeUndefined(srcArray,indicesArray.length);if(1===scalarsPerElement)for(let i=0,l=indicesArray.length;i<l;i+=1)result[i]=srcArray[indicesArray[i]];else for(let i=0,l=indicesArray.length;i<l;i+=1)for(let a=0;a<scalarsPerElement;a+=1)result[i*scalarsPerElement+a]=srcArray[indicesArray[i]*scalarsPerElement+a];return result},longShuffle:function longShuffle(dst,times){_.assert(1===arguments.length||2===arguments.length),_.assert(_.longIs(dst)),void 0===times&&(times=dst.length);let l=dst.length;let e1,e2;for(let t1=0;t1<times;t1++){let t2=Math.floor(Math.random()*l);e1=dst[t1],e2=dst[t2],dst[t1]=e2,dst[t2]=e1}return dst},longSwapElements:function longSwapElements(dst,index1,index2){1===arguments.length&&(index1=0,index2=1),_.assert(1===arguments.length||3===arguments.length),_.assert(_.longIs(dst),"Expects long"),_.assert(0<=index1&&index1<dst.length>0,"index1 is out of bound"),_.assert(0<=index2&&index2<dst.length>0,"index2 is out of bound");let e=dst[index1];return dst[index1]=dst[index2],dst[index2]=e,dst},longPut:function longPut(dstArray,dstOffset){_.assert(arguments.length>=1,"Expects at least one argument"),_.assert(_.longIs(dstArray)),_.assert(_.number.is(dstOffset)),dstOffset=dstOffset||0;for(let a=2;a<arguments.length;a++){let argument=arguments[a];let aIs=_.arrayIs(argument)||_.bufferTypedIs(argument);if(aIs&&_.bufferTypedIs(dstArray))dstArray.set(argument,dstOffset),dstOffset+=argument.length;else if(aIs)for(let i=0;i<argument.length;i++)dstArray[dstOffset]=argument[i],dstOffset+=1;else dstArray[dstOffset]=argument,dstOffset+=1}return dstArray},longSupplement:function longSupplement(dstArray){let result=dstArray;null===result&&(result=[]);let length=result.length;_.assert(_.longIs(result)||_.number.is(result),"Expects object as argument");for(let a=arguments.length-1;a>=1;a--)_.assert(_.longIs(arguments[a]),"argument is not defined :",a),length=Math.max(length,arguments[a].length);_.number.is(result)&&(result=arrayFill({value:result,times:length}));for(let k=0;k<length;k++){if(k in dstArray&&isFinite(dstArray[k]))continue;let a;for(a=arguments.length-1;a>=1&&(!(k in arguments[a])||isNaN(arguments[a][k]));a--);0!==a&&(result[k]=arguments[a][k])}return result},longExtendScreening:function longExtendScreening(screenArray,dstArray){let result=dstArray;null===result&&(result=[]);for(let k=0;k<screenArray.length;k++){if(void 0===screenArray[k])continue;let a;for(a=arguments.length-1;a>=2&&!(k in arguments[a]);a--);1!==a&&(result[k]=arguments[a][k])}return result},longSort:function longSort(dstLong,srcLong,onEvaluate){return _.routine.is(arguments[1])&&(onEvaluate=arguments[1],srcLong=dstLong),_.assert(1===arguments.length||2===arguments.length||3===arguments.length),_.assert(void 0===onEvaluate||_.routine.is(onEvaluate)),_.assert(_.longIs(srcLong)),_.assert(null===dstLong||_.longIs(dstLong)),null===dstLong&&(dstLong=_.array.make(srcLong)),_.argumentsArray.is(dstLong)&&(dstLong=this.tools.long.default.from(dstLong)),void 0===onEvaluate?dstLong.sort():2===onEvaluate.length?dstLong.sort(onEvaluate):1===onEvaluate.length?dstLong.sort(function(a,b){return(a=onEvaluate(a))>(b=onEvaluate(b))?1:a<b?-1:0}):_.assert(0,"Expects signle-argument evaluator or two-argument comparator"),dstLong}};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Map_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Map.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Map_s_naked(){!function _l0_l7_Map_s_(){"use strict";_global_;const _=_global_.wTools;_.map=_.map||Object.create(null),Object.assign(_.map,{}),_.assert(_.aux.is(_.map)),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Module_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Module.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Module_s_naked(){!function _l5_Module_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.module,{})}()});module.exports,module.include,module.include}(),function Number_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Number.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Number_s_naked(){!function _l7_Number_s_(){"use strict";_global_;const _=_global_.wTools;function numbersTotal(numbers){let result=0;_.assert(_.longIs(numbers)),_.assert(1===arguments.length,"Expects single argument");for(let n=0;n<numbers.length;n++){let number=numbers[n];_.assert(_.number.is(number)),result+=number}return result}function from(src){return _.assert(1===arguments.length),_.strIs(src)?parseFloat(src):Number(src)}function numbersFrom(src){if(_.assert(1===arguments.length,"Expects single argument"),_.strIs(src))return _.number.from(src);if(_.number.is(src))return src;let result;if(_.longIs(src)){result=[];for(let s=0;s<src.length;s++)result[s]=_.number.from(src[s])}else if(_.object.isBasic(src)){result=Object.create(null);for(let s in src)result[s]=_.number.from(src[s])}else result=_.number.from(src);return result}function fromStr(src){return _.assert(1===arguments.length),_.assert(_.strIs(src)),parseFloat(src)}function fromStrMaybe(src){if(_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src)||_.number.is(src)),_.number.is(src))return src;if(!src)return src;let parsed=src?Number(src):NaN;return isNaN(parsed)?src:parsed}function numbersSlice(src,f,l){return _.argumentsArray.like(src)&&_.assert(_.number.s.areAll(src)),_.number.is(src)?src:_.longSlice(src,f,l)}function random(range){return _.number.is(range)&&(range=range>=0?[0,range]:[range,0]),_.assert(1===arguments.length&&_.intervalIs(range),"Expects range"),Math.random()*(range[1]-range[0])+range[0]}function intRandom(range){return _.number.is(range)&&(range=range>=0?[0,range]:[range,0]),_.assert(1===arguments.length&&_.intervalIs(range),"Expects range"),Math.floor(range[0]+Math.random()*(range[1]-range[0]))}function intRandomBut(range){let result;if(_.number.is(range))range=[0,range];else{if(!_.arrayIs(range))throw _.err("intRandom","unexpected argument");range=range}for(let attempt=0;attempt<50;attempt++){let result=Math.floor(range[0]+Math.random()*(range[1]-range[0]));let bad=false;for(let a=1;a<arguments.length;a++)_.routine.is(arguments[a])?arguments[a](result)||(bad=true):result===arguments[a]&&(bad=true);if(!bad)return result}return result=NaN,NaN}function numbersMake(src,length){let result;if(_.vector.adapterIs(src)&&(src=_.vectorAdapter.slice(src)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.number.is(src)||_.argumentsArray.like(src)),_.argumentsArray.like(src)){_.assert(src.length===length),result=_.long.makeUndefined(length);for(let i=0;i<length;i++)result[i]=src[i]}else{result=_.long.makeUndefined(length);for(let i=0;i<length;i++)result[i]=src}return result}function numbersFromNumber(src,length){if(_.vector.adapterIs(src)&&(src=_.vectorAdapter.slice(src)),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.number.is(src)||_.argumentsArray.like(src)),_.argumentsArray.like(src))return _.assert(src.length===length),src;let result=_.long.makeUndefined(length);for(let i=0;i<length;i++)result[i]=src;return result}function numbersFromInt(dst,length){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.intIs(dst)||_.arrayIs(dst),"Expects array of number as argument"),_.assert(length>=0),_.number.is(dst)){debugger;dst=_.longFill([],dst,length)}else{for(let i=0;i<dst.length;i++)_.assert(_.intIs(dst[i]),"Expects integer, but got",dst[i]);_.assert(dst.length===length,"Expects array of length",length,"but got",dst)}return dst}function numbersMake_functor(length){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.number.is(length)),function numbersMake(src){return _.number.s.make(src,length)}}function numbersFrom_functor(length){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.number.is(length)),function numbersFromNumber(src){return _.number.s.fromNumber(src,length)}}let ToolsExtension={numbersTotal:numbersTotal,numberFrom:from,numbersFrom:numbersFrom,numberFromStr:fromStr,numberFromStrMaybe:fromStrMaybe,numbersSlice:numbersSlice,numberRandom:random,intRandom:intRandom,intRandomBut:intRandomBut,numbersMake:numbersMake,numbersFromNumber:numbersFromNumber,numbersFromInt:numbersFromInt,numbersMake_functor:numbersMake_functor,numbersFrom_functor:numbersFrom_functor};Object.assign(_,ToolsExtension);let NumberExtension={from:from,fromStr:fromStr,fromStrMaybe:fromStrMaybe,random:random,intRandom:intRandom,intRandomBut:intRandomBut};Object.assign(_.number,NumberExtension);let NumbersExtension={total:numbersTotal,from:numbersFrom,slice:numbersSlice,make:numbersMake,fromNumber:numbersFromNumber,fromInt:numbersFromInt,make_functor:numbersMake_functor,from_functor:numbersFrom_functor};Object.assign(_.number.s,NumbersExtension)}()});module.exports,module.include,module.include}(),function Object_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Object.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Object_s_naked(){!function _l7_Object_s_(){"use strict";_global_;const _=_global_.wTools;_.object=_.object||Object.create(null),Object.assign(_,{}),Object.assign(_.object,{})}()});module.exports,module.include,module.include}(),function Pair_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Pair.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Pair_s_naked(){!function _l7_Pair_s_(){"use strict";_global_;const _=_global_.wTools;_.assert(void 0!==_.pair),_.props.supplement(_.pair,{isOf:function isOf(src,Element){return!!Element&&!!this.is(src)&&src[0]instanceof Element&&src[1]instanceof Element}})}()});module.exports,module.include,module.include}(),function Path_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Path.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Path_s_naked(){!function _l7_Path_s_(){"use strict";_global_;const _=_global_.wTools;_.path=_.path||Object.create(null),Object.assign(_.path,{})}()});module.exports,module.include,module.include}(),function Primitive_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Primitive.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Primitive_s_naked(){!function _l7_Primitive_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.primitive=_.primitive||Object.create(null);Object.assign(_,{}),Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Printer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Printer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Printer_s_naked(){!function _l7_Printer_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.printer=_.printer||Object.create(null);Object.assign(Self,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Process_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Process.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Process_s_naked(){!function _l7_Process_s_(){"use strict";_global_;const _=_global_.wTools;function ready_body(o){function handleReady(){_.time.begin(o.timeOut,o.onReady)}
"undefined"!=typeof window&&"undefined"!=typeof document&&"complete"!==document.readyState?window.addEventListener("load",handleReady):handleReady()}_.process=_.process||Object.create(null),ready_body.defaults={timeOut:0,onReady:null};let Extension={ready:_.routine.unite(function ready_head(routine,args){let o=args[0];return _.mapIs(o)||(o=Object.create(null),2===args.length?(o.timeOut=args[0],o.onReady=args[1]):o.onReady=args[0]),_.routine.options(routine,o),o.timeOut||(o.timeOut=0),_.assert(0<=args.length||args.length<=2),_.assert(_.intIs(o.timeOut)),_.assert(_.routine.is(o.onReady)||null===o.onReady||void 0===o.onReady),o},ready_body)};Object.assign(_.process,Extension)}()});module.exports,module.include,module.include}(),function PropertyTransformer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/PropertyTransformer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function PropertyTransformer_s_naked(){!function _l7_PropertyTransformer_s_(){"use strict";_global_;const _=_global_.wTools;_.props.supplement(_.props,{})}()});module.exports,module.include,module.include}(),function Props_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Props.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Props_s_naked(){!function _l7_Property_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.props,{})}()});module.exports,module.include,module.include}(),function Prototype_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Prototype.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Prototype_s_naked(){!function _l7_Prototype_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.prototype=_.prototype||Object.create(null);Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Regexp_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Regexp.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Regexp_s_naked(){!function _l7_Regexp_s_(){"use strict";_global_;const _=_global_.wTools;function from(src,flags){return _.assert(1===arguments.length||2===arguments.length),_.assert(void 0===flags||_.strIs(flags)),_.regexpIs(src)?src:(_.assert(_.strIs(src)),new RegExp(_.regexpEscape(src),flags))}function maybeFrom(o){_.mapIs(o)||(o={srcStr:arguments[0]}),_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(o.srcStr)||_.regexpIs(o.srcStr)),_.routine.options(maybeFrom,o);let result=o.srcStr;let strips;if(_.strIs(result)){if(o.stringWithRegexp){let optionsExtract={delimeter:"//",src:result};strips=_.strSplitInlined(optionsExtract)}else strips=[result];for(let s=0;s<strips.length;s++){let strip=strips[s];s%2==0&&(strip=_.regexpEscape(strip),o.toleratingSpaces&&(strip=strip.replace(/\s+/g,"\\s*"))),strips[s]=strip}result=RegExp(strips.join(""),o.flags)}return result}Array.prototype.indexOf,Array.prototype.lastIndexOf,Array.prototype.slice,Array.prototype.splice,Function.prototype.bind,Object.prototype.toString,Object.propertyIsEnumerable,maybeFrom.defaults={srcStr:null,stringWithRegexp:1,toleratingSpaces:1,flags:"g"};let regexpsMaybeFrom=_.routineVectorize_functor({routine:maybeFrom,select:"srcStr"});function regexpsSources(o){_.arrayIs(arguments[0])&&((o=Object.create(null)).sources=arguments[0]),o.sources=_.longSlice(o.sources),void 0===o.flags&&(o.flags=null),_.assert(1===arguments.length,"Expects single argument"),_.routine.options(regexpsSources,o);for(let s=0;s<o.sources.length;s++){let src=o.sources[s];_.regexpIs(src)?(o.sources[s]=src.source,_.assert(null===o.flags||src.flags===o.flags,()=>`All RegExps should have flags field with the same value "${src.flags}" != "${o.flags}"`),null===o.flags&&(o.flags=src.flags)):o.escaping&&(o.sources[s]=_.regexpEscape(src)),_.assert(_.strIs(o.sources[s]))}return o}function regexpsJoin(o){_.mapIs(o)||(o={sources:o}),_.routine.options(regexpsJoin,o),_.assert(1===arguments.length,"Expects single argument");let src=o.sources[0];if(1===(o=_.regexpsSources(o)).sources.length&&_.regexpIs(src))return src;let result=o.sources.join("");return new RegExp(result,o.flags||"")}function regexpsJoinEscaping(o){return _.mapIs(o)||(o={sources:o}),_.routine.options(regexpsJoinEscaping,o),_.assert(1===arguments.length,"Expects single argument"),_.assert(!!o.escaping),_.regexpsJoin(o)}function regexpsAtLeastFirst(o){_.mapIs(o)||(o={sources:o}),_.routine.options(regexpsAtLeastFirst,o),_.assert(1===arguments.length,"Expects single argument");let src=o.sources[0];if(1===(o=_.regexpsSources(o)).sources.length&&_.regexpIs(src))return src;let result="";let prefix="";let postfix="";for(let s=0;s<o.sources.length;s++){let src=o.sources[s];0===s?prefix+=src:(prefix=prefix+"(?:"+src,postfix=")?"+postfix)}return new RegExp(result=prefix+postfix,o.flags||"")}function regexpsAtLeastFirstOnly(o){_.mapIs(o)||(o={sources:o}),_.routine.options(regexpsAtLeastFirst,o),_.assert(1===arguments.length,"Expects single argument");let src=o.sources[0];if(1===(o=_.regexpsSources(o)).sources.length&&_.regexpIs(src))return src;let result="";if(1===o.sources.length)result=o.sources[0];else for(let s=0;s<o.sources.length;s++)o.sources[s],s<o.sources.length-1?result+="(?:"+o.sources.slice(0,s+1).join("")+"$)|":result+="(?:"+o.sources.slice(0,s+1).join("")+")";return new RegExp(result,o.flags||"")}function regexpsNone(o){_.mapIs(o)||(o={sources:o}),_.routine.options(regexpsNone,o),_.assert(1===arguments.length,"Expects single argument");let result="^(?:(?!(?:";return result+=(o=_.regexpsSources(o)).sources.join(")|(?:"),result+=")).)+$",new RegExp(result,o.flags||"")}function regexpsAny(o){if(_.mapIs(o)||(o={sources:o}),_.routine.options(regexpsAny,o),_.assert(1===arguments.length,"Expects single argument"),_.regexpIs(o.sources))return _.assert(o.sources.flags===o.flags||null===o.flags),o.sources;_.assert(!!o.sources);let src=o.sources[0];if(1===(o=_.regexpsSources(o)).sources.length&&_.regexpIs(src))return src;let result="(?:";return result+=o.sources.join(")|(?:"),result+=")",new RegExp(result,o.flags||"")}function regexpsAll(o){if(_.mapIs(o)||(o={sources:o}),_.routine.options(regexpsAll,o),_.assert(1===arguments.length,"Expects single argument"),_.regexpIs(o.sources))return _.assert(o.sources.flags===o.flags||null===o.flags),o.sources;let src=o.sources[0];if(1===(o=_.regexpsSources(o)).sources.length&&_.regexpIs(src))return src;let result="";return o.sources.length>0&&(o.sources.length>1&&(result+="(?=",result+=o.sources.slice(0,o.sources.length-1).join(")(?="),result+=")"),result+="(?:",result+=o.sources[o.sources.length-1],result+=")"),new RegExp(result,o.flags||"")}function arrayMake(src){_.assert(_.regexpLike(src)||_.argumentsArray.like(src),"Expects array/regexp/string, got "+_.entity.strType(src));for(let k=(src=_.arrayFlatten([],_.array.as(src))).length-1;k>=0;k--){let e=src[k];null!==e?src[k]=_.regexpFrom(e):src.splice(k,1)}return src}function arrayIndex(arr,ins){_.assert(_.arrayIs(arr)),_.assert(_.strIs(ins));for(let a=0;a<arr.length;a++){let regexp=arr[a];if(_.assert(_.regexpIs(regexp)),regexp.test(ins))return a}return-1}function arrayAny(arr,ins,ifEmpty){_.assert(_.arrayIs(arr)||_.regexpIs(src)),_.assert(3===arguments.length,"Expects exactly three arguments"),arr=_.array.as(arr);for(let m=0;m<arr.length;m++)if(_.assert(_.routine.is(arr[m].test)),arr[m].test(ins))return m;return!arr.length&&ifEmpty}function arrayAll(arr,ins,ifEmpty){_.assert(_.arrayIs(arr)||_.regexpIs(src)),_.assert(3===arguments.length,"Expects exactly three arguments"),arr=_.array.as(arr);for(let m=0;m<arr.length;m++)if(!arr[m].test(ins))return m;return!!arr.length||ifEmpty}function arrayNone(arr,ins,ifEmpty){_.assert(_.arrayIs(arr)||_.regexpIs(src)),_.assert(3===arguments.length,"Expects exactly three arguments"),arr=_.array.as(arr);for(let m=0;m<arr.length;m++)if(_.assert(_.routine.is(arr[m].test)),arr[m].test(ins))return false;return!!arr.length||ifEmpty}regexpsSources.defaults={sources:null,flags:null,escaping:0},regexpsJoin.defaults={flags:null,sources:null,escaping:0},(regexpsJoinEscaping.defaults=Object.create(regexpsJoin.defaults)).escaping=1,regexpsAtLeastFirst.defaults={flags:null,sources:null,escaping:0},regexpsAtLeastFirst.defaults={flags:null,sources:null,escaping:0},regexpsNone.defaults={flags:null,sources:null,escaping:0},regexpsAny.defaults={flags:null,sources:null,escaping:0},regexpsAll.defaults={flags:null,sources:null,escaping:0};let RegexpExtension={from:from,maybeFrom:maybeFrom,arrayMake:arrayMake,arrayIndex:arrayIndex,arrayAny:arrayAny,arrayAll:arrayAll,arrayNone:arrayNone};Object.assign(_.regexp,RegexpExtension);let RegexpsExtension={maybeFrom:regexpsMaybeFrom,sources:regexpsSources,join:regexpsJoin,joinEscaping:regexpsJoinEscaping,atLeastFirst:regexpsAtLeastFirst,atLeastFirstOnly:regexpsAtLeastFirstOnly,none:regexpsNone,any:regexpsAny,all:regexpsAll};Object.assign(_.regexps,RegexpsExtension);let ToolsExtension={regexpFrom:from,regexpMaybeFrom:maybeFrom,regexpsMaybeFrom:regexpsMaybeFrom,regexpsSources:regexpsSources,regexpsJoin:regexpsJoin,regexpsJoinEscaping:regexpsJoinEscaping,regexpsAtLeastFirst:regexpsAtLeastFirst,regexpsAtLeastFirstOnly:regexpsAtLeastFirstOnly,regexpsNone:regexpsNone,regexpsAny:regexpsAny,regexpsAll:regexpsAll,regexpArrayMake:arrayMake,regexpArrayIndex:arrayIndex,regexpArrayAny:arrayAny,regexpArrayAll:arrayAll,regexpArrayNone:arrayNone};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Routine_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Routine.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Routine_s_naked(){!function _l7_Routine_s_(){"use strict";_global_;const _=_global_.wTools;function routineCallButOnly(){let context=arguments[0];let routine=arguments[1];let options=arguments[2];let but=arguments[3];let only=arguments[4];return _.routine.is(routine)||_.strIs(routine)?(_.assert(3===arguments.length||4===arguments.length||5===arguments.length),_.assert(_.mapIs(options)),_.strIs(routine)&&(routine=context[routine])):(routine=arguments[0],options=arguments[1],but=arguments[2],only=arguments[3],_.assert(2===arguments.length||3===arguments.length||4===arguments.length),_.assert(_.mapIs(options))),_.assert(_.routine.is(routine)),only||(only=routine.defaults),but&&(options=_.mapBut_(null,options,but)),only&&(options=_.mapOnly_(null,options,only)),routine.call(context,options)}function _routinesComposeWithSingleArgument_head(routine,args){let o=_.routine.s.compose.head.call(this,routine,args);return _.assert(1===args.length),_.assert(2===arguments.length,"Expects exactly two arguments"),o}function routinesComposeReturningLast(){let o=_.routine.s.composeReturningLast.head(routinesComposeReturningLast,arguments);return _.routine.s.composeReturningLast.body(o)}function routinesComposeAll(){let o=_.routine.s.composeAll.head(routinesComposeAll,arguments);return _.routine.s.composeAll.body(o)}function routinesComposeAllReturningLast(){let o=_.routine.s.composeAllReturningLast.head(routinesComposeAllReturningLast,arguments);return _.routine.s.composeAllReturningLast.body(o)}function routinesChain(){let o=_.routine.s.chain.head(routinesChain,arguments);return _.routine.s.chain.body(o)}var defaults;function _equalizerFromMapper(mapper){return void 0===mapper&&(mapper=function mapper(a,b){return a===b}),_.assert(0,"not tested"),_.assert(1===arguments.length,"Expects single argument"),_.assert(1===mapper.length||2===mapper.length),1===mapper.length?function equalizerFromMapper(a,b){return mapper(a)===mapper(b)}:mapper}function _comparatorFromEvaluator(evaluator){return void 0===evaluator&&(evaluator=function comparator(a,b){return a-b}),_.assert(1===arguments.length,"Expects single argument"),_.assert(1===evaluator.length||2===evaluator.length),1===evaluator.length?function comparatorFromEvaluator(a,b){return evaluator(a)-evaluator(b)}:evaluator}routinesComposeReturningLast.head=_.routine.s.compose.head,routinesComposeReturningLast.body=_.routine.s.compose.body,routinesComposeReturningLast.defaults=Object.create(_.routine.s.compose.defaults),routinesComposeReturningLast.defaults.tail=_.routine.tail.returningLast,routinesComposeAll.head=_routinesComposeWithSingleArgument_head,routinesComposeAll.body=_.routine.s.compose.body,(defaults=routinesComposeAll.defaults=Object.create(_.routine.s.compose.defaults)).chainer=_.routine.chainer.composeAll,defaults.tail=_.routine.tail.composeAll,_.assert(_.routine.is(_.routine.chainer.originalWithDont)),_.assert(_.routine.is(_.routine.tail.composeAll)),routinesComposeAllReturningLast.head=_routinesComposeWithSingleArgument_head,routinesComposeAllReturningLast.body=_.routine.s.compose.body,(defaults=routinesComposeAllReturningLast.defaults=Object.create(_.routine.s.compose.defaults)).chainer=_.routine.chainer.originalWithDont,defaults.tail=_.routine.tail.returningLast,routinesChain.head=_routinesComposeWithSingleArgument_head,routinesChain.body=_.routine.s.compose.body,(defaults=routinesChain.defaults=Object.create(_.routine.s.compose.defaults)).chainer=_.routine.chainer.chaining,defaults.tail=_.routine.tail.chaining;let RoutineExtension={callButOnly:routineCallButOnly,_equalizerFromMapper:_equalizerFromMapper,_comparatorFromEvaluator:_comparatorFromEvaluator};Object.assign(_.routine,RoutineExtension);let RoutinesExtension={composeReturningLast:routinesComposeReturningLast,composeAll:routinesComposeAll,composeAllReturningLast:routinesComposeAllReturningLast,chain:routinesChain};Object.assign(_.routines,RoutinesExtension);let ToolsExtension={routineCallButOnly:routineCallButOnly,routinesComposeReturningLast:routinesComposeReturningLast,routinesComposeAll:routinesComposeAll,routinesComposeAllReturningLast:routinesComposeAllReturningLast,routinesChain:routinesChain,_equalizerFromMapper:_equalizerFromMapper,_comparatorFromEvaluator:_comparatorFromEvaluator};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Seeker_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Seeker.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Seeker_s_naked(){!function _l7_Seeker_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.seeker,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Set_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Set.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Set_s_naked(){!function _l7_Set_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_,{}),Object.assign(_.set,{}),Object.assign(_.set.s,{})}()});module.exports,module.include,module.include}(),function Sorted_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Sorted.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Sorted_s_naked(){!function _l5_Sorted_s_(){"use strict";_global_;const _=_global_.wTools;_.sorted=_.sorted||Object.create(null),_.props.supplement(_.sorted,{})}()});module.exports,module.include,module.include}(),function Str_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Str.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Str_s_naked(){!function _l7_String_s_(){"use strict";_global_;const _=_global_.wTools;function strIsolate_head(routine,args){let o;return args.length>1?o=3===args.length?{src:args[0],delimeter:args[1],times:args[2]}:2===args.length?{src:args[0],delimeter:args[1]}:{src:args[0]}:(o=args[0],_.assert(1===args.length,"Expects single argument")),_.routine.options(routine,o),_.assert(1===args.length||2===args.length||3===args.length),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(o.src)),_.assert(_.regexpsLikeAll(o.delimeter)),_.assert(_.number.is(o.times)),o}function strIsolate_body(o){let result=[];let times=o.times;let index=o.left?0:o.src.length;let more=o.left?function strLeft(index){let r=_._strLeftSingle_(o.src,o.delimeter,[index,void 0]);if(quote&&void 0!==r.entry){let range=inQuoteRange(r.index);if(range)return strLeft(range[1]+1)}return r}:function strRight(index){let r=_._strRightSingle_(o.src,o.delimeter,[void 0,index-1]);if(quote&&void 0!==r.entry){let range=inQuoteRange(r.index);if(range)return strRight(range[0])}return r};let delta=o.left?1:-1;let quote;for(_.routine.assertOptions(strIsolate_body,arguments),_.arrayIs(o.delimeter)&&1===o.delimeter.length&&(o.delimeter=o.delimeter[0]),o.quote&&(quote=_.strQuoteAnalyze({src:o.src,quote:o.quote}));times>0;){let found=more(index);if(void 0===found.entry)break;if(times-=1,index=o.left?found.index+delta:found.index+found.entry.length+delta,0===times)return result.push(o.src.substring(0,found.index)),result.push(found.entry),result.push(o.src.substring(found.index+found.entry.length)),result;if(o.left){if(index>=o.src.length)break}else if(index<=0)break}return result.length?result:0===o.times?everything(!o.left):times===o.times?everything(o.left^o.none):everything(o.left);function everything(side){return side?[o.src,void 0,""]:["",void 0,o.src]}function inQuoteRange(offset){let i=_.sorted.searchFirstIndex(quote.ranges,offset);if(i%2&&(i-=1),i<0||i>=quote.ranges.length)return false;let b=quote.ranges[i];let e=quote.ranges[i+1];return b<=offset&&offset<=e&&[b,e]}}function strIsolateLeftOrNone_body(o){return o.left=1,o.none=1,_.strIsolate.body(o)}function strIsolateLeftOrAll_body(o){return o.left=1,o.none=0,_.strIsolate.body(o)}function strIsolateRightOrNone_body(o){return o.left=0,o.none=1,_.strIsolate.body(o)}function strIsolateRightOrAll_body(o){return o.left=0,o.none=0,_.strIsolate.body(o)}function isolateInsideSignle(src,begin,end){let b,e;if(_.assert(_.strIs(src),"Expects string {-src-}"),_.assert(2===arguments.length||3===arguments.length),void 0===end){let pairs=arguments[1];_.assert(_.strIs(pairs)||_.arrayIs(pairs)),pairs=_.strQuotePairsNormalize(pairs);let l=0;let begin=[];for(let q=0;q<pairs.length;q++){let quotingPair=pairs[q];begin.push(quotingPair[0])}do{if(void 0===(b=_.strLeft_(src,begin,[l,src.length-1])).entry)return notFound();_.assert(_.number.is(b.instanceIndex));let end=pairs[b.instanceIndex][1];if(void 0!==(e=_.strRight_(src,end,Math.min(b.index,src.length))).entry)break;l=b.index+1}while(l<src.length);if(void 0===e.entry)return notFound()}else{if(void 0===(b=_.strLeft_(src,begin)).entry)return notFound();if(void 0===(e=_.strRight_(src,end,Math.min(b.index,src.length))).entry)return notFound()}return e.index<b.index+b.entry.length?notFound():[src.substring(0,b.index),b.entry,src.substring(b.index+b.entry.length,e.index),e.entry,src.substring(e.index+e.entry.length,src.length)];function notFound(){return["",void 0,src,void 0,""]}}function isolateInside(src,begin,end){if(_.assert(2===arguments.length||3===arguments.length),_.argumentsArray.like(src)){let result=[];for(let s=0;s<src.length;s++)result[s]=_.strIsolateInsideSignle(src[s],begin,end);return result}return _.strIsolateInsideSignle(src,begin,end)}Array.prototype.slice,Function.prototype.bind,Object.prototype.toString,strIsolate_body.defaults={src:null,delimeter:" ",quote:0,left:1,times:1,none:1},strIsolateLeftOrNone_body.defaults={src:null,delimeter:" ",times:1,quote:null},strIsolateLeftOrAll_body.defaults={src:null,delimeter:" ",times:1,quote:null},strIsolateRightOrNone_body.defaults={src:null,delimeter:" ",times:1,quote:null},strIsolateRightOrAll_body.defaults={src:null,delimeter:" ",times:1,quote:null};let StrExtension={isolate:_.routine.unite(strIsolate_head,strIsolate_body),isolateLeftOrNone:_.routine.unite(strIsolate_head,strIsolateLeftOrNone_body),isolateLeftOrAll:_.routine.unite(strIsolate_head,strIsolateLeftOrAll_body),isolateRightOrNone:_.routine.unite(strIsolate_head,strIsolateRightOrNone_body),isolateRightOrAll:_.routine.unite(strIsolate_head,strIsolateRightOrAll_body),isolateInsideSignle:isolateInsideSignle,isolateInside:isolateInside};Object.assign(_.str,StrExtension);let ToolsExtension={strIsolate:_.routine.unite(strIsolate_head,strIsolate_body),strIsolateLeftOrNone:_.routine.unite(strIsolate_head,strIsolateLeftOrNone_body),strIsolateLeftOrAll:_.routine.unite(strIsolate_head,strIsolateLeftOrAll_body),strIsolateRightOrNone:_.routine.unite(strIsolate_head,strIsolateRightOrNone_body),strIsolateRightOrAll:_.routine.unite(strIsolate_head,strIsolateRightOrAll_body),strIsolateInsideSignle:isolateInsideSignle,strIsolateInside:isolateInside};Object.assign(_,ToolsExtension)}()});module.exports,module.include,module.include}(),function Stringer_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Stringer.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Stringer_s_naked(){!function _l7_Stringer_s_(){"use strict";_global_;const _=_global_.wTools;Object.assign(_.stringer,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Symbol_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Symbol.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Symbol_s_naked(){!function _l7_Symbol_s_(){"use strict";_global_;const _=_global_.wTools;const Self=_.symbol=_.symbol||Object.create(null);Object.assign(_,{}),Object.assign(Self,{})}()});module.exports,module.include,module.include}(),function Time_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Time.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Time_s_naked(){!function _l7_Time_s_(){"use strict";_global_;const _=_global_.wTools;function debounce(o){let timer,lastCallTime,routine,result;return _.assert(arguments.length<=3),arguments.length>1&&(o={routine:arguments[0],delay:arguments[1],immediate:arguments.length>2?arguments[2]:null}),_.routine.options(debounce,o),_.assert(_.routine.is(o.routine)),_.assert(_.number.is(o.delay)),function debounced(){lastCallTime=_.time.now(),routine=_.routine.join(this,o.routine,arguments);let execNow=o.immediate&&!timer;return timer||(timer=setTimeout(onDelay,o.delay)),execNow&&(result=routine()),result};function onDelay(){var elapsed=_.time.now()-lastCallTime;elapsed>o.delay?(timer=null,o.immediate||(result=routine())):timer=setTimeout(onDelay,o.delay-elapsed)}}debounce.defaults={routine:null,delay:100,immediate:false};let TimeExtension={rarely_functor:function rarely_functor(perTime,routine){let lastTime=_.time.now()-perTime;return _.assert(2===arguments.length),_.assert(_.number.is(perTime)),_.assert(_.routine.is(routine)),function fewer(){let now=_.time.now();if(!(now-lastTime<perTime))return lastTime=now,routine.apply(this,arguments)}},once:function once(delay,onBegin,onEnd){let con=_.Consequence?new _.Consequence({}):void 0;let taken=false;let options;return _.object.isBasic(delay)?(options=delay,_.assert(1===arguments.length,"Expects single argument"),_.map.assertHasOnly(options,{delay:null,onBegin:null,onEnd:null}),delay=options.delay,onBegin=options.onBegin,onEnd=options.onEnd):_.assert(2<=arguments.length&&arguments.length<=3),_.assert(delay>=0),_.assert(_.primitive.is(onBegin)||_.routine.is(onBegin)||_.object.isBasic(onBegin)),_.assert(_.primitive.is(onEnd)||_.routine.is(onEnd)||_.object.isBasic(onEnd)),function once(){if(!taken)return taken=true,onBegin&&(_.routine.is(onBegin)?onBegin.apply(this,arguments):_.object.isBasic(onBegin)&&onBegin.take(arguments),con&&con.take(null)),_.time.out(delay,function(){onEnd&&(_.routine.is(onEnd)?onEnd.apply(this,arguments):_.object.isBasic(onEnd)&&onEnd.take(arguments),con&&con.take(null)),taken=false}),con}},debounce:debounce};_.props.supplement(_.time,TimeExtension)}()});module.exports,module.include,module.include}(),function Type_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Type.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Type_s_naked(){!function _l7_Type_s_(){"use strict";_global_;const _=_global_.wTools;_.props.supplement(_,{})}()});module.exports,module.include,module.include}(),function Units_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Units.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Units_s_naked(){!function _l7_Units_s_(){"use strict";_global_;const _=_global_.wTools;_.units=_.units||Object.create(null),Object.assign(_.units,{}),Object.assign(_,{})}()});module.exports,module.include,module.include}(),function Unroll_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Unroll.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Unroll_s_naked(){!function _l7_Unroll_s_(){"use strict";_global_;const _=_global_.wTools;_.props.supplement(_,{})}()});module.exports,module.include,module.include}(),function Vector_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7/Vector.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l7");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Vector_s_naked(){!function _l7_Vector_s_(){"use strict";_global_;const _=_global_.wTools;_.vector=_.vector||Object.create(null),Object.assign(_.vector,{})}()});module.exports,module.include,module.include}(),function Setup_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l8/Setup.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l0/l8");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Setup_s_naked(){!function _Setup_s_(){"use strict";const _global=_global_;const _=_global.wTools;const Self=_.setup=_.setup||Object.create(null);_.error=_.error||Object.create(null);let SetupExtension={_setupConfig:function _setupConfig(){"real"===_global.__GLOBAL_NAME__&&(_global.Config||(_global.Config=Object.create(null)),void 0===_global.Config.debug&&(_global.Config.debug=true),_global.Config.debug=!!_global.Config.debug)},_setupLoggerPlaceholder:function _setupLoggerPlaceholder(){_global.console.debug||(_global.console.debug=function debug(){this.log.apply(this,arguments)}),_global.logger||(_global.logger={log:function log(){console.log.apply(console,arguments)},logUp:function logUp(){console.log.apply(console,arguments)},logDown:function logDown(){console.log.apply(console,arguments)},error:function error(){console.error.apply(console,arguments)},errorUp:function errorUp(){console.error.apply(console,arguments)},errorDown:function errorDown(){console.error.apply(console,arguments)},info:function info(){console.info.apply(console,arguments)},warn:function warn(){console.warn.apply(console,arguments)},debug:function debug(){console.debug.apply(console,arguments)}})},_setupTesterPlaceholder:function _setupTesterPlaceholder(){_global.wTestSuite||(_global.wTestSuite=function wTestSuite(testSuit){return _realGlobal_.wTests||(_realGlobal_.wTests=Object.create(null)),testSuit.suiteFilePath||(testSuit.suiteFilePath=_.introspector.location(1).filePath),testSuit.suiteFileLocation||(testSuit.suiteFileLocation=_.introspector.location(1).fileNameLineCol),_.assert(_.strDefined(testSuit.suiteFileLocation),"Test suit expects a mandatory option ( suiteFileLocation )"),_.assert(_.object.isBasic(testSuit)),testSuit.abstract||_.assert(!_realGlobal_.wTests[testSuit.name],'Test suit with name "'+testSuit.name+'" already registered!'),_realGlobal_.wTests[testSuit.name]=testSuit,testSuit.inherit=function inherit(){this.inherit=_.longSlice(arguments)},testSuit}),_realGlobal_.wTester||(_realGlobal_.wTester=Object.create(null),_realGlobal_.wTester.test=function test(testSuitName){if(!_.workerIs()&&"njs"===Config.interpreter){_.assert(0===arguments.length||1===arguments.length),_.assert(_.strIs(testSuitName)||void 0===testSuitName,"test : expects string {-testSuitName-}");debugger;_.process.ready(function(){debugger;if(_realGlobal_.wTester.test===test)throw _.err("Cant run tests. Include module::wTesting.");_realGlobal_.wTester.test.call(_realGlobal_.wTester,testSuitName)})}})},_setupProcedure:function _setupProcedure(){if(_realGlobal_!==_global&&_realGlobal_.wTools&&_realGlobal_.wTools.setup&&_realGlobal_.wTools.setup._entryProcedureStack&&(Self._entryProcedureStack=_realGlobal_.wTools.setup._entryProcedureStack),Self._entryProcedureStack)return;let stack=_.introspector.stack().split("\n");for(let s=stack.length-1;s>=0;s--){let call=stack[s];let location=_.introspector.locationFromStackFrame(call);if(!location.internal&&!location.abstraction){stack.splice(s+1,stack.length),stack.splice(0,s);break}}Self._entryProcedureStack=stack.join("\n")},_setupTime:function _setupTime(){_.assert(!!_.time&&!!_.time.now),_.setup.startTime=_.time.now()},_validate:function _validate(){},_Setup9:function _Setup9(){_.assert(false!==_global._WTOOLS_SETUP_EXPECTED_),false!==_global._WTOOLS_SETUP_EXPECTED_&&(_.setup._setupConfig(),_.error._setupUncaughtErrorHandler9(),_.setup._setupLoggerPlaceholder(),_.setup._setupTesterPlaceholder(),_.setup._setupProcedure(),_.setup._setupTime(),_.setup._validate())},startTime:null,_entryProcedureStack:null};Object.assign(_.setup,SetupExtension),Self._Setup9()}()});module.exports,module.include,module.include}(),function Include_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/Include.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Include_s_naked(){!function _l1_Include_s_(){"use strict";void 0!==module&&(module.exports=require("../l0/Include.s"),require("./l1/Collection.s"),require("./l1/ContainerAdapter.s"),require("./l1/ContainerAdapterArray.s"),require("./l1/ContainerAdapterSet.s"),require("./l1/NameTools.s"),require("./l1/StrBasic.s"))}()});module.exports;let require=module.include;module.include}(),function Collection_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/Collection.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Collection_s_naked(){!function _l1_Collection_s_(){"use strict";_global_;const _=_global_.wTools;_.collection=_.collection||Object.create(null);let ExtensionMap={toMapOfHandles:function toMapOfHandles(commandMap){let aggregator=this;let result=Object.create(null);let visited=new Set;if(_.aux.is(commandMap))for(let k in commandMap){let command=commandMap[k];let commandRoutine=command;_.routine.is(commandRoutine)?command=null:commandRoutine=command.ro||command.routine;let commandPhrase=aggregator.vocabulary.phraseNormalize(k);(command=aggregator._commandPreform(command,commandRoutine,commandPhrase)).aggregator=aggregator,aggregator.commandValidate(command),_.assert(!visited.has(command.routine),`Duplication of command "${command.phrase}"`),visited.add(command.routine),result[command.phrase]=command}else if(_.longIs(commandMap))for(let k=0;k<commandMap.length;k++){let command=commandMap[k];let commandRoutine=command;_.routine.is(commandRoutine)?command=null:commandRoutine=command.ro||command.routine,(command=aggregator._commandPreform(command,commandRoutine)).aggregator=aggregator,aggregator.commandValidate(command),_.assert(!visited.has(command.routine),`Duplication of command "${command.phrase}"`),visited.add(command.routine),result[command.phrase]=command}else _.assert(0);return _.assert(_.aux.is(result)),result}};Object.assign(_,{}),Object.assign(_.collection,ExtensionMap),_.assert(_.aux.is(_.collection))}()});module.exports,module.include,module.include}(),function ContainerAdapter_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/ContainerAdapter.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ContainerAdapter_s_naked(){!function _ContainerAdapter_s_(){"use strict";const _global=_realGlobal_;const _=_global_.wTools;if(_global!==_realGlobal_&&_realGlobal_.wTools.containerAdapter)return ExportTo(_global,_realGlobal_);_.assert(_.routine.is(_.longLeft));class ContainerAdapterAbstract{constructor(container){_.assert(1===arguments.length),this.original=container}static ToOriginal(container){return container instanceof ContainerAdapterAbstract?container.original:container}ToOriginal(container){return this.constructor.ToOriginal(container)}static Is(src){return _.containerAdapter.is(src)}Is(src){return this.constructor.Is(src)}static IsContainer(src){return _.containerAdapter.isContainer(src)}IsContainer(src){return this.constructor.IsContainer(src)}static Make(src){return _.containerAdapter.make(...arguments)}Make(src){return this.constructor.Make(...arguments)}static From(src){return _.containerAdapter.from(src)}From(src){return this.constructor.From(src)}_filterArguments(dst,onEach){return _.routine.is(arguments[0])&&(_.assert(void 0===onEach),onEach=dst,dst=null),[dst=null===dst||!dst&&!onEach?this.MakeEmpty():dst===_.self?this:this.From(dst),onEach]}_onlyArguments(){let dst=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];return(_.routine.is(src2)||void 0===src2)&&(void 0===dst&&(dst=null),onEvaluate2=onEvaluate1,onEvaluate1=src2,src2=dst,dst=null),[dst=dst===_.self?this:dst?this.From(dst):this.MakeEmpty(),src2=src2===_.self?this:src2?this.From(src2):this.MakeEmpty(),onEvaluate1,onEvaluate2]}_same(src){return src.original===this.original}same(src){return!!src&&(src instanceof ContainerAdapterAbstract?this._same(src):this.original===src)}removedContainer(src){let result=0;let self=this;return(src=self._same(src)?self.From([...src.original]):self.From(src)).each(e=>result+=self.removed(e)),result}removedContainerOnce(src,onEvaluate1,onEvaluate2){let result=0;let self=this;return(src=self._same(src)?self.From([...src.original]):self.From(src)).each(e=>{-1!==self.removedOnce(e,onEvaluate1,onEvaluate2)&&result++}),result}removedContainerOnceStrictly(src,onEvaluate1,onEvaluate2){let self=this;let result=(src=self._same(src)?self.From([...src.original]):self.From(src)).length;return src.each(e=>self.removeOnceStrictly(e,onEvaluate1,onEvaluate2)),result}removeContainer(src){return this.removedContainer.apply(this,arguments),this}removeContainerOnce(src,onEvaluate1,onEvaluate2){return this.removedContainerOnce.apply(this,arguments),this}removeContainerOnceStrictly(src,onEvaluate1,onEvaluate2){return this.removedContainerOnceStrictly.apply(this,arguments),this}min(onEach){return onEach?this.reduce(Infinity,(a,e)=>Math.min(a,onEach(e))):this.reduce(Infinity,(a,e)=>Math.min(a,e))}max(onEach){return onEach?this.reduce(-Infinity,(a,e)=>Math.max(a,onEach(e))):this.reduce(-Infinity,(a,e)=>Math.max(a,e))}least(dst,onEach){[dst,onEach]=this._filterArguments(...arguments);let min=this.min(onEach);return onEach?this.filter(dst,e=>onEach(e)===min?e:void 0):this.filter(dst,e=>e===min?e:void 0)}most(dst,onEach){[dst,onEach]=this._filterArguments(...arguments);let max=this.max(onEach);return onEach?this.filter(dst,e=>onEach(e)===max?e:void 0):this.filter(dst,e=>e===max?e:void 0)}only(){let dst=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4);let self=this;let container=self.original;if([dst,src2,onEvaluate1,onEvaluate2]=self._onlyArguments(...arguments),self._same(src2))return self;if(self._same(dst)){let temp=[...container];for(let i=0;i<temp.length;i++)src2.has(temp[i],onEvaluate1,onEvaluate2)||dst.removeOnce(temp[i])}else src2.each(e=>{self.has(e,onEvaluate1,onEvaluate2)&&dst.appendOnce(e)});return dst}but(){let dst=arguments[0];let src2=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];_.assert(1<=arguments.length&&arguments.length<=4);let container=this.original;if([dst,src2,onEvaluate1,onEvaluate2]=this._onlyArguments(...arguments),this._same(src2))return this.empty(),this;if(this._same(dst)){let temp=[...container];for(let i=0;i<temp.length;i++)src2.has(temp[i],onEvaluate1,onEvaluate2)&&dst.removeOnce(temp[i])}else this.each(e=>{src2.has(e,onEvaluate1,onEvaluate2)||dst.appendOnce(e)});return dst}select(selector){let container=this.original;let result=[];for(let e of container)_.select(e,selector)&&result.push(e);return result}}function ExportTo(dstGlobal,srcGlobal){let _=dstGlobal.wTools;_.assert(void 0===_.containerAdapter),_.assert(_.mapIs(srcGlobal.wTools.containerAdapter)),_.containerAdapter=srcGlobal.wTools.containerAdapter,void 0!==module&&(module.exports=_.containerAdapter)}var Extension={make:function make(container){return _.assert(1===arguments.length),_.set.is(container)?new _.containerAdapter.Set(container):_.arrayIs(container)?new _.containerAdapter.Array(container):this.is(container)?container.make():void _.assert(0,"Unknown type of container")},from:function from(container){return _.assert(1===arguments.length),container instanceof ContainerAdapterAbstract?container:_.set.is(container)?new _.containerAdapter.Set(container):_.arrayIs(container)?new _.containerAdapter.Array(container):void _.assert(0,"Unknown type of container")},toOriginal:function toOriginal(dst){return dst&&dst instanceof ContainerAdapterAbstract?dst.original:dst},toOriginals:function toOriginals(dsts,srcs){if(void 0===srcs&&(srcs=dsts),srcs===dsts){if(_.longIs(dsts)){for(let s=0;s<dsts.length;s++)dsts[s]=this.toOriginal(dsts[s]);return dsts}return this.toOriginal(dsts)}if(null===dsts&&(dsts=[]),_.arrayIs(dsts)){if(_.longIs(srcs)){for(let s=0;s<srcs.length;s++)dsts.push(this.toOriginal(srcs[s]));return dsts}return dsts.push(this.toOriginal(srcs)),dsts}if(_.longIs(srcs)){let result=[];result.push(this.toOriginal(dsts));for(let e of srcs)result.push(this.toOriginal(e));return result}return this.toOriginals([],arguments)},Abstract:ContainerAdapterAbstract};Object.assign(_.containerAdapter,Extension),void 0!==module&&(module.exports=_),_global!==_realGlobal_&&ExportTo(_realGlobal_,_global)}()});module.exports,module.include,module.include}(),function ContainerAdapterArray_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/ContainerAdapterArray.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ContainerAdapterArray_s_naked(){!function _ContainerAdapterArray_s_(){"use strict";const _global=_realGlobal_;const _=_global_.wTools;if(_global!==_realGlobal_&&_realGlobal_.wTools.containerAdapter)return ExportTo(_global,_realGlobal_);_.assert(_.routine.is(_.containerAdapter.Abstract)),_.assert(_.routine.is(_.longLeft));class ContainerAdapterArray extends _.containerAdapter.Abstract{constructor(container){void 0===container&&(container=new Array),super(container),_.assert(0===arguments.length||1===arguments.length),_.assert(_.longLike(container))}has(e,onEvaluate1,onEvaluate2){return _.routine.is(onEvaluate1)||_.routine.is(onEvaluate2)?-1!==_.longLeftIndex(this.original,e,onEvaluate1,onEvaluate2):this.original.includes(e)}count(e,onEvaluate1,onEvaluate2){return _.longCountElement(this.original,e,onEvaluate1,onEvaluate2)}copyFrom(src){let container=this.original;if(this.same(src))return this;this.IsContainer(src)||this.Is(src)||_.assert(0,"{-src-} should be container");let i=0;for(let e of src)container[i]=e,i++;return this}append(e){return this.original.push(e),this}appendOnce(e,onEvaluate1,onEvaluate2){return _.arrayAppendOnce(this.original,e,onEvaluate1,onEvaluate2),this}appendOnceStrictly(e,onEvaluate1,onEvaluate2){return _.arrayAppendOnceStrictly(this.original,e,onEvaluate1,onEvaluate2),this}push(e){return this.original.push(e)}appendContainer(container){if(container=this.ToOriginal(container),_.longIs(container))_.arrayAppendArray(this.original,container);else if(_.set.is(container))for(let e of container)this.original.push(e);else _.assert(0,"Unexpected data type");return this}appendContainerOnce(container,onEvaluate1,onEvaluate2){return container=this.ToOriginal(container),_.longIs(container)?_.arrayAppendArrayOnce(this.original,container,onEvaluate1,onEvaluate2):_.set.is(container)?_.arrayAppendArrayOnce(this.original,[...container],onEvaluate1,onEvaluate2):_.assert(0,"Unexpected data type"),this}appendContainerOnceStrictly(container,onEvaluate1,onEvaluate2){return container=this.ToOriginal(container),_.longIs(container)?_.arrayAppendArrayOnceStrictly(this.original,container,onEvaluate1,onEvaluate2):_.set.is(container)?_.arrayAppendArrayOnceStrictly(this.original,[...container],onEvaluate1,onEvaluate2):_.assert(0,"Unexpected data type"),this}pop(e,onEvaluate1,onEvaluate2){var poped=this.original.pop();return _.assert(void 0===e||_.entity.equal(poped,e,onEvaluate1,onEvaluate2)),poped}popStrictly(e,onEvaluate1,onEvaluate2){return _.assert(1<=arguments.length&&arguments.length<=3),_.assert(_.entity.equal(this.last(),e,onEvaluate1,onEvaluate2),"Container does not have such element"),this.original.pop()}removed(e,onEvaluate1,onEvaluate2){return _.arrayRemoved(this.original,e,onEvaluate1,onEvaluate2)}removedOnce(e,onEvaluate1,onEvaluate2){return _.arrayRemovedOnce(this.original,e,onEvaluate1,onEvaluate2)}removedOnceLeft(e,onEvaluate1,onEvaluate2){return _.arrayRemovedOnce(this.original,e,onEvaluate1,onEvaluate2)}removedOnceRight(e,onEvaluate1,onEvaluate2){let index=_.longRightIndex(this.original,e,onEvaluate1,onEvaluate2);return-1!==index&&this.original.splice(index,1),index}removedOnceStrictly(e,onEvaluate1,onEvaluate2){return _.arrayRemovedOnceStrictly(this.original,e,onEvaluate1,onEvaluate2)}removedOnceStrictlyLeft(e,onEvaluate1,onEvaluate2){return _.arrayRemovedOnceStrictly(this.original,e,onEvaluate1,onEvaluate2)}removedOnceStrictlyRight(e,onEvaluate1,onEvaluate2){let container=this.original;let index=_.longRightIndex(container,e,onEvaluate1,onEvaluate2);return _.assert(-1!==index,()=>"Container has not element "+_.entity.exportStringDiagnosticShallow(e)),container.splice(index,1),_.number.is(onEvaluate1)&&onEvaluate1--,_.assert(-1===_.longRightIndex(container,e,onEvaluate1,onEvaluate2),()=>"The element "+_.entity.exportStringDiagnosticShallow(e)+" is several times in dstArray"),index}remove(e,onEvaluate1,onEvaluate2){return _.arrayRemove(this.original,e,onEvaluate1,onEvaluate2),this}removeOnce(e,onEvaluate1,onEvaluate2){return _.arrayRemoveOnce(this.original,e,onEvaluate1,onEvaluate2),this}removeOnceLeft(e,onEvaluate1,onEvaluate2){return _.arrayRemoveOnce(this.original,e,onEvaluate1,onEvaluate2),this}removeOnceRight(e,onEvaluate1,onEvaluate2){return this.removedOnceRight(e,onEvaluate1,onEvaluate2),this}removeOnceStrictly(e,onEvaluate1,onEvaluate2){return _.arrayRemovedOnceStrictly(this.original,e,onEvaluate1,onEvaluate2),this}removeOnceStrictlyLeft(e,onEvaluate1,onEvaluate2){return _.arrayRemovedOnceStrictly(this.original,e,onEvaluate1,onEvaluate2),this}removeOnceStrictlyRight(e,onEvaluate1,onEvaluate2){return this.removedOnceStrictlyRight(e,onEvaluate1,onEvaluate2),this}empty(){this.original.splice(0,this.original.length)}map(dst,onEach){let self=this;let container=this.original;if([dst,onEach]=this._filterArguments(...arguments),this._same(dst))for(let k=0;k<container.length;k++){let e2=onEach(container[k],k,self);void 0!==e2&&(container[k]=e2)}else for(let k=0;k<container.length;k++){let e=container[k];let e2=onEach(e,k,self);void 0!==e2?dst.append(e2):dst.append(e)}return dst}mapLeft(dst,onEach){return this.map.apply(this,arguments)}mapRight(dst,onEach){let container=this.original;if([dst,onEach]=this._filterArguments(...arguments),this._same(dst))for(let k=container.length-1;k>=0;k--){let e2=onEach(container[k],k,this);void 0!==e2&&(container[k]=e2)}else for(let k=container.length-1;k>=0;k--){let e2=onEach(container[k],k,this);void 0!==e2?dst.append(e2):dst.append(container[k])}return dst}filter(dst,onEach){let container=this.original;if([dst,onEach]=this._filterArguments(...arguments),this._same(dst))for(let k=0;k<container.length;k++){let e=container[k];let e2=onEach(e,k,container);void 0===e2?(container.splice(k,1),k--):e2!==e&&(container[k]=e2)}else for(let k=0;k<container.length;k++){let e2=onEach(container[k],k,container);void 0!==e2&&dst.append(e2)}return dst}filterLeft(dst,onEach){return this.filter.apply(this,arguments)}filterRight(dst,onEach){let container=this.original;if([dst,onEach]=this._filterArguments(...arguments),this._same(dst))for(let k=container.length-1;k>=0;k--){let e2=onEach(container[k],k,container);void 0===e2?container.splice(k,1):container[k]!==e2&&(container[k]=e2)}else for(let k=container.length-1;k>=0;k--){let e2=onEach(container[k],k,container);void 0!==e2&&dst.append(e2)}return dst}flatFilter(dst,onEach){let self=this;let container=self.original;if([dst,onEach]=self._filterArguments(...arguments),self._same(dst))for(let k=0;k<container.length;k++){let e=container[k];let e2=onEach(e,k,self);void 0===e2?(container.splice(k,1),k--):self.IsContainer(e2)||self.Is(e2)?(k+=e2.length-1,container.splice(k,1,...e2)):e2!==e&&(container[k]=e2)}else for(let k=0;k<container.length;k++){let e2=onEach(container[k],k,container);self.IsContainer(e2)||self.Is(e2)?dst.appendContainer(e2):void 0!==e2&&dst.append(e2)}return dst}flatFilterLeft(dst,onEach){return this.flatFilter.apply(this,arguments)}flatFilterRight(dst,onEach){let self=this;let container=self.original;if([dst,onEach]=self._filterArguments(...arguments),self._same(dst))for(let k=container.length-1;k>=0;k--){let e=container[k];let e2=onEach(e,k,self);void 0===e2?container.splice(k,1):self.IsContainer(e2)||self.Is(e2)?container.splice(k,1,...e2):e2!==e&&(container[k]=e2)}else for(let k=container.length-1;k>=0;k--){let e2=onEach(container[k],k,container);self.IsContainer(e2)||self.Is(e2)?dst.appendContainer(e2):void 0!==e2&&dst.append(e2)}return dst}once(dst,onEvaluate1,onEvaluate2){let container=this.original;return[dst,dst,onEvaluate1,onEvaluate2]=this._onlyArguments(null,dst,onEvaluate1,onEvaluate2),this._same(dst)?_.longOnce(container,onEvaluate1,onEvaluate2):dst.appendContainerOnce(container,onEvaluate1,onEvaluate2),dst}onceLeft(dst,onEvaluate1,onEvaluate2){return this.once.apply(this,arguments)}onceRight(dst,onEvaluate1,onEvaluate2){let container=this.original;if([dst,dst,onEvaluate1,onEvaluate2]=this._onlyArguments(null,dst,onEvaluate1,onEvaluate2),this._same(dst))_.longOnce(container,onEvaluate1,onEvaluate2);else for(let i=container.length-1;i>=0;i--)dst.appendOnce(container[i],onEvaluate1,onEvaluate2);return dst}withIndex(index){return this.original[index]}first(onEach){let self=this;let container=this.original;if(onEach){if(!container.length)return;return onEach(container[0],0,self)}return container[0]}last(onEach){let self=this;let container=this.original;let l=container.length-1;if(onEach){if(!container.length)return;return onEach(container[l],l,self)}return container[l]}each(onEach){return this.eachLeft(onEach)}eachLeft(onEach){let container=this.original;for(let i=0;i<container.length;i++)onEach(container[i],i,this);return this}eachRight(onEach){let container=this.original;for(let k=container.length-1;k>=0;k--)onEach(container[k],k,container);return this}reduce(accumulator,onEach){let self=this;let container=this.original;void 0===arguments[1]&&(onEach=arguments[0],accumulator=void 0);for(let k=0,l=container.length;k<l;k++)accumulator=onEach(accumulator,container[k],k,self);return accumulator}reduceLeft(accumulator,onEach){return this.reduce.apply(this,arguments)}reduceRight(accumulator,onEach){let self=this;let container=this.original;void 0===arguments[1]&&(onEach=arguments[0],accumulator=void 0);for(let k=container.length-1;k>=0;k--)accumulator=onEach(accumulator,container[k],k,self);return accumulator}all(onEach){return this.allLeft(onEach)}allLeft(onEach){let container=this.original;for(let i=0;i<container.length;i++)if(!onEach(container[i],i,container))return false;return true}allRight(onEach){let container=this.original;for(let i=container.length-1;i>=0;i--)if(!onEach(container[i],i,container))return false;return true}any(onEach){return this.anyLeft(onEach)}anyLeft(onEach){let container=this.original;for(let i=0;i<container.length;i++)if(onEach(container[i],i,container))return true;return false}anyRight(onEach){let container=this.original;for(let i=container.length-1;i>=0;i--)if(onEach(container[i],i,container))return true;return false}none(onEach){return this.noneLeft(onEach)}noneLeft(onEach){let container=this.original;for(let i=0;i<container.length;i++)if(onEach(container[i],i,container))return false;return true}noneRight(onEach){let container=this.original;for(let i=container.length-1;i>=0;i--)if(onEach(container[i],i,container))return false;return true}left(){let element=arguments[0];let fromIndex=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];return _.assert(1<=arguments.length&&arguments.length<=4),_.longLeft(this.original,element,fromIndex,onEvaluate1,onEvaluate2)}right(){let element=arguments[0];let fromIndex=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];return _.assert(1<=arguments.length&&arguments.length<=4),_.longRight(this.original,element,fromIndex,onEvaluate1,onEvaluate2)}reverse(dst){let srcContainer=this.original;if(dst)if(srcContainer===(dst=this.From(dst)).original){let last2=(srcContainer.length-srcContainer.length%2)/2;for(let i1=srcContainer.length%2?last2:last2-1,i2=last2;i1>=0;i1--,i2++){let e=srcContainer[i1];srcContainer[i1]=srcContainer[i2],srcContainer[i2]=e}}else for(let i=srcContainer.length-1;i>=0;i--)dst.append(srcContainer[i]);else{let dstContainer=(dst=this.Make(this.length)).original;for(let i1=srcContainer.length-1,i2=0;i1>=0;i1--,i2++)dstContainer[i1]=srcContainer[i2]}return dst}join(delimeter){return this.original.join(delimeter)}toArray(){return this}toSet(){return new _.containerAdapter.Set(new Set([...this.original]))}[Symbol.iterator](){return this.original[Symbol.iterator]()}get length(){return this.original.length}}function ExportTo(dstGlobal,srcGlobal){debugger;let _=dstGlobal.wTools;_.assert(_.containerAdapter===srcGlobal.wTools.containerAdapter),_.assert(_.mapIs(srcGlobal.wTools.containerAdapter)),void 0!==module&&(module.exports=_.containerAdapter)}ContainerAdapterArray.Make=function Make(src){return void 0===src||null===src?this.MakeEmpty():_.number.is(src)?new ContainerAdapterArray(new Array(src)):this.IsContainer(src)?new ContainerAdapterArray([...src]):this.Is(src)?new ContainerAdapterArray([...src.original]):void 0},ContainerAdapterArray.MakeEmpty=function MakeEmpty(){return _.assert(0===arguments.length,"Expects no arguments"),new ContainerAdapterArray(new Array)},ContainerAdapterArray.prototype.make=function make(){return _.assert(0===arguments.length,"Expects no arguments"),new ContainerAdapterArray(this.original.slice())},ContainerAdapterArray.prototype.MakeEmpty=function makeEmpty(){return this.constructor.MakeEmpty()};const Self=_.containerAdapter;var Extension={Array:ContainerAdapterArray};Object.assign(_.containerAdapter,Extension),_.assert(_.containerAdapter===Self),void 0!==module&&(module.exports=_),_global!==_realGlobal_&&ExportTo(_realGlobal_,_global)}()});module.exports,module.include,module.include}(),function ContainerAdapterSet_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/ContainerAdapterSet.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function ContainerAdapterSet_s_naked(){!function _ContainerAdapterSet_s_(){"use strict";const _global=_realGlobal_;const _=_global_.wTools;if(_global!==_realGlobal_&&_realGlobal_.wTools.containerAdapter)return ExportTo(_global,_realGlobal_);_.assert(_.routine.is(_.containerAdapter.Abstract)),_.assert(_.routine.is(_.longLeft));class ContainerAdapterSet extends _.containerAdapter.Abstract{constructor(container){void 0===container&&(container=new Set),super(container),_.assert(0===arguments.length||1===arguments.length),_.assert(_.set.like(container))}has(e,onEvaluate1,onEvaluate2){_.assert(void 0===onEvaluate2||_.routine.is(onEvaluate2));let fromIndex=0;if(_.number.is(onEvaluate1)&&(fromIndex=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0),_.routine.is(onEvaluate1)){if(2===onEvaluate1.length){_.assert(!onEvaluate2);for(let el of this.original)if(0===fromIndex){if(onEvaluate1(el,e))return true}else fromIndex-=1;return false}if(1===onEvaluate1.length){_.assert(!onEvaluate2||1===onEvaluate2.length),e=onEvaluate2?onEvaluate2(e):onEvaluate1(e);for(let el of this.original)if(0===fromIndex){if(onEvaluate1(el)===e)return true}else fromIndex-=1;return false}_.assert(0)}else{if(void 0===onEvaluate1||null===onEvaluate1)return this.original.has(e);_.assert(0)}}count(e,onEvaluate1,onEvaluate2){let container=this.original;if(_.routine.is(onEvaluate1)||_.routine.is(onEvaluate2)){let from=0;let result=0;_.number.is(onEvaluate1)&&(from=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let v of this.original)0===from?_.entity.equal(v,e,onEvaluate1,onEvaluate2)&&result++:from--;return result}return container.has(e)?1:0}copyFrom(src){let self=this;let container=self.original;if(self.same(src))return self;if(self.IsContainer(src)||self.Is(src)||_.assert(0,"{-src-} should be container"),self.length<=(src.length||src.size)){self.empty();for(let e of src)self.append(e)}else{let lengthDiff=this.length-(void 0!==src.length?src.length:src.size);for(let e of src){for(let v of container){self.remove(v);break}self.append(e)}for(let e of container){if(0===lengthDiff)break;self.remove(e),self.append(e),lengthDiff--}}return self}append(e){return this.original.add(e),this}appendOnce(e,onEvaluate1,onEvaluate2){let container=this.original;return(onEvaluate1||_.routine.is(onEvaluate2))&&this.has(e,onEvaluate1,onEvaluate2)||container.add(e),this}appendOnceStrictly(e,onEvaluate1,onEvaluate2){let container=this.original;return onEvaluate1||_.routine.is(onEvaluate2)?this.has(e,onEvaluate1,onEvaluate2)?_.assert(0,"Set already has such element"):container.add(e):(_.assert(!this.original.has(e),"Set already has such element"),container.add(e)),this}appendContainer(container){if(container=this.ToOriginal(container),_.longIs(container))for(let k=0,l=container.length;k<l;k++)this.original.add(container[k]);else if(_.set.is(container))for(let e of container)this.original.add(e);else _.assert(0,"Unexpected data type");return this}appendContainerOnce(container,onEvaluate1,onEvaluate2){if(onEvaluate1||_.routine.is(onEvaluate2)){if(container=this.ToOriginal(container),_.longIs(container))for(let i=0;i<container.length;i++)this.has(container[i],onEvaluate1,onEvaluate2)||this.append(container[i]);else if(_.set.is(container))for(let e of container)this.has(e,onEvaluate1,onEvaluate2)||this.append(e);return this}return this.appendContainer(container)}appendContainerOnceStrictly(container,onEvaluate1,onEvaluate2){if(container=this.ToOriginal(container),_.longIs(container))for(let i=0;i<container.length;i++)_.assert(!this.has(container[i],onEvaluate1,onEvaluate2)),this.append(container[i]);else if(_.set.is(container))for(let e of container)_.assert(!this.has(e,onEvaluate1,onEvaluate2)),this.append(e);else _.assert(0,"Unexpected data type");return this}push(e){return this.original.add(e),this.original.size}pop(e,onEvaluate1,onEvaluate2){let self=this;let container=self.original;if(onEvaluate1&&void 0!==e){let last=_.nothing;return self.reduce((a,e2)=>_.entity.equal(e2,e,onEvaluate1,onEvaluate2)?last=e2:void 0),_.assert(last!==_.nothing),container.delete(last),last}{void 0===e&&(e=self.last());let r=container.delete(e);return _.assert(true===r),e}}popStrictly(e,onEvaluate1,onEvaluate2){let last=this.last();return _.assert(1<=arguments.length&&arguments.length<=3),_.assert(_.entity.equal(last,e,onEvaluate1,onEvaluate2),"Set does not have such an element"),this.original.delete(last),last}removed(e,onEvaluate1,onEvaluate2){if(onEvaluate1||_.routine.is(onEvaluate2)){let from=0;let result=0;_.number.is(onEvaluate1)&&(from=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let v of this.original)0===from?_.entity.equal(v,e,onEvaluate1,onEvaluate2)&&(this.original.delete(v),result++):from--;return result}return this.original.delete(e)?1:0}removedOnce(e,onEvaluate1,onEvaluate2){let from=0;let index=-1;_.number.is(onEvaluate1)&&(from=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let v of this.original){if(0===from){if(_.entity.equal(v,e,onEvaluate1,onEvaluate2))return this.original.delete(v),++index}else from--;index++}return-1}removedOnceLeft(e,onEvaluate1,onEvaluate2){return this.removedOnce.apply(this,arguments)}removedOnceRight(e,onEvaluate1,onEvaluate2){let temp=[...this.original];let to=this.length;_.number.is(onEvaluate1)&&(to=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let i=to-1;i>=0;i--)if(_.entity.equal(temp[i],e,onEvaluate1,onEvaluate2))return this.original.delete(temp[i]),i;return-1}removedOnceStrictly(e,onEvaluate1,onEvaluate2){let from=0;let index=-1;let result;_.number.is(onEvaluate1)&&(from=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let v of this.original)0===from?_.entity.equal(v,e,onEvaluate1,onEvaluate2)&&(void 0===result?(this.original.delete(v),result=index+1):_.assert(0,()=>"The element "+_.entity.exportStringDiagnosticShallow(e)+" is several times in dstArray")):from--,index++;return _.assert(void 0!==result,"Container does not have such an element"),result}removedOnceStrictlyLeft(e,onEvaluate1,onEvaluate2){return this.removedOnceStrictly.apply(this,arguments)}removedOnceStrictlyRight(e,onEvaluate1,onEvaluate2){let to=this.length;let temp=[...this.original];let result;_.number.is(onEvaluate1)&&(to=onEvaluate1,onEvaluate1=onEvaluate2,onEvaluate2=void 0);for(let i=to-1;i>=0;i--)_.entity.equal(temp[i],e,onEvaluate1,onEvaluate2)&&(void 0===result?(this.original.delete(temp[i]),result=i):_.assert(0,()=>"The element "+_.entity.exportStringDiagnosticShallow(e)+" is several times in dstArray"));return _.assert(void 0!==result,"Container does not have such an element"),result}remove(e,onEvaluate1,onEvaluate2){return this.removed.apply(this,arguments),this}removeOnce(e,onEvaluate1,onEvaluate2){return this.removedOnce.apply(this,arguments),this}removeOnceLeft(e,onEvaluate1,onEvaluate2){return this.removedOnceLeft.apply(this,arguments),this}removeOnceRight(e,onEvaluate1,onEvaluate2){return this.removedOnceRight.apply(this,arguments),this}removeOnceStrictly(e,onEvaluate1,onEvaluate2){return this.removedOnceStrictly.apply(this,arguments),this}removeOnceStrictlyLeft(e,onEvaluate1,onEvaluate2){return this.removedOnceStrictlyLeft.apply(this,arguments),this}removeOnceStrictlyRight(e,onEvaluate1,onEvaluate2){return this.removedOnceStrictlyRight.apply(this,arguments),this}empty(){this.original.clear()}map(dst,onEach){let self=this;let container=self.original;[dst,onEach]=self._filterArguments(...arguments);let length=self.length;let index=-1;if(self._same(dst))for(let e of container){if((index+=1)===length)break;let e2=onEach(e,index,container);container.delete(e),void 0!==e2&&e!==e2?container.add(e2):container.add(e)}else for(let e of container){let e2=onEach(e,index+=1,self);void 0!==e2?dst.append(e2):dst.append(e)}return dst}mapLeft(dst,onEach){return this.map.apply(this,arguments)}mapRight(dst,onEach){let self=this;let container=self.original;let temp=[...container];if([dst,onEach]=self._filterArguments(...arguments),this._same(dst)){for(let i=temp.length-1;i>=0;i--){let e2=onEach(temp[i],i,container);void 0!==e2&&temp[i]!==e2&&(temp[i]=e2)}self.empty(),temp.forEach(e=>self.push(e))}else for(let i=temp.length-1;i>=0;i--){let e2=onEach(temp[i],i,self);void 0!==e2?dst.append(e2):dst.append(temp[i])}return dst}filter(dst,onEach){let self=this;let container=self.original;[dst,onEach]=self._filterArguments(...arguments);let length=self.length;let index=-1;if(self._same(dst))for(let e of container){if((index+=1)===length)break;let e2=onEach(e,index,container);void 0===e2?container.delete(e):e!==e2?(container.add(e2),container.delete(e)):container.add(e)}else for(let e of container){let e2=onEach(e,index+=1,self);void 0!==e2&&dst.append(e2)}return dst}filterLeft(dst,onEach){return this.filter.apply(this,arguments)}filterRight(dst,onEach){let self=this;let container=self.original;let temp=[...container];if([dst,onEach]=self._filterArguments(...arguments),self._same(dst)){for(let i=temp.length-1;i>=0;i--){let e2=onEach(temp[i],i,container);void 0===e2?temp.splice(i,1):temp[i]!==e2&&(temp[i]=e2)}self.empty(),temp.forEach(e=>self.push(e))}else for(let i=temp.length-1;i>=0;i--){let e2=onEach(temp[i],i,self);void 0!==e2&&dst.append(e2)}return dst}flatFilter(dst,onEach){let self=this;let container=self.original;[dst,onEach]=self._filterArguments(...arguments);let length=container.size;let index=-1;if(self._same(dst))for(let e of container){if((index+=1)===length)break;let e2=onEach(e,index,self);self.remove(e),self.IsContainer(e2)||self.Is(e2)?self.appendContainer(e2):void 0!==e2?self.append(e2):e2===e&&void 0!==e&&self.append(e)}else for(let e of container){let e2=onEach(e,index+=1,self);self.IsContainer(e2)||self.Is(e2)?dst.appendContainer(e2):void 0!==e2&&dst.append(e2)}return dst}flatFilterLeft(dst,onEach){return this.flatFilter.apply(this,arguments)}flatFilterRight(dst,onEach){let self=this;let container=self.original;let temp=[...container];if([dst,onEach]=self._filterArguments(...arguments),container.size,self._same(dst))for(let i=temp.length-1;i>=0;i--){let e2=onEach(temp[i],i,self);self.IsContainer(e2)||self.Is(e2)?temp.splice(i,1,...e2):void 0!==e2&&e2!==temp[i]?temp[i]=e2:void 0===e2&&temp.splice(i,1),self.empty(),temp.forEach(e=>self.push(e))}else for(let i=temp.length-1;i>=0;i--){let e2=onEach(temp[i],i,self);self.IsContainer(e2)||self.Is(e2)?dst.appendContainer(e2):void 0!==e2&&dst.append(e2)}return dst}once(dst,onEvaluate1,onEvaluate2){let self=this;let container=self.original;if([dst,dst,onEvaluate1,onEvaluate2]=self._onlyArguments(null,dst,onEvaluate1,onEvaluate2),self._same(dst)){if(onEvaluate1||_.routine.is(onEvaluate2)){let length=this.length;let startLength=length;for(let e of container)length===startLength?(self.append(e),length--):0!==length&&(self.remove(e),self.appendOnce(e,onEvaluate1,onEvaluate2),length--)}}else dst.appendContainerOnce(container,onEvaluate1,onEvaluate2);return dst}onceLeft(dst,onEvaluate1,onEvaluate2){return this.once.apply(this,arguments)}onceRight(dst,onEvaluate1,onEvaluate2){let self=this;let temp=[...self.original];if([dst,dst,onEvaluate1,onEvaluate2]=self._onlyArguments(null,dst,onEvaluate1,onEvaluate2),self._same(dst)){if(onEvaluate1||_.routine.is(onEvaluate2)){self.empty();for(let i=0;i<temp.length;i++)self.appendOnce(temp[i],onEvaluate1,onEvaluate2)}}else for(let i=temp.length-1;i>=0;i--)dst.appendOnce(temp[i],onEvaluate1,onEvaluate2);return dst}withIndex(index){return[...this.original][index]}first(onEach){let self=this;let container=this.original;if(container.size)if(onEach)for(let e of container)return onEach(e,0,self);else for(let e of container)return e}last(onEach){let last=this.reduce((a,e)=>e);return onEach?onEach(last,this.length-1,this):last}each(onEach){return this.eachLeft(onEach)}eachLeft(onEach){let self=this;let container=self.original;let index=-1;for(let e of container)onEach(e,index+=1,self);return self}eachRight(onEach){let self=this;let temp=[...self.original];for(let i=temp.length-1;i>=0;i--)onEach(temp[i],i,self);return self}reduce(accumulator,onEach){let self=this;let container=self.original;void 0===arguments[1]&&(onEach=arguments[0],accumulator=void 0);let index=-1;for(let e of container)accumulator=onEach(accumulator,e,index+=1,self);return accumulator}reduceLeft(accumulator,onEach){return this.reduce.apply(this,arguments)}reduceRight(accumulator,onEach){let self=this;let temp=[...self.original]
;void 0===arguments[1]&&(onEach=arguments[0],accumulator=void 0);for(let i=temp.length-1;i>=0;i--)accumulator=onEach(accumulator,temp[i],i,self);return accumulator}all(onEach){return this.allLeft(onEach)}allLeft(onEach){let self=this;let container=self.original;let index=-1;for(let e of container)if(!onEach(e,index+=1,self))return false;return true}allRight(onEach){let self=this;let temp=[...this.original];for(let k=temp.length-1;k>=0;k--)if(!onEach(temp[k],k,self))return false;return true}any(onEach){return this.anyLeft(onEach)}anyLeft(onEach){let self=this;let container=self.original;let index=-1;for(let e of container)if(onEach(e,index+=1,self))return true;return false}anyRight(onEach){let self=this;let temp=[...self.original];for(let k=temp.length-1;k>=0;k--)if(onEach(temp[k],k,self))return true;return false}none(onEach){return this.noneLeft(onEach)}noneLeft(onEach){let self=this;let container=self.original;let index=-1;for(let e of container)if(onEach(e,index+=1,self))return false;return true}noneRight(onEach){let self=this;let temp=[...self.original];for(let k=temp.length-1;k>=0;k--)if(onEach(temp[k],k,self))return false;return true}left(){let element=arguments[0];let fromIndex=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];return _.assert(1<=arguments.length&&arguments.length<=4),_.arraySet.left(this.original,element,fromIndex,onEvaluate1,onEvaluate2)}right(){let element=arguments[0];let fromIndex=arguments[1];let onEvaluate1=arguments[2];let onEvaluate2=arguments[3];return _.assert(1<=arguments.length&&arguments.length<=4),_.arraySet.right(this.original,element,fromIndex,onEvaluate1,onEvaluate2)}reverse(dst){let self=this;let temp=[...self.original];if(dst=dst?this.From(dst):this.MakeEmpty(),self._same(dst)){self.empty();for(let i=temp.length-1;i>=0;i--)self.append(temp[i])}else for(let i=temp.length-1;i>=0;i--)dst.append(temp[i]);return dst}join(delimeter){return[...this.original].join(delimeter)}toArray(){return new _.containerAdapter.Array([...this.original])}toSet(){return this}[Symbol.iterator](){return this.original[Symbol.iterator]()}get length(){return this.original.size}}function ExportTo(dstGlobal,srcGlobal){debugger;let _=dstGlobal.wTools;_.assert(_.containerAdapter===srcGlobal.wTools.containerAdapter),_.assert(_.mapIs(srcGlobal.wTools.containerAdapter)),void 0!==module&&(module.exports=_.containerAdapter)}ContainerAdapterSet.Make=function Make(src){return void 0===src||null===src?this.MakeEmpty():_.number.is(src)?new ContainerAdapterSet(new Set):this.IsContainer(src)?new ContainerAdapterSet(new Set(src)):this.Is(src)?new ContainerAdapterSet(new Set(src.original)):void 0},ContainerAdapterSet.MakeEmpty=function MakeEmpty(){return _.assert(0===arguments.length,"Expects no arguments"),new ContainerAdapterSet(new Set)},ContainerAdapterSet.prototype.make=function make(){return _.assert(0===arguments.length,"Expects no arguments"),new ContainerAdapterSet(new Set(this.original))},ContainerAdapterSet.prototype.MakeEmpty=function makeEmpty(){return this.constructor.MakeEmpty()};const Self=_.containerAdapter;var Extension={Set:ContainerAdapterSet};Object.assign(_.containerAdapter,Extension),_.assert(_.containerAdapter===Self),void 0!==module&&(module.exports=_),_global!==_realGlobal_&&ExportTo(_realGlobal_,_global)}()});module.exports,module.include,module.include}(),function NameTools_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/NameTools.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function NameTools_s_naked(){!function _NameTools_s_(){"use strict";_global_;const _=_global_.wTools;var counter;Array.prototype.slice,Function.prototype.bind,Object.prototype.toString,Object.hasOwnProperty;const Proto={nameUnfielded:function nameUnfielded(nameObject){var name={};if(_.mapIs(nameObject)){var keys=Object.keys(nameObject);_.assert(1===keys.length),name.coded=keys[0],name.raw=nameObject[name.coded]}else _.strIs(nameObject)?(name.raw=nameObject,name.coded=nameObject):_.symbol.is(nameObject)?(name.raw=nameObject,name.coded=nameObject):_.assert(0,"nameUnfielded :","Unknown arguments");return name},idWithOnlyDate:function idWithOnlyDate(prefix,postfix){var date=new Date;return _.assert(0<=arguments.length&&arguments.length<=2),prefix=prefix||"",postfix=postfix||"",prefix+[date.getFullYear(),date.getMonth()+1,date.getDate()].join("-")+postfix},idWithDateAndTime:function idWithDateAndTime(prefix,postfix,fast){var date=new Date;return _.assert(0<=arguments.length&&arguments.length<=3),prefix=prefix||"",postfix=postfix||"",fast?prefix+date.valueOf()+postfix:prefix+[date.getFullYear(),date.getMonth()+1,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds(),date.getMilliseconds(),Math.floor(65536*Math.random()).toString(16)].join("-")+postfix},idWithTime:function idWithTime(prefix,postfix){var date=new Date;return _.assert(0<=arguments.length&&arguments.length<=2),prefix=prefix||"",postfix=postfix||"",prefix+[String(date.getHours())+String(date.getMinutes())+String(date.getSeconds()),String(date.getMilliseconds()),Math.floor(65536*Math.random()).toString(16)].join("-")+postfix},idWithGuid:function idWithGuid(){return _.assert(0===arguments.length),[s4()+s4(),s4(),s4(),s4(),s4()+s4()+s4()].join("-");function s4(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}},idWithTimeGuid:function idWithTimeGuid(){let date=_.time.now();return _.assert(0===arguments.length),"$$$$$$$$-$$$$-4$$$-y$$$-$$$$$$$$$$$$".replace(/[$y]/g,function replaceSymbol(sym){let r=(date+16*Math.random())%16|0;return date=Math.floor(date/16),("$"===sym?r:3&r|8).toString(16)})},idWithInt:(counter=0,function(){return _.assert(0===arguments.length,"Expects no arguments"),counter+=1})};_.props.extend(_,Proto)}()});module.exports,module.include,module.include}(),function StrBasic_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/StrBasic.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function StrBasic_s_naked(){!function _StrBasic_s_(){"use strict";_global_;const _=_global_.wTools;function strRandom(o){_.mapIs(o)||(o={length:o}),o=_.routine.options(strRandom,o),_.number.is(o.length)&&(o.length=[o.length,o.length+1]),null===o.alphabet&&(o.alphabet=_.strAlphabetFromRange(["a","z"])),_.assert(_.intervalIs(o.length)),_.assert(1===arguments.length);let length=o.length[0];o.length[0]+1!==o.length[1]&&(length=_.intRandom(o.length));let result="";for(let i=0;i<length;i++)result+=o.alphabet[_.intRandom(o.alphabet.length)];return result}function strEscape(o){_.strIs(o)&&(o={src:o}),_.assert(_.strIs(o.src),"Expects string {-o.src-}, but got",_.entity.strType(o.src)),_.routine.options(strEscape,o);let result="";let stringWrapperCode=o.stringWrapper.charCodeAt(0);for(let s=0;s<o.src.length;s++){let code=o.src.charCodeAt(s);if("`"===o.stringWrapper&&36===code)result+="\\$";else if(o.stringWrapper&&code===stringWrapperCode)result+="\\"+o.stringWrapper;else if(127<=code&&code<=159||173===code)result+=_.strCodeUnicodeEscape(code);else switch(code){case 92:result+="\\\\";break;case 8:result+="\\b";break;case 12:result+="\\f";break;case 10:result+="\\n";break;case 13:result+="\\r";break;case 9:result+="\\t";break;default:result+=code<32?_.strCodeUnicodeEscape(code):String.fromCharCode(code)}}return result}function strSplitChunks(o){let result=Object.create(null);result.chunks=[],2===arguments.length?(o=arguments[1]||Object.create(null)).src=arguments[0]:(_.assert(1===arguments.length,"Expects single argument"),_.strIs(arguments[0])&&(o={src:arguments[0]})),_.routine.options(strSplitChunks,o),_.assert(_.strIs(o.src),"Expects string (-o.src-), but got",_.entity.strType(o.src)),_.regexpIs(o.prefix)||(o.prefix=RegExp(_.regexpEscape(o.prefix),"m")),_.regexpIs(o.postfix)||(o.postfix=RegExp(_.regexpEscape(o.postfix),"m"));let src=o.src;let line=0;let column=0;let chunkIndex=0;let begin=-1;let end=-1;do{if(-1===(begin=src.search(o.prefix))&&(begin=src.length),begin>0&&makeChunkStatic(begin),!src){result.chunks.length||makeChunkStatic(0);break}if(-1===(end=src.search(o.postfix)))return result.lines=_.str.lines.split(src).length,result.error=_.err("Openning prefix",o.prefix,"of chunk #"+result.chunks.length,"at"+line,"line does not have closing tag :",o.postfix),result;let chunk=makeChunkDynamic();chunkIndex+=1,line+=_.strLinesCount(chunk.prefix+chunk.code+chunk.postfix)-1}while(src);return result;function makeChunkStatic(begin){let chunk=Object.create(null);chunk.line=line,chunk.text=src.substring(0,begin),chunk.index=chunkIndex,chunk.kind="static",result.chunks.push(chunk),src=src.substring(begin),line+=_.strLinesCount(chunk.text)-1,chunkIndex+=1,function colAccount(text){let i=text.lastIndexOf("\n");-1===i?column+=text.length:column=text.length-i,_.assert(column>=0)}(chunk.text)}function makeChunkDynamic(){let chunk=Object.create(null);return chunk.line=line,chunk.column=column,chunk.index=chunkIndex,chunk.kind="dynamic",chunk.prefix=src.match(o.prefix)[0],chunk.code=src.substring(chunk.prefix.length,end),o.investigate&&(chunk.lines=_.str.lines.split(chunk.code),chunk.tab=/^\s*/.exec(chunk.lines[chunk.lines.length-1])[0]),src=src.substring(chunk.prefix.length+chunk.code.length),chunk.postfix=src.match(o.postfix)[0],src=src.substring(chunk.postfix.length),result.chunks.push(chunk),chunk}}function _strOnly(srcStr,cinterval){return _.number.is(cinterval)?(cinterval<0&&(cinterval=srcStr.length+cinterval),cinterval=[cinterval,cinterval]):((cinterval=_.long.make(cinterval))[1]<-1&&(cinterval[1]=srcStr.length+cinterval[1]),cinterval[0]<0&&(cinterval[0]=srcStr.length+cinterval[0])),cinterval[0]>cinterval[1]&&(cinterval[1]=cinterval[0]-1),_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(srcStr)),_.assert(_.cinterval.defined(cinterval)),srcStr.substring(cinterval[0],cinterval[1]+1)}Array.prototype.slice,Function.prototype.bind,Object.prototype.toString,Object.hasOwnProperty,_.longSlice,_.entity.strType,strRandom.defaults={length:null,alphabet:null},strEscape.defaults={src:null,stringWrapper:"'",charsToEscape:null},strSplitChunks.defaults={src:null,investigate:1,prefix:"//>--\x3e//",postfix:"//<--<//"};let strOnly=_.vectorize(_strOnly);function _strBut(srcStr,cinterval,ins){let result;if(_.number.is(cinterval)?(cinterval<0&&(cinterval=srcStr.length+cinterval),cinterval=[cinterval,cinterval]):((cinterval=_.long.make(cinterval))[1]<-1&&(cinterval[1]=srcStr.length+cinterval[1]),cinterval[0]<0&&(cinterval[0]=srcStr.length+cinterval[0])),cinterval[0]>cinterval[1]&&(cinterval[1]=cinterval[0]-1),_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(srcStr)),_.assert(_.cinterval.defined(cinterval)),_.assert(void 0===ins||_.strIs(ins)||_.longIs(ins)),_.longIs(ins)){result=_.array.make(ins.length);for(let i=0;i<ins.length;i++)result[i]=_strConcat(srcStr,cinterval,ins[i])}else result=_strConcat(srcStr,cinterval,ins||"");return result;function _strConcat(src,range,insertion){return src.substring(0,range[0])+insertion+src.substring(range[1]+1,src.length)}}let strBut=_.vectorize(_strBut);function strUnjoin(srcStr,maskArray){_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(srcStr)),_.assert(_.arrayIs(maskArray));let result=[];let index=0;let rindex=-1;for(let m=0;m<maskArray.length;m++)if(!checkMask(maskArray[m]))return;if((-1===rindex||(index=srcStr.length,checkToken()))&&index===srcStr.length)return result;function checkToken(){return-1!==rindex&&(_.assert(rindex<=index),result.push(srcStr.substring(rindex,index)),rindex=-1,true)}function checkMask(mask){if(_.assert(_.strIs(mask)||mask===strUnjoin.any,"Expects string or strUnjoin.any, got",_.entity.strType(mask)),_.strIs(mask)){if(-1===(index=srcStr.indexOf(mask,index)))return false;if(-1===rindex&&0!==index)return false;checkToken(),result.push(mask),index+=mask.length}else mask===strUnjoin.any?rindex=index:_.assert(0,"unexpected mask");return true}}function _strDup(s,times){let result="";_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(s)),_.assert(_.number.is(times));for(let t=0;t<times;t++)result+=s;return result}function strJoin_body(o){let arrayLength;_.routine.assertOptions(strJoin_body,arguments);let delimeter=o.join||"";if((null===o.join||void 0===o.join||_.strIs(o.join))&&(o.join=function join(result,src,a){return delimeter&&a>0?result+delimeter+src:result+src}),!o.srcs.length)return[];for(let a=0;a<o.srcs.length;a++){let src=o.srcs[a];_.arrayIs(src)&&(_.assert(void 0===arrayLength||arrayLength===src.length,"All arrays should have the same length"),arrayLength=src.length)}if(0===arrayLength)return[];if(void 0===arrayLength){let result="";for(let a=0;a<o.srcs.length;a++){let src=o.srcs[a];let srcStr=o.str(src);_.assert(_.strIs(srcStr),()=>"Expects primitive or array, but got "+_.entity.strType(src)),result=o.join(result,srcStr,a)}return result}{let result=[];for(let i=0;i<arrayLength;i++)result[i]="";for(let a=0;a<o.srcs.length;a++){let src=o.srcs[a];if(_.arrayIs(src))for(let s=0;s<result.length;s++)result[s]=o.join(result[s],src[s],a);else{let srcStr=o.str(src);_.assert(_.strIs(srcStr),()=>"Expects primitive or array, but got "+_.entity.strType(src));for(let s=0;s<result.length;s++)result[s]=o.join(result[s],srcStr,a)}}return result}}strUnjoin.any=_.any,_.assert(_.routine.is(strUnjoin.any)),strJoin_body.defaults={srcs:null,join:null,str:_.entity.strPrimitive};let strJoin=_.routine.unite(function strJoin_head(routine,args){let o=args[0];return(void 0!==args[1]||_.argumentsArray.like(args[0]))&&(o={srcs:args[0],join:args.length>1?args[1]:null}),_.routine.options(routine,o),_.assert(2===arguments.length),_.assert(1===args.length||2===args.length,()=>"Expects an array of string and optional join, but got "+args.length+" arguments"),_.assert(_.argumentsArray.like(o.srcs),()=>"Expects an array of strings, but got "+_.entity.strType(o.srcs)),_.assert(void 0===o.join||null===o.join||_.strIs(o.join),()=>"Expects optional join, but got "+_.entity.strType(o.join)),o},strJoin_body);function strLinesNumber(o){if(_.object.isBasic(o)||(o={src:arguments[0],zeroLine:arguments.length>1?arguments[1]:null}),_.routine.options(strLinesNumber,o),_.assert(1===arguments.length||2===arguments.length),_.assert(_.strIs(o.src)||_.strsAreAll(o.src),"Expects string or strings {-o.src-}"),null===o.zeroLine)if(null===o.zeroChar)o.zeroLine=1;else if(_.number.is(o.zeroChar)){let src=_.arrayIs(o.src)?o.src.join("\n"):o.src;o.zeroLine=_.strLinesCount(src.substring(0,o.zeroChar+1))}let lines=_.strIs(o.src)?_.str.lines.split(o.src):o.src;let maxNumberLength=String(lines.length-1+o.zeroLine).length;let zeroLineLength=String(o.zeroLine).length;let maxNumLength=maxNumberLength>zeroLineLength?maxNumberLength:zeroLineLength;if(o.onLine)for(let l=0;l<lines.length;l+=1){let numLength=String(l+o.zeroLine).length;lines[l]=o.onLine([" ".repeat(maxNumLength-numLength),l+o.zeroLine," : ",lines[l]],o.zeroLine+l,o),void 0===lines[l]&&(lines.splice(l,1),l-=1),_.assert(_.strIs(lines[l]))}else for(let l=0;l<lines.length;l+=1){let numLength=String(l+o.zeroLine).length;lines[l]=" ".repeat(maxNumLength-numLength)+(l+o.zeroLine)+" : "+lines[l]}if(o.highlightingToken&&o.highlighting){let results;return _.assert(null===o.highlighting||_.number.is(o.highlighting)||_.longIs(o.highlighting),"Expects number or array of numbers {-o.highlighting-}"),!_.arrayIs(o.highlighting)&&(o.highlighting>o.zeroLine+lines.length-1||o.highlighting<o.zeroLine)?lines.join("\n"):(results=lines.map(el=>{return _.arrayIs(o.highlighting)?o.highlighting.includes(parseInt(el,10))?o.highlightingToken+" "+el:""+" ".repeat(o.highlightingToken.length+1)+el:(""+o.highlighting).includes(parseInt(el,10))?o.highlightingToken+" "+el:""+" ".repeat(o.highlightingToken.length+1)+el}),JSON.stringify(lines)===JSON.stringify(results.map(el=>el.trim()))?lines.join("\n"):results.join("\n"))}return lines.join("\n")}function strLinesSelect(o){2===arguments.length?_.arrayIs(arguments[1])?o={src:arguments[0],range:arguments[1]}:_.number.is(arguments[1])?o={src:arguments[0],range:[arguments[1],arguments[1]+1]}:_.assert(0,"unexpected argument",_.entity.strType(range)):3===arguments.length&&(o={src:arguments[0],range:[arguments[1],arguments[2]]}),_.routine.options(strLinesSelect,o),_.assert(arguments.length<=3),_.assert(_.strIs(o.src)),_.assert(_.bool.like(o.highlighting)||_.longHas(["*"],o.highlighting)),_.bool.like(o.highlighting)&&o.highlighting&&(o.highlighting="*"),o.range||(null===o.line?o.range=[0,_.strCount(o.src,o.delimteter)+1]:"center"===o.selectMode?o.range=[o.line-Math.ceil((o.nearestLines+1)/2)+1,o.line+Math.floor((o.nearestLines-1)/2)+1]:"begin"===o.selectMode?o.range=[o.line,o.line+o.nearestLines]:"end"===o.selectMode&&(o.range=[o.line-o.nearestLines+1,o.line+1])),null===o.line&&("center"===o.selectMode?o.line=Math.floor((o.range[0]+o.range[1])/2):"begin"===o.selectMode?o.line=o.range[0]:"end"===o.selectMode&&(o.line=o.range[1]-1),o.line=o.line>0?o.line:1),_.assert(_.longIs(o.range)),_.assert(_.intIs(o.line)&&o.line>=0,"Expects positive integer {-o.line-}.");let f=0;let counter=o.zeroLine;for(;counter<o.range[0];){if(-1===(f=o.src.indexOf(o.delimteter,f)))return"";f+=o.delimteter.length,counter+=1}let l=f-1;for(;counter<o.range[1];){if(l+=1,-1===(l=o.src.indexOf(o.delimteter,l))){l=o.src.length;break}counter+=1}let result=f<l?o.src.substring(f,l):"";let zeroLine=o.range[0]<=0?o.zeroLine:o.range[0];return o.numbering&&result.length&&(result=_.strLinesNumber({src:result,zeroLine:zeroLine,onLine:function lineHighlight(line,l){return o.highlighting?(l===o.line?line[0]="* "+line[0]:line[0]="  "+line[0],line.join("")):line.join("")}})),result}function strLinesNearest_head(routine,args){let o=args[0];return void 0!==args[1]&&(o={src:args[0],charsRangeLeft:args[1]}),_.routine.options(routine,o),_.number.is(o.charsRangeLeft)&&(o.charsRangeLeft=[o.charsRangeLeft,o.charsRangeLeft+1]),_.assert(_.intervalIs(o.charsRangeLeft)),_.assert(_.numberIs(o.nearestLines)),o}function strLinesNearest_body(o){let result=Object.create(null);let i,nearestLines;if(result.splits=[],result.spans=[o.charsRangeLeft[0],o.charsRangeLeft[0],o.charsRangeLeft[1],o.charsRangeLeft[1]],0===o.nearestLines)return result.splits=[],result.splits[0]="",result.splits[1]=o.src.substring(o.charsRangeLeft[0],o.charsRangeLeft[1]),result.splits[2]="",result;let nearestLinesLeft=Math.ceil((o.nearestLines+1)/2);if((nearestLines=nearestLinesLeft)>0){for(i=o.charsRangeLeft[0]-1;i>=0&&("\n"===o.src[i]&&(nearestLines-=1),!(nearestLines<=0));i--);i+=1}if(result.spans[0]=i,(nearestLines=o.nearestLines+1-nearestLinesLeft)>0)for(i=o.charsRangeLeft[1];i<o.src.length&&("\n"===o.src[i]&&(nearestLines-=1),!(nearestLines<=0));i++);return result.spans[3]=i,result.splits[0]=o.src.substring(result.spans[0],result.spans[1]),result.splits[1]=o.src.substring(result.spans[1],result.spans[2]),result.splits[2]=o.src.substring(result.spans[2],result.spans[3]),result}strLinesNumber.defaults={src:null,zeroLine:null,zeroChar:null,onLine:null,highlighting:null,highlightingToken:"*"},strLinesSelect.defaults={src:null,range:null,line:null,nearestLines:3,selectMode:"center",highlighting:"*",numbering:0,zeroLine:1,delimteter:"\n"},strLinesNearest_body.defaults={src:null,charsRangeLeft:null,nearestLines:3};let strLinesNearest=_.routine.unite(strLinesNearest_head,strLinesNearest_body);function strLinesNearestLog_body(o){let result=o;if(_.assert(o.charsRangeLeft[0]>=0&&o.charsRangeLeft[1]>=0,"Expects positive ranges"),_.assert(o.charsRangeLeft[0]<=o.src.length&&o.charsRangeLeft[1]<=o.src.length,"Expects valid range for source string {-o.src-}"),_.assert(null===o.sub||_.strIs(o.sub)),o.charsRangeLeft[0]>o.charsRangeLeft[1]&&(o.charsRangeLeft[1]=o.charsRangeLeft[0]),result.nearest||(result.nearest=_.strLinesNearest.body(o).splits),result.log=result.nearest.slice(),o.gray)null!==o.sub&&(result.log[1]=`{- ${result.log[1]} -} -> {- ${o.sub} -}`);else{let str;str=null===o.sub?_.color.strFormat(result.log[1],{fg:"yellow"}):_.color.strFormat(result.log[1],{fg:"red"})+_.color.strFormat(o.sub,{fg:"green"}),result.log[1]=_.color.strUnescape(str)}result.log=result.log.join(""),result.log=_.strLinesSplit(result.log),o.gray||(result.log=_.color.strEscape(result.log));let left=o.src.substring(0,o.charsRangeLeft[0]);let zeroLine;if(left){let linesNum=_.strLinesCount(left);zeroLine=linesNum<=1?1:linesNum-Math.floor(o.nearestLines/2)<=0?1:linesNum-Math.floor(o.nearestLines/2)}else zeroLine=1;return result.log=_.strLinesNumber({src:result.log,zeroLine:zeroLine,onLine:line=>{return o.gray||(line[0]=_.color.strFormat(line[0],{fg:"bright black"}),line[1]=_.color.strFormat(line[1],{fg:"bright black"})),line.join("")}}),result}strLinesNearestLog_body.defaults={src:null,sub:null,nearest:null,charsRangeLeft:null,nearestLines:3,gray:0};let strLinesNearestLog=_.routine.unite(strLinesNearest_head,strLinesNearestLog_body);function strLinesSize(o){let lines;if(_.mapIs(o)||(o={src:arguments[0]}),_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(o.src)||_.argumentsArray.like(o.src)),_.routine.options(strLinesSize,o),null===o.onLength&&(o.onLength=(src=>src.length)),_.strIs(o.src)){if(""===o.onLength(o.src))return[0,0];if(-1===o.src.indexOf("\n"))return[1,o.onLength(o.src)];lines=_.str.lines.split(o.src)}else{if(0===(lines=o.src).length)return[0,0];if(1===lines.length&&""===lines[0])return[0,0]}let w=lines.reduce((a,e)=>Math.max(a,o.onLength(e)),0);return[lines.length,w]}function strLinesRangeWithCharRange_body(o){let head=o.src.substring(0,o.charsRangeLeft[0]);let mid=o.src.substring(o.charsRangeLeft[0],o.charsRangeLeft[1]+1);let result=[];return result[0]=_.strLinesCount(head)-1,result[1]=result[0]+_.strLinesCount(mid),result}strLinesSize.defaults={src:null,onLength:null},strLinesRangeWithCharRange_body.defaults={src:null,charsRangeLeft:null};let strLinesRangeWithCharRange=_.routine.unite(function strLinesRangeWithCharRange_head(routine,args){let o=args[0];return void 0!==args[1]&&(o={src:args[0],charsRangeLeft:args[1]}),_.assert(2===arguments.length),_.assert(1===args.length||2===args.length),_.assert(_.intervalIs(o.charsRangeLeft)),_.assert(_.strIs(o.src)),_.routine.options(routine,o),o},strLinesRangeWithCharRange_body);let Proto={strIsHex:function strIsHex(src){_.assert(_.strIs(src)),_.assert(1===arguments.length);let parsed=parseInt(src,16);return!isNaN(parsed)&&parsed.toString(16).length===src.length},strIsMultilined:function strIsMultilined(src){return!!_.strIs(src)&&-1!==src.indexOf("\n")},strHasAny:function strHasAny(src,ins){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.arrayIs(ins)){for(let i=0;i<ins.length;i++)if(_.strHas(src,ins[i]))return true;return false}return _.strHas(src,ins)},strHasAll:function strHasAll(src,ins){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.arrayIs(ins)){for(let i=0;i<ins.length;i++)if(!_.strHas(src,ins[i]))return false;return true}return _.strHas(src,ins)},strHasNone:function strHasNone(src,ins){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.arrayIs(ins)){for(let i=0;i<ins.length;i++)if(_.strHas(src,ins[i]))return false;return true}return!_.strHas(src,ins)},strHasSeveral:function strHasSeveral(src,ins){let result=0;if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.arrayIs(ins)){for(let i=0;i<ins.length;i++)_.strHas(src,ins[i])&&(result+=1);return result}return _.strHas(src,ins)?1:0},strsAnyHas:function strsAnyHas(srcs,ins){return _.assert(_.strIs(srcs)||_.strsAreAll(srcs)),_.assert(_.strIs(ins)),_.strIs(srcs)?_.strHas(srcs,ins):srcs.some(src=>_.strHas(src,ins))},strsAllHas:function strsAllHas(srcs,ins){return _.assert(_.strIs(srcs)||_.strsAreAll(srcs)),_.assert(_.strIs(ins)),_.strIs(srcs)?_.strHas(srcs,ins):srcs.every(src=>_.strHas(src,ins))},strsNoneHas:function strsNoneHas(srcs,ins){return _.assert(_.strIs(srcs)||_.strsAreAll(srcs)),_.assert(_.strIs(ins)),_.strIs(srcs)?!_.strHas(srcs,ins):srcs.every(src=>!_.strHas(src,ins))},strCount:function strCount(src,ins){let result=0;_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(src)),_.assert(_.regexpLike(ins));let i=0;do{let found=_.strLeft_(src,ins,[i,src.length-1]);if(void 0===found.entry)break;i=found.index+found.entry.length,found.entry.length||(i+=1),result+=1,_.assert(-1!==i,"not tested")}while(-1!==i&&i<src.length);return result},strStripCount:function strStripCount(src,ins){return _.strCount(_.str.lines.strip(src),_.str.lines.strip(ins))},strsShortest:function strsShortest(src){return _.assert(1===arguments.length),_.assert(_.strIs(src)||_.argumentsArray.like(src)),_.strIs(src)?src:src.sort((a,b)=>a.length-b.length)[0]},strsLongest:function strsLongest(){return _.assert(1===arguments.length),_.assert(_.strIs(src)||_.argumentsArray.like(src)),_.strIs(src)?src:src.sort((a,b)=>b.length-a.length)[0]},_strRemoved:function _strRemoved(srcStr,insStr){let result=srcStr;if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.strIs(srcStr),"Expects string {-src-}"),_.longIs(insStr))for(let i=0;i<insStr.length;i++)result=result.replace(insStr[i],"");else result=result.replace(insStr,"");return result},strRemove:function strRemove(srcStr,insStr){if(_.assert(2===arguments.length,"Expects exactly two arguments"),_.assert(_.longIs(srcStr)||_.regexpLike(srcStr),()=>"Expects string or array of strings {-srcStr-}, but got "+_.entity.strType(srcStr)),_.longIs(insStr))for(let i=0;i<insStr.length;i++)_.assert(_.strIs(insStr[i])||_.regexpIs(insStr[i]),()=>"Expects string/regexp or array of strings/regexps");else _.assert(_.strIs(insStr)||_.regexpIs(insStr),()=>"Expects string/regexp or array of strings/regexps");let result=[];if(_.strIs(srcStr)&&!_.longIs(srcStr))return _._strRemoved(srcStr,insStr);srcStr=_.array.as(srcStr);for(let s=0;s<srcStr.length;s++){let src=srcStr[s];result[s]=_._strRemoved(src,insStr)}return _.longIs(srcStr)?result:result[0]},strReplaceWords:function strReplaceWords(src,ins,sub){_.assert(3===arguments.length,"Expects exactly three arguments"),_.assert(_.strIs(src)),_.assert(_.arrayIs(ins)),_.assert(_.arrayIs(sub)),_.assert(ins.length===sub.length);let result=src;for(let i=0;i<ins.length;i++){_.assert(_.strIs(ins[i]));let r=new RegExp("(\\W|^)"+ins[i]+"(?=\\W|$)","gm");result=result.replace(r,function(original){return original[0]===sub[i][0]?sub[i]:original[0]+sub[i]})}return result},strCommonLeft:function strCommonLeft(ins){if(0===arguments.length)return"";if(1===arguments.length)return ins;_.assert(_.strIs(ins));let length=Infinity;for(let a=0;a<arguments.length;a++){let src=arguments[a];length=Math.min(length,src.length)}let i=0;for(;i<length;i++)for(let a=1;a<arguments.length;a++)if(arguments[a][i]!==ins[i])return ins.substring(0,i);return ins.substring(0,i)},strCommonRight:function strCommonRight(ins){if(0===arguments.length)return"";if(1===arguments.length)return ins;_.assert(_.strIs(ins));let length=Infinity;for(let a=0;a<arguments.length;a++){let src=arguments[a];length=Math.min(length,src.length)}let i=0;for(;i<length;i++)for(let a=1;a<arguments.length;a++){let src=arguments[a];if(src[src.length-i-1]!==ins[ins.length-i-1])return ins.substring(ins.length-i)}return ins.substring(ins.length-i)},strRandom:strRandom,strAlphabetFromRange:function strAlphabetFromRange(range){return _.assert(_.arrayIs(range)&&2===range.length),_.assert(_.strIs(range[0])||_.number.is(range[0])),_.assert(_.strIs(range[1])||_.number.is(range[1])),_.strIs(range[0])&&(range[0]=range[0].charCodeAt(0)),_.strIs(range[1])&&(range[1]=range[1].charCodeAt(0)),String.fromCharCode(..._.longFromRange([range[0],range[1]]))},strForRange:function strForRange(range){return _.assert(1===arguments.length),_.assert(_.arrayIs(range)),"[ "+range[0]+".."+range[1]+" ]"},strForCall:function strForCall(){let nameOfRoutine=arguments[0];let args=arguments[1];let ret=arguments[2];let o=arguments[3];let result=nameOfRoutine+"( ";let first=true;return _.assert(_.arrayIs(args)||_.object.isBasic(args)),_.assert(arguments.length<=4),_.each(args,function(e,k){false===first&&(result+=", "),_.object.isBasic(e)?result+=k+" :"+_.entity.exportString(e,o):result+=_.entity.exportString(e,o),first=false}),result+=" )",arguments.length>=3&&(result+=" -> "+_.entity.exportString(ret,o)),result},strDifference:function strDifference(src1,src2){if(_.assert(_.strIs(src1)),_.assert(_.strIs(src2)),src1===src2)return false;let l=Math.min(src1.length,src2.length);for(let i=0;i<l;i++)if(src1[i]!==src2[i])return src1.substr(0,i)+"*";return src1.substr(0,l)+"*"},strCapitalize:function strCapitalize(src){return _.assert(_.strIs(src)),_.assert(1===arguments.length,"Expects single argument"),0===src.length?src:src[0].toUpperCase()+src.substring(1)},strDecapitalize:function strDecapitalize(src){return _.assert(_.strIs(src)),_.assert(1===arguments.length,"Expects single argument"),0===src.length?src:src[0].toLowerCase()+src.substring(1)},strSign:function strSign(src,prefix){return _.assert(_.strIs(src)&&src.length>0,"{- src -} must be non empty string"),_.assert(1===arguments.length||2===arguments.length,"Expects one or two arguments"),void 0===prefix&&(prefix="w"),_.assert(1===prefix.length),_.assert(!_.strIsSigned(src,prefix),"Expects not signed string"),prefix+src[0].toUpperCase()+src.substring(1)},strDesign:function strDesign(src,prefix){return _.assert(_.strIs(src)&&src.length>0,"{- src -} must be non empty string"),_.assert(1===arguments.length||2===arguments.length,"Expects one or two arguments"),void 0===prefix&&(prefix="w"),_.assert(1===prefix.length),_.assert(_.strIsSigned(src,prefix),"Expects signed string"),src.substring(1)},strIsSigned:function strIsSigned(src,prefix){return _.assert(_.strIs(src)&&src.length>0,"{- src -} must be non empty string"),_.assert(1===arguments.length||2===arguments.length,"Expects one or two arguments"),prefix||(prefix="w"),_.assert(1===prefix.length),new RegExp(`^${prefix}[A-Z0-9]`).test(src)},strEscape:strEscape,strCodeUnicodeEscape:function strCodeUnicodeEscape(code){_.assert(_.number.is(code)),_.assert(1===arguments.length,"Expects single argument");let h=code.toString(16);return"\\u"+(_.strDup("0",4-h.length)+h)},strUnicodeEscape:function strUnicodeEscape(src){let result="";_.assert(_.strIs(src)),_.assert(1===arguments.length,"Expects single argument");for(let i=0;i<src.length;i++){let code=src.charCodeAt(i);result+=_.strCodeUnicodeEscape(code)}return result},strReverse:function strReverse(srcStr){_.assert(1===arguments.length,"Expects single argument");let result="";for(let i=0;i<srcStr.length;i++)result=srcStr[i]+result;return result},strSplitStrNumber:function strSplitStrNumber(src){let result=Object.create(null);_.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src));let mnumber=src.match(/\d+/);if(mnumber&&mnumber.length){let mstr=src.match(/[^\d]*/);result.str=mstr[0],result.number=_.number.from(mnumber[0])}else result.str=src;return result},strSplitChunks:strSplitChunks,strSplitCamel:function strSplitCamel(src){let splits=_.strSplitFast(src,/[A-Z]/);for(let s=splits.length-2;s>=0;s--)s%2==1&&splits.splice(s,2,splits[s].toLowerCase()+splits[s+1]);return splits},_strOnly:_strOnly,strOnly:strOnly,_strBut:_strBut,strBut:strBut,strUnjoin:strUnjoin,_strDup:_strDup,strDup:_.vectorize(_strDup),strJoin:strJoin,strJoinPath:function strJoinPath(srcs,joiner){let result=[""];let arrayEncountered=0;let arrayLength;_.assert(2===arguments.length,()=>"Expects an array of string and joiner, but got "+arguments.length+" arguments"),_.assert(_.argumentsArray.like(srcs),()=>"Expects an array of strings, but got "+_.entity.strType(srcs)),_.assert(_.strIs(joiner),()=>"Expects joiner, but got "+_.entity.strType(joiner));for(let a=0;a<srcs.length;a++){let src=srcs[a];if(_.assert(_.strIs(src)||_.number.is(src)||_.arrayIs(src)),_.arrayIs(src)){if(0===arrayEncountered)for(let s=1;s<src.length;s++)result[s]=result[0];_.assert(void 0===arrayLength||arrayLength===src.length,"All arrays should have the same length"),arrayLength=src.length,arrayEncountered=1;for(let s=0;s<src.length;s++)join(src[s],s,a)}else for(let s=0;s<result.length;s++)join(src,s,a)}return arrayEncountered?result:result[0];function join(src,s,a){if(_.number.is(src)&&(src=src.toString()),a>0&&joiner){let ends=_.strEnds(result[s],joiner);let begins=_.strBegins(src,joiner);begins&&ends?result[s]=_.strRemoveEnd(result[s],joiner)+src:result[s]+=begins||ends?src:joiner+src}else result[s]+=src}},strLinesIndentation:function strLinesIndentation(src,tab,every){if(void 0===every&&(every=true),_.assert(2===arguments.length||3===arguments.length),_.assert(_.strIs(src)||_.arrayIs(src),"Expects src as string or array"),_.assert(_.strIs(tab)||_.number.is(tab),"Expects tab as string or number"),_.assert(void 0===every||_.bool.like(every)),_.number.is(tab)&&(tab=_.strDup(" ",tab)),_.strIs(src)){if(-1===src.indexOf("\n"))return src;src=_.str.lines.split(src)}if(true===every)return src.join("\n"+tab);{let result="";return src.forEach((e,c)=>{c>0&&(result+="\n"),result+=e.length>0&&c>0?tab+e:e}),result}},strLinesBut:function strLinesBut(src,range,ins){_.strIs(src)&&(src=_.str.lines.split(src)),_.assert(2===arguments.length||3===arguments.length),_.assert(_.longIs(src)),_.assert(void 0===ins||_.strIs(ins)||_.longIs(ins)),_.number.is(range)&&(range<0&&(range=src.length+range),range=[range,range+1]),range[1]<0&&(range[1]=src.length+range[1]),_.assert(_.intervalIs(range));let range2=[range[0],range[1]-1];return _.longIs(ins)?_.longBut_(null,src,range2,ins).join("\n"):_.strIs(ins)?_.longBut_(null,src,range2,[ins]).join("\n"):_.longBut_(null,src,range2).join("\n")},strLinesOnly:function strLinesOnly(src,range){_.strIs(src)&&(src=_.str.lines.split(src)),_.assert(2===arguments.length),_.assert(_.longIs(src)),_.number.is(range)&&(range=[range,range+1]),range[0]<0&&(range[0]=src.length>=-range[0]?src.length+range[0]:0),range[1]<0&&(range[1]=src.length+range[1]),_.assert(_.intervalIs(range));let result=[];for(let i=range[0];i<range[1]&&i<src.length;i++)result[i-range[0]]=src[i];return result.join("\n")},strLinesNumber:strLinesNumber,strLinesSelect:strLinesSelect,strLinesNearest:strLinesNearest,strLinesNearestLog:strLinesNearestLog,strLinesCount:function strLinesCount(src){return _.assert(1===arguments.length,"Expects single argument"),_.assert(_.strIs(src)),-1===src.indexOf("\n")?1:_.str.lines.split(src).length},strLinesSize:strLinesSize,strLinesRangeWithCharRange:strLinesRangeWithCharRange};_.props.extend(_,Proto)}()});module.exports,module.include,module.include}(),function TreeMap_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/TreeMap.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function TreeMap_s_naked(){!function _TreeMap_s_(){"use strict";const _=_global_.wTools;_.treeMap=_.treeMap||Object.create(null);let NamespaceExtension={is:function is(node){return!!_.aux.is(node)&&!!node.ups},make:function make(){_.assert(0===arguments.length);let node=Object.create(null);return node.vals=new Set,node.ups=Object.create(null),node}};Object.assign(_.treeMap,NamespaceExtension),void 0!==module&&(module.exports=_)}()});module.exports,module.include,module.include}(),function Trie_s(){let _filePath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1/Trie.s");let _dirPath_=_starter_._pathResolveLocal(null,_libraryFilePath_,"./wtools/abase/l1/l1");let module=_starter_._sourceMake(_filePath_,_dirPath_,function Trie_s_naked(){!function _Trie_s_(){"use strict";const _=_global_.wTools;function makeWithPath_body(o){let self=this;null===o.root&&(o.root=self.make());let trace=o.trace=[];trace.push([o.root,0,o.path.length]);for(let i=0;i<trace.length;i++)act(...trace[i]);return o;function act(node,f,l){if(f===l)return void(o.child=node);let node2=node.ups[o.path[f]];node2||(node2=node.ups[o.path[f]]=self.make()),trace.push([node2,f+1,l])}}_.trie=_.trie||Object.create(null),makeWithPath_body.defaults={root:null,path:null};let makeWithPath=_.routine.unite(function makeWithPath_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||2===args.length);let o=args[0];return 2===args.length&&(o={root:args[0],path:args[1]}),_.routine.options(routine,o),_.assert(_.longIs(o.path)),_.assert(null===o.root||this.is(o.root),()=>`Expects node of trie or null, but got ${_.strType(o.root)}`),o},makeWithPath_body);function addSingle_body(o){return this.makeWithPath.body.call(this,o),o.child.vals.add(o.val),o}addSingle_body.defaults={root:null,path:null,val:null};let addSingle=_.routine.unite(function addSingle_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||3===args.length);let o=args[0];return 3===args.length&&(o=3===args.length?{root:args[0],path:args[1],val:args[2]}:{root:args[0]}),_.routine.options(routine,o),_.assert(_.longIs(o.path)),_.assert(null===o.root||this.is(o.root),()=>`Expects node of trie or null, but got ${_.strType(o.root)}`),o},addSingle_body);function addMultiple_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||3===args.length);let o=args[0];return 3===args.length&&(o=3===args.length?{root:args[0],path:args[1],vals:args[2]}:{root:args[0]}),_.routine.options(routine,o),_.assert(_.longIs(o.path)),_.assert(null===o.root||this.is(o.root),()=>`Expects node of trie or null, but got ${_.strType(o.root)}`),_.assert(_.countable.is(o.vals)),o}function addMultiple_body(o){if(this.makeWithPath.body.call(this,o),o.onVal)for(let val of o.vals)o.child.vals.add(o.onVal(val,o));else for(let val of o.vals)o.child.vals.add(val);return o}addMultiple_body.defaults={root:null,path:null,vals:null,onVal:null};let addMultiple=_.routine.unite(addMultiple_head,addMultiple_body);function addDeep_body(o){let self=this;let path=o.path;let l=o.path.length;for(let i=0;i<=l;i++)o.path=path.slice(i,l),self.addMultiple.body.call(self,o);return o.path=path,o}addDeep_body.defaults={...addMultiple.defaults};let addDeep=_.routine.unite(addMultiple_head,addDeep_body);function delete_body(o){if(null===o.vals)for(let val of o.node.vals)o.node.vals.delete(val);else for(let val of o.vals)o.node.vals.delete(val);return o}delete_body.defaults={node:null,vals:null};let _delete=_.routine.unite(function delete_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||2===args.length);let o=args[0];return _.routine.options(routine,o),_.assert(this.is(o.root),()=>`Expects node of trie, but got ${_.strType(o.root)}`),_.assert(this.is(o.node),()=>`Expects node of trie, but got ${_.strType(o.node)}`),_.assert(null===o.vals||_.countableIs(o.vals),()=>`Vals should countable if specified, but it is ${_.strType(o.vals)}`),o},delete_body);function deleteWithPath_body(o){return this.withPath.body.call(this,o),o.child?(o.node=o.child,this.delete.body.call(this,o),0===o.child.vals.size&&0===Object.keys(o.child.ups).length&&o.shrinking&&this.shrinkWithPath.body.call(this,o),o):o}deleteWithPath_body.defaults={root:null,path:null,vals:null,shrinking:true};let deleteWithPath=_.routine.unite(function deleteWithPath_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||2===args.length||3===args.length);let o=args[0];return 2==args.length?o={root:args[0],path:args[1]}:3==args.length&&(o=3===args.length?{root:args[0],path:args[1],vals:args[2]}:{root:args[0]}),_.routine.options(routine,o),_.assert(this.is(o.root),()=>`Expects node of trie, but got ${_.strType(o.root)}`),_.assert(_.longIs(o.path)),_.assert(null===o.vals||_.countableIs(o.vals),()=>`Vals should countable if specified, but it is ${_.strType(o.vals)}`),o},deleteWithPath_body);function shrinkWithPath_body(o){if(!o.trace&&(this.withPath.body.call(this,o),!o.child))return o;let node=o.trace[o.trace.length-1][0];if(0!==node.vals.size||0!==Object.keys(node.ups).length)return o.child=void 0,o;for(let i=o.trace.length-1;i>=0;i--)if(o.trace[i][0].vals.size>0){if(o.childLevel=i+1,o.child=o.trace[o.childLevel],!o.child)return;return o.child=o.child[0],o.parent=o.trace[i][0],_.assert(o.parent.ups[o.path[i]]===o.child),delete o.parent.ups[o.path[i]],o}return o.child=o.root,o}shrinkWithPath_body.defaults={root:null,path:null,trace:null};let shrinkWithPath=_.routine.unite(function shrinkWithPath_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||2===args.length||3===args.length);let o=args[0];return 2==args.length?o={root:args[0],path:args[1]}:3==args.length&&(o=3===args.length?{root:args[0],path:args[1],vals:args[2]}:{root:args[0]}),_.routine.options(routine,o),_.assert(this.is(o.root),()=>`Expects node of trie, but got ${_.strType(o.root)}`),_.assert(null===o.path||_.longIs(o.path)),_.assert(null===o.trace||_.longIs(o.trace)),o},shrinkWithPath_body);function shrink_body(o){let stack=[];stack.push([o.root,null,null]);debugger;for(let i=0;i<stack.length;i++)actUp(...stack[i]);for(let i=stack.length-1;i>=0;i--)actDown(...stack[i]);debugger;return o;function actUp(node){for(let k in node.ups){let node2=node.ups[k];stack.push([node2,k,node])}}function actDown(child,key,parent){debugger;if(null!==parent&&0===child.vals.size&&0===Object.keys(child.ups).length){debugger;_.assert(parent.ups[key]===child),delete parent.ups[key],o.counter+=1}}}shrink_body.defaults={counter:0,root:null};let shrink=_.routine.unite(function shrink_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length);let o=args[0];return this.is(o)&&(o={root:o}),_.routine.options(routine,o),_.assert(this.is(o.root),()=>`Expects node of trie, but got ${_.strType(o.root)}`),o},shrink_body);function withPath_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length||2===args.length);let o=args[0];return 2===args.length&&(o={root:args[0],path:args[1]}),_.routine.options(routine,o),_.assert(_.longIs(o.path)),_.assert(this.is(o.root),()=>`Expects node of trie, but got ${_.strType(o.root)}`),o}function withPath_body(o){let trace=o.trace=[];trace.push([o.root,0,o.path.length]);for(let i=0;i<trace.length;i++)act(...trace[i]);return o;function act(node,f,l){if(f===l)return void(o.child=node);let node2=node.ups[o.path[f]];node2&&trace.push([node2,f+1,l])}}withPath_body.defaults={root:null,path:null};let withPath=_.routine.unite(withPath_head,withPath_body);function valEach_body(o){o.vals=o.vals||new Set;let stack=[];if(stack.push([o.root]),_.setIs(o.vals))for(;stack.length;)actSet(...stack.pop());else for(;stack.length;)actArray(...stack.pop());return o;function actSet(node){for(let k in node.ups){let node2=node.ups[k];stack.push([node2])}for(let val of node.vals)o.vals.add(val)}function actArray(node){for(let k in node.ups){let node2=node.ups[k];stack.push([node2])}for(let val of node.vals)_.arrayAppendOnce(o.vals,val)}}valEach_body.defaults={root:null,vals:null};let valEach=_.routine.unite(function valEach_head(routine,args){_.assert(2===arguments.length),_.assert(1===args.length);let o=args[0];return this.is(o)&&(o={root:args[0]}),_.routine.options(routine,o),_.assert(this.is(o.root),()=>`Expects node of trie, but got ${_.strType(o.root)}`),o},valEach_body);function valEachAbove_body(o){return o.vals=o.vals||[],this.withPath.body.call(this,o),o.child?(o.root=o.child,this.valEach.body.call(this,o),o):o}valEachAbove_body.defaults={root:null,path:null,vals:null};let Proto={is:function is(node){return!!_.aux.is(node)&&!!node.ups},make:function make(){_.assert(0===arguments.length);let node=Object.create(null);return node.vals=new Set,node.ups=Object.create(null),node},makeWithPath:makeWithPath,addSingle:addSingle,addMultiple:addMultiple,add:addMultiple,addDeep:addDeep,delete:_delete,deleteWithPath:deleteWithPath,shrinkWithPath:shrinkWithPath,shrink:shrink,withPath:withPath,valEach:valEach,valEachAbove:_.routine.unite(withPath_head,valEachAbove_body)};Object.assign(_.trie,Proto),void 0!==module&&(module.exports=_)}()});module.exports,module.include,module.include}(),module.exports=_starter_._sourceInclude(null,_libraryFilePath_,"./wtools/abase/l1/Include.s")}();